Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id B7629A37E7F
	for <lists+linux-stm32@lfdr.de>; Mon, 17 Feb 2025 10:31:16 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 48A22C78F86;
	Mon, 17 Feb 2025 09:31:16 +0000 (UTC)
Received: from mx0b-0031df01.pphosted.com (mx0b-0031df01.pphosted.com
 [205.220.180.131])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 03EAAC6DD9F
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Mon, 17 Feb 2025 09:31:08 +0000 (UTC)
Received: from pps.filterd (m0279871.ppops.net [127.0.0.1])
 by mx0a-0031df01.pphosted.com (8.18.1.2/8.18.1.2) with ESMTP id 51H102iE031493;
 Mon, 17 Feb 2025 09:30:48 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=quicinc.com; h=
 cc:content-transfer-encoding:content-type:date:from:message-id
 :mime-version:subject:to; s=qcppdkim1; bh=58Bz1QKfZOad7GgqHLpkRA
 Es5EmHMBrfxA4BSwSNpew=; b=gZ+/m+0/cUd5D3bqreV0o622eaIBJ4yt2hYcoV
 JS4ei+k//Qdu6H2N84SSW5oxSZ5hUVSRyGqZgi0ww9S2ApZeZq/yPQ56beXgQ9gW
 nihsNLN4jqmnBDhtt8luAP5JGFMTICruNbKWYwv7qC/gT0OosOCG1m+vpcJlbQOl
 xskYm01k1lubKv3EFwfdBL3esU8O6wBzbvTjtXk9aHnfimu8J57YtTcy3wwI40Rj
 DzvKBZAvlAyp55QDD+oxpn35Xd7n/PZbldu4nBr0SEz2evfMEo3k5IOZvDd3NDJi
 on/6nAxpY+swHA8tBAfq9Yrz91HSMwUGY1MPI9R2OZdvVL8w==
Received: from nalasppmta03.qualcomm.com (Global_NAT1.qualcomm.com
 [129.46.96.20])
 by mx0a-0031df01.pphosted.com (PPS) with ESMTPS id 44ut7ws5na-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Mon, 17 Feb 2025 09:30:48 +0000 (GMT)
Received: from nalasex01c.na.qualcomm.com (nalasex01c.na.qualcomm.com
 [10.47.97.35])
 by NALASPPMTA03.qualcomm.com (8.18.1.2/8.18.1.2) with ESMTPS id 51H9UlB4023494
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Mon, 17 Feb 2025 09:30:47 GMT
Received: from jiegan-gv.qualcomm.com (10.80.80.8) by
 nalasex01c.na.qualcomm.com (10.47.97.35) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.2.1544.9; Mon, 17 Feb 2025 01:30:41 -0800
From: Jie Gan <quic_jiegan@quicinc.com>
To: Suzuki K Poulose <suzuki.poulose@arm.com>, Mike Leach
 <mike.leach@linaro.org>, James Clark <james.clark@linaro.org>, "Alexander
 Shishkin" <alexander.shishkin@linux.intel.com>, Maxime Coquelin
 <mcoquelin.stm32@gmail.com>,
 Alexandre Torgue <alexandre.torgue@foss.st.com>,
 Rob Herring <robh@kernel.org>, Krzysztof Kozlowski <krzk+dt@kernel.org>,
 Conor Dooley <conor+dt@kernel.org>, Bjorn Andersson <andersson@kernel.org>,
 Konrad Dybcio <konradybcio@kernel.org>
Date: Mon, 17 Feb 2025 17:30:17 +0800
Message-ID: <20250217093024.1133096-1-quic_jiegan@quicinc.com>
X-Mailer: git-send-email 2.34.1
MIME-Version: 1.0
X-Originating-IP: [10.80.80.8]
X-ClientProxiedBy: nasanex01a.na.qualcomm.com (10.52.223.231) To
 nalasex01c.na.qualcomm.com (10.47.97.35)
X-QCInternal: smtphost
X-Proofpoint-Virus-Version: vendor=nai engine=6200 definitions=5800
 signatures=585085
X-Proofpoint-GUID: yS0JbvNovVgONu4sJuOs--_8dXy5N1UM
X-Proofpoint-ORIG-GUID: yS0JbvNovVgONu4sJuOs--_8dXy5N1UM
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.293,Aquarius:18.0.1057,Hydra:6.0.680,FMLib:17.12.68.34
 definitions=2025-02-17_04,2025-02-13_01,2024-11-22_01
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 impostorscore=0 phishscore=0
 lowpriorityscore=0 priorityscore=1501 clxscore=1015 malwarescore=0
 bulkscore=0 mlxlogscore=999 spamscore=0 adultscore=0 mlxscore=0
 suspectscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.19.0-2501170000 definitions=main-2502170083
Cc: devicetree@vger.kernel.org, Jinlong Mao <quic_jinlmao@quicinc.com>,
 linux-arm-msm@vger.kernel.org, coresight@lists.linaro.org,
 linux-kernel@vger.kernel.org, linux-stm32@st-md-mailman.stormreply.com,
 Tingwei Zhang <quic_tingweiz@quicinc.com>,
 linux-arm-kernel@lists.infradead.org
Subject: [Linux-stm32] [PATCH v12 0/7] Coresight: Add Coresight TMC Control
	Unit driver
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

RnJvbTogSmllIEdhbiA8amllLmdhbkBvc3MucXVhbGNvbW0uY29tPgoKVGhlIENvcmVzaWdodCBU
TUMgQ29udHJvbCBVbml0KENUQ1UpIGRldmljZSBob3N0cyBtaXNjZWxsYW5lb3VzIGNvbmZpZ3Vy
YXRpb24KcmVnaXN0ZXJzIHRvIGNvbnRyb2wgdmFyaW91cyBmZWF0dXJlcyByZWxhdGVkIHRvIFRN
QyBFVFIgZGV2aWNlLgoKVGhlIENUQ1UgZGV2aWNlIHdvcmtzIGFzIGEgaGVscGVyIGRldmljZSBw
aHlzaWNhbGx5IGNvbm5lY3RlZCB0byB0aGUgVE1DIEVUUiBkZXZpY2UuCi0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAgICAgICAg
fEVUUjB8ICAgICAgICAgICAgIHxFVFIxfAogICAgICAgICAgICAgIC4gXCAgICAgICAgICAgICAg
ICAgLyAuCiAgICAgICAgICAgICAgLiAgXCAgICAgICAgICAgICAgIC8gIC4KICAgICAgICAgICAg
ICAuICAgXCAgICAgICAgICAgICAvICAgLgogICAgICAgICAgICAgIC4gICAgXCAgICAgICAgICAg
LyAgICAuCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LQpFVFIwQVRJRDAtRVRSMEFUSUQzICAgICBDVENVICAgIEVUUjFBVElEMC1FVFIxQVRJRDMKLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCkVhY2ggRVRS
IGhhcyBmb3VyIEFUSUQgcmVnaXN0ZXJzIHdpdGggMTI4IGJpdHMgbG9uZyBpbiB0b3RhbC4KZS5n
LiBFVFIwQVRJRDAtRVRSMEFUSUQzIHJlZ2lzdGVycyBhcmUgdXNlZCBieSBFVFIwIGRldmljZS4K
CkJhc2VkIG9uIHRoZSB0cmFjZSBpZCB3aGljaCBpcyBwcm9ncmFtZWQgaW4gQ1RDVSBBVElEIHJl
Z2lzdGVyIG9mCnNwZWNpZmljIEVUUiwgdHJhY2UgZGF0YSB3aXRoIHRoYXQgdHJhY2UgaWQgY2Fu
IGdldCBpbnRvIEVUUidzIGJ1ZmZlcgp3aGlsZSBvdGhlciB0cmFjZSBkYXRhIGdldHMgaWdub3Jl
ZC4gVGhlIG51bWJlciBvZiBDVENVIEFUSUQgcmVnaXN0ZXJzCmRlcGVuZHMgb24gdGhlIG51bWJl
ciBvZiBkZWZpbmVkIFRNQyBFVFIgZGV2aWNlcy4gRm9yIGV4YW1wbGUsIHR3byBUTUMKRVRSIGRl
dmljZXMgbmVlZCBlaWdodCBBVElEIHJlZ2lzdGVycy4gRVRSMCB3aXRoIEVUUjBBVElEMC1FVFIw
QVRJRDMKYW5kIEVUUjEgd2l0aCBFVFIxQVRJRDAtRVRSQVRJRDMuCgpUaGUgc2lnbmlmaWNhbnQg
Y2hhbGxlbmdlIGluIGVuYWJsaW5nIHRoZSBkYXRhIGZpbHRlciBmdW5jdGlvbiBpcyBob3cKdG8g
Y29sbGVjdCB0aGUgdHJhY2UgSUQgb2YgdGhlIHNvdXJjZSBkZXZpY2UuIFRoZSBpbnRyb2R1Y3Rp
b24gb2YKdHJhY2VfaWQgY2FsbGJhY2sgZnVuY3Rpb24gYWRkcmVzc2VzIHRoaXMgY2hhbGxlbmdl
LiBUaGUgY2FsbGJhY2sgZnVuY3Rpb24KY29sbGVjdHMgdHJhY2UgSUQgb2YgdGhlIGRldmljZSBh
bmQgcmV0dXJuIGl0IGJhY2suIFRoZSB0cmFjZSBJRCB3aWxsIGJlCnN0b3JlZCBpbiB0aGUgc3Ry
dWN0dXJlIGNhbGxlZCBjb3Jlc2lnaHRfcGF0aCBhbmQgdHJhbnNtaXR0ZWQgdG8gaGVscGVyCmFu
ZCBzaW5rIGRldmljZXMuCgpUaGUgY29yZXNpZ2h0X3BhdGggc3RydWN0dXJlIGlzIGNyZWF0ZWQg
dG8gYWRkcmVzcyBob3cgdG8gdHJhbnNtaXQKcGFyYW1ldGVycyBuZWVkcyBieSBjb3Jlc2lnaHRf
ZW5hYmxlX3BhdGgvY29yZXNpZ2h0X2Rpc2JhbGVfcGF0aApmdW5jdGlvbnMuCgpIZXJlIGlzIHRo
ZSBkZWZpbml0aW9uIG9mIHRoZSBzdHJ1Y3QgY29yZXNpZ2h0X3BhdGg6Ci8qKgogKiBzdHJ1Y3Qg
Y29yZXNpZ2h0X3BhdGggLSBkYXRhIG5lZWRlZCBieSBlbmFibGUvZGlzYWJsZSBwYXRoCiAqIEBw
YXRoOiAgICAgICAgICAgICAgIHBhdGggZnJvbSBzb3VyY2UgdG8gc2luay4KICogQHRyYWNlX2lk
OiAgICAgICAgICAgdHJhY2VfaWQgb2YgdGhlIHdob2xlIHBhdGguCiAqLwpzdHJ1Y3QgY29yZXNp
Z2h0X3BhdGggewogICAgICAgIHN0cnVjdCBsaXN0X2hlYWQgICAgICAgICAgICAgICAgKnBhdGg7
CiAgICAgICAgdTggICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFjZV9pZDsKfTsKClRo
ZSBhdGlkX29mZnNldCBtZW50aW9uZWQgYmVmb3JlIGlzIHRoZSBvZmZzZXQgdG8gQVRJRCByZWdp
c3RlciBpbiBDVENVCmRldmljZS4KCkVuYWJsaW5nIHRoZSBzb3VyY2UgZGV2aWNlIHdpbGwgY29u
ZmlndXJlIG9uZSBiaXQgaW4gdGhlIEFUSUQgcmVnaXN0ZXIgYmFzZWQKb24gaXRzIHRyYWNlIElE
LgpEaXNhYmxpbmcgdGhlIHNvdXJjZSBkZXZpY2VzIHdpbGwgcmVzZXQgdGhlIGJpdCBpbiB0aGUg
QUlURCByZWdpc3RlcgpiYXNlZCBvbiBpdHMgdHJhY2UgSUQuCgpVc2VhZ2U6CkVuYWJsZToKU1RN
IGRldmljZSB3aXRoIHRyYWNlIElEIDUgYW5kIEVUUjAgaXMgYWN0aXZhdGVkLgpCaXRtYXAgYmVm
b3JlIHRoZSBlbmFibGVtZW50OgpFVFIwQVRJRDA6CjMxLi4uLi4uLi4uLi4uLi4uLi4uNTQzMjEw
Cj09PT09PT09PT09PT09PT09PT09PT09PT09CjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAuLi4wCj09
PT09PT09PT09PT09PT09PT09PT09PT09CgpCaXRtYXAgYWZ0ZXIgdGhlIGVuYWJsZW1lbnQ6CjMx
Li4uLi4uLi4uLi4uLi4uLi4uNTQzMjEwCj09PT09PT09PT09PT09PT09PT09PT09PT09CjAwMDAw
MDAwMDAwMDAuLi4wMDAwMTAwMDAwCj09PT09PT09PT09PT09PT09PT09PT09PT09CgpUaGUgYml0
IDUgb2YgdGhlIEVUUjBBVElEMCByZWdpc3RlciBpcyBjb25maWd1cmVkIHRvIDEgd2hlbiBlbmFi
bGluZyB0aGUKU1RNIGRldmljZS4KCkRpc2FibGU6ClNUTSBkZXZpY2Ugd2l0aCB0cmFjZSBJRCA1
IGFuZCBFVFIwIGlzIGFjdGl2YXRlZC4KQml0bWFwIGJlZm9yZSB0aGUgZGlzYWJsZW1lbnQ6CkVU
UjBBVElEMDoKMzEuLi4uLi4uLi4uLi4uLi4uNjU0MzIxMAo9PT09PT09PT09PT09PT09PT09PT09
PT09CjAwMDAwMDAwMDAxMDExMS4uLjAxMDAwMDAKPT09PT09PT09PT09PT09PT09PT09PT09PQoK
Qml0bWFwIGFmdGVyIHRoZSBkaXNhYmxlbWVudApFVFIwQVRJRDA6CjMxLi4uLi4uLi4uLi4uLi4u
LjY1NDMyMTAKPT09PT09PT09PT09PT09PT09PT09PT09PQowMDAwMDAwMDAwMTAxMTEuLi4wMDAw
MDAwCj09PT09PT09PT09PT09PT09PT09PT09PT0KClRoZSBiaXQgNSBvZiB0aGUgRVRSMEFUSUQw
IHJlZ2lzdGVyIGlzIHJlc2V0IHRvIDAgd2hlbiBkaXNhYmxpbmcgdGhlIFNUTQpkZXZpY2UuCgpT
aW5jZXJlIHRoYW5rcyB0byBKYW1lcyBDbGFyayBmb3IgcHJvdmlkaW5nIGFuIGV4Y2VsbGVudCBp
ZGVhIHRvIGhhbmRsZQp0aGUgdHJhY2VfaWQgb2YgdGhlIHBhdGguCgpDaGFuZ2VzIGluIFYxMjoK
MS4gVXBkYXRlIHRoZSBtZXRob2QgZm9yIGFsbG9jYXRpbmcgdHJhY2VfaWQgZm9yIHBlcmYgbW9k
ZS4KTGluayB0byBWMTEgLSBodHRwczovL2xvcmUua2VybmVsLm9yZy9saW51eC1hcm0tbXNtLzIw
MjUwMjE0MDI0MDIxLjI0OTY1NS0xLXF1aWNfamllZ2FuQHF1aWNpbmMuY29tLwoKQ2hhbmdlcyBp
biBWMTE6CjEuIEFkZCByZXZpZXdlZC1ieSB0YWcgdG8gcGF0Y2goMi83KSwgKDQvNyksICg2Lzcp
LiBQYXRjaCgzLzcpIGlzCiAgIGNvbnRyaWJ1dGVkIGJ5IEphbWVzLCBzbyBkaWRub3QgYWRkIHJl
dmlld2VkLWJ5IHRhZyBvZiBKYW1lcy4KMi4gRml4IHdhcm5pbmcgcmVwb3J0ZWQgYnkga2VybmVs
IGJvdCBhbmQgdmVyaWZpZWQgd2l0aCBidWlsZChXPTEpLgozLiBSZXN0b3JlIHRvIHRoZSBvcmln
aW5hbCBsb2dpYyB0aGF0IHJlc3BvbnNpYmxlIGZvciBhbGxvY2F0ZSB0cmFjZV9pZAogICBvZiBF
VE0gZGV2aWNlIGluIHBlcmYgbW9kZSBhY2NvcmRpbmcgdG8gSmFtZXMnIGNvbW1lbnQuCkxpbmsg
dG8gVjEwIC0gaHR0cHM6Ly9sb3JlLmtlcm5lbC5vcmcvbGludXgtYXJtLW1zbS8yMDI1MDIwNzA2
NDIxMy4yMzE0NDgyLTEtcXVpY19qaWVnYW5AcXVpY2luYy5jb20vCgpDaGFuZ2VzIGluIFYxMDoK
MS4gSW50cm9kdWNlIGEgbmV3IEFQSSB0byBhbGxvY2F0ZSBhbmQgcmVhZCB0cmFjZV9pZCBhZnRl
ciBwYXRoIGlzIGJ1aWx0LgoyLiBJbnRyb2R1Y2UgYSBuZXcgQVBJIHRvIGFsbG9jYXRlIGFuZCBy
ZWFkIHRyYWNlX2lkIG9mIEVUTSBkZXZpY2UuCjMuIEFkZCBhIG5ldyBwYXRjaDogW1BBVENIIHYx
MCAzLzddIENvcmVzaWdodDogVXNlIGNvcmVzaWdodF9ldG1fZ2V0X3RyYWNlX2lkKCkgaW4gdHJh
Y2VpZF9zaG93KCkKNC4gUmVtb3ZlIHBlcmYgaGFuZGxlIGZyb20gY29yZXNpZ2h0X3BhdGguCjUu
IFVzZSB1OCBpbnN0ZWFkIG9mIGF0b21pY190IGZvciB0cmFjZWlkX3JlZmNudC4KNi4gT3B0aW1p
emUgdGhlIHBhcnQgb2YgY29kZSBpbiBDVENVIGRydmllciB0aGF0IGlzIHJlc3BvbnNpYmxlIGZv
ciBwcm9ncmFtIGF0aWQgcmVnaXN0ZXIuCkxpbmsgdG8gVjkgLSBodHRwczovL2xvcmUua2VybmVs
Lm9yZy9hbGwvMjAyNTAxMjQwNzI1MzcuMTgwMTAzMC0xLXF1aWNfamllZ2FuQHF1aWNpbmMuY29t
LwoKQ2hhbmdlcyBpbiBWOToKMS4gUmViYXNlZCBvbiB0YWcgbmV4dC0yMDI1MDExMy4KMi4gU2Vw
YXJhdGUgdGhlIHByZXZpb3VzIHRyYWNlX2lkIHBhdGNoIChwYXRjaCAyLzUgQ29yZXNpZ2h0OiBB
ZGQgdHJhY2VfaWQgZnVuY3Rpb24gdG8KICAgcmV0cmlldmluZyB0aGUgdHJhY2UgSUQpIGludG8g
dHdvIHBhdGNoZXMuCjMuIEludHJvZHVjZSBhIG5ldyBzdHJ1Y3QgY29yZXNpZ2h0X3BhdGggaW5z
dGVhZCBvZiBjc19zaW5rX2RhdGEgd2hpY2ggd2FzCiAgIGNyZWF0ZWQgaW4gcHJldmlvdXMgdmVy
c2lvbi4gVGhlIGNvcmVzaWdodF9wYXRoIHdpbGwgYmUgaW5pdGlhbGl6ZWQKICAgYW5kIGNvbnN0
cnVjdGVkIGluIGNvcmVzaWdodF9idWlsZF9wYXRoIGZ1bmN0aW9uIGFuZCByZWxlYXNlZCBieQog
ICBjb3Jlc2lnaHRfcmVsZWFzZV9wYXRoIGZ1bmN0aW9uLgogICBEZXRhaWwgb2YgdGhlIHN0cnVj
dCBjb3Jlc2lnaHRfcGF0aCBpcyBzaG93biBiZWxvdzoKLyoqCiAqIHN0cnVjdCBjb3Jlc2lnaHRf
cGF0aCAtIGRhdGEgbmVlZGVkIGJ5IGVuYWJsZS9kaXNhYmxlIHBhdGgKICogQHBhdGg6ICAgICAg
ICAgICAgICAgcGF0aCBmcm9tIHNvdXJjZSB0byBzaW5rLgogKiBAdHJhY2VfaWQ6ICAgICAgICAg
ICB0cmFjZV9pZCBvZiB0aGUgd2hvbGUgcGF0aC4KICovCnN0cnVjdCBjb3Jlc2lnaHRfcGF0aCB7
CiAgICAgICAgc3RydWN0IGxpc3RfaGVhZCAgICAgICAgICAgICAgICAqcGF0aDsKICAgICAgICB1
OCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWNlX2lkOwp9OwoKNC4gSW50cm9kdWNl
IGFuIGFycmF5IG9mIGF0b21pYyBpbiBDVENVIGRyaXZlciB0byByZXByZXNlbnQgdGhlIHJlZmNu
dCBvciBlYWNoCiAgIGVuYWJsZWQgdHJhY2VfaWQgZm9yIGVhY2ggc2luay4gVGhlIHJlYXNvbiBp
cyB0aGVyZSBpcyBhIHNjZW5hcmlvIHRoYXQgbW9yZQogICB0aGFuIG9uZSBUUERNIGRldmljZSBw
aHlzaWNhbGx5IGNvbm5lY3RlZCB0byB0aGUgc2FtZSBUUERBIGRldmljZSBoYXMKICAgYmVlbiBl
bmFibGVkLiBUaGUgQ1RDVSBkcml2ZXIgbXVzdCB2ZXJpZnkgdGhlIHJlZmNudCBiZWZvcmUgcmVz
ZXR0aW5nIHRoZQogICBiaXQgb2YgdGhlIGF0aWQgcmVnaXN0ZXIgYWNjb3JkaW5nIHRvIHRoZSB0
cmFjZV9pZCBvZiB0aGUgVFBEQSBkZXZpY2UuCjUuIFJlbW92ZSByZWR1bmRhbnQgY29kZXMgaW4g
Q1RDVSBkcml2ZXIuCjYuIEFkZCByZXZpZXdlZC1ieSB0YWcgdG8gdGhlIGNvbW1pdCBtZXNzYWdl
IGZvciBBUEIgY2xvY2sgcGF0aChwYXRjaAogICAxLzUpLgpMaW5rIHRvIFY4IC0gaHR0cHM6Ly9s
b3JlLmtlcm5lbC5vcmcvYWxsLzIwMjQxMjI2MDExMDIyLjE0NzcxNjAtMS1xdWljX2ppZWdhbkBx
dWljaW5jLmNvbS8KCkNoYW5nZXMgaW4gVjg6CjEuIFJlYmFzZWQgb24gdGFnIG5leHQtMjAyNDEy
MjAuCjIuIFVzZSByYXdfc3BpbmxvY2tfdCBpbnN0ZWFkIG9mIHNwaW5sb2NrX3QuCjMuIFJlbW92
ZSByZWR1bmRhbnQgY29kZXMgaW4gQ1RDVSBkcml2ZXI6CiAgIC0gRWxpbWluYXRlIHVubmVjZXNz
YXJ5IHBhcmFtZXRlciB2YWxpZGF0aW9ucy4KICAgLSBDb3JyZWN0IGxvZyBsZXZlbCB3aGVuIGFu
IGVycm9yIG9jY3Vycy4KICAgLSBPcHRpbWl6ZSBjb2Rlcy4KNC4gQ29ycmVjdCB0aGUgc3ViamVj
dCBwcmVmaXggZm9yIERUIHBhdGNoLgo1LiBDb2xsZWN0ZWQgcmV2aWV3ZWQtYnkgdGFnIGZyb20g
S29ucmFkIER5YmNpYiBmb3IgRFQgcGF0Y2guCkxpbmsgdG8gVjcgLSBodHRwczovL2xvcmUua2Vy
bmVsLm9yZy9hbGwvMjAyNDEyMTAwMzE1NDUuMzQ2ODU2MS0xLXF1aWNfamllZ2FuQHF1aWNpbmMu
Y29tLwoKQ2hhbmdlcyBpbiBWNzoKMS4gUmViYXNlZCBvbiB0YWcgbmV4dC0yMDI0MTIwNC4KMi4g
Rml4IGZvcm1hdCBpc3N1ZSBmb3IgZHRzIHBhdGNoLgogICAtIFBhZGRpbmcgdGhlIGFkZHJlc3Mg
cGFydCB0byA4IGRpZ2l0cwpMaW5rIHRvIFY2IC0gaHR0cHM6Ly9sb3JlLmtlcm5lbC5vcmcvbGlu
dXgtYXJtLW1zbS8yMDI0MTAwOTExMjUwMy4xODUxNTg1LTEtcXVpY19qaWVnYW5AcXVpY2luYy5j
b20vCgpDaGFuZ2VzIGluIFY2OgoxLiBDb2xsZWN0ZWQgcmV2aWV3ZWQtYnkgdGFnIGZyb20gUm9i
IGZvciBkdC1iaW5kaW5nIHBhdGNoLgoyLiBSZWJhc2VkIG9uIHRhZyBuZXh0LTIwMjQxMDA4Lgoz
LiBEcm9wcGVkIGFsbCBkZXBlbmRzLW9uIHRhZ3MuCkxpbmsgdG8gVjUgLSBodHRwczovL2xvcmUu
a2VybmVsLm9yZy9saW51eC1hcm0tbXNtLzIwMjQwOTA5MDMzNDU4LjMxMTgyMzgtMS1xdWljX2pp
ZWdhbkBxdWljaW5jLmNvbS8KCkNoYW5nZXMgaW4gVjU6CjEuIEZpeCB0aGUgZm9ybWF0IGlzc3Vl
IGZvciBkZXNjcmlwdGlvbiBwYXJhZ3JhaCBpbiBkdCBiaW5kaW5nIGZpbGUuCjIuIFByZXZpb3Vz
IGRpc2N1c3Npb24gZm9yIHdoeSB1c2UgImluLXBvcnRzIiBwcm9wZXJ0eSBpbnN0ZWFkIG9mICJw
b3J0cyIuCkxpbmsgdG8gVjQgLSBodHRwczovL2xvcmUua2VybmVsLm9yZy9saW51eC1hcm0tbXNt
LzIwMjQwODI4MDEyNzA2LjU0MzYwNS0xLXF1aWNfamllZ2FuQHF1aWNpbmMuY29tLwoKQ2hhbmdl
cyBpbiBWNDoKMS4gQWRkIFRNQyBkZXNjcmlwdGlvbiBpbiBiaW5kaW5nIGZpbGUuCjIuIFJlc3Ry
aWN0IHRoZSBudW1iZXIgb2YgcG9ydHMgZm9yIHRoZSBDVENVIGRldmljZSB0byBhIHJhbmdlIG9m
IDAgdG8gMSBpbiB0aGUgYmluZGluZyBmaWxlLAogICBiZWNhdXNlIHRoZSBtYXhpbXVtIG51bWJl
ciBvZiBDVENVIGRldmljZXMgaXMgMiBmb3IgZXhpc3RpbmcgcHJvamVjdHMuCkxpbmsgdG8gVjMg
LSBodHRwczovL2xvcmUua2VybmVsLm9yZy9saW51eC1hcm0ta2VybmVsLzIwMjQwODEyMDI0MTQx
LjI4Njc2NTUtMS1xdWljX2ppZWdhbkBxdWljaW5jLmNvbS8KCkNoYW5nZXMgaW4gVjM6CjEuIFJl
bmFtZSB0aGUgZGV2aWNlIHRvIENvcmVzaWdodCBUTUMgQ29udHJvbCBVbml0KENUQ1UpLgoyLiBJ
bnRyb2R1Y2UgYSBuZXcgd2F5IHRvIGRlZmluZSB0aGUgcGxhdGZvcm0gcmVsYXRlZCBjb25maWdz
LiBUaGUgbmV3CiAgIHN0cnVjdHVyZSwgcWNvbV9jdGN1X2NvbmZpZywgaXMgdXNlZCB0byBzdG9y
ZSBjb25maWd1cmF0aW9ucyBzcGVjaWZpYwogICB0byBhIHBsYXRmb3JtLiBFYWNoIHBsYXRmb3Jt
IHNob3VsZCBoYXZlIGl0cyBvd24gcWNvbV9jdGN1X2NvbmZpZyBzdHJ1Y3R1cmUuCjMuIEluIHBl
cmYgbW9kZSwgdGhlIEVUTSBkZXZpY2VzIGFsbG9jYXRlIHRoZWlyIHRyYWNlIElEcyB1c2luZyB0
aGUKICAgcGVyZl9zaW5rX2lkX21hcC4gSW4gc3lzZnMgbW9kZSwgdGhlIEVUTSBkZXZpY2VzIGFs
bG9jYXRlIHRoZWlyIHRyYWNlCiAgIElEcyB1c2luZyB0aGUgaWRfbWFwX2RlZmF1bHQuCjQuIENv
bnNpZGVyaW5nIHRoZSBzY2VuYXJpbyB3aGVyZSBib3RoIEVUUiBkZXZpY2VzIG1pZ2h0IGJlIGVu
YWJsZWQgc2ltdWx0YW5lb3VzbHkKICAgd2l0aCBtdWx0aXBsZSBzb3VyY2VzLCByZXRyaWV2aW5n
IGFuZCB1c2luZyB0cmFjZSBJRHMgaW5zdGVhZCBvZiBpZF9tYXAgaXMgbW9yZSBlZmZlY3RpdmUK
ICAgZm9yIHRoZSBDVENVIGRldmljZSBpbiBzeXNmcyBtb2RlLiBGb3IgZXhhbXBsZSwgV2UgY2Fu
IGNvbmZpZ3VyZSBvbmUgRVRSIGFzIHNpbmsgZm9yIGhpZ2gKICAgdGhyb3VnaHB1dCB0cmFjZSBk
YXRhIGxpa2UgRVRNIGFuZCBhbm90aGVyIEVUUiBmb3IgbG93IHRocm91Z2hwdXQgdHJhY2UgZGF0
YSBsaWtlIFNUTS4KICAgSW4gdGhpcyBjYXNlLCBTVE0gZGF0YSB3b27igJl0IGJlIGZsdXNoZWQg
b3V0IGJ5IEVUTSBkYXRhIHF1aWNrbHkuIEhvd2V2ZXIsIGlmIHdlIHVzZSBpZF9tYXAgdG8KICAg
bWFuYWdlIHRoZSB0cmFjZSBJRHMsIHdlIG5lZWQgdG8gY3JlYXRlIGEgc2VwYXJhdGUgaWRfbWFw
IGZvciBlYWNoIEVUUiBkZXZpY2UuIEFkZHRpb25hbGx5LCBXZQogICB3b3VsZCBuZWVkIHRvIGl0
ZXJhdGUgdGhyb3VnaCB0aGUgZW50aXJlIGlkX21hcCBmb3IgZWFjaCBjb25maWd1cmF0aW9uLgo1
LiBBZGQgc3VwcG9ydCBmb3IgYXBiJ3MgY2xvY2sgbmFtZSAiYXBiIi4gSWYgdGhlIGZ1bmN0aW9u
IGZhaWxzIHRvIG9idGFpbiB0aGUgY2xvY2sgd2l0aAogICB0aGUgbmFtZSAiYXBiX3BjbGsiLCBp
dCB3aWxsIGF0dGVtcHQgdG8gYWNxdWlyZSB0aGUgY2xvY2sgd2l0aCB0aGUgbmFtZSAiYXBiIi4K
TGluayB0byBWMiAtIGh0dHBzOi8vbG9yZS5rZXJuZWwub3JnL2xpbnV4LWFybS1tc20vMjAyNDA3
MDUwOTAwNDkuMTY1Njk4Ni0xLXF1aWNfamllZ2FuQHF1aWNpbmMuY29tL1QvI3QKCkNoYW5nZXMg
aW4gVjI6CjEuIFJlbmFtZSB0aGUgZGV2aWNlIHRvIENvcmVzaWdodCBDb250cm9sIFVuaXQuCjIu
IEludHJvZHVjZSB0aGUgdHJhY2VfaWQgZnVuY3Rpb24gcG9pbnRlciB0byBhZGRyZXNzIHRoZSBj
aGFsbGVuZyBob3cgdG8KICAgcHJvcGVybHkgY29sbGVjdCB0aGUgdHJhY2UgSUQgb2YgdGhlIGRl
dmljZS4KMy4gSW50cm9kdWNlIGEgbmV3IHdheSB0byBkZWZpbmUgdGhlIHFjb20sY2N1LWF0aWQt
b2Zmc2V0IHByb3BlcnR5IGluCmRldmljZSB0cmVlLgo0LiBEaXNhYmxpbmcgdGhlIGZpbHRlciBm
dW5jdGlvbiBibG9ja2VkIG9uIGFjcXVpcmluZyB0aGUgQVRJRC1vZmZzZXQsCiAgIHdoaWNoIHdp
bGwgYmUgYWRkcmVzc2VkIGluIGEgc2VwYXJhdGUgcGF0Y2ggb25jZSBpdOKAmXMgcmVhZHkuCkxp
bmsgdG8gVjEgLSBodHRwczovL2xvcmUua2VybmVsLm9yZy9sa21sLzIwMjQwNjE4MDcyNzI2LjM3
Njc5NzQtMS1xdWljX2ppZWdhbkBxdWljaW5jLmNvbS9ULyN0CgpKYW1lcyBDbGFyayAoMSk6CiAg
Q29yZXNpZ2h0OiBVc2UgY29yZXNpZ2h0X2V0bV9nZXRfdHJhY2VfaWQoKSBpbiB0cmFjZWlkX3No
b3coKQoKSmllIEdhbiAoNik6CiAgQ29yZXNpZ2h0OiBBZGQgc3VwcG9ydCBmb3IgbmV3IEFQQiBj
bG9jayBuYW1lCiAgQ29yZXNpZ2h0OiBBZGQgdHJhY2VfaWQgZnVuY3Rpb24gdG8gcmV0cmlldmlu
ZyB0aGUgdHJhY2UgSUQKICBDb3Jlc2lnaHQ6IEludHJvZHVjZSBhIG5ldyBzdHJ1Y3QgY29yZXNp
Z2h0X3BhdGgKICBkdC1iaW5kaW5nczogYXJtOiBBZGQgQ29yZXNpZ2h0IFRNQyBDb250cm9sIFVu
aXQgaGFyZHdhcmUKICBDb3Jlc2lnaHQ6IEFkZCBDb3Jlc2lnaHQgVE1DIENvbnRyb2wgVW5pdCBk
cml2ZXIKICBhcm02NDogZHRzOiBxY29tOiBzYTg3NzVwOiBBZGQgQ1RDVSBhbmQgRVRSIG5vZGVz
CgogLi4uL2JpbmRpbmdzL2FybS9xY29tLGNvcmVzaWdodC1jdGN1LnlhbWwgICAgIHwgIDg0ICsr
KysrKwogYXJjaC9hcm02NC9ib290L2R0cy9xY29tL3NhODc3NXAuZHRzaSAgICAgICAgIHwgMTUz
ICsrKysrKysrKysKIGRyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9LY29uZmlnICAgICAgICAg
ICB8ICAxMiArCiBkcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvTWFrZWZpbGUgICAgICAgICAg
fCAgIDEgKwogZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1jb3JlLmMgIHwg
MTMzICsrKysrKystLQogZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1jdGN1
LmMgIHwgMjY4ICsrKysrKysrKysrKysrKysrKwogZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0
L2NvcmVzaWdodC1jdGN1LmggIHwgIDI0ICsrCiBkcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQv
Y29yZXNpZ2h0LWR1bW15LmMgfCAgMTYgKy0KIC4uLi9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVz
aWdodC1ldG0tcGVyZi5jICB8ICAyNCArLQogLi4uL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNp
Z2h0LWV0bS1wZXJmLmggIHwgICAyICstCiBkcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29y
ZXNpZ2h0LWV0bS5oICAgfCAgIDEgLQogLi4uL2NvcmVzaWdodC9jb3Jlc2lnaHQtZXRtM3gtY29y
ZS5jICAgICAgICAgIHwgIDU1ICstLS0KIC4uLi9jb3Jlc2lnaHQvY29yZXNpZ2h0LWV0bTN4LXN5
c2ZzLmMgICAgICAgICB8ICAgMyArLQogLi4uL2NvcmVzaWdodC9jb3Jlc2lnaHQtZXRtNHgtY29y
ZS5jICAgICAgICAgIHwgIDU1ICstLS0KIC4uLi9jb3Jlc2lnaHQvY29yZXNpZ2h0LWV0bTR4LXN5
c2ZzLmMgICAgICAgICB8ICAgNCArLQogZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVz
aWdodC1ldG00eC5oIHwgICAxIC0KIGRyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2ln
aHQtcHJpdi5oICB8ICAxMiArLQogZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdo
dC1zdG0uYyAgIHwgIDE0ICstCiBkcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0
LXN5c2ZzLmMgfCAgMTcgKy0KIGRyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQt
dHBkYS5jICB8ICAxMSArCiBkcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LXRw
ZG0uYyAgfCAgIDMgKy0KIGluY2x1ZGUvbGludXgvY29yZXNpZ2h0LmggICAgICAgICAgICAgICAg
ICAgICB8ICAzMCArLQogMjIgZmlsZXMgY2hhbmdlZCwgNzYyIGluc2VydGlvbnMoKyksIDE2MSBk
ZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBEb2N1bWVudGF0aW9uL2RldmljZXRyZWUv
YmluZGluZ3MvYXJtL3Fjb20sY29yZXNpZ2h0LWN0Y3UueWFtbAogY3JlYXRlIG1vZGUgMTAwNjQ0
IGRyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtY3RjdS5jCiBjcmVhdGUgbW9k
ZSAxMDA2NDQgZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1jdGN1LmgKCi0t
IAoyLjM0LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkxpbnV4LXN0bTMyIG1haWxpbmcgbGlzdApMaW51eC1zdG0zMkBzdC1tZC1tYWlsbWFuLnN0b3Jt
cmVwbHkuY29tCmh0dHBzOi8vc3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbS9tYWlsbWFuL2xp
c3RpbmZvL2xpbnV4LXN0bTMyCg==
