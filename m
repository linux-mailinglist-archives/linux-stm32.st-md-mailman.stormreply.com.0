Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id DDC22B13E94
	for <lists+linux-stm32@lfdr.de>; Mon, 28 Jul 2025 17:35:20 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 91882C36B38;
	Mon, 28 Jul 2025 15:35:20 +0000 (UTC)
Received: from mx07-00178001.pphosted.com (mx07-00178001.pphosted.com
 [185.132.182.106])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id CC5AEC36B36
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Mon, 28 Jul 2025 15:35:19 +0000 (UTC)
Received: from pps.filterd (m0241204.ppops.net [127.0.0.1])
 by mx07-00178001.pphosted.com (8.18.1.2/8.18.1.2) with ESMTP id 56SDmqUg025850;
 Mon, 28 Jul 2025 17:35:01 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=foss.st.com; h=
 cc:content-transfer-encoding:content-type:date:from:in-reply-to
 :message-id:mime-version:references:subject:to; s=selector1; bh=
 xVB4qEO85iajsSx3lhjqdXRxta/jpUzhVfh9RXEmgDc=; b=SUxUuw96TSxC5Dmt
 NOCYp1+PsGVTvZ4JR3Mmf12+T6PZEH4kTgg16R4aIFIwqelXjKjTTIEWoCAzd4xh
 1tDLDPqQUzdPtxmyEVAxHtbB5bj6lfTZ03CpAPQC/Arn5Eu2zkRVZ9hMmh4Y6jEQ
 scOoPFFNBY/E8KMaloqMteAg79JVIpO1zBctoAlGa15YxHn4VFC224oEs617xBjN
 3O158YI8z6u8JopCruI34QdzKtSnK1/NJ7UTkjZkk8a8r5Y/fDnP4HJ7eDDlELR0
 9iCmr1DgtQcBfQhF3WjBTxqSbVhwQaJV+MByYQiilFEi+xa2/3lC1ia9gwrsPxTK
 aplAdw==
Received: from beta.dmz-ap.st.com (beta.dmz-ap.st.com [138.198.100.35])
 by mx07-00178001.pphosted.com (PPS) with ESMTPS id 484pc28wae-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Mon, 28 Jul 2025 17:35:01 +0200 (MEST)
Received: from euls16034.sgp.st.com (euls16034.sgp.st.com [10.75.44.20])
 by beta.dmz-ap.st.com (STMicroelectronics) with ESMTP id 197184004F;
 Mon, 28 Jul 2025 17:33:38 +0200 (CEST)
Received: from Webmail-eu.st.com (shfdag1node2.st.com [10.75.129.70])
 by euls16034.sgp.st.com (STMicroelectronics) with ESMTP id 056D078C90C;
 Mon, 28 Jul 2025 17:30:03 +0200 (CEST)
Received: from localhost (10.252.23.100) by SHFDAG1NODE2.st.com (10.75.129.70)
 with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 28 Jul
 2025 17:30:02 +0200
From: =?utf-8?q?Cl=C3=A9ment_Le_Goffic?= <clement.legoffic@foss.st.com>
Date: Mon, 28 Jul 2025 17:29:44 +0200
MIME-Version: 1.0
Message-ID: <20250728-ddrperfm-upstream-v5-13-03f1be8ad396@foss.st.com>
References: <20250728-ddrperfm-upstream-v5-0-03f1be8ad396@foss.st.com>
In-Reply-To: <20250728-ddrperfm-upstream-v5-0-03f1be8ad396@foss.st.com>
To: Will Deacon <will@kernel.org>, Mark Rutland <mark.rutland@arm.com>, Rob
 Herring <robh@kernel.org>, Krzysztof Kozlowski <krzk+dt@kernel.org>, Conor
 Dooley <conor+dt@kernel.org>, Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Alexandre Torgue <alexandre.torgue@foss.st.com>, Philipp Zabel
 <p.zabel@pengutronix.de>, Jonathan Corbet <corbet@lwn.net>,
 Gatien Chevallier <gatien.chevallier@foss.st.com>,
 Michael Turquette <mturquette@baylibre.com>,
 Stephen Boyd <sboyd@kernel.org>, Gabriel Fernandez
 <gabriel.fernandez@foss.st.com>, Krzysztof Kozlowski <krzk@kernel.org>, Le
 Goffic <legoffic.clement@gmail.com>, Julius Werner <jwerner@chromium.org>
X-Mailer: b4 0.15-dev-8018a
X-Originating-IP: [10.252.23.100]
X-ClientProxiedBy: SHFCAS1NODE2.st.com (10.75.129.73) To SHFDAG1NODE2.st.com
 (10.75.129.70)
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.293,Aquarius:18.0.1099,Hydra:6.1.9,FMLib:17.12.80.40
 definitions=2025-07-28_03,2025-07-28_01,2025-03-28_01
Cc: devicetree@vger.kernel.org, linux-doc@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-clk@vger.kernel.org,
 linux-perf-users@vger.kernel.org, linux-stm32@st-md-mailman.stormreply.com,
 linux-arm-kernel@lists.infradead.org
Subject: [Linux-stm32] [PATCH v5 13/20] perf: stm32: introduce DDRPERFM
	driver
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

SW50cm9kdWNlIHRoZSBkcml2ZXIgZm9yIHRoZSBERFIgUGVyZm9ybWFuY2UgTW9uaXRvciBhdmFp
bGFibGUgb24KU1RNMzJNUFUgU29DLgoKT24gU1RNMzJNUDIgcGxhdGZvcm1zLCB0aGUgRERSUEVS
Rk0gYWxsb3dzIHRvIG1vbml0b3IgdXAgdG8gOCBERFIgZXZlbnRzCnRoYXQgY29tZSBmcm9tIHRo
ZSBERFIgQ29udHJvbGxlciBzdWNoIGFzIHJlYWQgb3Igd3JpdGUgZXZlbnRzLgoKT24gU1RNMzJN
UDEgcGxhdGZvcm1zLCB0aGUgRERSUEVSRk0gY2Fubm90IG1vbml0b3IgYW55IGV2ZW50IG9uIGFu
eQpjb3VudGVyLCB0aGVyZSBpcyBhIG5vdGlvbiBvZiBzZXQgb2YgZXZlbnRzLgpFdmVudHMgZnJv
bSBkaWZmZXJlbnQgc2V0cyBjYW5ub3QgYmUgbW9uaXRvcmVkIGF0IHRoZSBzYW1lIHRpbWUuClRo
ZSBmaXJzdCBjaG9zZW4gZXZlbnQgc2VsZWN0cyB0aGUgc2V0LgpUaGUgc2V0IGlzIGNvZGVkIGlu
IHRoZSBmaXJzdCB0d28gYnl0ZXMgb2YgdGhlIGNvbmZpZyB2YWx1ZSB3aGljaCBpcyBvbiA0CmJ5
dGVzLgoKT24gU1RNMzJNUDI1eCBzZXJpZXMsIHRoZSBERFJQRVJGTSBjbG9jayBpcyBzaGFyZWQg
d2l0aCB0aGUgRERSIGNvbnRyb2xsZXIKYW5kIG1heSBiZSBzZWN1cmVkIGJ5IGJvb3Rsb2FkZXJz
LgpBY2Nlc3MgY29udHJvbGxlcnMgYWxsb3cgdG8gY2hlY2sgYWNjZXNzIHRvIGEgcmVzb3VyY2Uu
IFVzZSB0aGUgYWNjZXNzCmNvbnRyb2xsZXIgZGVmaW5lZCBpbiB0aGUgZGV2aWNldHJlZSB0byBr
bm93IGFib3V0IHRoZSBhY2Nlc3MgdG8gdGhlCkREUlBFUkZNIGNsb2NrLgoKU2lnbmVkLW9mZi1i
eTogQ2zDqW1lbnQgTGUgR29mZmljIDxjbGVtZW50LmxlZ29mZmljQGZvc3Muc3QuY29tPgotLS0K
IGRyaXZlcnMvcGVyZi9LY29uZmlnICAgICAgICAgfCAgMTEgKwogZHJpdmVycy9wZXJmL01ha2Vm
aWxlICAgICAgICB8ICAgMSArCiBkcml2ZXJzL3BlcmYvc3RtMzJfZGRyX3BtdS5jIHwgODk2ICsr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysKIDMgZmlsZXMgY2hhbmdl
ZCwgOTA4IGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9kcml2ZXJzL3BlcmYvS2NvbmZpZyBi
L2RyaXZlcnMvcGVyZi9LY29uZmlnCmluZGV4IDI3OGM5MjlkYzg3YS4uNTExODUzNTEzNGVlIDEw
MDY0NAotLS0gYS9kcml2ZXJzL3BlcmYvS2NvbmZpZworKysgYi9kcml2ZXJzL3BlcmYvS2NvbmZp
ZwpAQCAtMTk4LDYgKzE5OCwxNyBAQCBjb25maWcgUUNPTV9MM19QTVUKIAkgICBBZGRzIHRoZSBM
MyBjYWNoZSBQTVUgaW50byB0aGUgcGVyZiBldmVudHMgc3Vic3lzdGVtIGZvcgogCSAgIG1vbml0
b3JpbmcgTDMgY2FjaGUgZXZlbnRzLgogCitjb25maWcgU1RNMzJfRERSX1BNVQorCXRyaXN0YXRl
ICJTVE0zMiBERFIgUE1VIgorCWRlcGVuZHMgb24gQVJDSF9TVE0zMiB8fCBDT01QSUxFX1RFU1QK
KwlkZWZhdWx0IG0KKwloZWxwCisJICBQcm92aWRlcyBzdXBwb3J0IGZvciB0aGUgRERSIHBlcmZv
cm1hbmNlIG1vbml0b3Igb24gU1RNMzJNUFUgcGxhdGZvcm1zLgorCSAgVGhlIG1vbml0b3IgcHJv
dmlkZXMgY291bnRlcnMgZm9yIG1lbW9yeSByZWxhdGVkIGV2ZW50cy4KKwkgIEl0IGFsbG93cyBk
ZXZlbG9wZXJzIHRvIGFuYWx5emUgYW5kIG9wdGltaXplIEREUiBwZXJmb3JtYW5jZS4KKwkgIEVu
YWJsaW5nIHRoaXMgZmVhdHVyZSBpcyB1c2VmdWwgZm9yIHBlcmZvcm1hbmNlIHR1bmluZyBhbmQg
ZGVidWdnaW5nIG1lbW9yeQorCSAgc3Vic3lzdGVtIGlzc3VlcyBvbiBzdXBwb3J0ZWQgaGFyZHdh
cmUuCisKIGNvbmZpZyBUSFVOREVSWDJfUE1VCiAJdHJpc3RhdGUgIkNhdml1bSBUaHVuZGVyWDIg
U29DIFBNVSBVTkNPUkUiCiAJZGVwZW5kcyBvbiBBUkNIX1RIVU5ERVIyIHx8IENPTVBJTEVfVEVT
VApkaWZmIC0tZ2l0IGEvZHJpdmVycy9wZXJmL01ha2VmaWxlIGIvZHJpdmVycy9wZXJmL01ha2Vm
aWxlCmluZGV4IGRlNzFkMjU3NDg1Ny4uN2Y4M2I1MGZlYjcxIDEwMDY0NAotLS0gYS9kcml2ZXJz
L3BlcmYvTWFrZWZpbGUKKysrIGIvZHJpdmVycy9wZXJmL01ha2VmaWxlCkBAIC0yMCw2ICsyMCw3
IEBAIG9iai0kKENPTkZJR19SSVNDVl9QTVUpICs9IHJpc2N2X3BtdS5vCiBvYmotJChDT05GSUdf
UklTQ1ZfUE1VX0xFR0FDWSkgKz0gcmlzY3ZfcG11X2xlZ2FjeS5vCiBvYmotJChDT05GSUdfUklT
Q1ZfUE1VX1NCSSkgKz0gcmlzY3ZfcG11X3NiaS5vCiBvYmotJChDT05GSUdfU1RBUkZJVkVfU1RB
UkxJTktfUE1VKSArPSBzdGFyZml2ZV9zdGFybGlua19wbXUubworb2JqLSQoQ09ORklHX1NUTTMy
X0REUl9QTVUpICs9IHN0bTMyX2Rkcl9wbXUubwogb2JqLSQoQ09ORklHX1RIVU5ERVJYMl9QTVUp
ICs9IHRodW5kZXJ4Ml9wbXUubwogb2JqLSQoQ09ORklHX1hHRU5FX1BNVSkgKz0geGdlbmVfcG11
Lm8KIG9iai0kKENPTkZJR19BUk1fU1BFX1BNVSkgKz0gYXJtX3NwZV9wbXUubwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9wZXJmL3N0bTMyX2Rkcl9wbXUuYyBiL2RyaXZlcnMvcGVyZi9zdG0zMl9kZHJf
cG11LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi45NTQ3ZTJhZTI1
NzgKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL3BlcmYvc3RtMzJfZGRyX3BtdS5jCkBAIC0w
LDAgKzEsODk2IEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5Cisv
KgorICogQ29weXJpZ2h0IChDKSAyMDI1LCBTVE1pY3JvZWxlY3Ryb25pY3MgLSBBbGwgUmlnaHRz
IFJlc2VydmVkCisgKiBBdXRob3I6IENsw6ltZW50IExlIEdvZmZpYyA8Y2xlbWVudC5sZWdvZmZp
Y0Bmb3NzLnN0LmNvbT4gZm9yIFNUTWljcm9lbGVjdHJvbmljcy4KKyAqLworCisjaW5jbHVkZSA8
bGludXgvYnVzL3N0bTMyX2ZpcmV3YWxsX2RldmljZS5oPgorI2luY2x1ZGUgPGxpbnV4L2Nsay5o
PgorI2luY2x1ZGUgPGxpbnV4L2hydGltZXIuaD4KKyNpbmNsdWRlIDxsaW51eC9tb2RfZGV2aWNl
dGFibGUuaD4KKyNpbmNsdWRlIDxsaW51eC9vZi5oPgorI2luY2x1ZGUgPGxpbnV4L3BlcmZfZXZl
bnQuaD4KKyNpbmNsdWRlIDxsaW51eC9wbGF0Zm9ybV9kZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51
eC9yZXNldC5oPgorCisjZGVmaW5lIERSSVZFUl9OQU1FCQkic3RtMzJfZGRyX3BtdSIKKworLyoK
KyAqIFRoZSBQTVUgaXMgYWJsZSB0byBmcmVlemUgYWxsIGNvdW50ZXJzIGFuZCBnZW5lcmF0ZSBh
biBpbnRlcnJ1cHQgd2hlbiB0aGVyZQorICogaXMgYSBjb3VudGVyIG92ZXJmbG93LiBCdXQsIHJl
bHlpbmcgb24gdGhpcyBtZWFucyB0aGF0IHdlIGxvc2UgYWxsIHRoZQorICogZXZlbnRzIHRoYXQg
b2NjdXIgYmV0d2VlbiB0aGUgZnJlZXplIGFuZCB0aGUgaW50ZXJydXB0IGhhbmRsZXIgZXhlY3V0
aW9uLgorICogU28gd2UgdXNlIGEgcG9sbGluZyBtZWNoYW5pc20gdG8gYXZvaWQgdGhpcyBsb3N0
IG9mIGluZm9ybWF0aW9uLgorICogVGhlIGZhc3Rlc3QgY291bnRlciBjYW4gb3ZlcmZsb3cgaW4g
fjdzIEA2MDBNSHogKHRoYXQgaXMgdGhlIG1heGltdW0gRERSCisgKiBmcmVxdWVuY3kgc3VwcG9y
dGVkIG9uIFNUTTMyTVAyNTcpLCBzbyB3ZSBwb2xsIGluIDMuNXMgaW50ZXJ2YWxzIHRvIGVuc3Vy
ZQorICogd2UgZG9uJ3QgcmVhY2ggdGhpcyBsaW1pdC4KKyAqLworI2RlZmluZSBQT0xMX01TCQkJ
MzUwMAorCisjZGVmaW5lIEREUlBFUkZNX0NUUkwJCTB4MDAwCisjZGVmaW5lIEREUlBFUkZNX0NG
RwkJMHgwMDQKKyNkZWZpbmUgRERSUEVSRk1fU1RBVFVTCQkweDAwOAorI2RlZmluZSBERFJQRVJG
TV9DTFIJCTB4MDBDCisjZGVmaW5lIEREUlBFUkZNX1RDTlQJCTB4MDIwCisjZGVmaW5lIEREUlBF
UkZNX0VWQ05UKFgpCSgweDAzMCArIDggKiAoWCkpCisKKyNkZWZpbmUgRERSUEVSRk1fTVAyX0NG
RzAJMHgwMTAKKyNkZWZpbmUgRERSUEVSRk1fTVAyX0NGRzEJMHgwMTQKKyNkZWZpbmUgRERSUEVS
Rk1fTVAyX0NGRzUJMHgwMjQKKyNkZWZpbmUgRERSUEVSRk1fTVAyX0RSQU1JTkYJMHgwMjgKKyNk
ZWZpbmUgRERSUEVSRk1fTVAyX0VWQ05UKFgpCSgweDA0MCArIDQgKiAoWCkpCisjZGVmaW5lIERE
UlBFUkZNX01QMl9UQ05UCTB4MDYwCisjZGVmaW5lIEREUlBFUkZNX01QMl9TVEFUVVMJMHgwODAK
KworI2RlZmluZSBNUDFfU1RBVFVTX0JVU1kJCUJJVCgxNikKKyNkZWZpbmUgTVAyX1NUQVRVU19C
VVNZCQlCSVQoMzEpCisKKyNkZWZpbmUgQ1RSTF9TVEFSVAkJQklUKDApCisjZGVmaW5lIENUUkxf
U1RPUAkJQklUKDEpCisKKyNkZWZpbmUgQ0ZHX1NFTF9NU0sJCUdFTk1BU0soMTcsIDE2KQorI2Rl
ZmluZSBDRkdfU0VMX1NISUZUCQkxNgorI2RlZmluZSBDRkdfRU5fTVNLCQlHRU5NQVNLKDMsIDAp
CisKKyNkZWZpbmUgTVAxX0NMUl9DTlQJCUdFTk1BU0soMywgMCkKKyNkZWZpbmUgTVAxX0NMUl9U
SU1FCQlCSVQoMzEpCisjZGVmaW5lIE1QMl9DTFJfQ05UCQlHRU5NQVNLKDcsIDApCisjZGVmaW5l
IE1QMl9DTFJfVElNRQkJQklUKDgpCisKKy8qIDQgZXZlbnQgY291bnRlcnMgcGx1cyAxIGRlZGlj
YXRlZCB0byB0aW1lICovCisjZGVmaW5lIE1QMV9DTlRfTkIJCSg0ICsgMSkKKy8qIEluZGV4IG9m
IHRoZSB0aW1lIGRlZGljYXRlZCBjb3VudGVyICovCisjZGVmaW5lIE1QMV9USU1FX0NOVF9JRFgJ
NAorCisvKiA4IGV2ZW50IGNvdW50ZXJzIHBsdXMgMSBkZWRpY2F0ZWQgdG8gdGltZSAqLworI2Rl
ZmluZSBNUDJfQ05UX05CCQkoOCArIDEpCisvKiBJbmRleCBvZiB0aGUgdGltZSBkZWRpY2F0ZWQg
Y291bnRlciAqLworI2RlZmluZSBNUDJfVElNRV9DTlRfSURYCTgKKy8qIDQgZXZlbnQgY291bnRl
cnMgcGVyIHJlZ2lzdGVyICovCisjZGVmaW5lIE1QMl9DTlRfU0VMX1BFUl9SRUcJNAorCisvKiBB
cmJpdHJhcnkgdmFsdWUgdXNlZCB0byBpZGVudGlmeSBhIHRpbWUgZXZlbnQgKi8KKyNkZWZpbmUg
VElNRV9DTlQJCTY0CisKK3N0cnVjdCBzdG0zMl9kZHJfcG11X3JlZyB7CisJdW5zaWduZWQgaW50
IHJlZzsKKwl1MzIgbWFzazsKK307CisKK3N0cnVjdCBzdG0zMl9kZHJfY250IHsKKwlpbnQgaWR4
OworCXN0cnVjdCBwZXJmX2V2ZW50ICpldnQ7CisJc3RydWN0IGxpc3RfaGVhZCBjbnRfbGlzdDsK
K307CisKK3N0cnVjdCBzdG0zMl9kZHJfcG11X3JlZ3NwZWMgeworCWNvbnN0IHN0cnVjdCBzdG0z
Ml9kZHJfcG11X3JlZyBzdG9wOworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZyBzdGFy
dDsKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWcgZW5hYmxlOworCWNvbnN0IHN0cnVj
dCBzdG0zMl9kZHJfcG11X3JlZyBzdGF0dXM7CisJY29uc3Qgc3RydWN0IHN0bTMyX2Rkcl9wbXVf
cmVnIGNsZWFyX2NudDsKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWcgY2xlYXJfdGlt
ZTsKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWcgY2ZnOworCWNvbnN0IHN0cnVjdCBz
dG0zMl9kZHJfcG11X3JlZyBjZmcwOworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZyBj
ZmcxOworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZyBkcmFtX2luZjsKKwljb25zdCBz
dHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWcgY291bnRlcl90aW1lOworCWNvbnN0IHN0cnVjdCBzdG0z
Ml9kZHJfcG11X3JlZyBjb3VudGVyX2V2dFtdOworfTsKKworc3RydWN0IHN0bTMyX2Rkcl9wbXUg
eworCXN0cnVjdCBwbXUgcG11OworCXZvaWQgX19pb21lbSAqbWVtYmFzZTsKKwlzdHJ1Y3QgZGV2
aWNlICpkZXY7CisJc3RydWN0IGNsayAqY2xrOworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11
X2NmZyAqY2ZnOworCXN0cnVjdCBocnRpbWVyIGhydGltZXI7CisJa3RpbWVfdCBwb2xsX3Blcmlv
ZDsKKwlpbnQgc2VsZWN0ZWRfc2V0OworCXUzMiBkcmFtX3R5cGU7CisJc3RydWN0IGxpc3RfaGVh
ZCBjb3VudGVyc1tdOworfTsKKworc3RydWN0IHN0bTMyX2Rkcl9wbXVfY2ZnIHsKKwljb25zdCBz
dHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjICpyZWdzOworCWNvbnN0IHN0cnVjdCBhdHRyaWJ1
dGVfZ3JvdXAgKiphdHRyaWJ1dGU7CisJdTMyIGNvdW50ZXJzX25iOworCXUzMiBldnRfY291bnRl
cnNfbmI7CisJdTMyIHRpbWVfY250X2lkeDsKKwlzdHJ1Y3Qgc3RtMzJfZGRyX2NudCAqICgqZ2V0
X2NvdW50ZXIpKHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwLCBzdHJ1Y3QgcGVyZl9ldmVudCAqZSk7
Cit9OworCisjZGVmaW5lIFNUTTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKGdyb3VwLCBpbmRleCkJ
KCgoZ3JvdXApIDw8IDgpIHwgKGluZGV4KSkKKyNkZWZpbmUgU1RNMzJfRERSX1BNVV9HUk9VUF9W
QUxVRShldmVudF9udW1iZXIpCQkoKGV2ZW50X251bWJlcikgPj4gOCkKKyNkZWZpbmUgU1RNMzJf
RERSX1BNVV9FVkVOVF9JTkRFWChldmVudF9udW1iZXIpCQkoKGV2ZW50X251bWJlcikgJiAweEZG
KQorCisvKiBNUDEgZGRycGVyZm0gZXZlbnRzICovCitlbnVtIHN0bTMyX2Rkcl9wbXVfZXZlbnRz
X21wMSB7CisJUEVSRl9PUF9JU19SRAkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwg
MCksCisJUEVSRl9PUF9JU19XUgkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMSks
CisJUEVSRl9PUF9JU19BQ1RJVkFURQkJPSBTVE0zMl9ERFJfUE1VX0VWRU5UX05VTUJFUigwLCAy
KSwKKwlDVExfSURMRQkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMyksCisJUEVS
Rl9IUFJfUkVRX1dJVEhfTk9fQ1JFRElUCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMSwg
MCksCisJUEVSRl9MUFJfUkVRX1dJVEhfTk9fQ1JFRElUCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9O
VU1CRVIoMSwgMSksCisJQ0FDVElWRV9ERFJDCQkJPSBTVE0zMl9ERFJfUE1VX0VWRU5UX05VTUJF
UigxLCAzKSwKKwlQRVJGX09QX0lTX0VOVEVSX1BPV0VSRE9XTgk9IFNUTTMyX0REUl9QTVVfRVZF
TlRfTlVNQkVSKDIsIDApLAorCVBFUkZfT1BfSVNfUkVGUkVTSAkJPSBTVE0zMl9ERFJfUE1VX0VW
RU5UX05VTUJFUigyLCAxKSwKKwlQRVJGX1NFTEZSRVNIX01PREUJCT0gU1RNMzJfRERSX1BNVV9F
VkVOVF9OVU1CRVIoMiwgMiksCisJREZJX0xQX1JFUQkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9O
VU1CRVIoMiwgMyksCisJUEVSRl9IUFJfWEFDVF9XSEVOX0NSSVRJQ0FMCT0gU1RNMzJfRERSX1BN
VV9FVkVOVF9OVU1CRVIoMywgMCksCisJUEVSRl9MUFJfWEFDVF9XSEVOX0NSSVRJQ0FMCT0gU1RN
MzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMywgMSksCisJUEVSRl9XUl9YQUNUX1dIRU5fQ1JJVElD
QUwJPSBTVE0zMl9ERFJfUE1VX0VWRU5UX05VTUJFUigzLCAyKSwKKwlERklfTFBfUkVRX1NDTkQJ
CQk9IFNUTTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKDMsIDMpLAorfTsKKworLyogTVAyIGRkcnBl
cmZtIGV2ZW50cyAqLworZW51bSBzdG0zMl9kZHJfcG11X2V2ZW50c19tcDIgeworCURGSV9JU19B
Q1QJCQk9IFNUTTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKDAsIDApLAorCURGSV9JU19QUkVQQgkJ
CT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMSksCisJREZJX0lTX1BSRUFCCQkJPSBT
VE0zMl9ERFJfUE1VX0VWRU5UX05VTUJFUigwLCAyKSwKKwlERklfSVNfUkQJCQk9IFNUTTMyX0RE
Ul9QTVVfRVZFTlRfTlVNQkVSKDAsIDMpLAorCURGSV9JU19SREEJCQk9IFNUTTMyX0REUl9QTVVf
RVZFTlRfTlVNQkVSKDAsIDQpLAorCURGSV9JU19XUgkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9O
VU1CRVIoMCwgNiksCisJREZJX0lTX1dSQQkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIo
MCwgNyksCisJREZJX0lTX01XUgkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgOSks
CisJREZJX0lTX01XUkEJCQk9IFNUTTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKDAsIDEwKSwKKwlE
RklfSVNfTVJXCQkJPSBTVE0zMl9ERFJfUE1VX0VWRU5UX05VTUJFUigwLCAxMiksCisJREZJX0lT
X01SUgkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMTMpLAorCURGSV9JU19SRUZQ
QgkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMTQpLAorCURGSV9JU19SRUZBQgkJ
CT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMTUpLAorCURGSV9JU19NUEMJCQk9IFNU
TTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKDAsIDE2KSwKKwlQRVJGX09QX0lTX0FDVAkJCT0gU1RN
MzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMzIpLAorCVBFUkZfT1BfSVNfUkRfTVAyCQk9IFNU
TTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKDAsIDMzKSwKKwlQRVJGX09QX0lTX1dSX01QMgkJPSBT
VE0zMl9ERFJfUE1VX0VWRU5UX05VTUJFUigwLCAzNCksCisJUEVSRl9PUF9JU19NV1IJCQk9IFNU
TTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKDAsIDM1KSwKKwlQRVJGX09QX0lTX1JFRgkJCT0gU1RN
MzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMzYpLAorCVBFUkZfT1BfSVNfQ1JJVF9SRUYJCT0g
U1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMzcpLAorCVBFUkZfT1BfSVNfU1BFQ19SRUYJ
CT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMzgpLAorCVBFUkZfT1BfSVNfWlFDQUwJ
CT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgMzkpLAorCVBFUkZfT1BfSVNfRU5URVJf
UE9XRE4JCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgNDApLAorCVBFUkZfT1BfSVNf
RU5URVJfU0VMRlJFRgk9IFNUTTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKDAsIDQxKSwKKwlQRVJG
X09QX0lTX1BSRQkJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgNDIpLAorCVBFUkZf
T1BfSVNfUFJFX0ZPUl9SRFdSCQk9IFNUTTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKDAsIDQzKSwK
KwlQRVJGX09QX0lTX1BSRV9GT1JfT1RIRVJTCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9OVU1CRVIo
MCwgNDQpLAorCVBFUkZfT1BfSVNfUkRfQUNUSVZBVEUJCT0gU1RNMzJfRERSX1BNVV9FVkVOVF9O
VU1CRVIoMCwgNDUpLAorCVBFUkZfSFBSX1JFUV9XSVRIX05PQ1JFRElUCT0gU1RNMzJfRERSX1BN
VV9FVkVOVF9OVU1CRVIoMCwgNDgpLAorCVBFUkZfTFBSX1JFUV9XSVRIX05PQ1JFRElUCT0gU1RN
MzJfRERSX1BNVV9FVkVOVF9OVU1CRVIoMCwgNDkpLAorCVBFUkZfSFBSX1hBQ1RfV0hFTl9DUklU
SUNBTF9NUDIJPSBTVE0zMl9ERFJfUE1VX0VWRU5UX05VTUJFUigwLCA1MCksCisJUEVSRl9MUFJf
WEFDVF9XSEVOX0NSSVRJQ0FMX01QMgk9IFNUTTMyX0REUl9QTVVfRVZFTlRfTlVNQkVSKDAsIDUx
KSwKKwlQRVJGX1dSX1hBQ1RfV0hFTl9DUklUSUNBTF9NUDIJPSBTVE0zMl9ERFJfUE1VX0VWRU5U
X05VTUJFUigwLCA1MiksCisJUEVSRl9SRFdSX1RSQU5TSVRJT05TCQk9IFNUTTMyX0REUl9QTVVf
RVZFTlRfTlVNQkVSKDAsIDUzKSwKKwlQRVJGX1dBUl9IQVpBUkQJCQk9IFNUTTMyX0REUl9QTVVf
RVZFTlRfTlVNQkVSKDAsIDU0KSwKKwlQRVJGX1JBV19IQVpBUkQJCQk9IFNUTTMyX0REUl9QTVVf
RVZFTlRfTlVNQkVSKDAsIDU1KSwKKwlQRVJGX1dBV19IQVpBUkQJCQk9IFNUTTMyX0REUl9QTVVf
RVZFTlRfTlVNQkVSKDAsIDU2KSwKKwlQRVJGX1JBTksJCQk9IFNUTTMyX0REUl9QTVVfRVZFTlRf
TlVNQkVSKDAsIDU4KSwKKwlQRVJGX1JFQURfQllQQVNTCQk9IFNUTTMyX0REUl9QTVVfRVZFTlRf
TlVNQkVSKDAsIDU5KSwKKwlQRVJGX0FDVF9CWVBBU1MJCQk9IFNUTTMyX0REUl9QTVVfRVZFTlRf
TlVNQkVSKDAsIDYwKSwKKwlQRVJGX1dJTkRPV19MSU1JVF9SRUFDSEVEX1JECT0gU1RNMzJfRERS
X1BNVV9FVkVOVF9OVU1CRVIoMCwgNjEpLAorCVBFUkZfV0lORE9XX0xJTUlUX1JFQUNIRURfV1IJ
PSBTVE0zMl9ERFJfUE1VX0VWRU5UX05VTUJFUigwLCA2MiksCisJTk9fRVZFTlQJCQk9IFNUTTMy
X0REUl9QTVVfRVZFTlRfTlVNQkVSKDAsIDYzKSwKK307CisKK2VudW0gc3RtMzJfZGRyX3BtdV9t
ZW1vcnlfdHlwZSB7CisJU1RNMzJfRERSX1BNVV9MUEREUjQsCisJU1RNMzJfRERSX1BNVV9MUERE
UjMsCisJU1RNMzJfRERSX1BNVV9ERFI0LAorCVNUTTMyX0REUl9QTVVfRERSMywKK307CisKK3N0
YXRpYyBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqdG9fc3RtMzJfZGRyX3BtdShzdHJ1Y3QgcG11ICpw
KQoreworCXJldHVybiBjb250YWluZXJfb2YocCwgc3RydWN0IHN0bTMyX2Rkcl9wbXUsIHBtdSk7
Cit9CisKK3N0YXRpYyBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqaHJ0aW1lcl90b19zdG0zMl9kZHJf
cG11KHN0cnVjdCBocnRpbWVyICpoKQoreworCXJldHVybiBjb250YWluZXJfb2YoaCwgc3RydWN0
IHN0bTMyX2Rkcl9wbXUsIGhydGltZXIpOworfQorCitzdGF0aWMgdm9pZCBzdG0zMl9kZHJfc3Rh
cnRfY291bnRlcnMoc3RydWN0IHN0bTMyX2Rkcl9wbXUgKnBtdSkKK3sKKwljb25zdCBzdHJ1Y3Qg
c3RtMzJfZGRyX3BtdV9yZWdzcGVjICpyID0gcG11LT5jZmctPnJlZ3M7CisKKwl3cml0ZWxfcmVs
YXhlZChyLT5zdGFydC5tYXNrLCBwbXUtPm1lbWJhc2UgKyByLT5zdGFydC5yZWcpOworfQorCitz
dGF0aWMgdm9pZCBzdG0zMl9kZHJfc3RvcF9jb3VudGVycyhzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAq
cG11KQoreworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZ3NwZWMgKnIgPSBwbXUtPmNm
Zy0+cmVnczsKKworCXdyaXRlbF9yZWxheGVkKHItPnN0b3AubWFzaywgcG11LT5tZW1iYXNlICsg
ci0+c3RvcC5yZWcpOworfQorCitzdGF0aWMgdm9pZCBzdG0zMl9kZHJfY2xlYXJfdGltZV9jb3Vu
dGVyKHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUpCit7CisJY29uc3Qgc3RydWN0IHN0bTMyX2Rk
cl9wbXVfcmVnc3BlYyAqciA9IHBtdS0+Y2ZnLT5yZWdzOworCisJd3JpdGVsX3JlbGF4ZWQoci0+
Y2xlYXJfdGltZS5tYXNrLCBwbXUtPm1lbWJhc2UgKyByLT5jbGVhcl90aW1lLnJlZyk7Cit9CisK
K3N0YXRpYyB2b2lkIHN0bTMyX2Rkcl9jbGVhcl9ldmVudF9jb3VudGVyKHN0cnVjdCBzdG0zMl9k
ZHJfcG11ICpwbXUsIHN0cnVjdCBzdG0zMl9kZHJfY250ICpjb3VudGVyKQoreworCWNvbnN0IHN0
cnVjdCBzdG0zMl9kZHJfcG11X3JlZ3NwZWMgKnIgPSBwbXUtPmNmZy0+cmVnczsKKworCXdyaXRl
bF9yZWxheGVkKHItPmNsZWFyX2NudC5tYXNrICYgQklUKGNvdW50ZXItPmlkeCksIHBtdS0+bWVt
YmFzZSArIHItPmNsZWFyX2NudC5yZWcpOworfQorCitzdGF0aWMgdm9pZCBzdG0zMl9kZHJfY2xl
YXJfY291bnRlcihzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqcG11LCBzdHJ1Y3Qgc3RtMzJfZGRyX2Nu
dCAqY291bnRlcikKK3sKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjICpyID0g
cG11LT5jZmctPnJlZ3M7CisJdTMyIHN0YXR1cyA9IHJlYWRsX3JlbGF4ZWQocG11LT5tZW1iYXNl
ICsgci0+c3RhdHVzLnJlZyk7CisKKwlpZiAoY291bnRlci0+aWR4ID09IHBtdS0+Y2ZnLT50aW1l
X2NudF9pZHgpCisJCXN0bTMyX2Rkcl9jbGVhcl90aW1lX2NvdW50ZXIocG11KTsKKwllbHNlCisJ
CXN0bTMyX2Rkcl9jbGVhcl9ldmVudF9jb3VudGVyKHBtdSwgY291bnRlcik7CisKKwlpZiAoc3Rh
dHVzICYgci0+c3RhdHVzLm1hc2spCisJCWRldl9lcnIocG11LT5kZXYsICJGYWlsZWQgdG8gY2xl
YXIgY291bnRlciAlaSBiZWNhdXNlIHRoZSBQTVUgaXMgYnVzeVxuIiwKKwkJCWNvdW50ZXItPmlk
eCk7Cit9CisKK3N0YXRpYyB2b2lkIHN0bTMyX2Rkcl9jb3VudGVyX2VuYWJsZShzdHJ1Y3Qgc3Rt
MzJfZGRyX3BtdSAqcG11LCBzdHJ1Y3Qgc3RtMzJfZGRyX2NudCAqY291bnRlcikKK3sKKwljb25z
dCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjICpyID0gcG11LT5jZmctPnJlZ3M7CisJdTMy
IHZhbCA9IHJlYWRsX3JlbGF4ZWQocG11LT5tZW1iYXNlICsgci0+ZW5hYmxlLnJlZyk7CisKKwl2
YWwgfD0gQklUKGNvdW50ZXItPmlkeCk7CisJd3JpdGVsX3JlbGF4ZWQodmFsLCBwbXUtPm1lbWJh
c2UgKyByLT5lbmFibGUucmVnKTsKK30KKworc3RhdGljIHZvaWQgc3RtMzJfZGRyX2NvdW50ZXJf
ZGlzYWJsZShzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqcG11LCBzdHJ1Y3Qgc3RtMzJfZGRyX2NudCAq
Y291bnRlcikKK3sKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjICpyID0gcG11
LT5jZmctPnJlZ3M7CisJdTMyIHZhbCA9IHJlYWRsX3JlbGF4ZWQocG11LT5tZW1iYXNlICsgci0+
ZW5hYmxlLnJlZyk7CisKKwl2YWwgJj0gfkJJVChjb3VudGVyLT5pZHgpOworCXdyaXRlbF9yZWxh
eGVkKHZhbCwgcG11LT5tZW1iYXNlICsgci0+ZW5hYmxlLnJlZyk7Cit9CisKK3N0YXRpYyBpbnQg
c3RtMzJfZGRyX3NlbF9ldm50KHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUsIHN0cnVjdCBzdG0z
Ml9kZHJfY250ICpjb3VudGVyKQoreworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZ3Nw
ZWMgKnIgPSBwbXUtPmNmZy0+cmVnczsKKwl1MzIgY250X3NlbF92YWw7CisKKwl1MzIgZ3JvdXBf
dmFsID0gU1RNMzJfRERSX1BNVV9HUk9VUF9WQUxVRShjb3VudGVyLT5ldnQtPmF0dHIuY29uZmln
KTsKKwl1MzIgZXZ0X3ZhbCA9IFNUTTMyX0REUl9QTVVfRVZFTlRfSU5ERVgoY291bnRlci0+ZXZ0
LT5hdHRyLmNvbmZpZyk7CisKKwlpZiAocG11LT5zZWxlY3RlZF9zZXQgIT0gLTEgJiYgcG11LT5z
ZWxlY3RlZF9zZXQgIT0gZ3JvdXBfdmFsKSB7CisJCWRldl9lcnIocG11LT5kZXYsICJTZWxlY3Rl
ZCBldmVudHMgYXJlIGZyb20gZGlmZmVyZW50IHNldFxuIik7CisJCXJldHVybiAtRUlOVkFMOwor
CX0KKwlwbXUtPnNlbGVjdGVkX3NldCA9IGdyb3VwX3ZhbDsKKworCWlmIChwbXUtPmNmZy0+cmVn
cy0+Y2ZnLnJlZykgeworCQljbnRfc2VsX3ZhbCA9IHJlYWRsX3JlbGF4ZWQocG11LT5tZW1iYXNl
ICsgci0+Y2ZnLnJlZyk7CisJCWNudF9zZWxfdmFsICY9IH5DRkdfU0VMX01TSzsKKwkJY250X3Nl
bF92YWwgfD0gKENGR19TRUxfTVNLICYgKGdyb3VwX3ZhbCA8PCBDRkdfU0VMX1NISUZUKSk7CisJ
CXdyaXRlbF9yZWxheGVkKGNudF9zZWxfdmFsLCBwbXUtPm1lbWJhc2UgKyByLT5jZmcucmVnKTsK
KworCQlyZXR1cm4gMDsKKwl9CisKKwkvKiBXZSBhc3N1bWUgY2ZnMCBhbmQgY2ZnMSBhcmUgZmls
bGVkIGluIHRoZSBtYXRjaCBkYXRhICovCisJdTMyIGNudF9pZHggPSBjb3VudGVyLT5pZHg7CisJ
dTMyIGNudF9zZWxfZXZ0X3JlZyA9IHItPmNmZzAucmVnOworCisJaWYgKCEoY250X2lkeCA8IE1Q
Ml9DTlRfU0VMX1BFUl9SRUcpKSB7CisJCWNudF9zZWxfZXZ0X3JlZyA9IHItPmNmZzEucmVnOwor
CQljbnRfaWR4IC09IE1QMl9DTlRfU0VMX1BFUl9SRUc7CisJfQorCisJY250X3NlbF92YWwgPSBy
ZWFkbF9yZWxheGVkKHBtdS0+bWVtYmFzZSArIGNudF9zZWxfZXZ0X3JlZyk7CisJY250X3NlbF92
YWwgJj0gfkdFTk1BU0soOCAqIGNudF9pZHggKyA3LCA4ICogY250X2lkeCk7CisJY250X3NlbF92
YWwgfD0gZXZ0X3ZhbCA8PCAoOCAqIGNudF9pZHgpOworCisJd3JpdGVsX3JlbGF4ZWQoY250X3Nl
bF92YWwsIHBtdS0+bWVtYmFzZSArIGNudF9zZWxfZXZ0X3JlZyk7CisKKwlyZXR1cm4gMDsKK30K
Kworc3RhdGljIHN0cnVjdCBzdG0zMl9kZHJfY250ICpzdG0zMl9kZHJfcG11X2dldF9ldmVudF9j
b3VudGVyX21wMShzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqcG11LAorCQkJCQkJCQkgc3RydWN0IHBl
cmZfZXZlbnQgKmV2ZW50KQoreworCXUzMiBjb25maWcgPSBldmVudC0+YXR0ci5jb25maWc7CisJ
dTMyIGV2ZW50X2lkeCA9IFNUTTMyX0REUl9QTVVfRVZFTlRfSU5ERVgoY29uZmlnKTsKKwlzdHJ1
Y3Qgc3RtMzJfZGRyX2NudCAqY250OworCisJY250ID0ga3phbGxvYyhzaXplb2YoKmNudCksIEdG
UF9LRVJORUwpOworCWlmICghY250KQorCQlyZXR1cm4gRVJSX1BUUigtRU5PTUVNKTsKKworCWNu
dC0+ZXZ0ID0gZXZlbnQ7CisJY250LT5pZHggPSBldmVudF9pZHg7CisJZXZlbnQtPnBtdV9wcml2
YXRlID0gY250OworCWxpc3RfYWRkKCZjbnQtPmNudF9saXN0LCAmcG11LT5jb3VudGVyc1tldmVu
dF9pZHhdKTsKKworCXJldHVybiBjbnQ7Cit9CisKK3N0YXRpYyBzdHJ1Y3Qgc3RtMzJfZGRyX2Nu
dCAqc3RtMzJfZGRyX3BtdV9nZXRfZXZlbnRfY291bnRlcl9tcDIoc3RydWN0IHN0bTMyX2Rkcl9w
bXUgKnBtdSwKKwkJCQkJCQkJIHN0cnVjdCBwZXJmX2V2ZW50ICpldmVudCkKK3sKKwlzdHJ1Y3Qg
c3RtMzJfZGRyX2NudCAqY250OworCWludCBpZHggPSAtMTsKKworCS8qIExvb3Agb24gYWxsIHRo
ZSBjb3VudGVycyBleGNlcHQgVElNRV9DTlRfSURYICovCisJZm9yIChpbnQgaSA9IDA7IGkgPCBw
bXUtPmNmZy0+ZXZ0X2NvdW50ZXJzX25iOyBpKyspIHsKKwkJdTY0IGNvbmZpZzsKKworCQlpZiAo
bGlzdF9lbXB0eSgmcG11LT5jb3VudGVyc1tpXSkpIHsKKwkJCWlkeCA9IGk7CisJCQljb250aW51
ZTsKKwkJfQorCQljb25maWcgPSBsaXN0X2ZpcnN0X2VudHJ5KCZwbXUtPmNvdW50ZXJzW2ldLCBz
dHJ1Y3Qgc3RtMzJfZGRyX2NudCwKKwkJCQkJICBjbnRfbGlzdCktPmV2dC0+YXR0ci5jb25maWc7
CisJCWlmIChjb25maWcgPT0gZXZlbnQtPmF0dHIuY29uZmlnKSB7CisJCQlpZHggPSBpOworCQkJ
YnJlYWs7CisJCX0KKwl9CisKKwlpZiAoaWR4ID09IC0xKQorCQlyZXR1cm4gRVJSX1BUUigtRU5P
RU5UKTsKKworCWNudCA9IGt6YWxsb2Moc2l6ZW9mKCpjbnQpLCBHRlBfS0VSTkVMKTsKKwlpZiAo
IWNudCkKKwkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CisKKwljbnQtPmV2dCA9IGV2ZW50Owor
CWNudC0+aWR4ID0gaWR4OworCWV2ZW50LT5wbXVfcHJpdmF0ZSA9IGNudDsKKworCWxpc3RfYWRk
KCZjbnQtPmNudF9saXN0LCAmcG11LT5jb3VudGVyc1tpZHhdKTsKKworCXJldHVybiBjbnQ7Cit9
CisKK3N0YXRpYyBpbmxpbmUgc3RydWN0IHN0bTMyX2Rkcl9jbnQgKnN0bTMyX2dldF9ldmVudF9j
b3VudGVyKHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUsCisJCQkJCQkJICAgIHN0cnVjdCBwZXJm
X2V2ZW50ICpldmVudCkKK3sKKwlyZXR1cm4gcG11LT5jZmctPmdldF9jb3VudGVyKHBtdSwgZXZl
bnQpOworfQorCitzdGF0aWMgaW50IHN0bTMyX2Rkcl9wbXVfZ2V0X2NvdW50ZXIoc3RydWN0IHN0
bTMyX2Rkcl9wbXUgKnBtdSwgc3RydWN0IHBlcmZfZXZlbnQgKmV2ZW50KQoreworCXUzMiB0aW1l
X2NudF9pZHggPSBwbXUtPmNmZy0+dGltZV9jbnRfaWR4OworCXUzMiBjb25maWcgPSBldmVudC0+
YXR0ci5jb25maWc7CisJc3RydWN0IHN0bTMyX2Rkcl9jbnQgKmNudDsKKworCXBtdS0+c2VsZWN0
ZWRfc2V0ID0gU1RNMzJfRERSX1BNVV9HUk9VUF9WQUxVRShjb25maWcpOworCisJaWYgKGNvbmZp
ZyA9PSBUSU1FX0NOVCkgeworCQljbnQgPSBremFsbG9jKHNpemVvZigqY250KSwgR0ZQX0tFUk5F
TCk7CisJCWlmICghY250KQorCQkJcmV0dXJuIC1FTk9NRU07CisKKwkJY250LT5ldnQgPSBldmVu
dDsKKwkJY250LT5pZHggPSB0aW1lX2NudF9pZHg7CisJCWV2ZW50LT5wbXVfcHJpdmF0ZSA9IGNu
dDsKKwkJbGlzdF9hZGQoJmNudC0+Y250X2xpc3QsICZwbXUtPmNvdW50ZXJzW3RpbWVfY250X2lk
eF0pOworCisJCXJldHVybiAwOworCX0KKworCWNudCA9IHN0bTMyX2dldF9ldmVudF9jb3VudGVy
KHBtdSwgZXZlbnQpOworCWlmIChJU19FUlIoY250KSkKKwkJcmV0dXJuIFBUUl9FUlIoY250KTsK
KworCWlmIChsaXN0X2NvdW50X25vZGVzKCZjbnQtPmNudF9saXN0KSA9PSAxKSB7CisJCXN0bTMy
X2Rkcl9zdG9wX2NvdW50ZXJzKHBtdSk7CisJCXN0bTMyX2Rkcl9zZWxfZXZudChwbXUsIGNudCk7
CisJCXN0bTMyX2Rkcl9jb3VudGVyX2VuYWJsZShwbXUsIGNudCk7CisJCXN0bTMyX2Rkcl9zdGFy
dF9jb3VudGVycyhwbXUpOworCX0KKworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCBzdG0z
Ml9kZHJfcG11X2ZyZWVfY291bnRlcihzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqcG11LAorCQkJCSAg
ICAgICBzdHJ1Y3Qgc3RtMzJfZGRyX2NudCAqY291bnRlcikKK3sKKwlzaXplX3QgY291bnQgPSBs
aXN0X2NvdW50X25vZGVzKCZjb3VudGVyLT5jbnRfbGlzdCk7CisKKwlpZiAoY291bnRlci0+ZXZ0
LT5hdHRyLmNvbmZpZyAhPSBUSU1FX0NOVCAmJiBjb3VudCA9PSAxKQorCQlzdG0zMl9kZHJfY291
bnRlcl9kaXNhYmxlKHBtdSwgY291bnRlcik7CisKKwlsaXN0X2RlbCgmY291bnRlci0+Y250X2xp
c3QpOworCWtmcmVlKGNvdW50ZXIpOworfQorCitzdGF0aWMgdm9pZCBzdG0zMl9kZHJfcG11X2V2
ZW50X3VwZGF0ZV9saXN0KHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUsIHN0cnVjdCBsaXN0X2hl
YWQgKmxpc3QpCit7CisJc3RydWN0IHN0bTMyX2Rkcl9jbnQgKmNvdW50ZXIgPSBsaXN0X2ZpcnN0
X2VudHJ5KGxpc3QsIHN0cnVjdCBzdG0zMl9kZHJfY250LCBjbnRfbGlzdCk7CisJY29uc3Qgc3Ry
dWN0IHN0bTMyX2Rkcl9wbXVfcmVnc3BlYyAqciA9IHBtdS0+Y2ZnLT5yZWdzOworCXUzMiB2YWw7
CisKKwlpZiAoY291bnRlci0+ZXZ0LT5hdHRyLmNvbmZpZyAhPSBUSU1FX0NOVCkKKwkJdmFsID0g
cmVhZGxfcmVsYXhlZChwbXUtPm1lbWJhc2UgKyByLT5jb3VudGVyX2V2dFtjb3VudGVyLT5pZHhd
LnJlZyk7CisJZWxzZQorCQl2YWwgPSByZWFkbF9yZWxheGVkKHBtdS0+bWVtYmFzZSArIHItPmNv
dW50ZXJfdGltZS5yZWcpOworCisJc3RtMzJfZGRyX2NsZWFyX2NvdW50ZXIocG11LCBjb3VudGVy
KTsKKworCWxpc3RfZm9yX2VhY2hfZW50cnkoY291bnRlciwgbGlzdCwgY250X2xpc3QpCisJCWxv
Y2FsNjRfYWRkKHZhbCwgJmNvdW50ZXItPmV2dC0+Y291bnQpOworfQorCitzdGF0aWMgdm9pZCBz
dG0zMl9kZHJfcG11X2V2ZW50X3JlYWQoc3RydWN0IHBlcmZfZXZlbnQgKmV2ZW50KQoreworCXN0
cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUgPSB0b19zdG0zMl9kZHJfcG11KGV2ZW50LT5wbXUpOwor
CXN0cnVjdCBzdG0zMl9kZHJfY250ICpjbnQgPSBldmVudC0+cG11X3ByaXZhdGU7CisKKwlocnRp
bWVyX3N0YXJ0KCZwbXUtPmhydGltZXIsIHBtdS0+cG9sbF9wZXJpb2QsIEhSVElNRVJfTU9ERV9S
RUxfUElOTkVEKTsKKworCXN0bTMyX2Rkcl9zdG9wX2NvdW50ZXJzKHBtdSk7CisKKwlzdG0zMl9k
ZHJfcG11X2V2ZW50X3VwZGF0ZV9saXN0KHBtdSwgJnBtdS0+Y291bnRlcnNbY250LT5pZHhdKTsK
KworCXN0bTMyX2Rkcl9zdGFydF9jb3VudGVycyhwbXUpOworfQorCitzdGF0aWMgdm9pZCBzdG0z
Ml9kZHJfcG11X2V2ZW50X3N0YXJ0KHN0cnVjdCBwZXJmX2V2ZW50ICpldmVudCwgaW50IGZsYWdz
KQoreworCXN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUgPSB0b19zdG0zMl9kZHJfcG11KGV2ZW50
LT5wbXUpOworCXN0cnVjdCBzdG0zMl9kZHJfY250ICpjb3VudGVyID0gZXZlbnQtPnBtdV9wcml2
YXRlOworCXN0cnVjdCBod19wZXJmX2V2ZW50ICpodyA9ICZldmVudC0+aHc7CisKKwlpZiAoV0FS
Tl9PTl9PTkNFKCEoaHctPnN0YXRlICYgUEVSRl9IRVNfU1RPUFBFRCkpKQorCQlyZXR1cm47CisK
KwlpZiAoZmxhZ3MgJiBQRVJGX0VGX1JFTE9BRCkKKwkJV0FSTl9PTl9PTkNFKCEoaHctPnN0YXRl
ICYgUEVSRl9IRVNfVVBUT0RBVEUpKTsKKworCXN0bTMyX2Rkcl9zdG9wX2NvdW50ZXJzKHBtdSk7
CisKKwlpZiAobGlzdF9jb3VudF9ub2RlcygmY291bnRlci0+Y250X2xpc3QpID09IDEpCisJCXN0
bTMyX2Rkcl9jbGVhcl9jb3VudGVyKHBtdSwgY291bnRlcik7CisJZWxzZQorCQlzdG0zMl9kZHJf
cG11X2V2ZW50X3VwZGF0ZV9saXN0KHBtdSwgJnBtdS0+Y291bnRlcnNbY291bnRlci0+aWR4XSk7
CisKKwlzdG0zMl9kZHJfc3RhcnRfY291bnRlcnMocG11KTsKKwlsb2NhbDY0X3NldCgmaHctPnBy
ZXZfY291bnQsIDApOworCWh3LT5zdGF0ZSA9IDA7Cit9CisKK3N0YXRpYyB2b2lkIHN0bTMyX2Rk
cl9wbXVfZXZlbnRfc3RvcChzdHJ1Y3QgcGVyZl9ldmVudCAqZXZlbnQsIGludCBmbGFncykKK3sK
KwlzdHJ1Y3QgaHdfcGVyZl9ldmVudCAqaHcgPSAmZXZlbnQtPmh3OworCisJaWYgKFdBUk5fT05f
T05DRShody0+c3RhdGUgJiBQRVJGX0hFU19TVE9QUEVEKSkKKwkJcmV0dXJuOworCisJaHctPnN0
YXRlIHw9IFBFUkZfSEVTX1NUT1BQRUQ7CisKKwlpZiAoZmxhZ3MgJiBQRVJGX0VGX1VQREFURSkg
eworCQlzdG0zMl9kZHJfcG11X2V2ZW50X3JlYWQoZXZlbnQpOworCQlody0+c3RhdGUgfD0gUEVS
Rl9IRVNfVVBUT0RBVEU7CisJfQorfQorCitzdGF0aWMgaW50IHN0bTMyX2Rkcl9wbXVfZXZlbnRf
YWRkKHN0cnVjdCBwZXJmX2V2ZW50ICpldmVudCwgaW50IGZsYWdzKQoreworCXN0cnVjdCBzdG0z
Ml9kZHJfcG11ICpwbXUgPSB0b19zdG0zMl9kZHJfcG11KGV2ZW50LT5wbXUpOworCWludCByZXQ7
CisKKwljbGtfZW5hYmxlKHBtdS0+Y2xrKTsKKworCWhydGltZXJfc3RhcnQoJnBtdS0+aHJ0aW1l
ciwgcG11LT5wb2xsX3BlcmlvZCwgSFJUSU1FUl9NT0RFX1JFTF9QSU5ORUQpOworCisJcmV0ID0g
c3RtMzJfZGRyX3BtdV9nZXRfY291bnRlcihwbXUsIGV2ZW50KTsKKwlpZiAocmV0KQorCQlyZXR1
cm4gcmV0OworCisJZXZlbnQtPmh3LnN0YXRlID0gUEVSRl9IRVNfU1RPUFBFRCB8IFBFUkZfSEVT
X1VQVE9EQVRFOworCisJaWYgKGZsYWdzICYgUEVSRl9FRl9TVEFSVCkKKwkJc3RtMzJfZGRyX3Bt
dV9ldmVudF9zdGFydChldmVudCwgZmxhZ3MpOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2
b2lkIHN0bTMyX2Rkcl9wbXVfZXZlbnRfZGVsKHN0cnVjdCBwZXJmX2V2ZW50ICpldmVudCwgaW50
IGZsYWdzKQoreworCXN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUgPSB0b19zdG0zMl9kZHJfcG11
KGV2ZW50LT5wbXUpOworCXN0cnVjdCBzdG0zMl9kZHJfY250ICpjb3VudGVyID0gZXZlbnQtPnBt
dV9wcml2YXRlOworCWJvb2wgZXZlbnRzID0gdHJ1ZTsKKworCXN0bTMyX2Rkcl9wbXVfZXZlbnRf
c3RvcChldmVudCwgUEVSRl9FRl9VUERBVEUpOworCisJc3RtMzJfZGRyX3BtdV9mcmVlX2NvdW50
ZXIocG11LCBjb3VudGVyKTsKKworCWZvciAoaW50IGkgPSAwOyBpIDwgcG11LT5jZmctPmNvdW50
ZXJzX25iOyBpKyspIHsKKwkJZXZlbnRzID0gIWxpc3RfZW1wdHkoJnBtdS0+Y291bnRlcnNbaV0p
OworCQlpZiAoZXZlbnRzKSAvKiBJZiB0aGVyZSBpcyBhY3Rpdml0eSBub3RoaW5nIHRvIGRvICov
CisJCQlyZXR1cm47CisJfQorCisJaHJ0aW1lcl9jYW5jZWwoJnBtdS0+aHJ0aW1lcik7CisJc3Rt
MzJfZGRyX3N0b3BfY291bnRlcnMocG11KTsKKworCXBtdS0+c2VsZWN0ZWRfc2V0ID0gLTE7CisK
KwljbGtfZGlzYWJsZShwbXUtPmNsayk7Cit9CisKK3N0YXRpYyBpbnQgc3RtMzJfZGRyX3BtdV9l
dmVudF9pbml0KHN0cnVjdCBwZXJmX2V2ZW50ICpldmVudCkKK3sKKwlpZiAoZXZlbnQtPmF0dHIu
dHlwZSAhPSBldmVudC0+cG11LT50eXBlKQorCQlyZXR1cm4gLUVOT0VOVDsKKworCWlmIChpc19z
YW1wbGluZ19ldmVudChldmVudCkgfHwgZXZlbnQtPmF0dGFjaF9zdGF0ZSAmIFBFUkZfQVRUQUNI
X1RBU0spCisJCXJldHVybiAtRUlOVkFMOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBlbnVt
IGhydGltZXJfcmVzdGFydCBzdG0zMl9kZHJfcG11X3BvbGwoc3RydWN0IGhydGltZXIgKmhydGlt
ZXIpCit7CisJc3RydWN0IHN0bTMyX2Rkcl9wbXUgKnBtdSA9IGhydGltZXJfdG9fc3RtMzJfZGRy
X3BtdShocnRpbWVyKTsKKworCXN0bTMyX2Rkcl9zdG9wX2NvdW50ZXJzKHBtdSk7CisKKwlmb3Ig
KGludCBpID0gMDsgaSA8IE1QMl9DTlRfTkI7IGkrKykKKwkJaWYgKCFsaXN0X2VtcHR5KCZwbXUt
PmNvdW50ZXJzW2ldKSkKKwkJCXN0bTMyX2Rkcl9wbXVfZXZlbnRfdXBkYXRlX2xpc3QocG11LCAm
cG11LT5jb3VudGVyc1tpXSk7CisKKwlpZiAobGlzdF9lbXB0eSgmcG11LT5jb3VudGVyc1twbXUt
PmNmZy0+dGltZV9jbnRfaWR4XSkpCisJCXN0bTMyX2Rkcl9jbGVhcl90aW1lX2NvdW50ZXIocG11
KTsKKworCXN0bTMyX2Rkcl9zdGFydF9jb3VudGVycyhwbXUpOworCisJaHJ0aW1lcl9mb3J3YXJk
X25vdyhocnRpbWVyLCBwbXUtPnBvbGxfcGVyaW9kKTsKKworCXJldHVybiBIUlRJTUVSX1JFU1RB
UlQ7Cit9CisKK3N0YXRpYyBzc2l6ZV90IHN0bTMyX2Rkcl9wbXVfc3lzZnNfc2hvdyhzdHJ1Y3Qg
ZGV2aWNlICpkZXYsIHN0cnVjdCBkZXZpY2VfYXR0cmlidXRlICphdHRyLAorCQkJCQljaGFyICpi
dWYpCit7CisJc3RydWN0IHBlcmZfcG11X2V2ZW50c19hdHRyICpwbXVfYXR0cjsKKworCXBtdV9h
dHRyID0gY29udGFpbmVyX29mKGF0dHIsIHN0cnVjdCBwZXJmX3BtdV9ldmVudHNfYXR0ciwgYXR0
cik7CisKKwlyZXR1cm4gc3lzZnNfZW1pdChidWYsICJldmVudD0weCUwMmxseFxuIiwgcG11X2F0
dHItPmlkKTsKK30KKworc3RhdGljIGludCBzdG0zMl9kZHJfcG11X2dldF9tZW1vcnlfdHlwZShz
dHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqcG11KQoreworCXN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBk
ZXYgPSB0b19wbGF0Zm9ybV9kZXZpY2UocG11LT5kZXYpOworCXN0cnVjdCBkZXZpY2Vfbm9kZSAq
bWVtY2hhbjsKKworCW1lbWNoYW4gPSBvZl9wYXJzZV9waGFuZGxlKHBkZXYtPmRldi5vZl9ub2Rl
LCAibWVtb3J5LWNoYW5uZWwiLCAwKTsKKwlpZiAoIW1lbWNoYW4pCisJCXJldHVybiBkZXZfZXJy
X3Byb2JlKCZwZGV2LT5kZXYsIC1FSU5WQUwsCisJCQkJICAgICAiTWlzc2luZyBkZXZpY2UtdHJl
ZSBwcm9wZXJ0eSAnbWVtb3J5LWNoYW5uZWwnXG4iKTsKKworCWlmIChvZl9kZXZpY2VfaXNfY29t
cGF0aWJsZShtZW1jaGFuLCAiamVkZWMsbHBkZHI0LWNoYW5uZWwiKSkKKwkJcG11LT5kcmFtX3R5
cGUgPSBTVE0zMl9ERFJfUE1VX0xQRERSNDsKKwllbHNlIGlmIChvZl9kZXZpY2VfaXNfY29tcGF0
aWJsZShtZW1jaGFuLCAiamVkZWMsbHBkZHIzLWNoYW5uZWwiKSkKKwkJcG11LT5kcmFtX3R5cGUg
PSBTVE0zMl9ERFJfUE1VX0xQRERSMzsKKwllbHNlIGlmIChvZl9kZXZpY2VfaXNfY29tcGF0aWJs
ZShtZW1jaGFuLCAiamVkZWMsZGRyNC1jaGFubmVsIikpCisJCXBtdS0+ZHJhbV90eXBlID0gU1RN
MzJfRERSX1BNVV9ERFI0OworCWVsc2UgaWYgKG9mX2RldmljZV9pc19jb21wYXRpYmxlKG1lbWNo
YW4sICJqZWRlYyxkZHIzLWNoYW5uZWwiKSkKKwkJcG11LT5kcmFtX3R5cGUgPSBTVE0zMl9ERFJf
UE1VX0REUjM7CisJZWxzZQorCQlyZXR1cm4gZGV2X2Vycl9wcm9iZSgmcGRldi0+ZGV2LCAtRUlO
VkFMLCAiVW5zdXBwb3J0ZWQgbWVtb3J5IGNoYW5uZWwgdHlwZVxuIik7CisKKwlpZiAocG11LT5k
cmFtX3R5cGUgPT0gU1RNMzJfRERSX1BNVV9MUEREUjMpCisJCWRldl93YXJuKCZwZGV2LT5kZXYs
CisJCQkgIkxQRERSMyBzdXBwb3J0ZWQgYnkgRERSUEVSRk0gYnV0IG5vdCBzdXBwb3J0ZWQgYnkg
RERSQ1RSTC9ERFJQSFlcbiIpOworCisJcmV0dXJuIDA7Cit9CisKKyNkZWZpbmUgU1RNMzJfRERS
X1BNVV9FVkVOVF9BVFRSKF9uYW1lLCBfaWQpCQkJXAorCVBNVV9FVkVOVF9BVFRSX0lEKF9uYW1l
LCBzdG0zMl9kZHJfcG11X3N5c2ZzX3Nob3csIF9pZCkKKworc3RhdGljIHN0cnVjdCBhdHRyaWJ1
dGUgKnN0bTMyX2Rkcl9wbXVfZXZlbnRzX2F0dHJzX21wW10gPSB7CisJU1RNMzJfRERSX1BNVV9F
VkVOVF9BVFRSKHBlcmZfb3BfaXNfcmQsIFBFUkZfT1BfSVNfUkQpLAorCVNUTTMyX0REUl9QTVVf
RVZFTlRfQVRUUihwZXJmX29wX2lzX3dyLCBQRVJGX09QX0lTX1dSKSwKKwlTVE0zMl9ERFJfUE1V
X0VWRU5UX0FUVFIocGVyZl9vcF9pc19hY3RpdmF0ZSwgUEVSRl9PUF9JU19BQ1RJVkFURSksCisJ
U1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKGN0bF9pZGxlLCBDVExfSURMRSksCisJU1RNMzJfRERS
X1BNVV9FVkVOVF9BVFRSKHBlcmZfaHByX3JlcV93aXRoX25vX2NyZWRpdCwgUEVSRl9IUFJfUkVR
X1dJVEhfTk9fQ1JFRElUKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9scHJfcmVx
X3dpdGhfbm9fY3JlZGl0LCBQRVJGX0xQUl9SRVFfV0lUSF9OT19DUkVESVQpLAorCVNUTTMyX0RE
Ul9QTVVfRVZFTlRfQVRUUihjYWN0aXZlX2RkcmMsIENBQ1RJVkVfRERSQyksCisJU1RNMzJfRERS
X1BNVV9FVkVOVF9BVFRSKHBlcmZfb3BfaXNfZW50ZXJfcG93ZXJkb3duLCBQRVJGX09QX0lTX0VO
VEVSX1BPV0VSRE9XTiksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfb3BfaXNfcmVm
cmVzaCwgUEVSRl9PUF9JU19SRUZSRVNIKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVy
Zl9zZWxmcmVzaF9tb2RlLCBQRVJGX1NFTEZSRVNIX01PREUpLAorCVNUTTMyX0REUl9QTVVfRVZF
TlRfQVRUUihkZmlfbHBfcmVxLCBERklfTFBfUkVRKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FU
VFIocGVyZl9ocHJfeGFjdF93aGVuX2NyaXRpY2FsLCBQRVJGX0hQUl9YQUNUX1dIRU5fQ1JJVElD
QUwpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX2xwcl94YWN0X3doZW5fY3JpdGlj
YWwsIFBFUkZfTFBSX1hBQ1RfV0hFTl9DUklUSUNBTCksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9B
VFRSKHBlcmZfd3JfeGFjdF93aGVuX2NyaXRpY2FsLCBQRVJGX1dSX1hBQ1RfV0hFTl9DUklUSUNB
TCksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKGRmaV9scF9yZXFfY3B5LCBERklfTFBfUkVR
KSwgIC8qIFN1ZmZpeGVkICdfY3B5JyB0byBhbGxvdyB0aGUKKwkJCQkJCQkJKiBjaG9pY2UgYmV0
d2VlbiBzZXRzIDIgYW5kIDMKKwkJCQkJCQkJKi8KKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIo
dGltZV9jbnQsIFRJTUVfQ05UKSwKKwlOVUxMCit9OworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0
ZV9ncm91cCBzdG0zMl9kZHJfcG11X2V2ZW50c19hdHRyc19ncm91cF9tcCA9IHsKKwkubmFtZSA9
ICJldmVudHMiLAorCS5hdHRycyA9IHN0bTMyX2Rkcl9wbXVfZXZlbnRzX2F0dHJzX21wLAorfTsK
Kworc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGUgKnN0bTMyX2Rkcl9wbXVfZXZlbnRzX2F0dHJzX21w
MltdID0geworCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihkZmlfaXNfYWN0LCBERklfSVNfQUNU
KSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIoZGZpX2lzX3ByZXBiLCBERklfSVNfUFJFUEIp
LAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihkZmlfaXNfcHJlYWIsIERGSV9JU19QUkVBQiks
CisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKGRmaV9pc19yZCwgREZJX0lTX1JEKSwKKwlTVE0z
Ml9ERFJfUE1VX0VWRU5UX0FUVFIoZGZpX2lzX3JkYSwgREZJX0lTX1JEQSksCisJU1RNMzJfRERS
X1BNVV9FVkVOVF9BVFRSKGRmaV9pc193ciwgREZJX0lTX1dSKSwKKwlTVE0zMl9ERFJfUE1VX0VW
RU5UX0FUVFIoZGZpX2lzX3dyYSwgREZJX0lTX1dSQSksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9B
VFRSKGRmaV9pc19td3IsIERGSV9JU19NV1IpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihk
ZmlfaXNfbXdyYSwgREZJX0lTX01XUkEpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihkZmlf
aXNfbXJ3LCBERklfSVNfTVJXKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIoZGZpX2lzX21y
ciwgREZJX0lTX01SUiksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKGRmaV9pc19yZWZwYiwg
REZJX0lTX1JFRlBCKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIoZGZpX2lzX3JlZmFiLCBE
RklfSVNfUkVGQUIpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihkZmlfaXNfbXBjLCBERklf
SVNfTVBDKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9vcF9pc19hY3QsIFBFUkZf
T1BfSVNfQUNUKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9vcF9pc19yZCwgUEVS
Rl9PUF9JU19SRCksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfb3BfaXNfd3IsIFBF
UkZfT1BfSVNfV1IpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX29wX2lzX213ciwg
UEVSRl9PUF9JU19NV1IpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX29wX2lzX3Jl
ZiwgUEVSRl9PUF9JU19SRUYpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX29wX2lz
X2NyaXRfcmVmLCBQRVJGX09QX0lTX0NSSVRfUkVGKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FU
VFIocGVyZl9vcF9pc19zcGVjX3JlZiwgUEVSRl9PUF9JU19TUEVDX1JFRiksCisJU1RNMzJfRERS
X1BNVV9FVkVOVF9BVFRSKHBlcmZfb3BfaXNfenFjYWwsIFBFUkZfT1BfSVNfWlFDQUwpLAorCVNU
TTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX29wX2lzX2VudGVyX3Bvd2RuLCBQRVJGX09QX0lT
X0VOVEVSX1BPV0ROKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9vcF9pc19lbnRl
cl9zZWxmcmVmLCBQRVJGX09QX0lTX0VOVEVSX1NFTEZSRUYpLAorCVNUTTMyX0REUl9QTVVfRVZF
TlRfQVRUUihwZXJmX29wX2lzX3ByZSwgUEVSRl9PUF9JU19QUkUpLAorCVNUTTMyX0REUl9QTVVf
RVZFTlRfQVRUUihwZXJmX29wX2lzX3ByZV9mb3JfcmR3ciwgUEVSRl9PUF9JU19QUkVfRk9SX1JE
V1IpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX29wX2lzX3ByZV9mb3Jfb3RoZXJz
LCBQRVJGX09QX0lTX1BSRV9GT1JfT1RIRVJTKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIo
cGVyZl9vcF9pc19yZF9hY3RpdmF0ZSwgUEVSRl9PUF9JU19SRF9BQ1RJVkFURSksCisJU1RNMzJf
RERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfaHByX3JlcV93aXRoX25vY3JlZGl0LCBQRVJGX0hQUl9S
RVFfV0lUSF9OT0NSRURJVCksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfbHByX3Jl
cV93aXRoX25vY3JlZGl0LCBQRVJGX0xQUl9SRVFfV0lUSF9OT0NSRURJVCksCisJU1RNMzJfRERS
X1BNVV9FVkVOVF9BVFRSKHBlcmZfaHByX3hhY3Rfd2hlbl9jcml0aWNhbCwgUEVSRl9IUFJfWEFD
VF9XSEVOX0NSSVRJQ0FMKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9scHJfeGFj
dF93aGVuX2NyaXRpY2FsLCBQRVJGX0xQUl9YQUNUX1dIRU5fQ1JJVElDQUwpLAorCVNUTTMyX0RE
Ul9QTVVfRVZFTlRfQVRUUihwZXJmX3dyX3hhY3Rfd2hlbl9jcml0aWNhbCwgUEVSRl9XUl9YQUNU
X1dIRU5fQ1JJVElDQUwpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX3Jkd3JfdHJh
bnNpdGlvbnMsIFBFUkZfUkRXUl9UUkFOU0lUSU9OUyksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9B
VFRSKHBlcmZfd2FyX2hhemFyZCwgUEVSRl9XQVJfSEFaQVJEKSwKKwlTVE0zMl9ERFJfUE1VX0VW
RU5UX0FUVFIocGVyZl9yYXdfaGF6YXJkLCBQRVJGX1JBV19IQVpBUkQpLAorCVNUTTMyX0REUl9Q
TVVfRVZFTlRfQVRUUihwZXJmX3dhd19oYXphcmQsIFBFUkZfV0FXX0hBWkFSRCksCisJU1RNMzJf
RERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfcmFuaywgUEVSRl9SQU5LKSwKKwlTVE0zMl9ERFJfUE1V
X0VWRU5UX0FUVFIocGVyZl9yZWFkX2J5cGFzcywgUEVSRl9SRUFEX0JZUEFTUyksCisJU1RNMzJf
RERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfYWN0X2J5cGFzcywgUEVSRl9BQ1RfQllQQVNTKSwKKwlT
VE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl93aW5kb3dfbGltaXRfcmVhY2hlZF9yZCwgUEVS
Rl9XSU5ET1dfTElNSVRfUkVBQ0hFRF9SRCksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBl
cmZfd2luZG93X2xpbWl0X3JlYWNoZWRfd3IsIFBFUkZfV0lORE9XX0xJTUlUX1JFQUNIRURfV1Ip
LAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUih0aW1lX2NudCwgVElNRV9DTlQpLAorCU5VTEwK
K307CisKK3N0YXRpYyBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwIHN0bTMyX2Rkcl9wbXVfZXZlbnRz
X2F0dHJzX2dyb3VwX21wMiA9IHsKKwkubmFtZSA9ICJldmVudHMiLAorCS5hdHRycyA9IHN0bTMy
X2Rkcl9wbXVfZXZlbnRzX2F0dHJzX21wMiwKK307CisKK1BNVV9GT1JNQVRfQVRUUihldmVudCwg
ImNvbmZpZzowLTgiKTsKKworc3RhdGljIHN0cnVjdCBhdHRyaWJ1dGUgKnN0bTMyX2Rkcl9wbXVf
Zm9ybWF0X2F0dHJzW10gPSB7CisJJmZvcm1hdF9hdHRyX2V2ZW50LmF0dHIsCisJTlVMTAorfTsK
Kworc3RhdGljIGNvbnN0IHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgc3RtMzJfZGRyX3BtdV9mb3Jt
YXRfYXR0cl9ncm91cCA9IHsKKwkubmFtZSA9ICJmb3JtYXQiLAorCS5hdHRycyA9IHN0bTMyX2Rk
cl9wbXVfZm9ybWF0X2F0dHJzLAorfTsKKworc3RhdGljIGNvbnN0IHN0cnVjdCBhdHRyaWJ1dGVf
Z3JvdXAgKnN0bTMyX2Rkcl9wbXVfYXR0cl9ncm91cHNfbXAxW10gPSB7CisJJnN0bTMyX2Rkcl9w
bXVfZXZlbnRzX2F0dHJzX2dyb3VwX21wLAorCSZzdG0zMl9kZHJfcG11X2Zvcm1hdF9hdHRyX2dy
b3VwLAorCU5VTEwKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgYXR0cmlidXRlX2dyb3VwICpz
dG0zMl9kZHJfcG11X2F0dHJfZ3JvdXBzX21wMltdID0geworCSZzdG0zMl9kZHJfcG11X2V2ZW50
c19hdHRyc19ncm91cF9tcDIsCisJJnN0bTMyX2Rkcl9wbXVfZm9ybWF0X2F0dHJfZ3JvdXAsCisJ
TlVMTAorfTsKKworc3RhdGljIGludCBzdG0zMl9kZHJfcG11X2RldmljZV9wcm9iZShzdHJ1Y3Qg
cGxhdGZvcm1fZGV2aWNlICpwZGV2KQoreworCXN0cnVjdCBzdG0zMl9maXJld2FsbCBmaXJld2Fs
bDsKKwlzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqcG11OworCXN0cnVjdCByZXNldF9jb250cm9sICpy
c3Q7CisJc3RydWN0IHJlc291cmNlICpyZXM7CisJaW50IHJldDsKKworCXBtdSA9IGRldm1fa3ph
bGxvYygmcGRldi0+ZGV2LCBzdHJ1Y3Rfc2l6ZShwbXUsIGNvdW50ZXJzLCBNUDJfQ05UX05CKSwg
R0ZQX0tFUk5FTCk7CisJaWYgKCFwbXUpCisJCXJldHVybiAtRU5PTUVNOworCisJcGxhdGZvcm1f
c2V0X2RydmRhdGEocGRldiwgcG11KTsKKwlwbXUtPmRldiA9ICZwZGV2LT5kZXY7CisKKwlwbXUt
PmNmZyA9IGRldmljZV9nZXRfbWF0Y2hfZGF0YShwbXUtPmRldik7CisKKwlwbXUtPm1lbWJhc2Ug
PSBkZXZtX3BsYXRmb3JtX2dldF9hbmRfaW9yZW1hcF9yZXNvdXJjZShwZGV2LCAwLCAmcmVzKTsK
KwlpZiAoSVNfRVJSKHBtdS0+bWVtYmFzZSkpCisJCXJldHVybiBQVFJfRVJSKHBtdS0+bWVtYmFz
ZSk7CisKKwlpZiAob2ZfcHJvcGVydHlfcHJlc2VudChwbXUtPmRldi0+b2Zfbm9kZSwgImFjY2Vz
cy1jb250cm9sbGVycyIpKSB7CisJCXJldCA9IHN0bTMyX2ZpcmV3YWxsX2dldF9maXJld2FsbChw
bXUtPmRldi0+b2Zfbm9kZSwgJmZpcmV3YWxsLCAxKTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiBk
ZXZfZXJyX3Byb2JlKHBtdS0+ZGV2LCByZXQsICJGYWlsZWQgdG8gZ2V0IGZpcmV3YWxsXG4iKTsK
KwkJcmV0ID0gc3RtMzJfZmlyZXdhbGxfZ3JhbnRfYWNjZXNzX2J5X2lkKCZmaXJld2FsbCwgZmly
ZXdhbGwuZmlyZXdhbGxfaWQpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIGRldl9lcnJfcHJvYmUo
cG11LT5kZXYsIHJldCwgIkZhaWxlZCB0byBncmFudCBhY2Nlc3NcbiIpOworCX0KKworCXBtdS0+
Y2xrID0gZGV2bV9jbGtfZ2V0X29wdGlvbmFsX2VuYWJsZWQocG11LT5kZXYsIE5VTEwpOworCWlm
IChJU19FUlIocG11LT5jbGspKQorCQlyZXR1cm4gZGV2X2Vycl9wcm9iZShwbXUtPmRldiwgUFRS
X0VSUihwbXUtPmNsayksCisJCQkJICAgICAiRmFpbGVkIHRvIGdldCBwcmVwYXJlIGVuYWJsZSBj
bG9ja1xuIik7CisKKwlyc3QgPSBkZXZtX3Jlc2V0X2NvbnRyb2xfZ2V0X29wdGlvbmFsX2V4Y2x1
c2l2ZShwbXUtPmRldiwgTlVMTCk7CisJaWYgKElTX0VSUihyc3QpKQorCQlyZXR1cm4gZGV2X2Vy
cl9wcm9iZShwbXUtPmRldiwgUFRSX0VSUihyc3QpLCAiRmFpbGVkIHRvIGdldCByZXNldFxuIik7
CisKKwlyZXNldF9jb250cm9sX2Fzc2VydChyc3QpOworCXJlc2V0X2NvbnRyb2xfZGVhc3NlcnQo
cnN0KTsKKworCXBtdS0+cG9sbF9wZXJpb2QgPSBtc190b19rdGltZShQT0xMX01TKTsKKwlocnRp
bWVyX3NldHVwKCZwbXUtPmhydGltZXIsIHN0bTMyX2Rkcl9wbXVfcG9sbCwgQ0xPQ0tfTU9OT1RP
TklDLCBIUlRJTUVSX01PREVfUkVMKTsKKworCWZvciAoaW50IGkgPSAwOyBpIDwgTVAyX0NOVF9O
QjsgaSsrKQorCQlJTklUX0xJU1RfSEVBRCgmcG11LT5jb3VudGVyc1tpXSk7CisKKwlwbXUtPnNl
bGVjdGVkX3NldCA9IC0xOworCisJcG11LT5wbXUgPSAoc3RydWN0IHBtdSkgeworCQkudGFza19j
dHhfbnIgPSBwZXJmX2ludmFsaWRfY29udGV4dCwKKwkJLnN0YXJ0ID0gc3RtMzJfZGRyX3BtdV9l
dmVudF9zdGFydCwKKwkJLnN0b3AgPSBzdG0zMl9kZHJfcG11X2V2ZW50X3N0b3AsCisJCS5hZGQg
PSBzdG0zMl9kZHJfcG11X2V2ZW50X2FkZCwKKwkJLmRlbCA9IHN0bTMyX2Rkcl9wbXVfZXZlbnRf
ZGVsLAorCQkucmVhZCA9IHN0bTMyX2Rkcl9wbXVfZXZlbnRfcmVhZCwKKwkJLmV2ZW50X2luaXQg
PSBzdG0zMl9kZHJfcG11X2V2ZW50X2luaXQsCisJCS5hdHRyX2dyb3VwcyA9IHBtdS0+Y2ZnLT5h
dHRyaWJ1dGUsCisJCS5tb2R1bGUgPSBUSElTX01PRFVMRSwKKwl9OworCisJaWYgKHBtdS0+Y2Zn
LT5yZWdzLT5kcmFtX2luZi5yZWcpIHsKKwkJcmV0ID0gc3RtMzJfZGRyX3BtdV9nZXRfbWVtb3J5
X3R5cGUocG11KTsKKwkJaWYgKHJldCkKKwkJCXJldHVybiBkZXZfZXJyX3Byb2JlKHBtdS0+ZGV2
LCByZXQsICJGYWlsZWQgdG8gZ2V0IG1lbW9yeSB0eXBlXG4iKTsKKworCQl3cml0ZWxfcmVsYXhl
ZChwbXUtPmRyYW1fdHlwZSwgcG11LT5tZW1iYXNlICsgcG11LT5jZmctPnJlZ3MtPmRyYW1faW5m
LnJlZyk7CisJfQorCisJcmV0ID0gcGVyZl9wbXVfcmVnaXN0ZXIoJnBtdS0+cG11LCBEUklWRVJf
TkFNRSwgLTEpOworCWlmIChyZXQpCisJCXJldHVybiBkZXZfZXJyX3Byb2JlKHBtdS0+ZGV2LCBy
ZXQsCisJCQkJIkNvdWxkbid0IHJlZ2lzdGVyIEREUlBFUkZNIGRyaXZlciBhcyBhIFBNVVxuIik7
CisKKwljbGtfZGlzYWJsZShwbXUtPmNsayk7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHZv
aWQgc3RtMzJfZGRyX3BtdV9kZXZpY2VfcmVtb3ZlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBk
ZXYpCit7CisJc3RydWN0IHN0bTMyX2Rkcl9wbXUgKnN0bTMyX2Rkcl9wbXUgPSBwbGF0Zm9ybV9n
ZXRfZHJ2ZGF0YShwZGV2KTsKKworCXBlcmZfcG11X3VucmVnaXN0ZXIoJnN0bTMyX2Rkcl9wbXUt
PnBtdSk7Cit9CisKK3N0YXRpYyBpbnQgX19tYXliZV91bnVzZWQgc3RtMzJfZGRyX3BtdV9kZXZp
Y2VfcmVzdW1lKHN0cnVjdCBkZXZpY2UgKmRldikKK3sKKwlzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAq
cG11ID0gZGV2X2dldF9kcnZkYXRhKGRldik7CisKKwljbGtfZW5hYmxlKHBtdS0+Y2xrKTsKKwl3
cml0ZWxfcmVsYXhlZChwbXUtPmRyYW1fdHlwZSwgcG11LT5tZW1iYXNlICsgcG11LT5jZmctPnJl
Z3MtPmRyYW1faW5mLnJlZyk7CisJY2xrX2Rpc2FibGUocG11LT5jbGspOworCisJcmV0dXJuIDA7
Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjIHN0bTMyX2Rk
cl9wbXVfcmVnc3BlY19tcDEgPSB7CisJLnN0b3AgPQkJeyBERFJQRVJGTV9DVFJMLCBDVFJMX1NU
T1AgfSwKKwkuc3RhcnQgPQl7IEREUlBFUkZNX0NUUkwsIENUUkxfU1RBUlQgfSwKKwkuZW5hYmxl
ID0JeyBERFJQRVJGTV9DRkcgfSwKKwkuY2ZnID0JCXsgRERSUEVSRk1fQ0ZHIH0sCisJLnN0YXR1
cyA9CXsgRERSUEVSRk1fU1RBVFVTLCBNUDFfU1RBVFVTX0JVU1kgfSwKKwkuY2xlYXJfY250ID0J
eyBERFJQRVJGTV9DTFIsIE1QMV9DTFJfQ05UIH0sCisJLmNsZWFyX3RpbWUgPQl7IEREUlBFUkZN
X0NMUiwgTVAxX0NMUl9USU1FIH0sCisJLmNvdW50ZXJfdGltZSA9CXsgRERSUEVSRk1fVENOVCB9
LAorCS5jb3VudGVyX2V2dCA9CXsKKwkJeyBERFJQRVJGTV9FVkNOVCgwKSB9LAorCQl7IEREUlBF
UkZNX0VWQ05UKDEpIH0sCisJCXsgRERSUEVSRk1fRVZDTlQoMikgfSwKKwkJeyBERFJQRVJGTV9F
VkNOVCgzKSB9LAorCX0sCit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IHN0bTMyX2Rkcl9wbXVf
cmVnc3BlYyBzdG0zMl9kZHJfcG11X3JlZ3NwZWNfbXAyID0geworCS5zdG9wID0JCXsgRERSUEVS
Rk1fQ1RSTCwgQ1RSTF9TVE9QIH0sCisJLnN0YXJ0ID0JeyBERFJQRVJGTV9DVFJMLCBDVFJMX1NU
QVJUIH0sCisJLnN0YXR1cyA9CXsgRERSUEVSRk1fTVAyX1NUQVRVUywgTVAyX1NUQVRVU19CVVNZ
IH0sCisJLmNsZWFyX2NudCA9CXsgRERSUEVSRk1fQ0xSLCBNUDJfQ0xSX0NOVCB9LAorCS5jbGVh
cl90aW1lID0JeyBERFJQRVJGTV9DTFIsIE1QMl9DTFJfVElNRSB9LAorCS5jZmcwID0JCXsgRERS
UEVSRk1fTVAyX0NGRzAgfSwKKwkuY2ZnMSA9CQl7IEREUlBFUkZNX01QMl9DRkcxIH0sCisJLmVu
YWJsZSA9CXsgRERSUEVSRk1fTVAyX0NGRzUgfSwKKwkuZHJhbV9pbmYgPQl7IEREUlBFUkZNX01Q
Ml9EUkFNSU5GIH0sCisJLmNvdW50ZXJfdGltZSA9CXsgRERSUEVSRk1fTVAyX1RDTlQgfSwKKwku
Y291bnRlcl9ldnQgPQl7CisJCXsgRERSUEVSRk1fTVAyX0VWQ05UKDApIH0sCisJCXsgRERSUEVS
Rk1fTVAyX0VWQ05UKDEpIH0sCisJCXsgRERSUEVSRk1fTVAyX0VWQ05UKDIpIH0sCisJCXsgRERS
UEVSRk1fTVAyX0VWQ05UKDMpIH0sCisJCXsgRERSUEVSRk1fTVAyX0VWQ05UKDQpIH0sCisJCXsg
RERSUEVSRk1fTVAyX0VWQ05UKDUpIH0sCisJCXsgRERSUEVSRk1fTVAyX0VWQ05UKDYpIH0sCisJ
CXsgRERSUEVSRk1fTVAyX0VWQ05UKDcpIH0sCisJfSwKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1
Y3Qgc3RtMzJfZGRyX3BtdV9jZmcgc3RtMzJfZGRyX3BtdV9jZmdfbXAxID0geworCS5yZWdzID0g
JnN0bTMyX2Rkcl9wbXVfcmVnc3BlY19tcDEsCisJLmF0dHJpYnV0ZSA9IHN0bTMyX2Rkcl9wbXVf
YXR0cl9ncm91cHNfbXAxLAorCS5jb3VudGVyc19uYiA9IE1QMV9DTlRfTkIsCisJLmV2dF9jb3Vu
dGVyc19uYiA9IE1QMV9DTlRfTkIgLSAxLCAvKiBUaW1lIGNvdW50ZXIgaXMgbm90IGFuIGV2ZW50
IGNvdW50ZXIgKi8KKwkudGltZV9jbnRfaWR4ID0gTVAxX1RJTUVfQ05UX0lEWCwKKwkuZ2V0X2Nv
dW50ZXIgPSBzdG0zMl9kZHJfcG11X2dldF9ldmVudF9jb3VudGVyX21wMSwKK307CisKK3N0YXRp
YyBjb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9jZmcgc3RtMzJfZGRyX3BtdV9jZmdfbXAyID0g
eworCS5yZWdzID0gJnN0bTMyX2Rkcl9wbXVfcmVnc3BlY19tcDIsCisJLmF0dHJpYnV0ZSA9IHN0
bTMyX2Rkcl9wbXVfYXR0cl9ncm91cHNfbXAyLAorCS5jb3VudGVyc19uYiA9IE1QMl9DTlRfTkIs
CisJLmV2dF9jb3VudGVyc19uYiA9IE1QMl9DTlRfTkIgLSAxLCAvKiBUaW1lIGNvdW50ZXIgaXMg
YW4gZXZlbnQgY291bnRlciAqLworCS50aW1lX2NudF9pZHggPSBNUDJfVElNRV9DTlRfSURYLAor
CS5nZXRfY291bnRlciA9IHN0bTMyX2Rkcl9wbXVfZ2V0X2V2ZW50X2NvdW50ZXJfbXAyLAorfTsK
Kworc3RhdGljIERFRklORV9TSU1QTEVfREVWX1BNX09QUyhzdG0zMl9kZHJfcG11X3BtX29wcywg
TlVMTCwgc3RtMzJfZGRyX3BtdV9kZXZpY2VfcmVzdW1lKTsKKworc3RhdGljIGNvbnN0IHN0cnVj
dCBvZl9kZXZpY2VfaWQgc3RtMzJfZGRyX3BtdV9vZl9tYXRjaFtdID0geworCXsKKwkJLmNvbXBh
dGlibGUgPSAic3Qsc3RtMzJtcDEzMS1kZHItcG11IiwKKwkJLmRhdGEgPSAmc3RtMzJfZGRyX3Bt
dV9jZmdfbXAxCisJfSwKKwl7CisJCS5jb21wYXRpYmxlID0gInN0LHN0bTMybXAyNTEtZGRyLXBt
dSIsCisJCS5kYXRhID0gJnN0bTMyX2Rkcl9wbXVfY2ZnX21wMgorCX0sCisJeyB9Cit9OworTU9E
VUxFX0RFVklDRV9UQUJMRShvZiwgc3RtMzJfZGRyX3BtdV9vZl9tYXRjaCk7CisKK3N0YXRpYyBz
dHJ1Y3QgcGxhdGZvcm1fZHJpdmVyIHN0bTMyX2Rkcl9wbXVfZHJpdmVyID0geworCS5kcml2ZXIg
PSB7CisJCS5uYW1lID0gRFJJVkVSX05BTUUsCisJCS5wbSA9IHBtX3NsZWVwX3B0cigmc3RtMzJf
ZGRyX3BtdV9wbV9vcHMpLAorCQkub2ZfbWF0Y2hfdGFibGUgPSBzdG0zMl9kZHJfcG11X29mX21h
dGNoLAorCX0sCisJLnByb2JlID0gc3RtMzJfZGRyX3BtdV9kZXZpY2VfcHJvYmUsCisJLnJlbW92
ZSA9IHN0bTMyX2Rkcl9wbXVfZGV2aWNlX3JlbW92ZSwKK307CisKK21vZHVsZV9wbGF0Zm9ybV9k
cml2ZXIoc3RtMzJfZGRyX3BtdV9kcml2ZXIpOworCitNT0RVTEVfQVVUSE9SKCJDbMOpbWVudCBM
ZSBHb2ZmaWMiKTsKK01PRFVMRV9ERVNDUklQVElPTigiU1RNaWNyb2VsZWN0cm9uaWNzIFNUTTMy
IEREUiBwZXJmb3JtYW5jZSBtb25pdG9yIGRyaXZlciIpOworTU9EVUxFX0xJQ0VOU0UoIkdQTCIp
OwoKLS0gCjIuNDMuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KTGludXgtc3RtMzIgbWFpbGluZyBsaXN0CkxpbnV4LXN0bTMyQHN0LW1kLW1haWxtYW4u
c3Rvcm1yZXBseS5jb20KaHR0cHM6Ly9zdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tL21haWxt
YW4vbGlzdGluZm8vbGludXgtc3RtMzIK
