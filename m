Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 822506B229C
	for <lists+linux-stm32@lfdr.de>; Thu,  9 Mar 2023 12:20:41 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 45126C6A60C;
	Thu,  9 Mar 2023 11:20:41 +0000 (UTC)
Received: from mail-lj1-f182.google.com (mail-lj1-f182.google.com
 [209.85.208.182])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 4A021C6A5FD
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Thu,  9 Mar 2023 11:20:40 +0000 (UTC)
Received: by mail-lj1-f182.google.com with SMTP id b10so1478525ljr.0
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Thu, 09 Mar 2023 03:20:40 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20210112; t=1678360839;
 h=content-transfer-encoding:mime-version:message-id:date:subject:cc
 :to:from:from:to:cc:subject:date:message-id:reply-to;
 bh=e00Z6rbgWbtwfWbflLPduP29zU9N+dlWUqqXvTYYH40=;
 b=VFqKF5KotY4Vjmg8mUoPrTf0M6ObAMp3/sBy8QdQM+K3WcqPXBB+ZbZwqu/PSZdtGQ
 raa8zEcIB95iRxzR15STsI8FrM81aC8hRseSBJ6fnuxYHU5qs0w3q0J2eat8ZGLx8rDr
 MJt7eGexgwdGtOgjZ3NrKejTF2Dit0XPd1VYnAPtfSDDi76tdjhH4LUab44NWZ2G76r4
 XCbR9GE8+8CWlJo4DFb5fs3mXBxhozfh53OuFokLQEhQm3KStRR7Oaf5XbzTq7HGYGOf
 5TmO4ZboKrbWkcnrMe0XXOvJQGIXfHcolVgBwRV5eE2MJFkMhamMjHW985ZEaaesUxKX
 1tyg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112; t=1678360839;
 h=content-transfer-encoding:mime-version:message-id:date:subject:cc
 :to:from:x-gm-message-state:from:to:cc:subject:date:message-id
 :reply-to;
 bh=e00Z6rbgWbtwfWbflLPduP29zU9N+dlWUqqXvTYYH40=;
 b=OeuF/5/B0bRK2kB67upo2h8yEE9ktdAO7WbyWJCELnG5qYOdK76Bqx8w0NSVTg02RH
 SBM0Qu7JFso6fz+gz2FBJ0cT915sb53nxS5KN1Gjlw5uvcUZttCKi8tpammLzf+82MYi
 GJcf/ntFCTdoMHfbWD7XJogxGza7bLE5wqxWETglRE4qoFo2WXFf7vvNMqAqmBamlfJM
 HJoEQUR+N7cO1c1MHmInwE89An8ch8CSQQd0N7mQEkTy/gqfU2HgNEKFtGzb8CcoWBK0
 hWeOfjvL2RLnGnLZbheT550qJNEp/lHXJWeysV9ryM9TGFUO6NW9ltgO6gnZH9DmljGE
 y09A==
X-Gm-Message-State: AO0yUKV5zUzkFmU+MZXam/NzpJM7IxRoE3LKgyotPxxYg5PM7c4v/T9K
 koSW4WDeVQEnKfKS7l0YJhg=
X-Google-Smtp-Source: AK7set8HTR7OFTfX4GIl3bfF7h6LoNX++eaiJ96YI0k10ybCouJuK3PHp13GpxONHEnP+IpklQC2sw==
X-Received: by 2002:a2e:a551:0:b0:28d:9dbe:227a with SMTP id
 e17-20020a2ea551000000b0028d9dbe227amr8453015ljn.42.1678360839328; 
 Thu, 09 Mar 2023 03:20:39 -0800 (PST)
Received: from localhost.lan (ip-194-187-74-233.konfederacka.maverick.com.pl.
 [194.187.74.233]) by smtp.gmail.com with ESMTPSA id
 y16-20020a05651c021000b002934b5d6a61sm2905728ljn.121.2023.03.09.03.20.36
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 09 Mar 2023 03:20:38 -0800 (PST)
From: =?UTF-8?q?Rafa=C5=82=20Mi=C5=82ecki?= <zajec5@gmail.com>
To: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date: Thu,  9 Mar 2023 12:20:28 +0100
Message-Id: <20230309112028.19215-1-zajec5@gmail.com>
X-Mailer: git-send-email 2.34.1
MIME-Version: 1.0
Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>,
 Alessandro Zummo <a.zummo@towertech.it>, Vignesh Raghavendra <vigneshr@ti.com>,
 Kunihiko Hayashi <hayashi.kunihiko@socionext.com>,
 linux-mtd@lists.infradead.org, Miquel Raynal <miquel.raynal@bootlin.com>,
 =?UTF-8?q?Rafa=C5=82=20Mi=C5=82ecki?= <rafal@milecki.pl>,
 Evgeniy Polyakov <zbr@ioremap.net>, Fabio Estevam <festevam@gmail.com>,
 linux-stm32@st-md-mailman.stormreply.com,
 Alyssa Rosenzweig <alyssa@rosenzweig.io>, Heiko Stuebner <heiko@sntech.de>,
 linux-rtc@vger.kernel.org, Samuel Holland <samuel@sholland.org>,
 Richard Weinberger <richard@nod.at>, Michal Simek <michal.simek@xilinx.com>,
 Jernej Skrabec <jernej.skrabec@gmail.com>, linux-rockchip@lists.infradead.org,
 Chen-Yu Tsai <wens@csie.org>, Andy Gross <agross@kernel.org>,
 NXP Linux Team <linux-imx@nxp.com>, Vincent Shih <vincent.sunplus@gmail.com>,
 Orson Zhai <orsonzhai@gmail.com>, Jerome Brunet <jbrunet@baylibre.com>,
 linux-sunxi@lists.linux.dev, asahi@lists.linux.dev,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>, Sven Peter <sven@svenpeter.dev>,
 Martin Blumenstingl <martin.blumenstingl@googlemail.com>,
 linux-arm-msm@vger.kernel.org, Sascha Hauer <s.hauer@pengutronix.de>,
 linux-mediatek@lists.infradead.org,
 Baolin Wang <baolin.wang@linux.alibaba.com>,
 Matthias Brugger <matthias.bgg@gmail.com>, linux-amlogic@lists.infradead.org,
 linux-arm-kernel@lists.infradead.org,
 AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>,
 Neil Armstrong <neil.armstrong@linaro.org>,
 Chunyan Zhang <zhang.lyra@gmail.com>, Bjorn Andersson <andersson@kernel.org>,
 Hector Martin <marcan@marcan.st>, linux-kernel@vger.kernel.org,
 Konrad Dybcio <konrad.dybcio@linaro.org>, Michael Walle <michael@walle.cc>,
 Masami Hiramatsu <mhiramat@kernel.org>,
 Pengutronix Kernel Team <kernel@pengutronix.de>,
 Kevin Hilman <khilman@baylibre.com>, Shawn Guo <shawnguo@kernel.org>,
 Claudiu Beznea <claudiu.beznea@microchip.com>
Subject: [Linux-stm32] [PATCH V3] nvmem: add explicit config option to read
	OF fixed cells
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

RnJvbTogUmFmYcWCIE1pxYJlY2tpIDxyYWZhbEBtaWxlY2tpLnBsPgoKTlZNRU0gc3Vic3lzdGVt
IGxvb2tzIGZvciBmaXhlZCBOVk1FTSBjZWxscyAoc3BlY2lmaWVkIGluIERUKSBieQpkZWZhdWx0
LiBUaGlzIGJlaGF2aW91ciB3YXMgdG90YWxseSBzYWZlIGluIGVhcmx5IGRheXMgYmVmb3JlIGFk
ZGluZwpzdXBwb3J0IGZvciBkeW5hbWljIGNlbGxzIGFuZCB3aXRoIHNpbXBsZSBEVCBzeW50YXgu
CgpXaXRoIGV2ZXJ5IG5ldyBzdXBwb3J0ZWQgTlZNRU0gZGV2aWNlIHdpdGggZHluYW1pYyBjZWxs
cyB0aGUgY3VycmVudApiZWhhdmlvdXIgYmVjb21lcyBub24tb3B0aW1hbDoKMS4gSXQgcmVzdWx0
cyBpbiB1bm5lZWRlZCBpdGVyYXRpbmcgb3ZlciBEVCBub2RlcwoyLiBJdCBtYXkgcmVzdWx0IGlu
IGZhbHNlIGRpc2NvdmVyeSBvZiBjZWxscyAoaW4gY2FzZSBEVCBzdWJub2RlcwogICBjb250YWlu
ICJyZWciIHByb3BlcnR5KQoKVGhpcyBiZWhhdmlvdXIgaGFzIGFjdHVhbGx5IGNhdXNlZCBhIHBy
b2JsZW0gYWxyZWFkeSB3aXRoIHRoZSBNVEQKc3Vic3lzdGVtIGFuZCByZXF1aXJlZCBhIGZpeC4g
TVREIHN1YnBhcnRpdGlvbnMgd2VyZSBpbmNvcnJlY3RseSB0cmVhdGVkCihmYWxzZWx5IGRpc2Nv
dmVyZWQpIGFzIE5WTUVNIGNlbGxzLgoKQWxzbyB3aXRoIHRoZSBzdXBwb3J0IGZvciBOVk1FTSBs
YXlvdXRzIHdlIG1heSAmIHNob3VsZCBoYXZlICpuZXcqCmJpbmRpbmdzIGFsbG93IGZpeGVkIE5W
TUVNIGNlbGxzIG9ubHkgaW4gdGhlICJudm1lbS1sYXlvdXQiIHN1Ym5vZGUuIEl0Cm1lYW5zIG5v
ICpuZXcqIGRyaXZlciBzaG91bGQgcmVxdWlyZSBOVk1FTSBjb3JlIHN1cHBvcnQgZm9yIGZpeGVk
IGNlbGxzCmRlZmluZWQgaW4gdGhlICoqZGV2aWNlKiogbm9kZS4KCk9idmlvdXNseSBleGlzdGlu
ZyBiaW5kaW5ncyBtdXN0IGJlIHN1cHBvcnRlZCBhbmQgb2xkIGRyaXZlcnMgbXVzdApzdXBwb3J0
IG9sZCBEVCBzeW50YXguCgpUaGUgYmVzdCBhcHByb2FjaCBzZWVtcyB0byBiZSBtYWtpbmcgTlZN
RU0gY29yZSBsb29raW5nIGZvciBmaXhlZCBEVApjZWxscyBpbiAqKmRldmljZSoqIG5vZGUgYW4g
b3B0LWluIGZlYXR1cmUuIEl0J3MgYSBmZWF0dXJlIHRoYXQgb3Zlcgp0aW1lIHNob3VsZCBnZXQg
ZGVwcmVjYXRlZCBpbiBhIGZhdm9yIG9mIHVzaW5nICJudm1lbS1sYXlvdXRzIiBhbHNvIGZvcgpm
aXhlZCBOVk1FTSBjZWxscy4KClNvbHZlIHRoaXMgYnkgbW9kaWZ5aW5nIGRyaXZlcnMgZm9yIHRo
b3NlIGJpbmRpbmdzIHRoYXQgc3VwcG9ydApzcGVjaWZ5aW5nIGZpeGVkIE5WTUVNIGNlbGxzIGlu
IERUIG5vZGUgb2YgKipOVk1FTSBkZXZpY2UqKi4gVGhvc2UKZHJpdmVycyB3ZXJlIHBpY2tlZCBi
eSByZXZpZXdpbmcgYWxsIHN1cHBvcnRlZCBOVk1FTSBiaW5kaW5ncy4gTWFrZQp0aG9zZSBkcml2
ZXJzIGV4cGxpY2l0bHkgdGVsbCBOVk1FTSBzdWJzeXN0ZW0gdG8gcmVhZCBjZWxscyBmcm9tIERU
IG5vZGUKb2YgKipOVk1FTSBkZXZpY2UqKi4KCkl0IHdhc24ndCBjbGVhciAodG8gbWUpIGlmIHJ0
YyBhbmQgdzEgY29kZSBhY3R1YWxseSB1c2VzIGZpeGVkIGNlbGxzLiBJCmVuYWJsZWQgdGhlbSB0
byBkb24ndCByaXNrIGFueSBicmVha2FnZS4KClRoZSB3aG9sZSBjaGFuZ2UgaXMgbm90IGEgaHVn
ZSBnYW1lIGNoYW5nZXIuIEl0IG1ha2VzIGNvZGUgc2xpZ2h0bHkgbW9yZQpvcHRpbWFsIChpbiBj
YXNlIHlvdSBjYXJlKSwgYSBiaXQgbGVzcyBlcnJvciBwcm9uZSBhbmQgbWF5YmUgLyBob3BlZnVs
bHkKTlZNRU0gY29kZSBwYXJzaW5nIGNvZGUgZWFzaWVyIHRvIHVuZGVyc3RhbmQuCgpTaWduZWQt
b2ZmLWJ5OiBSYWZhxYIgTWnFgmVja2kgPHJhZmFsQG1pbGVja2kucGw+Cltmb3IgbWVzb24te2Vm
dXNlLG14LWVmdXNlfS5jXQpBY2tlZC1ieTogTWFydGluIEJsdW1lbnN0aW5nbCA8bWFydGluLmJs
dW1lbnN0aW5nbEBnb29nbGVtYWlsLmNvbT4KW2ZvciBtdGstZWZ1c2UuYywgbnZtZW0vY29yZS5j
LCBudm1lbS1wcm92aWRlci5oXQpSZXZpZXdlZC1ieTogQW5nZWxvR2lvYWNjaGlubyBEZWwgUmVn
bm8gPGFuZ2Vsb2dpb2FjY2hpbm8uZGVscmVnbm9AY29sbGFib3JhLmNvbT4KW01UODE5MiwgTVQ4
MTk1IENocm9tZWJvb2tzXQpUZXN0ZWQtYnk6IEFuZ2Vsb0dpb2FjY2hpbm8gRGVsIFJlZ25vIDxh
bmdlbG9naW9hY2NoaW5vLmRlbHJlZ25vQGNvbGxhYm9yYS5jb20+Cltmb3IgbWljcm9jaGlwLW90
cGMuY10KUmV2aWV3ZWQtYnk6IENsYXVkaXUgQmV6bmVhIDxjbGF1ZGl1LmJlem5lYUBtaWNyb2No
aXAuY29tPgpbU0FNQTdHNS1FS10KVGVzdGVkLWJ5OiBDbGF1ZGl1IEJlem5lYSA8Y2xhdWRpdS5i
ZXpuZWFAbWljcm9jaGlwLmNvbT4KLS0tClYyOiBGaXggc3RtMzItcm9tZW0uYyB0eXBvIGJyZWFr
aW5nIGl0cyBjb21waWxhdGlvbgogICAgUGljayBNYXJ0aW4ncyBBY2tlZC1ieQogICAgQWRkIHBh
cmFncmFwaCBhYm91dCBsYXlvdXRzIGRlcHJlY2F0aW5nIHVzZV9maXhlZF9vZl9jZWxscwpWMzog
VXBkYXRlIGNvbW1pdCBkZXNjcmlwdGlvbjoKICAgIDEuIE1ha2UgaXQgY2xlYXIgd2UncmUgTk9U
IGRyb3BwaW5nIGZpeGVkIGNlbGxzIHN1cHBvcnQKICAgIDIuIFVzZSBuaWNlciB3b3JkcyAocy9t
YWRlIHNlbnNlL3dhcyB0b3RhbGx5IHNhZmUvKQogICAgMy4gRXhwbGFpbiBmaXhlZCBjZWxscyBs
YXlvdXQgdGhpbmcKICAgIDQuIEFkZCBwYXJhZ3JhcGggd2l0aCBwdXJwb3NlIG9mIHRoaXMgY29t
bWl0Ci0tLQogZHJpdmVycy9tdGQvbXRkY29yZS5jICAgICAgICAgIHwgMiArKwogZHJpdmVycy9u
dm1lbS9hcHBsZS1lZnVzZXMuYyAgIHwgMSArCiBkcml2ZXJzL252bWVtL2NvcmUuYyAgICAgICAg
ICAgfCA4ICsrKysrLS0tCiBkcml2ZXJzL252bWVtL2lteC1vY290cC1zY3UuYyAgfCAxICsKIGRy
aXZlcnMvbnZtZW0vaW14LW9jb3RwLmMgICAgICB8IDEgKwogZHJpdmVycy9udm1lbS9tZXNvbi1l
ZnVzZS5jICAgIHwgMSArCiBkcml2ZXJzL252bWVtL21lc29uLW14LWVmdXNlLmMgfCAxICsKIGRy
aXZlcnMvbnZtZW0vbWljcm9jaGlwLW90cGMuYyB8IDEgKwogZHJpdmVycy9udm1lbS9tdGstZWZ1
c2UuYyAgICAgIHwgMSArCiBkcml2ZXJzL252bWVtL3Fjb20tc3BtaS1zZGFtLmMgfCAxICsKIGRy
aXZlcnMvbnZtZW0vcWZwcm9tLmMgICAgICAgICB8IDEgKwogZHJpdmVycy9udm1lbS9yYXZlLXNw
LWVlcHJvbS5jIHwgMSArCiBkcml2ZXJzL252bWVtL3JvY2tjaGlwLWVmdXNlLmMgfCAxICsKIGRy
aXZlcnMvbnZtZW0vc2MyN3h4LWVmdXNlLmMgICB8IDEgKwogZHJpdmVycy9udm1lbS9zcHJkLWVm
dXNlLmMgICAgIHwgMSArCiBkcml2ZXJzL252bWVtL3N0bTMyLXJvbWVtLmMgICAgfCAxICsKIGRy
aXZlcnMvbnZtZW0vc3VucGx1cy1vY290cC5jICB8IDEgKwogZHJpdmVycy9udm1lbS9zdW54aV9z
aWQuYyAgICAgIHwgMSArCiBkcml2ZXJzL252bWVtL3VuaXBoaWVyLWVmdXNlLmMgfCAxICsKIGRy
aXZlcnMvbnZtZW0venlucW1wX252bWVtLmMgICB8IDEgKwogZHJpdmVycy9ydGMvbnZtZW0uYyAg
ICAgICAgICAgIHwgMSArCiBkcml2ZXJzL3cxL3NsYXZlcy93MV9kczI1MHguYyAgfCAxICsKIGlu
Y2x1ZGUvbGludXgvbnZtZW0tcHJvdmlkZXIuaCB8IDIgKysKIDIzIGZpbGVzIGNoYW5nZWQsIDI5
IGluc2VydGlvbnMoKyksIDMgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy9tdGQv
bXRkY29yZS5jIGIvZHJpdmVycy9tdGQvbXRkY29yZS5jCmluZGV4IDBmZWFjYjlmYmRhYy4uMWJi
NDc5YzBmNzU4IDEwMDY0NAotLS0gYS9kcml2ZXJzL210ZC9tdGRjb3JlLmMKKysrIGIvZHJpdmVy
cy9tdGQvbXRkY29yZS5jCkBAIC01MjMsNiArNTIzLDcgQEAgc3RhdGljIGludCBtdGRfbnZtZW1f
YWRkKHN0cnVjdCBtdGRfaW5mbyAqbXRkKQogCWNvbmZpZy5kZXYgPSAmbXRkLT5kZXY7CiAJY29u
ZmlnLm5hbWUgPSBkZXZfbmFtZSgmbXRkLT5kZXYpOwogCWNvbmZpZy5vd25lciA9IFRISVNfTU9E
VUxFOworCWNvbmZpZy51c2VfZml4ZWRfb2ZfY2VsbHMgPSBvZl9kZXZpY2VfaXNfY29tcGF0aWJs
ZShub2RlLCAibnZtZW0tY2VsbHMiKTsKIAljb25maWcucmVnX3JlYWQgPSBtdGRfbnZtZW1fcmVn
X3JlYWQ7CiAJY29uZmlnLnNpemUgPSBtdGQtPnNpemU7CiAJY29uZmlnLndvcmRfc2l6ZSA9IDE7
CkBAIC04OTEsNiArODkyLDcgQEAgc3RhdGljIHN0cnVjdCBudm1lbV9kZXZpY2UgKm10ZF9vdHBf
bnZtZW1fcmVnaXN0ZXIoc3RydWN0IG10ZF9pbmZvICptdGQsCiAJY29uZmlnLm5hbWUgPSBrYXNw
cmludGYoR0ZQX0tFUk5FTCwgIiVzLSVzIiwgZGV2X25hbWUoJm10ZC0+ZGV2KSwgY29tcGF0aWJs
ZSk7CiAJY29uZmlnLmlkID0gTlZNRU1fREVWSURfTk9ORTsKIAljb25maWcub3duZXIgPSBUSElT
X01PRFVMRTsKKwljb25maWcudXNlX2ZpeGVkX29mX2NlbGxzID0gdHJ1ZTsKIAljb25maWcudHlw
ZSA9IE5WTUVNX1RZUEVfT1RQOwogCWNvbmZpZy5yb290X29ubHkgPSB0cnVlOwogCWNvbmZpZy5p
Z25vcmVfd3AgPSB0cnVlOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9udm1lbS9hcHBsZS1lZnVzZXMu
YyBiL2RyaXZlcnMvbnZtZW0vYXBwbGUtZWZ1c2VzLmMKaW5kZXggOWI3Yzg3MTAyMTA0Li4wMTE5
YmFjNDNiMmMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbnZtZW0vYXBwbGUtZWZ1c2VzLmMKKysrIGIv
ZHJpdmVycy9udm1lbS9hcHBsZS1lZnVzZXMuYwpAQCAtMzYsNiArMzYsNyBAQCBzdGF0aWMgaW50
IGFwcGxlX2VmdXNlc19wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCXN0cnVj
dCByZXNvdXJjZSAqcmVzOwogCXN0cnVjdCBudm1lbV9jb25maWcgY29uZmlnID0gewogCQkuZGV2
ID0gJnBkZXYtPmRldiwKKwkJLnVzZV9maXhlZF9vZl9jZWxscyA9IHRydWUsCiAJCS5yZWFkX29u
bHkgPSB0cnVlLAogCQkucmVnX3JlYWQgPSBhcHBsZV9lZnVzZXNfcmVhZCwKIAkJLnN0cmlkZSA9
IHNpemVvZih1MzIpLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9udm1lbS9jb3JlLmMgYi9kcml2ZXJz
L252bWVtL2NvcmUuYwppbmRleCAxNzRlZjM1NzRlMDcuLjY3ODNjZDg0NzhkNyAxMDA2NDQKLS0t
IGEvZHJpdmVycy9udm1lbS9jb3JlLmMKKysrIGIvZHJpdmVycy9udm1lbS9jb3JlLmMKQEAgLTg0
NCw5ICs4NDQsMTEgQEAgc3RydWN0IG52bWVtX2RldmljZSAqbnZtZW1fcmVnaXN0ZXIoY29uc3Qg
c3RydWN0IG52bWVtX2NvbmZpZyAqY29uZmlnKQogCWlmIChydmFsKQogCQlnb3RvIGVycl9yZW1v
dmVfY2VsbHM7CiAKLQlydmFsID0gbnZtZW1fYWRkX2NlbGxzX2Zyb21fb2YobnZtZW0pOwotCWlm
IChydmFsKQotCQlnb3RvIGVycl9yZW1vdmVfY2VsbHM7CisJaWYgKGNvbmZpZy0+dXNlX2ZpeGVk
X29mX2NlbGxzKSB7CisJCXJ2YWwgPSBudm1lbV9hZGRfY2VsbHNfZnJvbV9vZihudm1lbSk7CisJ
CWlmIChydmFsKQorCQkJZ290byBlcnJfcmVtb3ZlX2NlbGxzOworCX0KIAogCWRldl9kYmcoJm52
bWVtLT5kZXYsICJSZWdpc3RlcmluZyBudm1lbSBkZXZpY2UgJXNcbiIsIGNvbmZpZy0+bmFtZSk7
CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbnZtZW0vaW14LW9jb3RwLXNjdS5jIGIvZHJpdmVycy9u
dm1lbS9pbXgtb2NvdHAtc2N1LmMKaW5kZXggMzk5ZTFlYjhiNGMxLi5lYzVjY2U3YzY2OTcgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvbnZtZW0vaW14LW9jb3RwLXNjdS5jCisrKyBiL2RyaXZlcnMvbnZt
ZW0vaW14LW9jb3RwLXNjdS5jCkBAIC0yMjAsNiArMjIwLDcgQEAgc3RhdGljIGludCBpbXhfc2N1
X29jb3RwX3dyaXRlKHZvaWQgKmNvbnRleHQsIHVuc2lnbmVkIGludCBvZmZzZXQsCiAKIHN0YXRp
YyBzdHJ1Y3QgbnZtZW1fY29uZmlnIGlteF9zY3Vfb2NvdHBfbnZtZW1fY29uZmlnID0gewogCS5u
YW1lID0gImlteC1zY3Utb2NvdHAiLAorCS51c2VfZml4ZWRfb2ZfY2VsbHMgPSB0cnVlLAogCS5y
ZWFkX29ubHkgPSBmYWxzZSwKIAkud29yZF9zaXplID0gNCwKIAkuc3RyaWRlID0gMSwKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvbnZtZW0vaW14LW9jb3RwLmMgYi9kcml2ZXJzL252bWVtL2lteC1vY290
cC5jCmluZGV4IGU5YjUyZWNiM2Y3Mi4uZTM3YTgyZjk4YmE2IDEwMDY0NAotLS0gYS9kcml2ZXJz
L252bWVtL2lteC1vY290cC5jCisrKyBiL2RyaXZlcnMvbnZtZW0vaW14LW9jb3RwLmMKQEAgLTYx
Niw2ICs2MTYsNyBAQCBzdGF0aWMgaW50IGlteF9vY290cF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1f
ZGV2aWNlICpwZGV2KQogCQlyZXR1cm4gUFRSX0VSUihwcml2LT5jbGspOwogCiAJcHJpdi0+cGFy
YW1zID0gb2ZfZGV2aWNlX2dldF9tYXRjaF9kYXRhKCZwZGV2LT5kZXYpOworCWlteF9vY290cF9u
dm1lbV9jb25maWcudXNlX2ZpeGVkX29mX2NlbGxzID0gdHJ1ZTsKIAlpbXhfb2NvdHBfbnZtZW1f
Y29uZmlnLnNpemUgPSA0ICogcHJpdi0+cGFyYW1zLT5ucmVnczsKIAlpbXhfb2NvdHBfbnZtZW1f
Y29uZmlnLmRldiA9IGRldjsKIAlpbXhfb2NvdHBfbnZtZW1fY29uZmlnLnByaXYgPSBwcml2Owpk
aWZmIC0tZ2l0IGEvZHJpdmVycy9udm1lbS9tZXNvbi1lZnVzZS5jIGIvZHJpdmVycy9udm1lbS9t
ZXNvbi1lZnVzZS5jCmluZGV4IGQ2YjUzMzQ5N2NlMS4uNjU3ZTE3MWQ1YWYzIDEwMDY0NAotLS0g
YS9kcml2ZXJzL252bWVtL21lc29uLWVmdXNlLmMKKysrIGIvZHJpdmVycy9udm1lbS9tZXNvbi1l
ZnVzZS5jCkBAIC05Myw2ICs5Myw3IEBAIHN0YXRpYyBpbnQgbWVzb25fZWZ1c2VfcHJvYmUoc3Ry
dWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAogCWVjb25maWctPmRldiA9IGRldjsKIAllY29u
ZmlnLT5uYW1lID0gZGV2X25hbWUoZGV2KTsKKwllY29uZmlnLT51c2VfZml4ZWRfb2ZfY2VsbHMg
PSB0cnVlOwogCWVjb25maWctPnN0cmlkZSA9IDE7CiAJZWNvbmZpZy0+d29yZF9zaXplID0gMTsK
IAllY29uZmlnLT5yZWdfcmVhZCA9IG1lc29uX2VmdXNlX3JlYWQ7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL252bWVtL21lc29uLW14LWVmdXNlLmMgYi9kcml2ZXJzL252bWVtL21lc29uLW14LWVmdXNl
LmMKaW5kZXggMTNlYjE0MzE2ZjQ2Li43Y2M1MTM5MWVjOWMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
bnZtZW0vbWVzb24tbXgtZWZ1c2UuYworKysgYi9kcml2ZXJzL252bWVtL21lc29uLW14LWVmdXNl
LmMKQEAgLTIxMyw2ICsyMTMsNyBAQCBzdGF0aWMgaW50IG1lc29uX214X2VmdXNlX3Byb2JlKHN0
cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJZWZ1c2UtPmNvbmZpZy5vd25lciA9IFRISVNf
TU9EVUxFOwogCWVmdXNlLT5jb25maWcuZGV2ID0gJnBkZXYtPmRldjsKIAllZnVzZS0+Y29uZmln
LnByaXYgPSBlZnVzZTsKKwllZnVzZS0+Y29uZmlnLnVzZV9maXhlZF9vZl9jZWxscyA9IHRydWU7
CiAJZWZ1c2UtPmNvbmZpZy5zdHJpZGUgPSBkcnZkYXRhLT53b3JkX3NpemU7CiAJZWZ1c2UtPmNv
bmZpZy53b3JkX3NpemUgPSBkcnZkYXRhLT53b3JkX3NpemU7CiAJZWZ1c2UtPmNvbmZpZy5zaXpl
ID0gU1pfNTEyOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9udm1lbS9taWNyb2NoaXAtb3RwYy5jIGIv
ZHJpdmVycy9udm1lbS9taWNyb2NoaXAtb3RwYy5jCmluZGV4IDQzNmUwZGM0ZjMzNy4uZmI5MjBm
ZDdhOGZjIDEwMDY0NAotLS0gYS9kcml2ZXJzL252bWVtL21pY3JvY2hpcC1vdHBjLmMKKysrIGIv
ZHJpdmVycy9udm1lbS9taWNyb2NoaXAtb3RwYy5jCkBAIC0yNjEsNiArMjYxLDcgQEAgc3RhdGlj
IGludCBtY2hwX290cGNfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAkJcmV0
dXJuIHJldDsKIAogCW1jaHBfbnZtZW1fY29uZmlnLmRldiA9IG90cGMtPmRldjsKKwltY2hwX252
bWVtX2NvbmZpZy51c2VfZml4ZWRfb2ZfY2VsbHMgPSB0cnVlOwogCW1jaHBfbnZtZW1fY29uZmln
LnNpemUgPSBzaXplOwogCW1jaHBfbnZtZW1fY29uZmlnLnByaXYgPSBvdHBjOwogCW52bWVtID0g
ZGV2bV9udm1lbV9yZWdpc3RlcigmcGRldi0+ZGV2LCAmbWNocF9udm1lbV9jb25maWcpOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9udm1lbS9tdGstZWZ1c2UuYyBiL2RyaXZlcnMvbnZtZW0vbXRrLWVm
dXNlLmMKaW5kZXggYTA4ZTBhZWRkMjFjLi4xOTQ3MzM3YTEyMWYgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvbnZtZW0vbXRrLWVmdXNlLmMKKysrIGIvZHJpdmVycy9udm1lbS9tdGstZWZ1c2UuYwpAQCAt
NDUsNiArNDUsNyBAQCBzdGF0aWMgaW50IG10a19lZnVzZV9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1f
ZGV2aWNlICpwZGV2KQogCWlmIChJU19FUlIocHJpdi0+YmFzZSkpCiAJCXJldHVybiBQVFJfRVJS
KHByaXYtPmJhc2UpOwogCisJZWNvbmZpZy51c2VfZml4ZWRfb2ZfY2VsbHMgPSB0cnVlOwogCWVj
b25maWcuc3RyaWRlID0gMTsKIAllY29uZmlnLndvcmRfc2l6ZSA9IDE7CiAJZWNvbmZpZy5yZWdf
cmVhZCA9IG10a19yZWdfcmVhZDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbnZtZW0vcWNvbS1zcG1p
LXNkYW0uYyBiL2RyaXZlcnMvbnZtZW0vcWNvbS1zcG1pLXNkYW0uYwppbmRleCBmODIyNzkwZGI0
OWUuLmI1NDdkZWY5NGI1YiAxMDA2NDQKLS0tIGEvZHJpdmVycy9udm1lbS9xY29tLXNwbWktc2Rh
bS5jCisrKyBiL2RyaXZlcnMvbnZtZW0vcWNvbS1zcG1pLXNkYW0uYwpAQCAtMTQyLDYgKzE0Miw3
IEBAIHN0YXRpYyBpbnQgc2RhbV9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQog
CXNkYW0tPnNkYW1fY29uZmlnLm5hbWUgPSAic3BtaV9zZGFtIjsKIAlzZGFtLT5zZGFtX2NvbmZp
Zy5pZCA9IE5WTUVNX0RFVklEX0FVVE87CiAJc2RhbS0+c2RhbV9jb25maWcub3duZXIgPSBUSElT
X01PRFVMRTsKKwlzZGFtLT5zZGFtX2NvbmZpZy51c2VfZml4ZWRfb2ZfY2VsbHMgPSB0cnVlOwog
CXNkYW0tPnNkYW1fY29uZmlnLnN0cmlkZSA9IDE7CiAJc2RhbS0+c2RhbV9jb25maWcud29yZF9z
aXplID0gMTsKIAlzZGFtLT5zZGFtX2NvbmZpZy5yZWdfcmVhZCA9IHNkYW1fcmVhZDsKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvbnZtZW0vcWZwcm9tLmMgYi9kcml2ZXJzL252bWVtL3FmcHJvbS5jCmlu
ZGV4IGMxZTg5M2M4YTI0Ny4uZWIxMjZkNTA3NTYxIDEwMDY0NAotLS0gYS9kcml2ZXJzL252bWVt
L3FmcHJvbS5jCisrKyBiL2RyaXZlcnMvbnZtZW0vcWZwcm9tLmMKQEAgLTM1Nyw2ICszNTcsNyBA
QCBzdGF0aWMgaW50IHFmcHJvbV9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQog
ewogCXN0cnVjdCBudm1lbV9jb25maWcgZWNvbmZpZyA9IHsKIAkJLm5hbWUgPSAicWZwcm9tIiwK
KwkJLnVzZV9maXhlZF9vZl9jZWxscyA9IHRydWUsCiAJCS5zdHJpZGUgPSAxLAogCQkud29yZF9z
aXplID0gMSwKIAkJLmlkID0gTlZNRU1fREVWSURfQVVUTywKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
bnZtZW0vcmF2ZS1zcC1lZXByb20uYyBiL2RyaXZlcnMvbnZtZW0vcmF2ZS1zcC1lZXByb20uYwpp
bmRleCBjNDU2MDExYjc1ZTguLmU5YjRjNzkyN2UzNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9udm1l
bS9yYXZlLXNwLWVlcHJvbS5jCisrKyBiL2RyaXZlcnMvbnZtZW0vcmF2ZS1zcC1lZXByb20uYwpA
QCAtMzI4LDYgKzMyOCw3IEBAIHN0YXRpYyBpbnQgcmF2ZV9zcF9lZXByb21fcHJvYmUoc3RydWN0
IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAlvZl9wcm9wZXJ0eV9yZWFkX3N0cmluZyhucCwgInpp
aSxlZXByb20tbmFtZSIsICZjb25maWcubmFtZSk7CiAJY29uZmlnLnByaXYJCT0gZWVwcm9tOwog
CWNvbmZpZy5kZXYJCT0gZGV2OworCWNvbmZpZy51c2VfZml4ZWRfb2ZfY2VsbHMJPSB0cnVlOwog
CWNvbmZpZy5zaXplCQk9IHNpemU7CiAJY29uZmlnLnJlZ19yZWFkCQk9IHJhdmVfc3BfZWVwcm9t
X3JlZ19yZWFkOwogCWNvbmZpZy5yZWdfd3JpdGUJPSByYXZlX3NwX2VlcHJvbV9yZWdfd3JpdGU7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL252bWVtL3JvY2tjaGlwLWVmdXNlLmMgYi9kcml2ZXJzL252
bWVtL3JvY2tjaGlwLWVmdXNlLmMKaW5kZXggZTQ1NzlkZTVkMDE0Li4yMTFmNmU3NDAxYTkgMTAw
NjQ0Ci0tLSBhL2RyaXZlcnMvbnZtZW0vcm9ja2NoaXAtZWZ1c2UuYworKysgYi9kcml2ZXJzL252
bWVtL3JvY2tjaGlwLWVmdXNlLmMKQEAgLTIwNSw2ICsyMDUsNyBAQCBzdGF0aWMgaW50IHJvY2tj
aGlwX3JrMzM5OV9lZnVzZV9yZWFkKHZvaWQgKmNvbnRleHQsIHVuc2lnbmVkIGludCBvZmZzZXQs
CiAKIHN0YXRpYyBzdHJ1Y3QgbnZtZW1fY29uZmlnIGVjb25maWcgPSB7CiAJLm5hbWUgPSAicm9j
a2NoaXAtZWZ1c2UiLAorCS51c2VfZml4ZWRfb2ZfY2VsbHMgPSB0cnVlLAogCS5zdHJpZGUgPSAx
LAogCS53b3JkX3NpemUgPSAxLAogCS5yZWFkX29ubHkgPSB0cnVlLApkaWZmIC0tZ2l0IGEvZHJp
dmVycy9udm1lbS9zYzI3eHgtZWZ1c2UuYyBiL2RyaXZlcnMvbnZtZW0vc2MyN3h4LWVmdXNlLmMK
aW5kZXggYzgyNWZjOTAyZDEwLi5lZDVjYzRmM2UyYmMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbnZt
ZW0vc2MyN3h4LWVmdXNlLmMKKysrIGIvZHJpdmVycy9udm1lbS9zYzI3eHgtZWZ1c2UuYwpAQCAt
MjQ4LDYgKzI0OCw3IEBAIHN0YXRpYyBpbnQgc2MyN3h4X2VmdXNlX3Byb2JlKHN0cnVjdCBwbGF0
Zm9ybV9kZXZpY2UgKnBkZXYpCiAJZWNvbmZpZy5yZWdfcmVhZCA9IHNjMjd4eF9lZnVzZV9yZWFk
OwogCWVjb25maWcucHJpdiA9IGVmdXNlOwogCWVjb25maWcuZGV2ID0gJnBkZXYtPmRldjsKKwll
Y29uZmlnLnVzZV9maXhlZF9vZl9jZWxscyA9IHRydWU7CiAJbnZtZW0gPSBkZXZtX252bWVtX3Jl
Z2lzdGVyKCZwZGV2LT5kZXYsICZlY29uZmlnKTsKIAlpZiAoSVNfRVJSKG52bWVtKSkgewogCQlk
ZXZfZXJyKCZwZGV2LT5kZXYsICJmYWlsZWQgdG8gcmVnaXN0ZXIgbnZtZW0gY29uZmlnXG4iKTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvbnZtZW0vc3ByZC1lZnVzZS5jIGIvZHJpdmVycy9udm1lbS9z
cHJkLWVmdXNlLmMKaW5kZXggNGYxZmNiZmVjMzk0Li5lZjMxNjE2NDVmNjAgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvbnZtZW0vc3ByZC1lZnVzZS5jCisrKyBiL2RyaXZlcnMvbnZtZW0vc3ByZC1lZnVz
ZS5jCkBAIC00MDgsNiArNDA4LDcgQEAgc3RhdGljIGludCBzcHJkX2VmdXNlX3Byb2JlKHN0cnVj
dCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJZWNvbmZpZy5yZWFkX29ubHkgPSBmYWxzZTsKIAll
Y29uZmlnLm5hbWUgPSAic3ByZC1lZnVzZSI7CiAJZWNvbmZpZy5zaXplID0gZWZ1c2UtPmRhdGEt
PmJsa19udW1zICogU1BSRF9FRlVTRV9CTE9DS19XSURUSDsKKwllY29uZmlnLnVzZV9maXhlZF9v
Zl9jZWxscyA9IHRydWU7CiAJZWNvbmZpZy5yZWdfcmVhZCA9IHNwcmRfZWZ1c2VfcmVhZDsKIAll
Y29uZmlnLnJlZ193cml0ZSA9IHNwcmRfZWZ1c2Vfd3JpdGU7CiAJZWNvbmZpZy5wcml2ID0gZWZ1
c2U7CmRpZmYgLS1naXQgYS9kcml2ZXJzL252bWVtL3N0bTMyLXJvbWVtLmMgYi9kcml2ZXJzL252
bWVtL3N0bTMyLXJvbWVtLmMKaW5kZXggYmE3NzllMjY5MzdhLi5hNmZjNDNhY2I3OTcgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvbnZtZW0vc3RtMzItcm9tZW0uYworKysgYi9kcml2ZXJzL252bWVtL3N0
bTMyLXJvbWVtLmMKQEAgLTIwOCw2ICsyMDgsNyBAQCBzdGF0aWMgaW50IHN0bTMyX3JvbWVtX3By
b2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJcHJpdi0+Y2ZnLnByaXYgPSBwcml2
OwogCXByaXYtPmNmZy5vd25lciA9IFRISVNfTU9EVUxFOwogCXByaXYtPmNmZy50eXBlID0gTlZN
RU1fVFlQRV9PVFA7CisJcHJpdi0+Y2ZnLnVzZV9maXhlZF9vZl9jZWxscyA9IHRydWU7CiAKIAlw
cml2LT5sb3dlciA9IDA7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbnZtZW0vc3VucGx1cy1vY290
cC5jIGIvZHJpdmVycy9udm1lbS9zdW5wbHVzLW9jb3RwLmMKaW5kZXggNTJiOTI4YTdhNmQ1Li41
N2UzZTA4MzNiODUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbnZtZW0vc3VucGx1cy1vY290cC5jCisr
KyBiL2RyaXZlcnMvbnZtZW0vc3VucGx1cy1vY290cC5jCkBAIC0xNDUsNiArMTQ1LDcgQEAgc3Rh
dGljIGludCBzcF9vY290cF9yZWFkKHZvaWQgKnByaXYsIHVuc2lnbmVkIGludCBvZmZzZXQsIHZv
aWQgKnZhbHVlLCBzaXplX3QgYnkKIAogc3RhdGljIHN0cnVjdCBudm1lbV9jb25maWcgc3Bfb2Nv
dHBfbnZtZW1fY29uZmlnID0gewogCS5uYW1lID0gInNwLW9jb3RwIiwKKwkudXNlX2ZpeGVkX29m
X2NlbGxzID0gdHJ1ZSwKIAkucmVhZF9vbmx5ID0gdHJ1ZSwKIAkud29yZF9zaXplID0gMSwKIAku
c2l6ZSA9IFFBQzYyOF9PVFBfU0laRSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbnZtZW0vc3VueGlf
c2lkLmMgYi9kcml2ZXJzL252bWVtL3N1bnhpX3NpZC5jCmluZGV4IGE5NzBmMTc0MWNjNi4uNmFi
N2FhMzcyNGEwIDEwMDY0NAotLS0gYS9kcml2ZXJzL252bWVtL3N1bnhpX3NpZC5jCisrKyBiL2Ry
aXZlcnMvbnZtZW0vc3VueGlfc2lkLmMKQEAgLTE1Niw2ICsxNTYsNyBAQCBzdGF0aWMgaW50IHN1
bnhpX3NpZF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCW52bWVtX2NmZy0+
ZGV2ID0gZGV2OwogCW52bWVtX2NmZy0+bmFtZSA9ICJzdW54aS1zaWQiOwogCW52bWVtX2NmZy0+
dHlwZSA9IE5WTUVNX1RZUEVfT1RQOworCW52bWVtX2NmZy0+dXNlX2ZpeGVkX29mX2NlbGxzID0g
dHJ1ZTsKIAludm1lbV9jZmctPnJlYWRfb25seSA9IHRydWU7CiAJbnZtZW1fY2ZnLT5zaXplID0g
Y2ZnLT5zaXplOwogCW52bWVtX2NmZy0+d29yZF9zaXplID0gMTsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvbnZtZW0vdW5pcGhpZXItZWZ1c2UuYyBiL2RyaXZlcnMvbnZtZW0vdW5pcGhpZXItZWZ1c2Uu
YwppbmRleCBhY2E5MTBiM2I2ZjguLjY5YjlkZmU2YWI2ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy9u
dm1lbS91bmlwaGllci1lZnVzZS5jCisrKyBiL2RyaXZlcnMvbnZtZW0vdW5pcGhpZXItZWZ1c2Uu
YwpAQCAtNTMsNiArNTMsNyBAQCBzdGF0aWMgaW50IHVuaXBoaWVyX2VmdXNlX3Byb2JlKHN0cnVj
dCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJZWNvbmZpZy5zaXplID0gcmVzb3VyY2Vfc2l6ZShy
ZXMpOwogCWVjb25maWcucHJpdiA9IHByaXY7CiAJZWNvbmZpZy5kZXYgPSBkZXY7CisJZWNvbmZp
Zy51c2VfZml4ZWRfb2ZfY2VsbHMgPSB0cnVlOwogCW52bWVtID0gZGV2bV9udm1lbV9yZWdpc3Rl
cihkZXYsICZlY29uZmlnKTsKIAogCXJldHVybiBQVFJfRVJSX09SX1pFUk8obnZtZW0pOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy9udm1lbS96eW5xbXBfbnZtZW0uYyBiL2RyaXZlcnMvbnZtZW0venlu
cW1wX252bWVtLmMKaW5kZXggZTI4ZDdiMTMzZTExLi5kMTM3NTBhNGMxMTIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvbnZtZW0venlucW1wX252bWVtLmMKKysrIGIvZHJpdmVycy9udm1lbS96eW5xbXBf
bnZtZW0uYwpAQCAtNTgsNiArNTgsNyBAQCBzdGF0aWMgaW50IHp5bnFtcF9udm1lbV9wcm9iZShz
dHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCiAJcHJpdi0+ZGV2ID0gZGV2OwogCWVjb25m
aWcuZGV2ID0gZGV2OworCWVjb25maWcudXNlX2ZpeGVkX29mX2NlbGxzID0gdHJ1ZTsKIAllY29u
ZmlnLnJlZ19yZWFkID0genlucW1wX252bWVtX3JlYWQ7CiAJZWNvbmZpZy5wcml2ID0gcHJpdjsK
IApkaWZmIC0tZ2l0IGEvZHJpdmVycy9ydGMvbnZtZW0uYyBiL2RyaXZlcnMvcnRjL252bWVtLmMK
aW5kZXggMDdlZGUyMWNlZTM0Li41Y2MwMzlkOTIyNTcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcnRj
L252bWVtLmMKKysrIGIvZHJpdmVycy9ydGMvbnZtZW0uYwpAQCAtMjEsNiArMjEsNyBAQCBpbnQg
ZGV2bV9ydGNfbnZtZW1fcmVnaXN0ZXIoc3RydWN0IHJ0Y19kZXZpY2UgKnJ0YywKIAogCW52bWVt
X2NvbmZpZy0+ZGV2ID0gZGV2OwogCW52bWVtX2NvbmZpZy0+b3duZXIgPSBydGMtPm93bmVyOwor
CW52bWVtX2NvbmZpZy0+dXNlX2ZpeGVkX29mX2NlbGxzID0gdHJ1ZTsKIAludm1lbSA9IGRldm1f
bnZtZW1fcmVnaXN0ZXIoZGV2LCBudm1lbV9jb25maWcpOwogCWlmIChJU19FUlIobnZtZW0pKQog
CQlkZXZfZXJyKGRldiwgImZhaWxlZCB0byByZWdpc3RlciBudm1lbSBkZXZpY2UgZm9yIFJUQ1xu
Iik7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3cxL3NsYXZlcy93MV9kczI1MHguYyBiL2RyaXZlcnMv
dzEvc2xhdmVzL3cxX2RzMjUweC5jCmluZGV4IDc1OTJjNzA1MGQxZC4uNTM4NzIyYjQxZjg3IDEw
MDY0NAotLS0gYS9kcml2ZXJzL3cxL3NsYXZlcy93MV9kczI1MHguYworKysgYi9kcml2ZXJzL3cx
L3NsYXZlcy93MV9kczI1MHguYwpAQCAtMTY4LDYgKzE2OCw3IEBAIHN0YXRpYyBpbnQgdzFfZXBy
b21fYWRkX3NsYXZlKHN0cnVjdCB3MV9zbGF2ZSAqc2wpCiAJc3RydWN0IG52bWVtX2RldmljZSAq
bnZtZW07CiAJc3RydWN0IG52bWVtX2NvbmZpZyBudm1lbV9jZmcgPSB7CiAJCS5kZXYgPSAmc2wt
PmRldiwKKwkJLnVzZV9maXhlZF9vZl9jZWxscyA9IHRydWUsCiAJCS5yZWdfcmVhZCA9IHcxX252
bWVtX3JlYWQsCiAJCS50eXBlID0gTlZNRU1fVFlQRV9PVFAsCiAJCS5yZWFkX29ubHkgPSB0cnVl
LApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9udm1lbS1wcm92aWRlci5oIGIvaW5jbHVkZS9s
aW51eC9udm1lbS1wcm92aWRlci5oCmluZGV4IDAyNjJiODYxOTRlYi4uYjNjMTRjZTg3YTY1IDEw
MDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L252bWVtLXByb3ZpZGVyLmgKKysrIGIvaW5jbHVkZS9s
aW51eC9udm1lbS1wcm92aWRlci5oCkBAIC03Myw2ICs3Myw3IEBAIHN0cnVjdCBudm1lbV9jZWxs
X2luZm8gewogICogQG93bmVyOglQb2ludGVyIHRvIGV4cG9ydGVyIG1vZHVsZS4gVXNlZCBmb3Ig
cmVmY291bnRpbmcuCiAgKiBAY2VsbHM6CU9wdGlvbmFsIGFycmF5IG9mIHByZS1kZWZpbmVkIE5W
TUVNIGNlbGxzLgogICogQG5jZWxsczoJTnVtYmVyIG9mIGVsZW1lbnRzIGluIGNlbGxzLgorICog
QHVzZV9maXhlZF9vZl9jZWxsczoJUmVhZCBmaXhlZCBOVk1FTSBjZWxscyBmcm9tIE9GLgogICog
QGtlZXBvdXQ6CU9wdGlvbmFsIGFycmF5IG9mIGtlZXBvdXQgcmFuZ2VzIChzb3J0ZWQgYXNjZW5k
aW5nIGJ5IHN0YXJ0KS4KICAqIEBua2VlcG91dDoJTnVtYmVyIG9mIGVsZW1lbnRzIGluIHRoZSBr
ZWVwb3V0IGFycmF5LgogICogQHR5cGU6CVR5cGUgb2YgdGhlIG52bWVtIHN0b3JhZ2UKQEAgLTEw
Myw2ICsxMDQsNyBAQCBzdHJ1Y3QgbnZtZW1fY29uZmlnIHsKIAlzdHJ1Y3QgbW9kdWxlCQkqb3du
ZXI7CiAJY29uc3Qgc3RydWN0IG52bWVtX2NlbGxfaW5mbwkqY2VsbHM7CiAJaW50CQkJbmNlbGxz
OworCWJvb2wJCQl1c2VfZml4ZWRfb2ZfY2VsbHM7CiAJY29uc3Qgc3RydWN0IG52bWVtX2tlZXBv
dXQgKmtlZXBvdXQ7CiAJdW5zaWduZWQgaW50CQlua2VlcG91dDsKIAllbnVtIG52bWVtX3R5cGUJ
CXR5cGU7Ci0tIAoyLjM0LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCkxpbnV4LXN0bTMyIG1haWxpbmcgbGlzdApMaW51eC1zdG0zMkBzdC1tZC1tYWls
bWFuLnN0b3JtcmVwbHkuY29tCmh0dHBzOi8vc3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbS9t
YWlsbWFuL2xpc3RpbmZvL2xpbnV4LXN0bTMyCg==
