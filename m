Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 59B53AE3A3F
	for <lists+linux-stm32@lfdr.de>; Mon, 23 Jun 2025 11:30:10 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 18F06C3F93C;
	Mon, 23 Jun 2025 09:30:10 +0000 (UTC)
Received: from mx07-00178001.pphosted.com (mx07-00178001.pphosted.com
 [185.132.182.106])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 11BF3C3087B
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Mon, 23 Jun 2025 09:30:09 +0000 (UTC)
Received: from pps.filterd (m0241204.ppops.net [127.0.0.1])
 by mx07-00178001.pphosted.com (8.18.1.2/8.18.1.2) with ESMTP id 55N6FIfA015580;
 Mon, 23 Jun 2025 11:29:52 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=foss.st.com; h=
 cc:content-transfer-encoding:content-type:date:from:in-reply-to
 :message-id:mime-version:references:subject:to; s=selector1; bh=
 4UBGOUpuPOeKtQ2u8AmnXlBkDE/8J7UlX6pI6buIBoY=; b=8A0DskKkVRd4jcDB
 kIqXuPfJA3i+Z70bOMyPkcoWwUjmMgHsriIQlswxSPPxWhpVfVJtT4SpmSXCJ2g2
 eJLSSvnd1AsIHQyHH3VqGqj9Wny+vLIO5SiqR+1iXD1kubeMmgGL32K9D2Y9PcoB
 xVUZPHxvIsoQT4dEONQtAleMRDFTt/WmOO5tGlw4JNZRyK/ubRZ+YGeMFZizEAb7
 VtrqSZw1+GBgBhRWOL/CuhR37PkRDDunHtA/SsxA/Ovu0W5Ye3v+7rv0mG28n//D
 Xad3FLCfbS5MvHotgd+W0WgA0rDrYSSRQ68hdIvHHvuZC/taa8D2kNlAFiBJm+7L
 K3h3aQ==
Received: from beta.dmz-ap.st.com (beta.dmz-ap.st.com [138.198.100.35])
 by mx07-00178001.pphosted.com (PPS) with ESMTPS id 47dm3372qg-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Mon, 23 Jun 2025 11:29:52 +0200 (MEST)
Received: from euls16034.sgp.st.com (euls16034.sgp.st.com [10.75.44.20])
 by beta.dmz-ap.st.com (STMicroelectronics) with ESMTP id 539DD40053;
 Mon, 23 Jun 2025 11:28:34 +0200 (CEST)
Received: from Webmail-eu.st.com (shfdag1node2.st.com [10.75.129.70])
 by euls16034.sgp.st.com (STMicroelectronics) with ESMTP id 8C1135C3DDD;
 Mon, 23 Jun 2025 11:27:26 +0200 (CEST)
Received: from localhost (10.252.18.29) by SHFDAG1NODE2.st.com (10.75.129.70)
 with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 23 Jun
 2025 11:27:26 +0200
From: =?utf-8?q?Cl=C3=A9ment_Le_Goffic?= <clement.legoffic@foss.st.com>
Date: Mon, 23 Jun 2025 11:27:11 +0200
MIME-Version: 1.0
Message-ID: <20250623-ddrperfm-upstream-v1-6-7dffff168090@foss.st.com>
References: <20250623-ddrperfm-upstream-v1-0-7dffff168090@foss.st.com>
In-Reply-To: <20250623-ddrperfm-upstream-v1-0-7dffff168090@foss.st.com>
To: Will Deacon <will@kernel.org>, Mark Rutland <mark.rutland@arm.com>, Rob
 Herring <robh@kernel.org>, Krzysztof Kozlowski <krzk+dt@kernel.org>, Conor
 Dooley <conor+dt@kernel.org>, Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Alexandre Torgue <alexandre.torgue@foss.st.com>, Philipp Zabel
 <p.zabel@pengutronix.de>, Jonathan Corbet <corbet@lwn.net>,
 Gatien Chevallier <gatien.chevallier@foss.st.com>,
 Michael Turquette <mturquette@baylibre.com>,
 Stephen Boyd <sboyd@kernel.org>, Gabriel Fernandez
 <gabriel.fernandez@foss.st.com>
X-Mailer: b4 0.15-dev-c25d1
X-Originating-IP: [10.252.18.29]
X-ClientProxiedBy: SHFCAS1NODE1.st.com (10.75.129.72) To SHFDAG1NODE2.st.com
 (10.75.129.70)
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.293,Aquarius:18.0.1099,Hydra:6.0.736,FMLib:17.12.80.40
 definitions=2025-06-23_03,2025-06-23_02,2025-03-28_01
Cc: devicetree@vger.kernel.org, linux-doc@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-clk@vger.kernel.org,
 linux-perf-users@vger.kernel.org, linux-stm32@st-md-mailman.stormreply.com,
 linux-arm-kernel@lists.infradead.org
Subject: [Linux-stm32] [PATCH 06/13] perf: stm32: introduce DDRPERFM driver
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

SW50cm9kdWNlIHRoZSBkcml2ZXIgZm9yIHRoZSBERFIgUGVyZm9ybWFuY2UgTW9uaXRvciBhdmFp
bGFibGUgb24KU1RNMzJNUFUgU29DLgoKT24gU1RNMzJNUDIgcGxhdGZvcm1zLCB0aGUgRERSUEVS
Rk0gYWxsb3dzIHRvIG1vbml0b3IgdXAgdG8gOCBERFIgZXZlbnRzCnRoYXQgY29tZSBmcm9tIHRo
ZSBERFIgQ29udHJvbGxlciBzdWNoIGFzIHJlYWQgb3Igd3JpdGUgZXZlbnRzLgoKT24gU1RNMzJN
UDEgcGxhdGZvcm1zLCB0aGUgRERSUEVSRk0gY2Fubm90IG1vbml0b3IgYW55IGV2ZW50IG9uIGFu
eQpjb3VudGVyLCB0aGVyZSBpcyBhIG5vdGlvbiBvZiBzZXQgb2YgZXZlbnRzLgpFdmVudHMgZnJv
bSBkaWZmZXJlbnQgc2V0cyBjYW5ub3QgYmUgbW9uaXRvcmVkIGF0IHRoZSBzYW1lIHRpbWUuClRo
ZSBmaXJzdCBjaG9zZW4gZXZlbnQgc2VsZWN0cyB0aGUgc2V0LgpUaGUgc2V0IGlzIGNvZGVkIGlu
IHRoZSBmaXJzdCB0d28gYnl0ZXMgb2YgdGhlIGNvbmZpZyB2YWx1ZSB3aGljaCBpcyBvbiA0CmJ5
dGVzLgoKT24gU1RNMzJNUDI1eCBzZXJpZXMsIHRoZSBERFJQRVJGTSBjbG9jayBpcyBzaGFyZWQg
d2l0aCB0aGUgRERSIGNvbnRyb2xsZXIKYW5kIG1heSBiZSBzZWN1cmVkIGJ5IGJvb3Rsb2FkZXJz
LgpBY2Nlc3MgY29udHJvbGxlcnMgYWxsb3cgdG8gY2hlY2sgYWNjZXNzIHRvIGEgcmVzb3VyY2Uu
IFVzZSB0aGUgYWNjZXNzCmNvbnRyb2xsZXIgZGVmaW5lZCBpbiB0aGUgZGV2aWNldHJlZSB0byBr
bm93IGFib3V0IHRoZSBhY2Nlc3MgdG8gdGhlCkREUlBFUkZNIGNsb2NrLgoKU2lnbmVkLW9mZi1i
eTogQ2zDqW1lbnQgTGUgR29mZmljIDxjbGVtZW50LmxlZ29mZmljQGZvc3Muc3QuY29tPgotLS0K
IGRyaXZlcnMvcGVyZi9LY29uZmlnICAgICAgICAgfCAgMTEgKwogZHJpdmVycy9wZXJmL01ha2Vm
aWxlICAgICAgICB8ICAgMSArCiBkcml2ZXJzL3BlcmYvc3RtMzJfZGRyX3BtdS5jIHwgODkzICsr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysKIDMgZmlsZXMgY2hhbmdl
ZCwgOTA1IGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9kcml2ZXJzL3BlcmYvS2NvbmZpZyBi
L2RyaXZlcnMvcGVyZi9LY29uZmlnCmluZGV4IDI3OGM5MjlkYzg3YS4uNTExODUzNTEzNGVlIDEw
MDY0NAotLS0gYS9kcml2ZXJzL3BlcmYvS2NvbmZpZworKysgYi9kcml2ZXJzL3BlcmYvS2NvbmZp
ZwpAQCAtMTk4LDYgKzE5OCwxNyBAQCBjb25maWcgUUNPTV9MM19QTVUKIAkgICBBZGRzIHRoZSBM
MyBjYWNoZSBQTVUgaW50byB0aGUgcGVyZiBldmVudHMgc3Vic3lzdGVtIGZvcgogCSAgIG1vbml0
b3JpbmcgTDMgY2FjaGUgZXZlbnRzLgogCitjb25maWcgU1RNMzJfRERSX1BNVQorCXRyaXN0YXRl
ICJTVE0zMiBERFIgUE1VIgorCWRlcGVuZHMgb24gQVJDSF9TVE0zMiB8fCBDT01QSUxFX1RFU1QK
KwlkZWZhdWx0IG0KKwloZWxwCisJICBQcm92aWRlcyBzdXBwb3J0IGZvciB0aGUgRERSIHBlcmZv
cm1hbmNlIG1vbml0b3Igb24gU1RNMzJNUFUgcGxhdGZvcm1zLgorCSAgVGhlIG1vbml0b3IgcHJv
dmlkZXMgY291bnRlcnMgZm9yIG1lbW9yeSByZWxhdGVkIGV2ZW50cy4KKwkgIEl0IGFsbG93cyBk
ZXZlbG9wZXJzIHRvIGFuYWx5emUgYW5kIG9wdGltaXplIEREUiBwZXJmb3JtYW5jZS4KKwkgIEVu
YWJsaW5nIHRoaXMgZmVhdHVyZSBpcyB1c2VmdWwgZm9yIHBlcmZvcm1hbmNlIHR1bmluZyBhbmQg
ZGVidWdnaW5nIG1lbW9yeQorCSAgc3Vic3lzdGVtIGlzc3VlcyBvbiBzdXBwb3J0ZWQgaGFyZHdh
cmUuCisKIGNvbmZpZyBUSFVOREVSWDJfUE1VCiAJdHJpc3RhdGUgIkNhdml1bSBUaHVuZGVyWDIg
U29DIFBNVSBVTkNPUkUiCiAJZGVwZW5kcyBvbiBBUkNIX1RIVU5ERVIyIHx8IENPTVBJTEVfVEVT
VApkaWZmIC0tZ2l0IGEvZHJpdmVycy9wZXJmL01ha2VmaWxlIGIvZHJpdmVycy9wZXJmL01ha2Vm
aWxlCmluZGV4IGRlNzFkMjU3NDg1Ny4uN2Y4M2I1MGZlYjcxIDEwMDY0NAotLS0gYS9kcml2ZXJz
L3BlcmYvTWFrZWZpbGUKKysrIGIvZHJpdmVycy9wZXJmL01ha2VmaWxlCkBAIC0yMCw2ICsyMCw3
IEBAIG9iai0kKENPTkZJR19SSVNDVl9QTVUpICs9IHJpc2N2X3BtdS5vCiBvYmotJChDT05GSUdf
UklTQ1ZfUE1VX0xFR0FDWSkgKz0gcmlzY3ZfcG11X2xlZ2FjeS5vCiBvYmotJChDT05GSUdfUklT
Q1ZfUE1VX1NCSSkgKz0gcmlzY3ZfcG11X3NiaS5vCiBvYmotJChDT05GSUdfU1RBUkZJVkVfU1RB
UkxJTktfUE1VKSArPSBzdGFyZml2ZV9zdGFybGlua19wbXUubworb2JqLSQoQ09ORklHX1NUTTMy
X0REUl9QTVUpICs9IHN0bTMyX2Rkcl9wbXUubwogb2JqLSQoQ09ORklHX1RIVU5ERVJYMl9QTVUp
ICs9IHRodW5kZXJ4Ml9wbXUubwogb2JqLSQoQ09ORklHX1hHRU5FX1BNVSkgKz0geGdlbmVfcG11
Lm8KIG9iai0kKENPTkZJR19BUk1fU1BFX1BNVSkgKz0gYXJtX3NwZV9wbXUubwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy9wZXJmL3N0bTMyX2Rkcl9wbXUuYyBiL2RyaXZlcnMvcGVyZi9zdG0zMl9kZHJf
cG11LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5jMGJjZTFmNDQ2
YTAKLS0tIC9kZXYvbnVsbAorKysgYi9kcml2ZXJzL3BlcmYvc3RtMzJfZGRyX3BtdS5jCkBAIC0w
LDAgKzEsODkzIEBACisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5Cisv
KgorICogQ29weXJpZ2h0IChDKSAyMDI1LCBTVE1pY3JvZWxlY3Ryb25pY3MgLSBBbGwgUmlnaHRz
IFJlc2VydmVkCisgKiBBdXRob3I6IENsw6ltZW50IExlIEdvZmZpYyA8Y2xlbWVudC5sZWdvZmZp
Y0Bmb3NzLnN0LmNvbT4gZm9yIFNUTWljcm9lbGVjdHJvbmljcy4KKyAqLworCisjaW5jbHVkZSA8
bGludXgvYnVzL3N0bTMyX2ZpcmV3YWxsX2RldmljZS5oPgorI2luY2x1ZGUgPGxpbnV4L2Nsay5o
PgorI2luY2x1ZGUgPGxpbnV4L2hydGltZXIuaD4KKyNpbmNsdWRlIDxsaW51eC9tb2R1bGUuaD4K
KyNpbmNsdWRlIDxsaW51eC9vZl9wbGF0Zm9ybS5oPgorI2luY2x1ZGUgPGxpbnV4L3BlcmZfZXZl
bnQuaD4KKyNpbmNsdWRlIDxsaW51eC9yZXNldC5oPgorCisjZGVmaW5lIERSSVZFUl9OQU1FCQki
c3RtMzJfZGRyX3BtdSIKKworLyoKKyAqIFRoZSBQTVUgaXMgYWJsZSB0byBmcmVlemUgYWxsIGNv
dW50ZXJzIGFuZCBnZW5lcmF0ZSBhbiBpbnRlcnJ1cHQgd2hlbiB0aGVyZQorICogaXMgYSBjb3Vu
dGVyIG92ZXJmbG93LiBCdXQsIHJlbHlpbmcgb24gdGhpcyBtZWFucyB0aGF0IHdlIGxvc2UgYWxs
IHRoZQorICogZXZlbnRzIHRoYXQgb2NjdXIgYmV0d2VlbiB0aGUgZnJlZXplIGFuZCB0aGUgaW50
ZXJydXB0IGhhbmRsZXIgZXhlY3V0aW9uLgorICogU28gd2UgdXNlIGEgcG9sbGluZyBtZWNoYW5p
c20gdG8gYXZvaWQgdGhpcyBsb3N0IG9mIGluZm9ybWF0aW9uLgorICogVGhlIGZhc3Rlc3QgY291
bnRlciBjYW4gb3ZlcmZsb3cgaW4gfjdzIEA2MDBNSHogKHRoYXQgaXMgdGhlIG1heGltdW0gRERS
CisgKiBmcmVxdWVuY3kgc3VwcG9ydGVkIG9uIFNUTTMyTVAyNTcpLCBzbyB3ZSBwb2xsIGluIDMu
NXMgaW50ZXJ2YWxzIHRvIGVuc3VyZQorICogd2UgZG9uJ3QgcmVhY2ggdGhpcyBsaW1pdC4KKyAq
LworI2RlZmluZSBQT0xMX01TCQkJMzUwMAorCisjZGVmaW5lIEREUlBFUkZNX0NUUkwJCTB4MDAw
CisjZGVmaW5lIEREUlBFUkZNX0NGRwkJMHgwMDQKKyNkZWZpbmUgRERSUEVSRk1fU1RBVFVTCQkw
eDAwOAorI2RlZmluZSBERFJQRVJGTV9DTFIJCTB4MDBDCisjZGVmaW5lIEREUlBFUkZNX1RDTlQJ
CTB4MDIwCisjZGVmaW5lIEREUlBFUkZNX0VWQ05UKFgpCSgweDAzMCArIDggKiAoWCkpCisKKyNk
ZWZpbmUgRERSUEVSRk1fTVAyX0NGRzAJMHgwMTAKKyNkZWZpbmUgRERSUEVSRk1fTVAyX0NGRzEJ
MHgwMTQKKyNkZWZpbmUgRERSUEVSRk1fTVAyX0NGRzUJMHgwMjQKKyNkZWZpbmUgRERSUEVSRk1f
TVAyX0RSQU1JTkYJMHgwMjgKKyNkZWZpbmUgRERSUEVSRk1fTVAyX0VWQ05UKFgpCSgweDA0MCAr
IDQgKiAoWCkpCisjZGVmaW5lIEREUlBFUkZNX01QMl9UQ05UCTB4MDYwCisjZGVmaW5lIEREUlBF
UkZNX01QMl9TVEFUVVMJMHgwODAKKworI2RlZmluZSBNUDFfU1RBVFVTX0JVU1kJCUJJVCgxNikK
KyNkZWZpbmUgTVAyX1NUQVRVU19CVVNZCQlCSVQoMzEpCisKKyNkZWZpbmUgQ1RSTF9TVEFSVAkJ
QklUKDApCisjZGVmaW5lIENUUkxfU1RPUAkJQklUKDEpCisKKyNkZWZpbmUgQ0ZHX1NFTF9NU0sJ
CUdFTk1BU0soMTcsIDE2KQorI2RlZmluZSBDRkdfU0VMX1NISUZUCQkxNgorI2RlZmluZSBDRkdf
RU5fTVNLCQlHRU5NQVNLKDMsIDApCisKKyNkZWZpbmUgTVAxX0NMUl9DTlQJCUdFTk1BU0soMywg
MCkKKyNkZWZpbmUgTVAxX0NMUl9USU1FCQlCSVQoMzEpCisjZGVmaW5lIE1QMl9DTFJfQ05UCQlH
RU5NQVNLKDcsIDApCisjZGVmaW5lIE1QMl9DTFJfVElNRQkJQklUKDgpCisKKy8qIDQgZXZlbnQg
Y291bnRlcnMgcGx1cyAxIGRlZGljYXRlZCB0byB0aW1lICovCisjZGVmaW5lIE1QMV9DTlRfTkIJ
CSg0ICsgMSkKKy8qIEluZGV4IG9mIHRoZSB0aW1lIGRlZGljYXRlZCBjb3VudGVyICovCisjZGVm
aW5lIE1QMV9USU1FX0NOVF9JRFgJNAorCisvKiA4IGV2ZW50IGNvdW50ZXJzIHBsdXMgMSBkZWRp
Y2F0ZWQgdG8gdGltZSAqLworI2RlZmluZSBNUDJfQ05UX05CCQkoOCArIDEpCisvKiBJbmRleCBv
ZiB0aGUgdGltZSBkZWRpY2F0ZWQgY291bnRlciAqLworI2RlZmluZSBNUDJfVElNRV9DTlRfSURY
CTgKKy8qIDQgZXZlbnQgY291bnRlcnMgcGVyIHJlZ2lzdGVyICovCisjZGVmaW5lIE1QMl9DTlRf
U0VMX1BFUl9SRUcJNAorCisvKiBBcmJpdHJhcnkgdmFsdWUgdXNlZCB0byBpZGVudGlmeSBhIHRp
bWUgZXZlbnQgKi8KKyNkZWZpbmUgVElNRV9DTlQJCTY0CisKK3N0cnVjdCBzdG0zMl9kZHJfcG11
X3JlZyB7CisJdW5zaWduZWQgaW50IHJlZzsKKwl1MzIgbWFzazsKK307CisKK3N0cnVjdCBzdG0z
Ml9kZHJfY250IHsKKwlpbnQgaWR4OworCXN0cnVjdCBwZXJmX2V2ZW50ICpldnQ7CisJc3RydWN0
IGxpc3RfaGVhZCBjbnRfbGlzdDsKK307CisKK3N0cnVjdCBzdG0zMl9kZHJfcG11X3JlZ3NwZWMg
eworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZyBzdG9wOworCWNvbnN0IHN0cnVjdCBz
dG0zMl9kZHJfcG11X3JlZyBzdGFydDsKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWcg
ZW5hYmxlOworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZyBzdGF0dXM7CisJY29uc3Qg
c3RydWN0IHN0bTMyX2Rkcl9wbXVfcmVnIGNsZWFyX2NudDsKKwljb25zdCBzdHJ1Y3Qgc3RtMzJf
ZGRyX3BtdV9yZWcgY2xlYXJfdGltZTsKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWcg
Y2ZnOworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZyBjZmcwOworCWNvbnN0IHN0cnVj
dCBzdG0zMl9kZHJfcG11X3JlZyBjZmcxOworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3Jl
ZyBkcmFtX2luZjsKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWcgY291bnRlcl90aW1l
OworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZyBjb3VudGVyX2V2dFtdOworfTsKKwor
c3RydWN0IHN0bTMyX2Rkcl9wbXUgeworCXN0cnVjdCBwbXUgcG11OworCXZvaWQgX19pb21lbSAq
bWVtYmFzZTsKKwlzdHJ1Y3QgZGV2aWNlICpkZXY7CisJc3RydWN0IGNsayAqY2xrOworCWNvbnN0
IHN0cnVjdCBzdG0zMl9kZHJfcG11X2NmZyAqY2ZnOworCXN0cnVjdCBocnRpbWVyIGhydGltZXI7
CisJa3RpbWVfdCBwb2xsX3BlcmlvZDsKKwlpbnQgc2VsZWN0ZWRfc2V0OworCXUzMiBkcmFtX3R5
cGU7CisJc3RydWN0IGxpc3RfaGVhZCBjb3VudGVyc1tdOworfTsKKworc3RydWN0IHN0bTMyX2Rk
cl9wbXVfY2ZnIHsKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjICpyZWdzOwor
CWNvbnN0IHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgKiphdHRyaWJ1dGU7CisJdTMyIGNvdW50ZXJz
X25iOworCXUzMiBldnRfY291bnRlcnNfbmI7CisJdTMyIHRpbWVfY250X2lkeDsKKwlzdHJ1Y3Qg
c3RtMzJfZGRyX2NudCAqICgqZ2V0X2NvdW50ZXIpKHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwLCBz
dHJ1Y3QgcGVyZl9ldmVudCAqZSk7Cit9OworCisjZGVmaW5lIEVWRU5UX05VTUJFUihncm91cCwg
aW5kZXgpCSgoKGdyb3VwKSA8PCA4KSB8IChpbmRleCkpCisjZGVmaW5lIEdST1VQX1ZBTFVFKGV2
ZW50X251bWJlcikJCSgoZXZlbnRfbnVtYmVyKSA+PiA4KQorI2RlZmluZSBFVkVOVF9JTkRFWChl
dmVudF9udW1iZXIpCSgoZXZlbnRfbnVtYmVyKSAmIDB4RkYpCisKKy8qIE1QMSBkZHJwZXJmbSBl
dmVudHMgKi8KK2VudW0gc3RtMzJfZGRyX3BtdV9ldmVudHNfbXAxIHsKKwlQRVJGX09QX0lTX1JE
CQkJPSBFVkVOVF9OVU1CRVIoMCwgMCksCisJUEVSRl9PUF9JU19XUgkJCT0gRVZFTlRfTlVNQkVS
KDAsIDEpLAorCVBFUkZfT1BfSVNfQUNUSVZBVEUJCT0gRVZFTlRfTlVNQkVSKDAsIDIpLAorCUNU
TF9JRExFCQkJPSBFVkVOVF9OVU1CRVIoMCwgMyksCisJUEVSRl9IUFJfUkVRX1dJVEhfTk9fQ1JF
RElUCT0gRVZFTlRfTlVNQkVSKDEsIDApLAorCVBFUkZfTFBSX1JFUV9XSVRIX05PX0NSRURJVAk9
IEVWRU5UX05VTUJFUigxLCAxKSwKKwlDQUNUSVZFX0REUkMJCQk9IEVWRU5UX05VTUJFUigxLCAz
KSwKKwlQRVJGX09QX0lTX0VOVEVSX1BPV0VSRE9XTgk9IEVWRU5UX05VTUJFUigyLCAwKSwKKwlQ
RVJGX09QX0lTX1JFRlJFU0gJCT0gRVZFTlRfTlVNQkVSKDIsIDEpLAorCVBFUkZfU0VMRlJFU0hf
TU9ERQkJPSBFVkVOVF9OVU1CRVIoMiwgMiksCisJREZJX0xQX1JFUQkJCT0gRVZFTlRfTlVNQkVS
KDIsIDMpLAorCVBFUkZfSFBSX1hBQ1RfV0hFTl9DUklUSUNBTAk9IEVWRU5UX05VTUJFUigzLCAw
KSwKKwlQRVJGX0xQUl9YQUNUX1dIRU5fQ1JJVElDQUwJPSBFVkVOVF9OVU1CRVIoMywgMSksCisJ
UEVSRl9XUl9YQUNUX1dIRU5fQ1JJVElDQUwJPSBFVkVOVF9OVU1CRVIoMywgMiksCisJREZJX0xQ
X1JFUV9TQ05ECQkJPSBFVkVOVF9OVU1CRVIoMywgMyksCit9OworCisvKiBNUDIgZGRycGVyZm0g
ZXZlbnRzICovCitlbnVtIHN0bTMyX2Rkcl9wbXVfZXZlbnRzX21wMiB7CisJREZJX0lTX0FDVAkJ
CT0gRVZFTlRfTlVNQkVSKDAsIDApLAorCURGSV9JU19QUkVQQgkJCT0gRVZFTlRfTlVNQkVSKDAs
IDEpLAorCURGSV9JU19QUkVBQgkJCT0gRVZFTlRfTlVNQkVSKDAsIDIpLAorCURGSV9JU19SRAkJ
CT0gRVZFTlRfTlVNQkVSKDAsIDMpLAorCURGSV9JU19SREEJCQk9IEVWRU5UX05VTUJFUigwLCA0
KSwKKwlERklfSVNfV1IJCQk9IEVWRU5UX05VTUJFUigwLCA2KSwKKwlERklfSVNfV1JBCQkJPSBF
VkVOVF9OVU1CRVIoMCwgNyksCisJREZJX0lTX01XUgkJCT0gRVZFTlRfTlVNQkVSKDAsIDkpLAor
CURGSV9JU19NV1JBCQkJPSBFVkVOVF9OVU1CRVIoMCwgMTApLAorCURGSV9JU19NUlcJCQk9IEVW
RU5UX05VTUJFUigwLCAxMiksCisJREZJX0lTX01SUgkJCT0gRVZFTlRfTlVNQkVSKDAsIDEzKSwK
KwlERklfSVNfUkVGUEIJCQk9IEVWRU5UX05VTUJFUigwLCAxNCksCisJREZJX0lTX1JFRkFCCQkJ
PSBFVkVOVF9OVU1CRVIoMCwgMTUpLAorCURGSV9JU19NUEMJCQk9IEVWRU5UX05VTUJFUigwLCAx
NiksCisJUEVSRl9PUF9JU19BQ1QJCQk9IEVWRU5UX05VTUJFUigwLCAzMiksCisJUEVSRl9PUF9J
U19SRF9NUDIJCT0gRVZFTlRfTlVNQkVSKDAsIDMzKSwKKwlQRVJGX09QX0lTX1dSX01QMgkJPSBF
VkVOVF9OVU1CRVIoMCwgMzQpLAorCVBFUkZfT1BfSVNfTVdSCQkJPSBFVkVOVF9OVU1CRVIoMCwg
MzUpLAorCVBFUkZfT1BfSVNfUkVGCQkJPSBFVkVOVF9OVU1CRVIoMCwgMzYpLAorCVBFUkZfT1Bf
SVNfQ1JJVF9SRUYJCT0gRVZFTlRfTlVNQkVSKDAsIDM3KSwKKwlQRVJGX09QX0lTX1NQRUNfUkVG
CQk9IEVWRU5UX05VTUJFUigwLCAzOCksCisJUEVSRl9PUF9JU19aUUNBTAkJPSBFVkVOVF9OVU1C
RVIoMCwgMzkpLAorCVBFUkZfT1BfSVNfRU5URVJfUE9XRE4JCT0gRVZFTlRfTlVNQkVSKDAsIDQw
KSwKKwlQRVJGX09QX0lTX0VOVEVSX1NFTEZSRUYJPSBFVkVOVF9OVU1CRVIoMCwgNDEpLAorCVBF
UkZfT1BfSVNfUFJFCQkJPSBFVkVOVF9OVU1CRVIoMCwgNDIpLAorCVBFUkZfT1BfSVNfUFJFX0ZP
Ul9SRFdSCQk9IEVWRU5UX05VTUJFUigwLCA0MyksCisJUEVSRl9PUF9JU19QUkVfRk9SX09USEVS
Uwk9IEVWRU5UX05VTUJFUigwLCA0NCksCisJUEVSRl9PUF9JU19SRF9BQ1RJVkFURQkJPSBFVkVO
VF9OVU1CRVIoMCwgNDUpLAorCVBFUkZfSFBSX1JFUV9XSVRIX05PQ1JFRElUCT0gRVZFTlRfTlVN
QkVSKDAsIDQ4KSwKKwlQRVJGX0xQUl9SRVFfV0lUSF9OT0NSRURJVAk9IEVWRU5UX05VTUJFUigw
LCA0OSksCisJUEVSRl9IUFJfWEFDVF9XSEVOX0NSSVRJQ0FMX01QMgk9IEVWRU5UX05VTUJFUigw
LCA1MCksCisJUEVSRl9MUFJfWEFDVF9XSEVOX0NSSVRJQ0FMX01QMgk9IEVWRU5UX05VTUJFUigw
LCA1MSksCisJUEVSRl9XUl9YQUNUX1dIRU5fQ1JJVElDQUxfTVAyCT0gRVZFTlRfTlVNQkVSKDAs
IDUyKSwKKwlQRVJGX1JEV1JfVFJBTlNJVElPTlMJCT0gRVZFTlRfTlVNQkVSKDAsIDUzKSwKKwlQ
RVJGX1dBUl9IQVpBUkQJCQk9IEVWRU5UX05VTUJFUigwLCA1NCksCisJUEVSRl9SQVdfSEFaQVJE
CQkJPSBFVkVOVF9OVU1CRVIoMCwgNTUpLAorCVBFUkZfV0FXX0hBWkFSRAkJCT0gRVZFTlRfTlVN
QkVSKDAsIDU2KSwKKwlQRVJGX1JBTksJCQk9IEVWRU5UX05VTUJFUigwLCA1OCksCisJUEVSRl9S
RUFEX0JZUEFTUwkJPSBFVkVOVF9OVU1CRVIoMCwgNTkpLAorCVBFUkZfQUNUX0JZUEFTUwkJCT0g
RVZFTlRfTlVNQkVSKDAsIDYwKSwKKwlQRVJGX1dJTkRPV19MSU1JVF9SRUFDSEVEX1JECT0gRVZF
TlRfTlVNQkVSKDAsIDYxKSwKKwlQRVJGX1dJTkRPV19MSU1JVF9SRUFDSEVEX1dSCT0gRVZFTlRf
TlVNQkVSKDAsIDYyKSwKKwlOT19FVkVOVAkJCT0gRVZFTlRfTlVNQkVSKDAsIDYzKSwKK307CisK
K3N0YXRpYyBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqdG9fc3RtMzJfZGRyX3BtdShzdHJ1Y3QgcG11
ICpwKQoreworCXJldHVybiBjb250YWluZXJfb2YocCwgc3RydWN0IHN0bTMyX2Rkcl9wbXUsIHBt
dSk7Cit9CisKK3N0YXRpYyBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqaHJ0aW1lcl90b19zdG0zMl9k
ZHJfcG11KHN0cnVjdCBocnRpbWVyICpoKQoreworCXJldHVybiBjb250YWluZXJfb2YoaCwgc3Ry
dWN0IHN0bTMyX2Rkcl9wbXUsIGhydGltZXIpOworfQorCitzdGF0aWMgdm9pZCBzdG0zMl9kZHJf
c3RhcnRfY291bnRlcnMoc3RydWN0IHN0bTMyX2Rkcl9wbXUgKnBtdSkKK3sKKwljb25zdCBzdHJ1
Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjICpyID0gcG11LT5jZmctPnJlZ3M7CisKKwl3cml0ZWxf
cmVsYXhlZChyLT5zdGFydC5tYXNrLCBwbXUtPm1lbWJhc2UgKyByLT5zdGFydC5yZWcpOworfQor
CitzdGF0aWMgdm9pZCBzdG0zMl9kZHJfc3RvcF9jb3VudGVycyhzdHJ1Y3Qgc3RtMzJfZGRyX3Bt
dSAqcG11KQoreworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZ3NwZWMgKnIgPSBwbXUt
PmNmZy0+cmVnczsKKworCXdyaXRlbF9yZWxheGVkKHItPnN0b3AubWFzaywgcG11LT5tZW1iYXNl
ICsgci0+c3RvcC5yZWcpOworfQorCitzdGF0aWMgdm9pZCBzdG0zMl9kZHJfY2xlYXJfdGltZV9j
b3VudGVyKHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUpCit7CisJY29uc3Qgc3RydWN0IHN0bTMy
X2Rkcl9wbXVfcmVnc3BlYyAqciA9IHBtdS0+Y2ZnLT5yZWdzOworCisJd3JpdGVsX3JlbGF4ZWQo
ci0+Y2xlYXJfdGltZS5tYXNrLCBwbXUtPm1lbWJhc2UgKyByLT5jbGVhcl90aW1lLnJlZyk7Cit9
CisKK3N0YXRpYyB2b2lkIHN0bTMyX2Rkcl9jbGVhcl9ldmVudF9jb3VudGVyKHN0cnVjdCBzdG0z
Ml9kZHJfcG11ICpwbXUsIHN0cnVjdCBzdG0zMl9kZHJfY250ICpjb3VudGVyKQoreworCWNvbnN0
IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZ3NwZWMgKnIgPSBwbXUtPmNmZy0+cmVnczsKKworCXdy
aXRlbF9yZWxheGVkKHItPmNsZWFyX2NudC5tYXNrICYgQklUKGNvdW50ZXItPmlkeCksIHBtdS0+
bWVtYmFzZSArIHItPmNsZWFyX2NudC5yZWcpOworfQorCitzdGF0aWMgdm9pZCBzdG0zMl9kZHJf
Y2xlYXJfY291bnRlcihzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqcG11LCBzdHJ1Y3Qgc3RtMzJfZGRy
X2NudCAqY291bnRlcikKK3sKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjICpy
ID0gcG11LT5jZmctPnJlZ3M7CisJdTMyIHN0YXR1cyA9IHJlYWRsX3JlbGF4ZWQocG11LT5tZW1i
YXNlICsgci0+c3RhdHVzLnJlZyk7CisKKwlpZiAoY291bnRlci0+aWR4ID09IHBtdS0+Y2ZnLT50
aW1lX2NudF9pZHgpCisJCXN0bTMyX2Rkcl9jbGVhcl90aW1lX2NvdW50ZXIocG11KTsKKwllbHNl
CisJCXN0bTMyX2Rkcl9jbGVhcl9ldmVudF9jb3VudGVyKHBtdSwgY291bnRlcik7CisKKwlpZiAo
c3RhdHVzICYgci0+c3RhdHVzLm1hc2spCisJCWRldl9lcnIocG11LT5kZXYsICJGYWlsZWQgdG8g
Y2xlYXIgY291bnRlciAlaSBiZWNhdXNlIHRoZSBQTVUgaXMgYnVzeVxuIiwKKwkJCWNvdW50ZXIt
PmlkeCk7Cit9CisKK3N0YXRpYyB2b2lkIHN0bTMyX2Rkcl9jb3VudGVyX2VuYWJsZShzdHJ1Y3Qg
c3RtMzJfZGRyX3BtdSAqcG11LCBzdHJ1Y3Qgc3RtMzJfZGRyX2NudCAqY291bnRlcikKK3sKKwlj
b25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjICpyID0gcG11LT5jZmctPnJlZ3M7CisJ
dTMyIHZhbCA9IHJlYWRsX3JlbGF4ZWQocG11LT5tZW1iYXNlICsgci0+ZW5hYmxlLnJlZyk7CisK
Kwl2YWwgfD0gQklUKGNvdW50ZXItPmlkeCk7CisJd3JpdGVsX3JlbGF4ZWQodmFsLCBwbXUtPm1l
bWJhc2UgKyByLT5lbmFibGUucmVnKTsKK30KKworc3RhdGljIHZvaWQgc3RtMzJfZGRyX2NvdW50
ZXJfZGlzYWJsZShzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqcG11LCBzdHJ1Y3Qgc3RtMzJfZGRyX2Nu
dCAqY291bnRlcikKK3sKKwljb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9yZWdzcGVjICpyID0g
cG11LT5jZmctPnJlZ3M7CisJdTMyIHZhbCA9IHJlYWRsX3JlbGF4ZWQocG11LT5tZW1iYXNlICsg
ci0+ZW5hYmxlLnJlZyk7CisKKwl2YWwgJj0gfkJJVChjb3VudGVyLT5pZHgpOworCXdyaXRlbF9y
ZWxheGVkKHZhbCwgcG11LT5tZW1iYXNlICsgci0+ZW5hYmxlLnJlZyk7Cit9CisKK3N0YXRpYyBp
bnQgc3RtMzJfZGRyX3NlbF9ldm50KHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUsIHN0cnVjdCBz
dG0zMl9kZHJfY250ICpjb3VudGVyKQoreworCWNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3Jl
Z3NwZWMgKnIgPSBwbXUtPmNmZy0+cmVnczsKKwl1MzIgY250X3NlbF92YWw7CisKKwl1MzIgZ3Jv
dXBfdmFsID0gR1JPVVBfVkFMVUUoY291bnRlci0+ZXZ0LT5hdHRyLmNvbmZpZyk7CisJdTMyIGV2
dF92YWwgPSBFVkVOVF9JTkRFWChjb3VudGVyLT5ldnQtPmF0dHIuY29uZmlnKTsKKworCWlmIChw
bXUtPnNlbGVjdGVkX3NldCAhPSAtMSAmJiBwbXUtPnNlbGVjdGVkX3NldCAhPSBncm91cF92YWwp
IHsKKwkJZGV2X2VycihwbXUtPmRldiwgIlNlbGVjdGVkIGV2ZW50cyBhcmUgZnJvbSBkaWZmZXJl
bnQgc2V0XG4iKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCXBtdS0+c2VsZWN0ZWRfc2V0ID0g
Z3JvdXBfdmFsOworCisJaWYgKHBtdS0+Y2ZnLT5yZWdzLT5jZmcucmVnKSB7CisJCWNudF9zZWxf
dmFsID0gcmVhZGxfcmVsYXhlZChwbXUtPm1lbWJhc2UgKyByLT5jZmcucmVnKTsKKwkJY250X3Nl
bF92YWwgJj0gfkNGR19TRUxfTVNLOworCQljbnRfc2VsX3ZhbCB8PSAoQ0ZHX1NFTF9NU0sgJiAo
Z3JvdXBfdmFsIDw8IENGR19TRUxfU0hJRlQpKTsKKwkJd3JpdGVsX3JlbGF4ZWQoY250X3NlbF92
YWwsIHBtdS0+bWVtYmFzZSArIHItPmNmZy5yZWcpOworCisJCXJldHVybiAwOworCX0KKworCS8q
IFdlIGFzc3VtZSBjZmcwIGFuZCBjZmcxIGFyZSBmaWxsZWQgaW4gdGhlIG1hdGNoIGRhdGEgKi8K
Kwl1MzIgY250X2lkeCA9IGNvdW50ZXItPmlkeDsKKwl1MzIgY250X3NlbF9ldnRfcmVnID0gci0+
Y2ZnMC5yZWc7CisKKwlpZiAoIShjbnRfaWR4IDwgTVAyX0NOVF9TRUxfUEVSX1JFRykpIHsKKwkJ
Y250X3NlbF9ldnRfcmVnID0gci0+Y2ZnMS5yZWc7CisJCWNudF9pZHggLT0gTVAyX0NOVF9TRUxf
UEVSX1JFRzsKKwl9CisKKwljbnRfc2VsX3ZhbCA9IHJlYWRsX3JlbGF4ZWQocG11LT5tZW1iYXNl
ICsgY250X3NlbF9ldnRfcmVnKTsKKwljbnRfc2VsX3ZhbCAmPSB+R0VOTUFTSyg4ICogY250X2lk
eCArIDcsIDggKiBjbnRfaWR4KTsKKwljbnRfc2VsX3ZhbCB8PSBldnRfdmFsIDw8ICg4ICogY250
X2lkeCk7CisKKwl3cml0ZWxfcmVsYXhlZChjbnRfc2VsX3ZhbCwgcG11LT5tZW1iYXNlICsgY250
X3NlbF9ldnRfcmVnKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgc3RydWN0IHN0bTMyX2Rk
cl9jbnQgKnN0bTMyX2Rkcl9wbXVfZ2V0X2V2ZW50X2NvdW50ZXJfbXAxKHN0cnVjdCBzdG0zMl9k
ZHJfcG11ICpwbXUsCisJCQkJCQkJCSBzdHJ1Y3QgcGVyZl9ldmVudCAqZXZlbnQpCit7CisJdTMy
IGNvbmZpZyA9IGV2ZW50LT5hdHRyLmNvbmZpZzsKKwl1MzIgZXZlbnRfaWR4ID0gRVZFTlRfSU5E
RVgoY29uZmlnKTsKKwlzdHJ1Y3Qgc3RtMzJfZGRyX2NudCAqY250OworCisJY250ID0ga3phbGxv
YyhzaXplb2YoKmNudCksIEdGUF9LRVJORUwpOworCWlmICghY250KQorCQlyZXR1cm4gRVJSX1BU
UigtRU5PTUVNKTsKKworCWNudC0+ZXZ0ID0gZXZlbnQ7CisJY250LT5pZHggPSBldmVudF9pZHg7
CisJZXZlbnQtPnBtdV9wcml2YXRlID0gY250OworCWxpc3RfYWRkKCZjbnQtPmNudF9saXN0LCAm
cG11LT5jb3VudGVyc1tldmVudF9pZHhdKTsKKworCXJldHVybiBjbnQ7Cit9CisKK3N0YXRpYyBz
dHJ1Y3Qgc3RtMzJfZGRyX2NudCAqc3RtMzJfZGRyX3BtdV9nZXRfZXZlbnRfY291bnRlcl9tcDIo
c3RydWN0IHN0bTMyX2Rkcl9wbXUgKnBtdSwKKwkJCQkJCQkJIHN0cnVjdCBwZXJmX2V2ZW50ICpl
dmVudCkKK3sKKwlzdHJ1Y3Qgc3RtMzJfZGRyX2NudCAqY250OworCWludCBpZHggPSAtMTsKKwor
CS8qIExvb3Agb24gYWxsIHRoZSBjb3VudGVycyBleGNlcHQgVElNRV9DTlRfSURYICovCisJZm9y
IChpbnQgaSA9IDA7IGkgPCBwbXUtPmNmZy0+ZXZ0X2NvdW50ZXJzX25iOyBpKyspIHsKKwkJdTY0
IGNvbmZpZzsKKworCQlpZiAobGlzdF9lbXB0eSgmcG11LT5jb3VudGVyc1tpXSkpIHsKKwkJCWlk
eCA9IGk7CisJCQljb250aW51ZTsKKwkJfQorCQljb25maWcgPSBsaXN0X2ZpcnN0X2VudHJ5KCZw
bXUtPmNvdW50ZXJzW2ldLCBzdHJ1Y3Qgc3RtMzJfZGRyX2NudCwKKwkJCQkJICBjbnRfbGlzdCkt
PmV2dC0+YXR0ci5jb25maWc7CisJCWlmIChjb25maWcgPT0gZXZlbnQtPmF0dHIuY29uZmlnKSB7
CisJCQlpZHggPSBpOworCQkJYnJlYWs7CisJCX0KKwl9CisKKwlpZiAoaWR4ID09IC0xKQorCQly
ZXR1cm4gRVJSX1BUUigtRU5PRU5UKTsKKworCWNudCA9IGt6YWxsb2Moc2l6ZW9mKCpjbnQpLCBH
RlBfS0VSTkVMKTsKKwlpZiAoIWNudCkKKwkJcmV0dXJuIEVSUl9QVFIoLUVOT01FTSk7CisKKwlj
bnQtPmV2dCA9IGV2ZW50OworCWNudC0+aWR4ID0gaWR4OworCWV2ZW50LT5wbXVfcHJpdmF0ZSA9
IGNudDsKKworCWxpc3RfYWRkKCZjbnQtPmNudF9saXN0LCAmcG11LT5jb3VudGVyc1tpZHhdKTsK
KworCXJldHVybiBjbnQ7Cit9CisKK3N0YXRpYyBpbmxpbmUgc3RydWN0IHN0bTMyX2Rkcl9jbnQg
KnN0bTMyX2dldF9ldmVudF9jb3VudGVyKHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUsCisJCQkJ
CQkJICAgIHN0cnVjdCBwZXJmX2V2ZW50ICpldmVudCkKK3sKKwlyZXR1cm4gcG11LT5jZmctPmdl
dF9jb3VudGVyKHBtdSwgZXZlbnQpOworfQorCitzdGF0aWMgaW50IHN0bTMyX2Rkcl9wbXVfZ2V0
X2NvdW50ZXIoc3RydWN0IHN0bTMyX2Rkcl9wbXUgKnBtdSwgc3RydWN0IHBlcmZfZXZlbnQgKmV2
ZW50KQoreworCXUzMiB0aW1lX2NudF9pZHggPSBwbXUtPmNmZy0+dGltZV9jbnRfaWR4OworCXUz
MiBjb25maWcgPSBldmVudC0+YXR0ci5jb25maWc7CisJc3RydWN0IHN0bTMyX2Rkcl9jbnQgKmNu
dDsKKworCWlmICghcG11IHx8ICFldmVudCkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlwbXUtPnNl
bGVjdGVkX3NldCA9IEdST1VQX1ZBTFVFKGNvbmZpZyk7CisKKwlpZiAoY29uZmlnID09IFRJTUVf
Q05UKSB7CisJCWNudCA9IGt6YWxsb2Moc2l6ZW9mKCpjbnQpLCBHRlBfS0VSTkVMKTsKKwkJaWYg
KCFjbnQpCisJCQlyZXR1cm4gLUVOT01FTTsKKworCQljbnQtPmV2dCA9IGV2ZW50OworCQljbnQt
PmlkeCA9IHRpbWVfY250X2lkeDsKKwkJZXZlbnQtPnBtdV9wcml2YXRlID0gY250OworCQlsaXN0
X2FkZCgmY250LT5jbnRfbGlzdCwgJnBtdS0+Y291bnRlcnNbdGltZV9jbnRfaWR4XSk7CisKKwkJ
cmV0dXJuIDA7CisJfQorCisJY250ID0gc3RtMzJfZ2V0X2V2ZW50X2NvdW50ZXIocG11LCBldmVu
dCk7CisJaWYgKElTX0VSUihjbnQpKQorCQlyZXR1cm4gUFRSX0VSUihjbnQpOworCisJaWYgKGxp
c3RfY291bnRfbm9kZXMoJmNudC0+Y250X2xpc3QpID09IDEpIHsKKwkJc3RtMzJfZGRyX3N0b3Bf
Y291bnRlcnMocG11KTsKKwkJc3RtMzJfZGRyX3NlbF9ldm50KHBtdSwgY250KTsKKwkJc3RtMzJf
ZGRyX2NvdW50ZXJfZW5hYmxlKHBtdSwgY250KTsKKwkJc3RtMzJfZGRyX3N0YXJ0X2NvdW50ZXJz
KHBtdSk7CisJfQorCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIHN0bTMyX2Rkcl9wbXVf
ZnJlZV9jb3VudGVyKHN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUsCisJCQkJICAgICAgIHN0cnVj
dCBzdG0zMl9kZHJfY250ICpjb3VudGVyKQoreworCXNpemVfdCBjb3VudCA9IGxpc3RfY291bnRf
bm9kZXMoJmNvdW50ZXItPmNudF9saXN0KTsKKworCWlmIChjb3VudGVyLT5ldnQtPmF0dHIuY29u
ZmlnICE9IFRJTUVfQ05UICYmIGNvdW50ID09IDEpCisJCXN0bTMyX2Rkcl9jb3VudGVyX2Rpc2Fi
bGUocG11LCBjb3VudGVyKTsKKworCWxpc3RfZGVsKCZjb3VudGVyLT5jbnRfbGlzdCk7CisJa2Zy
ZWUoY291bnRlcik7Cit9CisKK3N0YXRpYyB2b2lkIHN0bTMyX2Rkcl9wbXVfZXZlbnRfdXBkYXRl
X2xpc3Qoc3RydWN0IHN0bTMyX2Rkcl9wbXUgKnBtdSwgc3RydWN0IGxpc3RfaGVhZCAqbGlzdCkK
K3sKKwlzdHJ1Y3Qgc3RtMzJfZGRyX2NudCAqY291bnRlciA9IGxpc3RfZmlyc3RfZW50cnkobGlz
dCwgc3RydWN0IHN0bTMyX2Rkcl9jbnQsIGNudF9saXN0KTsKKwljb25zdCBzdHJ1Y3Qgc3RtMzJf
ZGRyX3BtdV9yZWdzcGVjICpyID0gcG11LT5jZmctPnJlZ3M7CisJdTMyIHZhbDsKKworCWlmIChj
b3VudGVyLT5ldnQtPmF0dHIuY29uZmlnICE9IFRJTUVfQ05UKQorCQl2YWwgPSByZWFkbF9yZWxh
eGVkKHBtdS0+bWVtYmFzZSArIHItPmNvdW50ZXJfZXZ0W2NvdW50ZXItPmlkeF0ucmVnKTsKKwll
bHNlCisJCXZhbCA9IHJlYWRsX3JlbGF4ZWQocG11LT5tZW1iYXNlICsgci0+Y291bnRlcl90aW1l
LnJlZyk7CisKKwlzdG0zMl9kZHJfY2xlYXJfY291bnRlcihwbXUsIGNvdW50ZXIpOworCisJbGlz
dF9mb3JfZWFjaF9lbnRyeShjb3VudGVyLCBsaXN0LCBjbnRfbGlzdCkKKwkJbG9jYWw2NF9hZGQo
dmFsLCAmY291bnRlci0+ZXZ0LT5jb3VudCk7Cit9CisKK3N0YXRpYyB2b2lkIHN0bTMyX2Rkcl9w
bXVfZXZlbnRfcmVhZChzdHJ1Y3QgcGVyZl9ldmVudCAqZXZlbnQpCit7CisJc3RydWN0IHN0bTMy
X2Rkcl9wbXUgKnBtdSA9IHRvX3N0bTMyX2Rkcl9wbXUoZXZlbnQtPnBtdSk7CisJc3RydWN0IHN0
bTMyX2Rkcl9jbnQgKmNudCA9IGV2ZW50LT5wbXVfcHJpdmF0ZTsKKworCWhydGltZXJfc3RhcnQo
JnBtdS0+aHJ0aW1lciwgcG11LT5wb2xsX3BlcmlvZCwgSFJUSU1FUl9NT0RFX1JFTF9QSU5ORUQp
OworCisJc3RtMzJfZGRyX3N0b3BfY291bnRlcnMocG11KTsKKworCXN0bTMyX2Rkcl9wbXVfZXZl
bnRfdXBkYXRlX2xpc3QocG11LCAmcG11LT5jb3VudGVyc1tjbnQtPmlkeF0pOworCisJc3RtMzJf
ZGRyX3N0YXJ0X2NvdW50ZXJzKHBtdSk7Cit9CisKK3N0YXRpYyB2b2lkIHN0bTMyX2Rkcl9wbXVf
ZXZlbnRfc3RhcnQoc3RydWN0IHBlcmZfZXZlbnQgKmV2ZW50LCBpbnQgZmxhZ3MpCit7CisJc3Ry
dWN0IHN0bTMyX2Rkcl9wbXUgKnBtdSA9IHRvX3N0bTMyX2Rkcl9wbXUoZXZlbnQtPnBtdSk7CisJ
c3RydWN0IHN0bTMyX2Rkcl9jbnQgKmNvdW50ZXIgPSBldmVudC0+cG11X3ByaXZhdGU7CisJc3Ry
dWN0IGh3X3BlcmZfZXZlbnQgKmh3ID0gJmV2ZW50LT5odzsKKworCWlmIChXQVJOX09OX09OQ0Uo
IShody0+c3RhdGUgJiBQRVJGX0hFU19TVE9QUEVEKSkpCisJCXJldHVybjsKKworCWlmIChmbGFn
cyAmIFBFUkZfRUZfUkVMT0FEKQorCQlXQVJOX09OX09OQ0UoIShody0+c3RhdGUgJiBQRVJGX0hF
U19VUFRPREFURSkpOworCisJc3RtMzJfZGRyX3N0b3BfY291bnRlcnMocG11KTsKKworCWlmIChs
aXN0X2NvdW50X25vZGVzKCZjb3VudGVyLT5jbnRfbGlzdCkgPT0gMSkKKwkJc3RtMzJfZGRyX2Ns
ZWFyX2NvdW50ZXIocG11LCBjb3VudGVyKTsKKwllbHNlCisJCXN0bTMyX2Rkcl9wbXVfZXZlbnRf
dXBkYXRlX2xpc3QocG11LCAmcG11LT5jb3VudGVyc1tjb3VudGVyLT5pZHhdKTsKKworCXN0bTMy
X2Rkcl9zdGFydF9jb3VudGVycyhwbXUpOworCWxvY2FsNjRfc2V0KCZody0+cHJldl9jb3VudCwg
MCk7CisJaHctPnN0YXRlID0gMDsKK30KKworc3RhdGljIHZvaWQgc3RtMzJfZGRyX3BtdV9ldmVu
dF9zdG9wKHN0cnVjdCBwZXJmX2V2ZW50ICpldmVudCwgaW50IGZsYWdzKQoreworCXN0cnVjdCBo
d19wZXJmX2V2ZW50ICpodyA9ICZldmVudC0+aHc7CisKKwlpZiAoV0FSTl9PTl9PTkNFKGh3LT5z
dGF0ZSAmIFBFUkZfSEVTX1NUT1BQRUQpKQorCQlyZXR1cm47CisKKwlody0+c3RhdGUgfD0gUEVS
Rl9IRVNfU1RPUFBFRDsKKworCWlmIChmbGFncyAmIFBFUkZfRUZfVVBEQVRFKSB7CisJCXN0bTMy
X2Rkcl9wbXVfZXZlbnRfcmVhZChldmVudCk7CisJCWh3LT5zdGF0ZSB8PSBQRVJGX0hFU19VUFRP
REFURTsKKwl9Cit9CisKK3N0YXRpYyBpbnQgc3RtMzJfZGRyX3BtdV9ldmVudF9hZGQoc3RydWN0
IHBlcmZfZXZlbnQgKmV2ZW50LCBpbnQgZmxhZ3MpCit7CisJc3RydWN0IHN0bTMyX2Rkcl9wbXUg
KnBtdSA9IHRvX3N0bTMyX2Rkcl9wbXUoZXZlbnQtPnBtdSk7CisJaW50IHJldDsKKworCWNsa19l
bmFibGUocG11LT5jbGspOworCisJaHJ0aW1lcl9zdGFydCgmcG11LT5ocnRpbWVyLCBwbXUtPnBv
bGxfcGVyaW9kLCBIUlRJTUVSX01PREVfUkVMX1BJTk5FRCk7CisKKwlyZXQgPSBzdG0zMl9kZHJf
cG11X2dldF9jb3VudGVyKHBtdSwgZXZlbnQpOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisK
KwlldmVudC0+aHcuc3RhdGUgPSBQRVJGX0hFU19TVE9QUEVEIHwgUEVSRl9IRVNfVVBUT0RBVEU7
CisKKwlpZiAoZmxhZ3MgJiBQRVJGX0VGX1NUQVJUKQorCQlzdG0zMl9kZHJfcG11X2V2ZW50X3N0
YXJ0KGV2ZW50LCBmbGFncyk7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHZvaWQgc3RtMzJf
ZGRyX3BtdV9ldmVudF9kZWwoc3RydWN0IHBlcmZfZXZlbnQgKmV2ZW50LCBpbnQgZmxhZ3MpCit7
CisJc3RydWN0IHN0bTMyX2Rkcl9wbXUgKnBtdSA9IHRvX3N0bTMyX2Rkcl9wbXUoZXZlbnQtPnBt
dSk7CisJc3RydWN0IHN0bTMyX2Rkcl9jbnQgKmNvdW50ZXIgPSBldmVudC0+cG11X3ByaXZhdGU7
CisJYm9vbCBldmVudHMgPSB0cnVlOworCisJc3RtMzJfZGRyX3BtdV9ldmVudF9zdG9wKGV2ZW50
LCBQRVJGX0VGX1VQREFURSk7CisKKwlzdG0zMl9kZHJfcG11X2ZyZWVfY291bnRlcihwbXUsIGNv
dW50ZXIpOworCisJZm9yIChpbnQgaSA9IDA7IGkgPCBwbXUtPmNmZy0+Y291bnRlcnNfbmI7IGkr
KykKKwkJZXZlbnRzID0gIWxpc3RfZW1wdHkoJnBtdS0+Y291bnRlcnNbaV0pOworCisJLyogSWYg
dGhlcmUgaXMgYWN0aXZpdHkgbm90aGluZyB0byBkbyAqLworCWlmIChldmVudHMpCisJCXJldHVy
bjsKKworCWhydGltZXJfY2FuY2VsKCZwbXUtPmhydGltZXIpOworCXN0bTMyX2Rkcl9zdG9wX2Nv
dW50ZXJzKHBtdSk7CisKKwlwbXUtPnNlbGVjdGVkX3NldCA9IC0xOworCisJY2xrX2Rpc2FibGUo
cG11LT5jbGspOworfQorCitzdGF0aWMgaW50IHN0bTMyX2Rkcl9wbXVfZXZlbnRfaW5pdChzdHJ1
Y3QgcGVyZl9ldmVudCAqZXZlbnQpCit7CisJaWYgKGV2ZW50LT5hdHRyLnR5cGUgIT0gZXZlbnQt
PnBtdS0+dHlwZSkKKwkJcmV0dXJuIC1FTk9FTlQ7CisKKwlpZiAoaXNfc2FtcGxpbmdfZXZlbnQo
ZXZlbnQpIHx8IGV2ZW50LT5hdHRhY2hfc3RhdGUgJiBQRVJGX0FUVEFDSF9UQVNLKQorCQlyZXR1
cm4gLUVJTlZBTDsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgZW51bSBocnRpbWVyX3Jlc3Rh
cnQgc3RtMzJfZGRyX3BtdV9wb2xsKHN0cnVjdCBocnRpbWVyICpocnRpbWVyKQoreworCXN0cnVj
dCBzdG0zMl9kZHJfcG11ICpwbXUgPSBocnRpbWVyX3RvX3N0bTMyX2Rkcl9wbXUoaHJ0aW1lcik7
CisKKwlzdG0zMl9kZHJfc3RvcF9jb3VudGVycyhwbXUpOworCisJZm9yIChpbnQgaSA9IDA7IGkg
PCBNUDJfQ05UX05COyBpKyspCisJCWlmICghbGlzdF9lbXB0eSgmcG11LT5jb3VudGVyc1tpXSkp
CisJCQlzdG0zMl9kZHJfcG11X2V2ZW50X3VwZGF0ZV9saXN0KHBtdSwgJnBtdS0+Y291bnRlcnNb
aV0pOworCisJaWYgKGxpc3RfZW1wdHkoJnBtdS0+Y291bnRlcnNbcG11LT5jZmctPnRpbWVfY250
X2lkeF0pKQorCQlzdG0zMl9kZHJfY2xlYXJfdGltZV9jb3VudGVyKHBtdSk7CisKKwlzdG0zMl9k
ZHJfc3RhcnRfY291bnRlcnMocG11KTsKKworCWhydGltZXJfZm9yd2FyZF9ub3coaHJ0aW1lciwg
cG11LT5wb2xsX3BlcmlvZCk7CisKKwlyZXR1cm4gSFJUSU1FUl9SRVNUQVJUOworfQorCitzdGF0
aWMgc3NpemVfdCBzdG0zMl9kZHJfcG11X3N5c2ZzX3Nob3coc3RydWN0IGRldmljZSAqZGV2LCBz
dHJ1Y3QgZGV2aWNlX2F0dHJpYnV0ZSAqYXR0ciwKKwkJCQkJY2hhciAqYnVmKQoreworCXN0cnVj
dCBwZXJmX3BtdV9ldmVudHNfYXR0ciAqcG11X2F0dHI7CisKKwlwbXVfYXR0ciA9IGNvbnRhaW5l
cl9vZihhdHRyLCBzdHJ1Y3QgcGVyZl9wbXVfZXZlbnRzX2F0dHIsIGF0dHIpOworCisJcmV0dXJu
IHN5c2ZzX2VtaXQoYnVmLCAiZXZlbnQ9MHglMDJsbHhcbiIsIHBtdV9hdHRyLT5pZCk7Cit9CisK
KyNkZWZpbmUgU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKF9uYW1lLCBfaWQpCQkJXAorCVBNVV9F
VkVOVF9BVFRSX0lEKF9uYW1lLCBzdG0zMl9kZHJfcG11X3N5c2ZzX3Nob3csIF9pZCkKKworc3Rh
dGljIHN0cnVjdCBhdHRyaWJ1dGUgKnN0bTMyX2Rkcl9wbXVfZXZlbnRzX2F0dHJzX21wW10gPSB7
CisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfb3BfaXNfcmQsIFBFUkZfT1BfSVNfUkQp
LAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX29wX2lzX3dyLCBQRVJGX09QX0lTX1dS
KSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9vcF9pc19hY3RpdmF0ZSwgUEVSRl9P
UF9JU19BQ1RJVkFURSksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKGN0bF9pZGxlLCBDVExf
SURMRSksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfaHByX3JlcV93aXRoX25vX2Ny
ZWRpdCwgUEVSRl9IUFJfUkVRX1dJVEhfTk9fQ1JFRElUKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5U
X0FUVFIocGVyZl9scHJfcmVxX3dpdGhfbm9fY3JlZGl0LCBQRVJGX0xQUl9SRVFfV0lUSF9OT19D
UkVESVQpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihjYWN0aXZlX2RkcmMsIENBQ1RJVkVf
RERSQyksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfb3BfaXNfZW50ZXJfcG93ZXJk
b3duLCBQRVJGX09QX0lTX0VOVEVSX1BPV0VSRE9XTiksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9B
VFRSKHBlcmZfb3BfaXNfcmVmcmVzaCwgUEVSRl9PUF9JU19SRUZSRVNIKSwKKwlTVE0zMl9ERFJf
UE1VX0VWRU5UX0FUVFIocGVyZl9zZWxmcmVzaF9tb2RlLCBQRVJGX1NFTEZSRVNIX01PREUpLAor
CVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihkZmlfbHBfcmVxLCBERklfTFBfUkVRKSwKKwlTVE0z
Ml9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9ocHJfeGFjdF93aGVuX2NyaXRpY2FsLCBQRVJGX0hQ
Ul9YQUNUX1dIRU5fQ1JJVElDQUwpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX2xw
cl94YWN0X3doZW5fY3JpdGljYWwsIFBFUkZfTFBSX1hBQ1RfV0hFTl9DUklUSUNBTCksCisJU1RN
MzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfd3JfeGFjdF93aGVuX2NyaXRpY2FsLCBQRVJGX1dS
X1hBQ1RfV0hFTl9DUklUSUNBTCksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKGRmaV9scF9y
ZXFfY3B5LCBERklfTFBfUkVRKSwgIC8qIFN1ZmZpeGVkICdfY3B5JyB0byBhbGxvdyB0aGUKKwkJ
CQkJCQkJKiBjaG9pY2UgYmV0d2VlbiBzZXRzIDIgYW5kIDMKKwkJCQkJCQkJKi8KKwlTVE0zMl9E
RFJfUE1VX0VWRU5UX0FUVFIodGltZV9jbnQsIFRJTUVfQ05UKSwKKwlOVUxMLAorfTsKKworc3Rh
dGljIHN0cnVjdCBhdHRyaWJ1dGVfZ3JvdXAgc3RtMzJfZGRyX3BtdV9ldmVudHNfYXR0cnNfZ3Jv
dXBfbXAgPSB7CisJLm5hbWUgPSAiZXZlbnRzIiwKKwkuYXR0cnMgPSBzdG0zMl9kZHJfcG11X2V2
ZW50c19hdHRyc19tcCwKK307CisKK3N0YXRpYyBzdHJ1Y3QgYXR0cmlidXRlICpzdG0zMl9kZHJf
cG11X2V2ZW50c19hdHRyc19tcDJbXSA9IHsKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIoZGZp
X2lzX2FjdCwgREZJX0lTX0FDVCksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKGRmaV9pc19w
cmVwYiwgREZJX0lTX1BSRVBCKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIoZGZpX2lzX3By
ZWFiLCBERklfSVNfUFJFQUIpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihkZmlfaXNfcmQs
IERGSV9JU19SRCksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKGRmaV9pc19yZGEsIERGSV9J
U19SREEpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihkZmlfaXNfd3IsIERGSV9JU19XUiks
CisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKGRmaV9pc193cmEsIERGSV9JU19XUkEpLAorCVNU
TTMyX0REUl9QTVVfRVZFTlRfQVRUUihkZmlfaXNfbXdyLCBERklfSVNfTVdSKSwKKwlTVE0zMl9E
RFJfUE1VX0VWRU5UX0FUVFIoZGZpX2lzX213cmEsIERGSV9JU19NV1JBKSwKKwlTVE0zMl9ERFJf
UE1VX0VWRU5UX0FUVFIoZGZpX2lzX21ydywgREZJX0lTX01SVyksCisJU1RNMzJfRERSX1BNVV9F
VkVOVF9BVFRSKGRmaV9pc19tcnIsIERGSV9JU19NUlIpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRf
QVRUUihkZmlfaXNfcmVmcGIsIERGSV9JU19SRUZQQiksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9B
VFRSKGRmaV9pc19yZWZhYiwgREZJX0lTX1JFRkFCKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FU
VFIoZGZpX2lzX21wYywgREZJX0lTX01QQyksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBl
cmZfb3BfaXNfYWN0LCBQRVJGX09QX0lTX0FDVCksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRS
KHBlcmZfb3BfaXNfcmQsIFBFUkZfT1BfSVNfUkQpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRU
UihwZXJmX29wX2lzX3dyLCBQRVJGX09QX0lTX1dSKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FU
VFIocGVyZl9vcF9pc19td3IsIFBFUkZfT1BfSVNfTVdSKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5U
X0FUVFIocGVyZl9vcF9pc19yZWYsIFBFUkZfT1BfSVNfUkVGKSwKKwlTVE0zMl9ERFJfUE1VX0VW
RU5UX0FUVFIocGVyZl9vcF9pc19jcml0X3JlZiwgUEVSRl9PUF9JU19DUklUX1JFRiksCisJU1RN
MzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfb3BfaXNfc3BlY19yZWYsIFBFUkZfT1BfSVNfU1BF
Q19SRUYpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX29wX2lzX3pxY2FsLCBQRVJG
X09QX0lTX1pRQ0FMKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9vcF9pc19lbnRl
cl9wb3dkbiwgUEVSRl9PUF9JU19FTlRFUl9QT1dETiksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9B
VFRSKHBlcmZfb3BfaXNfZW50ZXJfc2VsZnJlZiwgUEVSRl9PUF9JU19FTlRFUl9TRUxGUkVGKSwK
KwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9vcF9pc19wcmUsIFBFUkZfT1BfSVNfUFJF
KSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9vcF9pc19wcmVfZm9yX3Jkd3IsIFBF
UkZfT1BfSVNfUFJFX0ZPUl9SRFdSKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl9v
cF9pc19wcmVfZm9yX290aGVycywgUEVSRl9PUF9JU19QUkVfRk9SX09USEVSUyksCisJU1RNMzJf
RERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfb3BfaXNfcmRfYWN0aXZhdGUsIFBFUkZfT1BfSVNfUkRf
QUNUSVZBVEUpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX2hwcl9yZXFfd2l0aF9u
b2NyZWRpdCwgUEVSRl9IUFJfUkVRX1dJVEhfTk9DUkVESVQpLAorCVNUTTMyX0REUl9QTVVfRVZF
TlRfQVRUUihwZXJmX2xwcl9yZXFfd2l0aF9ub2NyZWRpdCwgUEVSRl9MUFJfUkVRX1dJVEhfTk9D
UkVESVQpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX2hwcl94YWN0X3doZW5fY3Jp
dGljYWwsIFBFUkZfSFBSX1hBQ1RfV0hFTl9DUklUSUNBTCksCisJU1RNMzJfRERSX1BNVV9FVkVO
VF9BVFRSKHBlcmZfbHByX3hhY3Rfd2hlbl9jcml0aWNhbCwgUEVSRl9MUFJfWEFDVF9XSEVOX0NS
SVRJQ0FMKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl93cl94YWN0X3doZW5fY3Jp
dGljYWwsIFBFUkZfV1JfWEFDVF9XSEVOX0NSSVRJQ0FMKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5U
X0FUVFIocGVyZl9yZHdyX3RyYW5zaXRpb25zLCBQRVJGX1JEV1JfVFJBTlNJVElPTlMpLAorCVNU
TTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX3dhcl9oYXphcmQsIFBFUkZfV0FSX0hBWkFSRCks
CisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfcmF3X2hhemFyZCwgUEVSRl9SQVdfSEFa
QVJEKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIocGVyZl93YXdfaGF6YXJkLCBQRVJGX1dB
V19IQVpBUkQpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX3JhbmssIFBFUkZfUkFO
SyksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfcmVhZF9ieXBhc3MsIFBFUkZfUkVB
RF9CWVBBU1MpLAorCVNUTTMyX0REUl9QTVVfRVZFTlRfQVRUUihwZXJmX2FjdF9ieXBhc3MsIFBF
UkZfQUNUX0JZUEFTUyksCisJU1RNMzJfRERSX1BNVV9FVkVOVF9BVFRSKHBlcmZfd2luZG93X2xp
bWl0X3JlYWNoZWRfcmQsIFBFUkZfV0lORE9XX0xJTUlUX1JFQUNIRURfUkQpLAorCVNUTTMyX0RE
Ul9QTVVfRVZFTlRfQVRUUihwZXJmX3dpbmRvd19saW1pdF9yZWFjaGVkX3dyLCBQRVJGX1dJTkRP
V19MSU1JVF9SRUFDSEVEX1dSKSwKKwlTVE0zMl9ERFJfUE1VX0VWRU5UX0FUVFIodGltZV9jbnQs
IFRJTUVfQ05UKSwKKwlOVUxMCit9OworCitzdGF0aWMgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCBz
dG0zMl9kZHJfcG11X2V2ZW50c19hdHRyc19ncm91cF9tcDIgPSB7CisJLm5hbWUgPSAiZXZlbnRz
IiwKKwkuYXR0cnMgPSBzdG0zMl9kZHJfcG11X2V2ZW50c19hdHRyc19tcDIsCit9OworCitQTVVf
Rk9STUFUX0FUVFIoZXZlbnQsICJjb25maWc6MC04Iik7CisKK3N0YXRpYyBzdHJ1Y3QgYXR0cmli
dXRlICpzdG0zMl9kZHJfcG11X2Zvcm1hdF9hdHRyc1tdID0geworCSZmb3JtYXRfYXR0cl9ldmVu
dC5hdHRyLAorCU5VTEwsCit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IGF0dHJpYnV0ZV9ncm91
cCBzdG0zMl9kZHJfcG11X2Zvcm1hdF9hdHRyX2dyb3VwID0geworCS5uYW1lID0gImZvcm1hdCIs
CisJLmF0dHJzID0gc3RtMzJfZGRyX3BtdV9mb3JtYXRfYXR0cnMsCit9OworCitzdGF0aWMgY29u
c3Qgc3RydWN0IGF0dHJpYnV0ZV9ncm91cCAqc3RtMzJfZGRyX3BtdV9hdHRyX2dyb3Vwc19tcDFb
XSA9IHsKKwkmc3RtMzJfZGRyX3BtdV9ldmVudHNfYXR0cnNfZ3JvdXBfbXAsCisJJnN0bTMyX2Rk
cl9wbXVfZm9ybWF0X2F0dHJfZ3JvdXAsCisJTlVMTCwKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1
Y3QgYXR0cmlidXRlX2dyb3VwICpzdG0zMl9kZHJfcG11X2F0dHJfZ3JvdXBzX21wMltdID0gewor
CSZzdG0zMl9kZHJfcG11X2V2ZW50c19hdHRyc19ncm91cF9tcDIsCisJJnN0bTMyX2Rkcl9wbXVf
Zm9ybWF0X2F0dHJfZ3JvdXAsCisJTlVMTCwKK307CisKK3N0YXRpYyBpbnQgc3RtMzJfZGRyX3Bt
dV9kZXZpY2VfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKK3sKKwlzdHJ1Y3Qg
c3RtMzJfZmlyZXdhbGwgZmlyZXdhbGw7CisJc3RydWN0IHN0bTMyX2Rkcl9wbXUgKnBtdTsKKwlz
dHJ1Y3QgcmVzZXRfY29udHJvbCAqcnN0OworCXN0cnVjdCByZXNvdXJjZSAqcmVzOworCWludCBy
ZXQ7CisKKwlwbXUgPSBkZXZtX2t6YWxsb2MoJnBkZXYtPmRldiwgc3RydWN0X3NpemUocG11LCBj
b3VudGVycywgTVAyX0NOVF9OQiksIEdGUF9LRVJORUwpOworCWlmICghcG11KQorCQlyZXR1cm4g
LUVOT01FTTsKKworCXBsYXRmb3JtX3NldF9kcnZkYXRhKHBkZXYsIHBtdSk7CisJcG11LT5kZXYg
PSAmcGRldi0+ZGV2OworCisJcG11LT5jZmcgPSBkZXZpY2VfZ2V0X21hdGNoX2RhdGEoJnBkZXYt
PmRldik7CisKKwlwbXUtPm1lbWJhc2UgPSBkZXZtX3BsYXRmb3JtX2dldF9hbmRfaW9yZW1hcF9y
ZXNvdXJjZShwZGV2LCAwLCAmcmVzKTsKKwlpZiAoSVNfRVJSKHBtdS0+bWVtYmFzZSkpCisJCXJl
dHVybiBQVFJfRVJSKHBtdS0+bWVtYmFzZSk7CisKKwlpZiAob2ZfcHJvcGVydHlfcHJlc2VudChw
bXUtPmRldi0+b2Zfbm9kZSwgImFjY2Vzcy1jb250cm9sbGVycyIpKSB7CisJCXJldCA9IHN0bTMy
X2ZpcmV3YWxsX2dldF9maXJld2FsbChwbXUtPmRldi0+b2Zfbm9kZSwgJmZpcmV3YWxsLCAxKTsK
KwkJaWYgKHJldCkgeworCQkJZGV2X2VycihwbXUtPmRldiwgIkZhaWxlZCB0byBnZXQgZmlyZXdh
bGxcbiIpOworCQkJcmV0dXJuIHJldDsKKwkJfQorCQlyZXQgPSBzdG0zMl9maXJld2FsbF9ncmFu
dF9hY2Nlc3NfYnlfaWQoJmZpcmV3YWxsLCBmaXJld2FsbC5maXJld2FsbF9pZCk7CisJCWlmIChy
ZXQpIHsKKwkJCWRldl9lcnIocG11LT5kZXYsICJGYWlsZWQgdG8gZ3JhbnQgYWNjZXNzXG4iKTsK
KwkJCXJldHVybiByZXQ7CisJCX0KKwl9CisKKwlpZiAob2ZfcHJvcGVydHlfcHJlc2VudChwbXUt
PmRldi0+b2Zfbm9kZSwgImNsb2NrcyIpKSB7CisJCXBtdS0+Y2xrID0gZGV2bV9jbGtfZ2V0X3By
ZXBhcmVkKHBtdS0+ZGV2LCBOVUxMKTsKKwkJaWYgKElTX0VSUihwbXUtPmNsaykpIHsKKwkJCWRl
dl9lcnIocG11LT5kZXYsICJGYWlsZWQgdG8gZ2V0IGNsb2NrXG4iKTsKKwkJCXJldHVybiBQVFJf
RVJSKHBtdS0+Y2xrKTsKKwkJfQorCX0KKworCWNsa19lbmFibGUocG11LT5jbGspOworCisJaWYg
KG9mX3Byb3BlcnR5X3ByZXNlbnQocGRldi0+ZGV2Lm9mX25vZGUsICJyZXNldHMiKSkgeworCQly
c3QgPSBkZXZtX3Jlc2V0X2NvbnRyb2xfZ2V0KCZwZGV2LT5kZXYsIE5VTEwpOworCQlpZiAoSVNf
RVJSKHJzdCkpIHsKKwkJCWRldl9lcnIoJnBkZXYtPmRldiwgIkZhaWxlZCB0byBnZXQgcmVzZXRc
biIpOworCQkJcmV0ID0gUFRSX0VSUihyc3QpOworCQkJZ290byBlcnJfY2xrOworCQl9CisJCXJl
c2V0X2NvbnRyb2xfYXNzZXJ0KHJzdCk7CisJCXJlc2V0X2NvbnRyb2xfZGVhc3NlcnQocnN0KTsK
Kwl9CisKKwlwbXUtPnBvbGxfcGVyaW9kID0gbXNfdG9fa3RpbWUoUE9MTF9NUyk7CisJaHJ0aW1l
cl9zZXR1cCgmcG11LT5ocnRpbWVyLCBzdG0zMl9kZHJfcG11X3BvbGwsIENMT0NLX01PTk9UT05J
QywgSFJUSU1FUl9NT0RFX1JFTCk7CisKKwlmb3IgKGludCBpID0gMDsgaSA8IE1QMl9DTlRfTkI7
IGkrKykKKwkJSU5JVF9MSVNUX0hFQUQoJnBtdS0+Y291bnRlcnNbaV0pOworCisJcG11LT5zZWxl
Y3RlZF9zZXQgPSAtMTsKKworCXBtdS0+cG11ID0gKHN0cnVjdCBwbXUpIHsKKwkJLnRhc2tfY3R4
X25yID0gcGVyZl9pbnZhbGlkX2NvbnRleHQsCisJCS5zdGFydCA9IHN0bTMyX2Rkcl9wbXVfZXZl
bnRfc3RhcnQsCisJCS5zdG9wID0gc3RtMzJfZGRyX3BtdV9ldmVudF9zdG9wLAorCQkuYWRkID0g
c3RtMzJfZGRyX3BtdV9ldmVudF9hZGQsCisJCS5kZWwgPSBzdG0zMl9kZHJfcG11X2V2ZW50X2Rl
bCwKKwkJLnJlYWQgPSBzdG0zMl9kZHJfcG11X2V2ZW50X3JlYWQsCisJCS5ldmVudF9pbml0ID0g
c3RtMzJfZGRyX3BtdV9ldmVudF9pbml0LAorCQkuYXR0cl9ncm91cHMgPSBwbXUtPmNmZy0+YXR0
cmlidXRlLAorCQkubW9kdWxlID0gVEhJU19NT0RVTEUsCisJfTsKKworCXJldCA9IHBlcmZfcG11
X3JlZ2lzdGVyKCZwbXUtPnBtdSwgRFJJVkVSX05BTUUsIC0xKTsKKwlpZiAocmV0KSB7CisJCWRl
dl9lcnIoJnBkZXYtPmRldiwgIkNvdWxkbid0IHJlZ2lzdGVyIEREUlBFUkZNIGRyaXZlciBhcyBh
IFBNVVxuIik7CisJCWdvdG8gZXJyX2NsazsKKwl9CisKKwlpZiAocG11LT5jZmctPnJlZ3MtPmRy
YW1faW5mLnJlZykgeworCQlyZXQgPSBvZl9wcm9wZXJ0eV9yZWFkX3UzMihwZGV2LT5kZXYub2Zf
bm9kZSwgInN0LGRyYW0tdHlwZSIsICZwbXUtPmRyYW1fdHlwZSk7CisJCWlmIChyZXQpIHsKKwkJ
CWRldl9lcnIoJnBkZXYtPmRldiwgIk1pc3NpbmcgZGV2aWNlLXRyZWUgcHJvcGVydHkgJ3N0LGRy
YW0tdHlwZSdcbiIpOworCQkJcGVyZl9wbXVfdW5yZWdpc3RlcigmcG11LT5wbXUpOworCisJCQly
ZXR1cm4gcmV0OworCQl9CisKKwkJd3JpdGVsX3JlbGF4ZWQocG11LT5kcmFtX3R5cGUsIHBtdS0+
bWVtYmFzZSArIHBtdS0+Y2ZnLT5yZWdzLT5kcmFtX2luZi5yZWcpOworCX0KKworCWNsa19kaXNh
YmxlKHBtdS0+Y2xrKTsKKworCXJldHVybiAwOworCitlcnJfY2xrOgorCWNsa19kaXNhYmxlX3Vu
cHJlcGFyZShwbXUtPmNsayk7CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgdm9pZCBzdG0z
Ml9kZHJfcG11X2RldmljZV9yZW1vdmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKK3sK
KwlzdHJ1Y3Qgc3RtMzJfZGRyX3BtdSAqc3RtMzJfZGRyX3BtdSA9IHBsYXRmb3JtX2dldF9kcnZk
YXRhKHBkZXYpOworCisJcGVyZl9wbXVfdW5yZWdpc3Rlcigmc3RtMzJfZGRyX3BtdS0+cG11KTsK
K30KKworc3RhdGljIGludCBfX21heWJlX3VudXNlZCBzdG0zMl9kZHJfcG11X2RldmljZV9yZXN1
bWUoc3RydWN0IGRldmljZSAqZGV2KQoreworCXN0cnVjdCBzdG0zMl9kZHJfcG11ICpwbXUgPSBk
ZXZfZ2V0X2RydmRhdGEoZGV2KTsKKworCWNsa19lbmFibGUocG11LT5jbGspOworCXdyaXRlbF9y
ZWxheGVkKHBtdS0+ZHJhbV90eXBlLCBwbXUtPm1lbWJhc2UgKyBwbXUtPmNmZy0+cmVncy0+ZHJh
bV9pbmYucmVnKTsKKwljbGtfZGlzYWJsZShwbXUtPmNsayk7CisKKwlyZXR1cm4gMDsKK30KKwor
c3RhdGljIGNvbnN0IHN0cnVjdCBzdG0zMl9kZHJfcG11X3JlZ3NwZWMgc3RtMzJfZGRyX3BtdV9y
ZWdzcGVjX21wMSA9IHsKKwkuc3RvcCA9CQl7IEREUlBFUkZNX0NUUkwsIENUUkxfU1RPUCB9LAor
CS5zdGFydCA9CXsgRERSUEVSRk1fQ1RSTCwgQ1RSTF9TVEFSVCB9LAorCS5lbmFibGUgPQl7IERE
UlBFUkZNX0NGRyB9LAorCS5jZmcgPQkJeyBERFJQRVJGTV9DRkcgfSwKKwkuc3RhdHVzID0JeyBE
RFJQRVJGTV9TVEFUVVMsIE1QMV9TVEFUVVNfQlVTWSB9LAorCS5jbGVhcl9jbnQgPQl7IEREUlBF
UkZNX0NMUiwgTVAxX0NMUl9DTlR9LAorCS5jbGVhcl90aW1lID0JeyBERFJQRVJGTV9DTFIsIE1Q
MV9DTFJfVElNRX0sCisJLmNvdW50ZXJfdGltZSA9CXsgRERSUEVSRk1fVENOVCB9LAorCS5jb3Vu
dGVyX2V2dCA9CXsKKwkJCQl7IEREUlBFUkZNX0VWQ05UKDApIH0sCisJCQkJeyBERFJQRVJGTV9F
VkNOVCgxKSB9LAorCQkJCXsgRERSUEVSRk1fRVZDTlQoMikgfSwKKwkJCQl7IEREUlBFUkZNX0VW
Q05UKDMpIH0sCisJfSwKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3Qgc3RtMzJfZGRyX3BtdV9y
ZWdzcGVjIHN0bTMyX2Rkcl9wbXVfcmVnc3BlY19tcDIgPSB7CisJLnN0b3AgPQkJeyBERFJQRVJG
TV9DVFJMLCBDVFJMX1NUT1AgfSwKKwkuc3RhcnQgPQl7IEREUlBFUkZNX0NUUkwsIENUUkxfU1RB
UlQgfSwKKwkuc3RhdHVzID0JeyBERFJQRVJGTV9NUDJfU1RBVFVTLCBNUDJfU1RBVFVTX0JVU1kg
fSwKKwkuY2xlYXJfY250ID0JeyBERFJQRVJGTV9DTFIsIE1QMl9DTFJfQ05UfSwKKwkuY2xlYXJf
dGltZSA9CXsgRERSUEVSRk1fQ0xSLCBNUDJfQ0xSX1RJTUV9LAorCS5jZmcwID0JCXsgRERSUEVS
Rk1fTVAyX0NGRzAgfSwKKwkuY2ZnMSA9CQl7IEREUlBFUkZNX01QMl9DRkcxIH0sCisJLmVuYWJs
ZSA9CXsgRERSUEVSRk1fTVAyX0NGRzUgfSwKKwkuZHJhbV9pbmYgPQl7IEREUlBFUkZNX01QMl9E
UkFNSU5GIH0sCisJLmNvdW50ZXJfdGltZSA9CXsgRERSUEVSRk1fTVAyX1RDTlQgfSwKKwkuY291
bnRlcl9ldnQgPQl7CisJCQkJeyBERFJQRVJGTV9NUDJfRVZDTlQoMCkgfSwKKwkJCQl7IEREUlBF
UkZNX01QMl9FVkNOVCgxKSB9LAorCQkJCXsgRERSUEVSRk1fTVAyX0VWQ05UKDIpIH0sCisJCQkJ
eyBERFJQRVJGTV9NUDJfRVZDTlQoMykgfSwKKwkJCQl7IEREUlBFUkZNX01QMl9FVkNOVCg0KSB9
LAorCQkJCXsgRERSUEVSRk1fTVAyX0VWQ05UKDUpIH0sCisJCQkJeyBERFJQRVJGTV9NUDJfRVZD
TlQoNikgfSwKKwkJCQl7IEREUlBFUkZNX01QMl9FVkNOVCg3KSB9LAorCX0sCit9OworCitzdGF0
aWMgY29uc3Qgc3RydWN0IHN0bTMyX2Rkcl9wbXVfY2ZnIHN0bTMyX2Rkcl9wbXVfY2ZnX21wMSA9
IHsKKwkucmVncyA9ICZzdG0zMl9kZHJfcG11X3JlZ3NwZWNfbXAxLAorCS5hdHRyaWJ1dGUgPSBz
dG0zMl9kZHJfcG11X2F0dHJfZ3JvdXBzX21wMSwKKwkuY291bnRlcnNfbmIgPSBNUDFfQ05UX05C
LAorCS5ldnRfY291bnRlcnNfbmIgPSBNUDFfQ05UX05CIC0gMSwgLyogVGltZSBjb3VudGVyIGlz
IG5vdCBhbiBldmVudCBjb3VudGVyICovCisJLnRpbWVfY250X2lkeCA9IE1QMV9USU1FX0NOVF9J
RFgsCisJLmdldF9jb3VudGVyID0gc3RtMzJfZGRyX3BtdV9nZXRfZXZlbnRfY291bnRlcl9tcDEs
Cit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IHN0bTMyX2Rkcl9wbXVfY2ZnIHN0bTMyX2Rkcl9w
bXVfY2ZnX21wMiA9IHsKKwkucmVncyA9ICZzdG0zMl9kZHJfcG11X3JlZ3NwZWNfbXAyLAorCS5h
dHRyaWJ1dGUgPSBzdG0zMl9kZHJfcG11X2F0dHJfZ3JvdXBzX21wMiwKKwkuY291bnRlcnNfbmIg
PSBNUDJfQ05UX05CLAorCS5ldnRfY291bnRlcnNfbmIgPSBNUDJfQ05UX05CIC0gMSwgLyogVGlt
ZSBjb3VudGVyIGlzIGFuIGV2ZW50IGNvdW50ZXIgKi8KKwkudGltZV9jbnRfaWR4ID0gTVAyX1RJ
TUVfQ05UX0lEWCwKKwkuZ2V0X2NvdW50ZXIgPSBzdG0zMl9kZHJfcG11X2dldF9ldmVudF9jb3Vu
dGVyX21wMiwKK307CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgZGV2X3BtX29wcyBzdG0zMl9kZHJf
cG11X3BtX29wcyA9IHsKKwlTRVRfU1lTVEVNX1NMRUVQX1BNX09QUyhOVUxMLCBzdG0zMl9kZHJf
cG11X2RldmljZV9yZXN1bWUpCit9OworCitzdGF0aWMgY29uc3Qgc3RydWN0IG9mX2RldmljZV9p
ZCBzdG0zMl9kZHJfcG11X29mX21hdGNoW10gPSB7CisJeworCQkuY29tcGF0aWJsZSA9ICJzdCxz
dG0zMm1wMTMxLWRkci1wbXUiLAorCQkuZGF0YSA9ICZzdG0zMl9kZHJfcG11X2NmZ19tcDEKKwl9
LAorCXsKKwkJLmNvbXBhdGlibGUgPSAic3Qsc3RtMzJtcDE1MS1kZHItcG11IiwKKwkJLmRhdGEg
PSAmc3RtMzJfZGRyX3BtdV9jZmdfbXAxCisJfSwKKwl7CisJCS5jb21wYXRpYmxlID0gInN0LHN0
bTMybXAyNTEtZGRyLXBtdSIsCisJCS5kYXRhID0gJnN0bTMyX2Rkcl9wbXVfY2ZnX21wMgorCX0s
CisJeyB9LAorfTsKK01PRFVMRV9ERVZJQ0VfVEFCTEUob2YsIHN0bTMyX2Rkcl9wbXVfb2ZfbWF0
Y2gpOworCitzdGF0aWMgc3RydWN0IHBsYXRmb3JtX2RyaXZlciBzdG0zMl9kZHJfcG11X2RyaXZl
ciA9IHsKKwkuZHJpdmVyID0geworCQkubmFtZSA9IERSSVZFUl9OQU1FLAorCQkucG0gPSAmc3Rt
MzJfZGRyX3BtdV9wbV9vcHMsCisJCS5vZl9tYXRjaF90YWJsZSA9IG9mX21hdGNoX3B0cihzdG0z
Ml9kZHJfcG11X29mX21hdGNoKSwKKwl9LAorCS5wcm9iZSA9IHN0bTMyX2Rkcl9wbXVfZGV2aWNl
X3Byb2JlLAorCS5yZW1vdmUgPSBzdG0zMl9kZHJfcG11X2RldmljZV9yZW1vdmUsCit9OworCitt
b2R1bGVfcGxhdGZvcm1fZHJpdmVyKHN0bTMyX2Rkcl9wbXVfZHJpdmVyKTsKKworTU9EVUxFX0FV
VEhPUigiQ2zDqW1lbnQgTGUgR29mZmljIik7CitNT0RVTEVfREVTQ1JJUFRJT04oIlNUTWljcm9l
bGVjdHJvbmljcyBTVE0zMiBERFIgcGVyZm9ybWFuY2UgbW9uaXRvciBkcml2ZXIiKTsKK01PRFVM
RV9MSUNFTlNFKCJHUEwiKTsKCi0tIAoyLjQzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fCkxpbnV4LXN0bTMyIG1haWxpbmcgbGlzdApMaW51eC1zdG0z
MkBzdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tCmh0dHBzOi8vc3QtbWQtbWFpbG1hbi5zdG9y
bXJlcGx5LmNvbS9tYWlsbWFuL2xpc3RpbmZvL2xpbnV4LXN0bTMyCg==
