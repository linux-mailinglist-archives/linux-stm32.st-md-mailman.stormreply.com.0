Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 3688883272D
	for <lists+linux-stm32@lfdr.de>; Fri, 19 Jan 2024 10:59:50 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id B0D09C6DD74;
	Fri, 19 Jan 2024 09:59:49 +0000 (UTC)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id C0090C6DD73
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Fri, 19 Jan 2024 09:59:47 +0000 (UTC)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 2F20C1042;
 Fri, 19 Jan 2024 02:00:32 -0800 (PST)
Received: from [192.168.1.100] (unknown [172.31.20.19])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id C96BF3F73F;
 Fri, 19 Jan 2024 01:59:43 -0800 (PST)
Message-ID: <cb65b58f-5c6a-ad99-095c-70b9f013b3e5@arm.com>
Date: Fri, 19 Jan 2024 09:59:42 +0000
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.15.1
Content-Language: en-US
To: Suzuki K Poulose <suzuki.poulose@arm.com>, coresight@lists.linaro.org
References: <20231212155407.1429121-1-james.clark@arm.com>
 <20231212155407.1429121-6-james.clark@arm.com>
 <82e9dbed-281c-4a87-8c0b-a2b1cb0a2247@arm.com>
From: James Clark <james.clark@arm.com>
In-Reply-To: <82e9dbed-281c-4a87-8c0b-a2b1cb0a2247@arm.com>
Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>,
 Mao Jinlong <quic_jinlmao@quicinc.com>, linux-kernel@vger.kernel.org,
 Tao Zhang <quic_taozha@quicinc.com>,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 linux-stm32@st-md-mailman.stormreply.com, linux-arm-kernel@lists.infradead.org,
 Mike Leach <mike.leach@linaro.org>
Subject: Re: [Linux-stm32] [PATCH 5/8] coresight: Remove the 'enable' field.
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

CgpPbiAwOC8wMS8yMDI0IDE0OjQyLCBTdXp1a2kgSyBQb3Vsb3NlIHdyb3RlOgo+IEhpIEphbWVz
Cj4gCj4gK0NjOiBUYW8gWmhhbmcgPHF1aWNfdGFvemhhQHF1aWNpbmMuY29tPgo+ICtDYzogTWFv
IEppbmxvbmcgPHF1aWNfamlubG1hb0BxdWljaW5jLmNvbT4KPiAKPiBPbiAxMi8xMi8yMDIzIDE1
OjU0LCBKYW1lcyBDbGFyayB3cm90ZToKPj4gJ2VuYWJsZScsIHdoaWNoIHByb2JhYmx5IHNob3Vs
ZCBoYXZlIGJlZW4gJ2VuYWJsZWQnLCBpcyBvbmx5IGV2ZXIgcmVhZAo+PiBpbiB0aGUgY29yZSBj
b2RlIGluIHJlbGF0aW9uIHRvIGNvbnRyb2xsaW5nIHNvdXJjZXMsIGFuZCBzcGVjaWZpY2FsbHkK
Pj4gb25seSBzb3VyY2VzIGluIHN5c2ZzIG1vZGUuIENvbmZ1c2luZ2x5IGl0J3Mgbm90IGxhYmVs
bGVkIGFzIHN1Y2ggYW5kCj4+IHJlbHlpbmcgb24gaXQgY2FuIGJlIGEgc291cmNlIG9mIGJ1Z3Mg
bGlrZSB0aGUgb25lIGZpeGVkIGJ5Cj4+IGNvbW1pdCAwNzhkYmJhM2YwYzkgKCJjb3Jlc2lnaHQ6
IEZpeCBjcmFzaCB3aGVuIFBlcmYgYW5kIHN5c2ZzIG1vZGVzIGFyZQo+PiB1c2VkIGNvbmN1cnJl
bnRseSIpLgo+Pgo+PiBNb3N0IGltcG9ydGFudGx5LCBpdCBjYW4gb25seSBiZSB1c2VkIHdoZW4g
dGhlIGNvcmVzaWdodF9tdXRleCBpcyBoZWxkCj4+IHdoaWNoIGlzIG9ubHkgZG9uZSB3aGVuIGVu
YWJsaW5nIGFuZCBkaXNhYmxpbmcgcGF0aHMgaW4gc3lzZnMgbW9kZSwgYW5kCj4+IG5vdCBQZXJm
IG1vZGUuCj4gCj4gCj4gSSB0aGluayB3ZSBtYXkgYmUgYWJsZSB0byByZWxheCB0aGlzIGEgYml0
IGZvciB0aGUgc3lmcy4gVGhlIHNvbGUgcmVhc29uCj4gZm9yIGhvbGRpbmcgdGhlIG11dGV4IGlz
IGZvciB0aGUgImJ1aWxkX3BhdGgiIChhbmQgZ2V0X2VuYWJsZWRfc2luaykKPiB3aGVyZSB3ZSBu
ZWVkIHRvIG1ha2Ugc3VyZSB0aGF0IG5vIGRldmljZXMgYXJlIHJlbW92ZWQvYWRkZWQuIFdlIGhv
bGQKPiBuZWNlc3NhcnkgcmVmY291bnQgb24gdGhlIGRldmljZSBhbmQgdGhlIG1vZHVsZSAodmlh
Cj4gY29yZXNpZ2h0X2dyYWJfZGV2aWNlKCkpLiBBZnRlciB3aGljaCwgd2Ugc2hvdWxkIGJlIGFi
bGUgdG8gcmVsZWFzZSB0aGUKPiBtdXRleCBhbmQgcGVyZm9ybSB0aGUgcmVzdCB3aXRob3V0IGl0
IGluIGNvcmVzaWdodF9lbmFibGUoKQo+IAoKQWZ0ZXIgbG9va2luZyBhdCB0aGUgcGVyLXNpbmsg
dHJhY2UgSUQgbWFwcyBhIGJpdCBtb3JlLCBJJ20gbm90IHN1cmUgaWYKaXQgd2lsbCBiZSB3b3J0
aCB0aGUgbWVudGFsIGVmZm9ydCBhbmQgcmlzayB0byByZWxheCB0aGUgc3lzZnMgbG9ja2luZwpy
aWdodCBub3cuCgpXZSBhbHNvIGN1cnJlbnRseSBoYXZlIG90aGVyIHRoaW5ncyBsaWtlIHdyaXRp
bmcgdG8gdGhlIGdsb2JhbAp0cmFjZXJfcGF0aCB3aGljaCBhcmUgb3V0c2lkZSBvZiBidWlsZF9w
YXRoL2dldF9lbmFibGVkX3NpbmsuIEJ1dCBmb3IKdGhlIHBlci1zaW5rIG1hcHMgY2hhbmdlIHdl
J2xsIGFsc28gaGF2ZSBzb21lIHRyYWNraW5nIGZvciBzeXNmcyBtb2RlCmFib3V0IHdoaWNoIHNp
bmsgbWFwIHdhcyB1c2VkIGZvciBlYWNoIHNvdXJjZSBhbmQgc2luay4gQW5kIHRoaXMgc3RhdGUK
d2lsbCBiZSBhY2Nlc3NlZCBhY3Jvc3MgbXVsdGlwbGUgc291cmNlcywgYW5kIGFmdGVyIGJ1aWxk
aW5nIHRoZSBwYXRoLApzbyBpdCBtYWtlcyBzZW5zZSB0byBsZWF2ZSB0aGUgbG9ja2luZyBhcy1p
cyBmb3Igbm93IElNTy4KCkkgYWxzbyBjYW4ndCBzZWUgYSByZWFsaXN0aWMgZ2FpbiBmcm9tIGRv
aW5nIGl0LCBtb3N0IHN5c2ZzIHVzZSBjYXNlcwp3b3VsZCBiZSBkb25lIGZyb20gYSBzaW5nbGUg
dGhyZWFkZWQgc2NyaXB0LiBNYXliZSBpbiB0aGUgZnV0dXJlIHdlCmNvdWxkIGRvIHRoZSBjaGFu
Z2UgdG8gbW92ZSB0aGUgcGVyLWRldmljZSBsb2NrcyBpbnRvIHN0cnVjdApjb3Jlc2lnaHRfZGV2
aWNlLCBhbmQgdGhlbiB0aGUgY29yZSBjb2RlIGNhbiB1c2UgdGhlbSBmb3IgdGhpbmdzIHRoYXQK
bmVlZCB0byBiZSBsb2NrZWQsIGJ1dCBkb24ndCBuZWVkIHRoZSBmdWxsIGNvcmVzaWdodF9tdXRl
eC4gQW5kIHRoZW4KdGhhdCB3b3VsZCBhbHNvIHdvcmsgZm9yIHRoZSBwZXItc2luayBjYXNlLiBC
dXQgYXQgdGhlIG1vbWVudCBlYWNoCmRldmljZSBoYXMgaXRzIG93biBsb2NrIHNvIHRoYXQncyBk
aWZmaWN1bHQuCgo+PiBTbyB0byBwcmV2ZW50IGl0cyB1c2FnZSBzcHJlYWRpbmcgYW5kIGxlYWtp
bmcgb3V0IHRvCj4+IG90aGVyIGRldmljZXMsIHJlbW92ZSBpdC4KPj4KPj4gSXQncyB1c2UgaXMg
ZXF1aXZhbGVudCB0byBjaGVja2luZyBpZiB0aGUgbW9kZSBpcyBjdXJyZW50bHkgc3lzZnMsIGFz
Cj4+IGR1ZSB0byB0aGUgY29yZXNpZ2h0X211dGV4IGxvY2ssIG1vZGUgPT0gQ1NfTU9ERV9TWVNG
UyBjYW4gb25seSBiZWNvbWUKPj4gdHJ1ZSBvciB1bnRydWUgd2hlbiB0aGF0IGxvY2sgaXMgaGVs
ZCwgYW5kIHdoZW4gbW9kZSA9PSBDU19NT0RFX1NZU0ZTCj4+IHRoZSBkZXZpY2UgaXMgYm90aCBl
bmFibGVkIGFuZCBpbiBzeXNmcyBtb2RlLgo+IAo+IEFsbCBvZiB0aGUgYWJvdmUgbWFrZXMgc2Vu
c2UgYW5kIGxvb2tzIGdvb2QgdG8gbWUuCj4gCj4+Cj4+IFRoZSBvbmUgcGxhY2UgaXQgd2FzIHVz
ZWQgb3V0c2lkZSBvZiB0aGUgY29yZSBjb2RlIGlzIGluIFRQREEsIGJ1dCB0aGF0Cj4+IHBhdHRl
cm4gaXMgbW9yZSBhcHByb3ByaWF0ZWx5IHJlcHJlc2VudGVkIHVzaW5nIHJlZmNvdW50cyBpbnNp
ZGUgdGhlCj4+IGRldmljZSdzIG93biBzcGlubG9jay4KPiAKPiBCdXQsIEkgdGhpbmsgd2UgY2Fu
IGNsZWFuIHVwIHRoaXMgY29kZSBhIGJpdCBtb3JlIGJldHRlci4gU2VlIGJlbG93Lgo+IAo+Pgo+
PiBTaWduZWQtb2ZmLWJ5OiBKYW1lcyBDbGFyayA8amFtZXMuY2xhcmtAYXJtLmNvbT4KPj4gLS0t
Cj4+IMKgIGRyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtY29yZS5jIHwgODYg
KysrKysrKy0tLS0tLS0tLS0tLS0KPj4gwqAgZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2Nv
cmVzaWdodC10cGRhLmMgfCAxMiArKy0KPj4gwqAgaW5jbHVkZS9saW51eC9jb3Jlc2lnaHQuaMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHzCoCAyIC0KPj4gwqAgMyBmaWxl
cyBjaGFuZ2VkLCAzOCBpbnNlcnRpb25zKCspLCA2MiBkZWxldGlvbnMoLSkKPj4KPj4gZGlmZiAt
LWdpdCBhL2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtY29yZS5jCj4+IGIv
ZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1jb3JlLmMKPj4gaW5kZXggYWIy
MjY0NDFlNWY0Li4xZDBiZDE1ODY1OTAgMTAwNjQ0Cj4+IC0tLSBhL2RyaXZlcnMvaHd0cmFjaW5n
L2NvcmVzaWdodC9jb3Jlc2lnaHQtY29yZS5jCj4+ICsrKyBiL2RyaXZlcnMvaHd0cmFjaW5nL2Nv
cmVzaWdodC9jb3Jlc2lnaHQtY29yZS5jCj4+IEBAIC0yNzksMjkgKzI3OSwxOCBAQCBFWFBPUlRf
U1lNQk9MX0dQTChjb3Jlc2lnaHRfYWRkX2hlbHBlcik7Cj4+IMKgIHN0YXRpYyBpbnQgY29yZXNp
Z2h0X2VuYWJsZV9zaW5rKHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpjc2RldiwKPj4gwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGVudW0gY3NfbW9kZSBtb2RlLCB2b2lkICpk
YXRhKQo+PiDCoCB7Cj4+IC3CoMKgwqAgaW50IHJldCA9IHNpbmtfb3BzKGNzZGV2KS0+ZW5hYmxl
KGNzZGV2LCBtb2RlLCBkYXRhKTsKPj4gLQo+PiAtwqDCoMKgIGlmIChyZXQpCj4+IC3CoMKgwqDC
oMKgwqDCoCByZXR1cm4gcmV0Owo+PiAtCj4+IC3CoMKgwqAgY3NkZXYtPmVuYWJsZSA9IHRydWU7
Cj4+IC0KPj4gLcKgwqDCoCByZXR1cm4gMDsKPj4gK8KgwqDCoCByZXR1cm4gc2lua19vcHMoY3Nk
ZXYpLT5lbmFibGUoY3NkZXYsIG1vZGUsIGRhdGEpOwo+PiDCoCB9Cj4+IMKgIMKgIHN0YXRpYyB2
b2lkIGNvcmVzaWdodF9kaXNhYmxlX3Npbmsoc3RydWN0IGNvcmVzaWdodF9kZXZpY2UgKmNzZGV2
KQo+PiDCoCB7Cj4+IC3CoMKgwqAgaW50IHJldCA9IHNpbmtfb3BzKGNzZGV2KS0+ZGlzYWJsZShj
c2Rldik7Cj4+IC3CoMKgwqAgaWYgKHJldCkKPj4gLcKgwqDCoMKgwqDCoMKgIHJldHVybjsKPj4g
LcKgwqDCoCBjc2Rldi0+ZW5hYmxlID0gZmFsc2U7Cj4+ICvCoMKgwqAgc2lua19vcHMoY3NkZXYp
LT5kaXNhYmxlKGNzZGV2KTsKPj4gwqAgfQo+PiDCoCDCoCBzdGF0aWMgaW50IGNvcmVzaWdodF9l
bmFibGVfbGluayhzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqY3NkZXYsCj4+IMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqcGFyZW50
LAo+PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgc3RydWN0IGNvcmVzaWdo
dF9kZXZpY2UgKmNoaWxkKQo+PiDCoCB7Cj4+IC3CoMKgwqAgaW50IHJldCA9IDA7Cj4+IMKgwqDC
oMKgwqAgaW50IGxpbmtfc3VidHlwZTsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X2Nv
bm5lY3Rpb24gKmluY29ubiwgKm91dGNvbm47Cj4+IMKgIEBAIC0zMTcsMTkgKzMwNiwxMyBAQCBz
dGF0aWMgaW50IGNvcmVzaWdodF9lbmFibGVfbGluayhzdHJ1Y3QKPj4gY29yZXNpZ2h0X2Rldmlj
ZSAqY3NkZXYsCj4+IMKgwqDCoMKgwqAgaWYgKGxpbmtfc3VidHlwZSA9PSBDT1JFU0lHSFRfREVW
X1NVQlRZUEVfTElOS19TUExJVCAmJgo+PiBJU19FUlIob3V0Y29ubikpCj4+IMKgwqDCoMKgwqDC
oMKgwqDCoCByZXR1cm4gUFRSX0VSUihvdXRjb25uKTsKPj4gwqAgLcKgwqDCoCByZXQgPSBsaW5r
X29wcyhjc2RldiktPmVuYWJsZShjc2RldiwgaW5jb25uLCBvdXRjb25uKTsKPj4gLcKgwqDCoCBp
ZiAoIXJldCkKPj4gLcKgwqDCoMKgwqDCoMKgIGNzZGV2LT5lbmFibGUgPSB0cnVlOwo+PiAtCj4+
IC3CoMKgwqAgcmV0dXJuIHJldDsKPj4gK8KgwqDCoCByZXR1cm4gbGlua19vcHMoY3NkZXYpLT5l
bmFibGUoY3NkZXYsIGluY29ubiwgb3V0Y29ubik7Cj4+IMKgIH0KPj4gwqAgwqAgc3RhdGljIHZv
aWQgY29yZXNpZ2h0X2Rpc2FibGVfbGluayhzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqY3NkZXYs
Cj4+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgc3RydWN0IGNvcmVz
aWdodF9kZXZpY2UgKnBhcmVudCwKPj4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqY2hpbGQpCj4+IMKgIHsKPj4gLcKgwqDC
oCBpbnQgaTsKPj4gLcKgwqDCoCBpbnQgbGlua19zdWJ0eXBlOwo+PiDCoMKgwqDCoMKgIHN0cnVj
dCBjb3Jlc2lnaHRfY29ubmVjdGlvbiAqaW5jb25uLCAqb3V0Y29ubjsKPj4gwqAgwqDCoMKgwqDC
oCBpZiAoIXBhcmVudCB8fCAhY2hpbGQpCj4+IEBAIC0zMzcsMjYgKzMyMCw4IEBAIHN0YXRpYyB2
b2lkIGNvcmVzaWdodF9kaXNhYmxlX2xpbmsoc3RydWN0Cj4+IGNvcmVzaWdodF9kZXZpY2UgKmNz
ZGV2LAo+PiDCoCDCoMKgwqDCoMKgIGluY29ubiA9IGNvcmVzaWdodF9maW5kX291dF9jb25uZWN0
aW9uKHBhcmVudCwgY3NkZXYpOwo+PiDCoMKgwqDCoMKgIG91dGNvbm4gPSBjb3Jlc2lnaHRfZmlu
ZF9vdXRfY29ubmVjdGlvbihjc2RldiwgY2hpbGQpOwo+PiAtwqDCoMKgIGxpbmtfc3VidHlwZSA9
IGNzZGV2LT5zdWJ0eXBlLmxpbmtfc3VidHlwZTsKPj4gwqAgwqDCoMKgwqDCoCBsaW5rX29wcyhj
c2RldiktPmRpc2FibGUoY3NkZXYsIGluY29ubiwgb3V0Y29ubik7Cj4+IC0KPj4gLcKgwqDCoCBp
ZiAobGlua19zdWJ0eXBlID09IENPUkVTSUdIVF9ERVZfU1VCVFlQRV9MSU5LX01FUkcpIHsKPj4g
LcKgwqDCoMKgwqDCoMKgIGZvciAoaSA9IDA7IGkgPCBjc2Rldi0+cGRhdGEtPm5yX2luY29ubnM7
IGkrKykKPj4gLcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgaWYgKGF0b21pY19yZWFkKCZjc2Rldi0+
cGRhdGEtPmluX2Nvbm5zW2ldLT5kZXN0X3JlZmNudCkgIT0KPj4gLcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCAwKQo+PiAtwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHJldHVy
bjsKPj4gLcKgwqDCoCB9IGVsc2UgaWYgKGxpbmtfc3VidHlwZSA9PSBDT1JFU0lHSFRfREVWX1NV
QlRZUEVfTElOS19TUExJVCkgewo+PiAtwqDCoMKgwqDCoMKgwqAgZm9yIChpID0gMDsgaSA8IGNz
ZGV2LT5wZGF0YS0+bnJfb3V0Y29ubnM7IGkrKykKPj4gLcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
aWYgKGF0b21pY19yZWFkKCZjc2Rldi0+cGRhdGEtPm91dF9jb25uc1tpXS0+c3JjX3JlZmNudCkg
IT0KPj4gLcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCAwKQo+PiAtwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgIHJldHVybjsKPj4gLcKgwqDCoCB9IGVsc2Ugewo+PiAtwqDCoMKg
wqDCoMKgwqAgaWYgKGF0b21pY19yZWFkKCZjc2Rldi0+cmVmY250KSAhPSAwKQo+PiAtwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCByZXR1cm47Cj4+IC3CoMKgwqAgfQo+PiAtCj4+IC3CoMKgwqAgY3Nk
ZXYtPmVuYWJsZSA9IGZhbHNlOwo+PiDCoCB9Cj4+IMKgIMKgIGludCBjb3Jlc2lnaHRfZW5hYmxl
X3NvdXJjZShzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqY3NkZXYsIGVudW0KPj4gY3NfbW9kZSBt
b2RlLAo+PiBAQCAtMzY0LDExICszMjksMTYgQEAgaW50IGNvcmVzaWdodF9lbmFibGVfc291cmNl
KHN0cnVjdAo+PiBjb3Jlc2lnaHRfZGV2aWNlICpjc2RldiwgZW51bSBjc19tb2RlIG1vZGUsCj4+
IMKgIHsKPj4gwqDCoMKgwqDCoCBpbnQgcmV0Owo+PiDCoCAtwqDCoMKgIGlmICghY3NkZXYtPmVu
YWJsZSkgewo+PiArwqDCoMKgIC8qCj4+ICvCoMKgwqDCoCAqIENvbXBhcmlzb24gd2l0aCBDU19N
T0RFX1NZU0ZTIHdvcmtzIHdpdGhvdXQgdGFraW5nIGFueSBkZXZpY2UKPj4gK8KgwqDCoMKgICog
c3BlY2lmaWMgc3BpbmxvY2sgYmVjYXVzZSB0aGUgdHJ1dGh5bmVzcyBvZiB0aGF0IGNvbXBhcmlz
b24KPj4gY2FuIG9ubHkKPj4gK8KgwqDCoMKgICogY2hhbmdlIHdpdGggY29yZXNpZ2h0X211dGV4
IGhlbGQsIHdoaWNoIHdlIGFscmVhZHkgaGF2ZSBoZXJlLgo+PiArwqDCoMKgwqAgKi8KPj4gK8Kg
wqDCoCBsb2NrZGVwX2Fzc2VydF9oZWxkKCZjb3Jlc2lnaHRfbXV0ZXgpOwo+PiArwqDCoMKgIGlm
IChsb2NhbF9yZWFkKCZjc2Rldi0+bW9kZSkgIT0gQ1NfTU9ERV9TWVNGUykgewo+PiDCoMKgwqDC
oMKgwqDCoMKgwqAgcmV0ID0gc291cmNlX29wcyhjc2RldiktPmVuYWJsZShjc2RldiwgZGF0YSwg
bW9kZSk7Cj4+IMKgwqDCoMKgwqDCoMKgwqDCoCBpZiAocmV0KQo+PiDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoCByZXR1cm4gcmV0Owo+PiAtwqDCoMKgwqDCoMKgwqAgY3NkZXYtPmVuYWJsZSA9
IHRydWU7Cj4+IMKgwqDCoMKgwqAgfQo+PiDCoCDCoMKgwqDCoMKgIGF0b21pY19pbmMoJmNzZGV2
LT5yZWZjbnQpOwo+PiBAQCAtMzg1LDIyICszNTUsMTIgQEAgc3RhdGljIGJvb2wgY29yZXNpZ2h0
X2lzX2hlbHBlcihzdHJ1Y3QKPj4gY29yZXNpZ2h0X2RldmljZSAqY3NkZXYpCj4+IMKgIHN0YXRp
YyBpbnQgY29yZXNpZ2h0X2VuYWJsZV9oZWxwZXIoc3RydWN0IGNvcmVzaWdodF9kZXZpY2UgKmNz
ZGV2LAo+PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGVudW0gY3Nf
bW9kZSBtb2RlLCB2b2lkICpkYXRhKQo+PiDCoCB7Cj4+IC3CoMKgwqAgaW50IHJldCA9IGhlbHBl
cl9vcHMoY3NkZXYpLT5lbmFibGUoY3NkZXYsIG1vZGUsIGRhdGEpOwo+PiAtCj4+IC3CoMKgwqAg
aWYgKHJldCkKPj4gLcKgwqDCoMKgwqDCoMKgIHJldHVybiByZXQ7Cj4+IC0KPj4gLcKgwqDCoCBj
c2Rldi0+ZW5hYmxlID0gdHJ1ZTsKPj4gLcKgwqDCoCByZXR1cm4gMDsKPj4gK8KgwqDCoCByZXR1
cm4gaGVscGVyX29wcyhjc2RldiktPmVuYWJsZShjc2RldiwgbW9kZSwgZGF0YSk7Cj4+IMKgIH0K
Pj4gwqAgwqAgc3RhdGljIHZvaWQgY29yZXNpZ2h0X2Rpc2FibGVfaGVscGVyKHN0cnVjdCBjb3Jl
c2lnaHRfZGV2aWNlICpjc2RldikKPj4gwqAgewo+PiAtwqDCoMKgIGludCByZXQgPSBoZWxwZXJf
b3BzKGNzZGV2KS0+ZGlzYWJsZShjc2RldiwgTlVMTCk7Cj4+IC0KPj4gLcKgwqDCoCBpZiAocmV0
KQo+PiAtwqDCoMKgwqDCoMKgwqAgcmV0dXJuOwo+PiAtwqDCoMKgIGNzZGV2LT5lbmFibGUgPSBm
YWxzZTsKPj4gK8KgwqDCoCBoZWxwZXJfb3BzKGNzZGV2KS0+ZGlzYWJsZShjc2RldiwgTlVMTCk7
Cj4+IMKgIH0KPj4gwqAgwqAgc3RhdGljIHZvaWQgY29yZXNpZ2h0X2Rpc2FibGVfaGVscGVycyhz
dHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqY3NkZXYpCj4+IEBAIC00NDUsMTEgKzQwNSwxNSBAQCBF
WFBPUlRfU1lNQk9MX0dQTChjb3Jlc2lnaHRfZGlzYWJsZV9zb3VyY2UpOwo+PiDCoCBzdGF0aWMg
Ym9vbCBjb3Jlc2lnaHRfZGlzYWJsZV9zb3VyY2Vfc3lzZnMoc3RydWN0IGNvcmVzaWdodF9kZXZp
Y2UKPj4gKmNzZGV2LAo+PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqAgdm9pZCAqZGF0YSkKPj4gwqAgewo+PiArwqDCoMKgIGxvY2tkZXBfYXNzZXJ0X2hl
bGQoJmNvcmVzaWdodF9tdXRleCk7Cj4+ICvCoMKgwqAgaWYgKGxvY2FsX3JlYWQoJmNzZGV2LT5t
b2RlKSAhPSBDU19NT0RFX1NZU0ZTKQo+PiArwqDCoMKgwqDCoMKgwqAgcmV0dXJuIGZhbHNlOwo+
PiArCj4+IMKgwqDCoMKgwqAgaWYgKGF0b21pY19kZWNfcmV0dXJuKCZjc2Rldi0+cmVmY250KSA9
PSAwKSB7Cj4+IMKgwqDCoMKgwqDCoMKgwqDCoCBjb3Jlc2lnaHRfZGlzYWJsZV9zb3VyY2UoY3Nk
ZXYsIGRhdGEpOwo+PiAtwqDCoMKgwqDCoMKgwqAgY3NkZXYtPmVuYWJsZSA9IGZhbHNlOwo+PiAr
wqDCoMKgwqDCoMKgwqAgcmV0dXJuIHRydWU7Cj4+IMKgwqDCoMKgwqAgfQo+PiAtwqDCoMKgIHJl
dHVybiAhY3NkZXYtPmVuYWJsZTsKPj4gK8KgwqDCoCByZXR1cm4gZmFsc2U7Cj4+IMKgIH0KPj4g
wqAgwqAgLyoKPj4gQEAgLTEwOTcsNyArMTA2MSwxMyBAQCBpbnQgY29yZXNpZ2h0X2VuYWJsZShz
dHJ1Y3QgY29yZXNpZ2h0X2RldmljZQo+PiAqY3NkZXYpCj4+IMKgwqDCoMKgwqAgaWYgKHJldCkK
Pj4gwqDCoMKgwqDCoMKgwqDCoMKgIGdvdG8gb3V0Owo+PiDCoCAtwqDCoMKgIGlmIChjc2Rldi0+
ZW5hYmxlKSB7Cj4+ICvCoMKgwqAgLyoKPj4gK8KgwqDCoMKgICogbW9kZSA9PSBTWVNGUyBpbXBs
aWVzIHRoYXQgaXQncyBhbHJlYWR5IGVuYWJsZWQuIERvbid0IGxvb2sgYXQKPj4gdGhlCj4+ICvC
oMKgwqDCoCAqIHJlZmNvdW50IHRvIGRldGVybWluZSB0aGlzIGJlY2F1c2Ugd2UgZG9uJ3QgY2xh
aW0gdGhlIHNvdXJjZQo+PiB1bnRpbAo+PiArwqDCoMKgwqAgKiBjb3Jlc2lnaHRfZW5hYmxlX3Nv
dXJjZSgpIHNvIGNhbiBzdGlsbCByYWNlIHdpdGggUGVyZiBtb2RlIHdoaWNoCj4+ICvCoMKgwqDC
oCAqIGRvZXNuJ3QgaG9sZCBjb3Jlc2lnaHRfbXV0ZXguCj4+ICvCoMKgwqDCoCAqLwo+PiArwqDC
oMKgIGlmIChsb2NhbF9yZWFkKCZjc2Rldi0+bW9kZSkgPT0gQ1NfTU9ERV9TWVNGUykgewo+PiDC
oMKgwqDCoMKgwqDCoMKgwqAgLyoKPj4gwqDCoMKgwqDCoMKgwqDCoMKgwqAgKiBUaGVyZSBjb3Vs
ZCBiZSBtdWx0aXBsZSBhcHBsaWNhdGlvbnMgZHJpdmluZyB0aGUgc29mdHdhcmUKPj4gwqDCoMKg
wqDCoMKgwqDCoMKgwqAgKiBzb3VyY2UuIFNvIGtlZXAgdGhlIHJlZmNvdW50IGZvciBlYWNoIHN1
Y2ggdXNlciB3aGVuIHRoZQo+PiBAQCAtMTE4Myw3ICsxMTUzLDcgQEAgdm9pZCBjb3Jlc2lnaHRf
ZGlzYWJsZShzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZQo+PiAqY3NkZXYpCj4+IMKgwqDCoMKgwqAg
aWYgKHJldCkKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIGdvdG8gb3V0Owo+PiDCoCAtwqDCoMKgIGlm
ICghY3NkZXYtPmVuYWJsZSB8fCAhY29yZXNpZ2h0X2Rpc2FibGVfc291cmNlX3N5c2ZzKGNzZGV2
LAo+PiBOVUxMKSkKPj4gK8KgwqDCoCBpZiAoIWNvcmVzaWdodF9kaXNhYmxlX3NvdXJjZV9zeXNm
cyhjc2RldiwgTlVMTCkpCj4+IMKgwqDCoMKgwqDCoMKgwqDCoCBnb3RvIG91dDsKPj4gwqAgwqDC
oMKgwqDCoCBzd2l0Y2ggKGNzZGV2LT5zdWJ0eXBlLnNvdXJjZV9zdWJ0eXBlKSB7Cj4+IEBAIC0x
MjQ5LDcgKzEyMTksOSBAQCBzdGF0aWMgc3NpemVfdCBlbmFibGVfc291cmNlX3Nob3coc3RydWN0
IGRldmljZQo+PiAqZGV2LAo+PiDCoCB7Cj4+IMKgwqDCoMKgwqAgc3RydWN0IGNvcmVzaWdodF9k
ZXZpY2UgKmNzZGV2ID0gdG9fY29yZXNpZ2h0X2RldmljZShkZXYpOwo+PiDCoCAtwqDCoMKgIHJl
dHVybiBzY25wcmludGYoYnVmLCBQQUdFX1NJWkUsICIldVxuIiwgY3NkZXYtPmVuYWJsZSk7Cj4+
ICvCoMKgwqAgZ3VhcmQobXV0ZXgpKCZjb3Jlc2lnaHRfbXV0ZXgpOwo+PiArwqDCoMKgIHJldHVy
biBzY25wcmludGYoYnVmLCBQQUdFX1NJWkUsICIldVxuIiwKPj4gK8KgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBsb2NhbF9yZWFkKCZjc2Rldi0+bW9kZSkgPT0gQ1NfTU9ERV9TWVNGUyk7Cj4+IMKg
IH0KPj4gwqAgwqAgc3RhdGljIHNzaXplX3QgZW5hYmxlX3NvdXJjZV9zdG9yZShzdHJ1Y3QgZGV2
aWNlICpkZXYsCj4+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29y
ZXNpZ2h0LXRwZGEuYwo+PiBiL2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQt
dHBkYS5jCj4+IGluZGV4IDVmODI3MzdjMzdiYi4uNjVjNzA5OTVhYjAwIDEwMDY0NAo+PiAtLS0g
YS9kcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LXRwZGEuYwo+PiArKysgYi9k
cml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LXRwZGEuYwo+PiBAQCAtMTQ4LDcg
KzE0OCwxMSBAQCBzdGF0aWMgaW50IF9fdHBkYV9lbmFibGUoc3RydWN0IHRwZGFfZHJ2ZGF0YQo+
PiAqZHJ2ZGF0YSwgaW50IHBvcnQpCj4+IMKgIMKgwqDCoMKgwqAgQ1NfVU5MT0NLKGRydmRhdGEt
PmJhc2UpOwo+PiDCoCAtwqDCoMKgIGlmICghZHJ2ZGF0YS0+Y3NkZXYtPmVuYWJsZSkKPj4gK8Kg
wqDCoCAvKgo+PiArwqDCoMKgwqAgKiBPbmx5IGRvIHByZS1wb3J0IGVuYWJsZSBmb3IgZmlyc3Qg
cG9ydCB0aGF0IGNhbGxzIGVuYWJsZSB3aGVuIHRoZQo+PiArwqDCoMKgwqAgKiBkZXZpY2UncyBt
YWluIHJlZmNvdW50IGlzIHN0aWxsIDAKPj4gK8KgwqDCoMKgICovCj4+ICvCoMKgwqAgaWYgKCFh
dG9taWNfcmVhZCgmZHJ2ZGF0YS0+Y3NkZXYtPnJlZmNudCkpCj4+IMKgwqDCoMKgwqDCoMKgwqDC
oCB0cGRhX2VuYWJsZV9wcmVfcG9ydChkcnZkYXRhKTsKPiAKPiBSZWx5aW5nIG9uIHRoZSAiY3Nk
ZXYtPmVuYWJsZSIgdG8gZG8gcHJlLXBvcnQgY29uZmlndXJhdGlvbiBsb29rcyBsaWtlCj4gYSBj
b21wbGV0ZSBoYWNrIHRvIG1lLiBUaGlzIGNvdWxkIGhhdmUgYmVlbiBwZXJmb3JtZWQgb25jZSBh
bmQgZm9yIGFsbAo+IGR1cmluZyB0aGUgcHJvYmUgdGltZSwgYXQgc2F5LCB0cGRhX2luaXRfZGVm
YXVsdF9kYXRhKCkuIFRoYXQgdmFsdWUgaXMKPiAoZHJ2ZGF0YS0+YXRpZCkgbmV2ZXIgdXBkYXRl
ZCBhbmQgbmVlZCBub3QgYmUgcmUtd3JpdHRlbsKgIHVubGVzcyB0aGUKPiB2YWx1ZSBpcyBsb3N0
IGR1cmluZyBhIHBvd2VyIGlkbGUuCj4gCj4gTWFvLCBUYW8sIGFyZSB5b3UgYWJsZSB0byBjb25m
aXJtIHRoaXMgPyBJZiB0aGF0IGlzIHRoZSBjYXNlLCB3ZSBkb24ndAo+IG5lZWQgdGhpcyBjc2Rl
di0+cmVmY250Lgo+IAoKICAidW5sZXNzIHRoZSB2YWx1ZSBpcyBsb3N0IGR1cmluZyBhIHBvd2Vy
IGlkbGUuIgoKVGhhdCBvbmUgbWlnaHQgYmUgYSByZWFzb24gdG8gZG8gaXQuIEkgc3VwcG9zZSBp
dCBtYWtlcyBzZW5zZSB0byB3cml0ZQphbGwgdGhlIHJlZ2lzdGVycyBvbiBlbmFibGUsIGJ1dCBu
b3QgdG8ga2VlcCByZS13cml0aW5nIHRoZSB0cmFjZSBJRAphZ2FpbiBmb3IgZXZlcnkgcG9ydCB0
aGF0J3MgdXNlZC4KCj4+IMKgIMKgwqDCoMKgwqAgcmV0ID0gdHBkYV9lbmFibGVfcG9ydChkcnZk
YXRhLCBwb3J0KTsKPj4gQEAgLTE2OSw2ICsxNzMsNyBAQCBzdGF0aWMgaW50IHRwZGFfZW5hYmxl
KHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlCj4+ICpjc2RldiwKPj4gwqDCoMKgwqDCoMKgwqDCoMKg
IHJldCA9IF9fdHBkYV9lbmFibGUoZHJ2ZGF0YSwgaW4tPmRlc3RfcG9ydCk7Cj4+IMKgwqDCoMKg
wqDCoMKgwqDCoCBpZiAoIXJldCkgewo+PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBhdG9t
aWNfaW5jKCZpbi0+ZGVzdF9yZWZjbnQpOwo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBhdG9t
aWNfaW5jKCZjc2Rldi0+cmVmY250KTsKPj4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgZGV2
X2RiZyhkcnZkYXRhLT5kZXYsICJUUERBIGlucG9ydCAlZCBlbmFibGVkLlxuIiwKPj4gaW4tPmRl
c3RfcG9ydCk7Cj4+IMKgwqDCoMKgwqDCoMKgwqDCoCB9Cj4+IMKgwqDCoMKgwqAgfQo+PiBAQCAt
MTk3LDkgKzIwMiwxMCBAQCBzdGF0aWMgdm9pZCB0cGRhX2Rpc2FibGUoc3RydWN0IGNvcmVzaWdo
dF9kZXZpY2UKPj4gKmNzZGV2LAo+PiDCoMKgwqDCoMKgIHN0cnVjdCB0cGRhX2RydmRhdGEgKmRy
dmRhdGEgPSBkZXZfZ2V0X2RydmRhdGEoY3NkZXYtPmRldi5wYXJlbnQpOwo+PiDCoCDCoMKgwqDC
oMKgIHNwaW5fbG9jaygmZHJ2ZGF0YS0+c3BpbmxvY2spOwo+PiAtwqDCoMKgIGlmIChhdG9taWNf
ZGVjX3JldHVybigmaW4tPmRlc3RfcmVmY250KSA9PSAwKQo+PiArwqDCoMKgIGlmIChhdG9taWNf
ZGVjX3JldHVybigmaW4tPmRlc3RfcmVmY250KSA9PSAwKSB7Cj4+IMKgwqDCoMKgwqDCoMKgwqDC
oCBfX3RwZGFfZGlzYWJsZShkcnZkYXRhLCBpbi0+ZGVzdF9wb3J0KTsKPj4gLQo+PiArwqDCoMKg
wqDCoMKgwqAgYXRvbWljX2RlYygmY3NkZXYtPnJlZmNudCk7Cj4gCj4gSWYgd2UgbmVlZCB0aGlz
LCB0aGVuOiBUaGlzIHNob3VsZCBiZSBwZXJmb3JtZWQgb3V0c2lkZSB0aGUgaWYgKCkgaXNuJ3QK
PiBpdCA/Cj4gCj4gZS5nLiwKPiAKPiBPcGVyYXRpb246wqDCoMKgwqDCoMKgwqAgaW5fY29ubi0+
cmVmY250wqDCoMKgwqDCoMKgwqAgY3NkZXYtPnJlZmNudAo+IHBvcnRfZW5hYmxlIDogcG9ydDDC
oMKgwqAgMCAtID4gMcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgMCAtID4gMQo+IHBvcnRfZW5hYmxl
IDogcG9ydDDCoMKgwqDCoCAxIC0gPiAywqDCoMKgwqDCoMKgwqDCoMKgwqDCoCAxIC0gPiAyCgpJ
IGRpZG4ndCBnZXQgMSAtPiAyIGhlcmUsIGJlY2F1c2UgdGhlIGluLT5kZXN0X3JlZmNudCBpcyBv
bmx5CmluY3JlbWVudGVkIG9uY2UgaWYgaXQgd2FzIGFscmVhZHkgMCAoYWx0aG91Z2ggaXQgaXMg
b25jZSBmb3IgZWFjaCBwb3J0KToKCiAgCWlmIChhdG9taWNfcmVhZCgmaW4tPmRlc3RfcmVmY250
KSA9PSAwKSB7CgkJcmV0ID0gX190cGRhX2VuYWJsZShkcnZkYXRhLCBpbi0+ZGVzdF9wb3J0KTsK
CQlpZiAoIXJldCkgewoJCQlhdG9taWNfaW5jKCZpbi0+ZGVzdF9yZWZjbnQpOwoKVGhhdCBiYXNp
Y2FsbHkgbWFrZXMgY3NkZXYtPnJlZmNudCBjb3VudCBob3cgbWFueSBwb3J0cyB3ZXJlIHVzZWQs
IGJ1dAplYWNoIHBvcnQncyByZWZjb3VudCBjYW4gb25seSBiZSB1c2VkIG9uY2UuIEFuZCB0aGVu
IHdoZW4gZWFjaCBwb3J0IGlzCmRpc2FibGVkIGNzZGV2LT5yZWZjbnQgcmV0dXJucyB0byB6ZXJv
IG9uIHRoZSBsYXN0IHBvcnQuCgo+IHBvcnRfZGlzYWJsZTogcG9ydDDCoMKgwqAgMiAtID4gMcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgMiAobm8gY2hhbmdlKQo+IHBvcnRfZGlzYWJsZTogcG9ydDDC
oMKgwqAgMSAtID4gMMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgMiAtID4gMQo+IAo+IEFzIHlvdSBj
YW4gc2VlIHRoZSBjc2Rldi0+cmVmY250IHNraXBwZWQgYSBkZWMuCj4gCj4gU3V6dWtpCj4gCj4g
Cj4+ICvCoMKgwqAgfQo+PiDCoMKgwqDCoMKgIHNwaW5fdW5sb2NrKCZkcnZkYXRhLT5zcGlubG9j
ayk7Cj4+IMKgIMKgwqDCoMKgwqAgZGV2X2RiZyhkcnZkYXRhLT5kZXYsICJUUERBIGlucG9ydCAl
ZCBkaXNhYmxlZFxuIiwKPj4gaW4tPmRlc3RfcG9ydCk7Cj4+IGRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L2NvcmVzaWdodC5oIGIvaW5jbHVkZS9saW51eC9jb3Jlc2lnaHQuaAo+PiBpbmRleCBi
YTgxN2Y1NjNmZjcuLjQ2ZTY2NjdmNzJjZSAxMDA2NDQKPj4gLS0tIGEvaW5jbHVkZS9saW51eC9j
b3Jlc2lnaHQuaAo+PiArKysgYi9pbmNsdWRlL2xpbnV4L2NvcmVzaWdodC5oCj4+IEBAIC0yMzMs
NyArMjMzLDYgQEAgc3RydWN0IGNvcmVzaWdodF9zeXNmc19saW5rIHsKPj4gwqDCoCAqwqDCoMKg
wqDCoMKgwqAgYSBub24tYXRvbWljIHJlYWQgd291bGQgYWxzbyB3b3JrLgo+PiDCoMKgICogQHJl
ZmNudDrCoMKgwqAga2VlcCB0cmFjayBvZiB3aGF0IGlzIGluIHVzZS4KPj4gwqDCoCAqIEBvcnBo
YW46wqDCoMKgIHRydWUgaWYgdGhlIGNvbXBvbmVudCBoYXMgY29ubmVjdGlvbnMgdGhhdCBoYXZl
bid0Cj4+IGJlZW4gbGlua2VkLgo+PiAtICogQGVuYWJsZTrCoMKgwqAgJ3RydWUnIGlmIGNvbXBv
bmVudCBpcyBjdXJyZW50bHkgcGFydCBvZiBhbiBhY3RpdmUgcGF0aC4KPj4gwqDCoCAqIEBzeXNm
c19zaW5rX2FjdGl2YXRlZDogJ3RydWUnIHdoZW4gYSBzaW5rIGhhcyBiZWVuIHNlbGVjdGVkIGZv
cgo+PiB1c2UgdmlhIHN5c2ZzCj4+IMKgwqAgKsKgwqDCoMKgwqDCoMKgIGJ5IHdyaXRpbmcgYSAx
IHRvIHRoZSAnZW5hYmxlX3NpbmsnIGZpbGUuwqAgQSBzaW5rIGNhbiBiZQo+PiDCoMKgICrCoMKg
wqDCoMKgwqDCoCBhY3RpdmF0ZWQgYnV0IG5vdCB5ZXQgZW5hYmxlZC7CoCBFbmFibGluZyBmb3Ig
YSBfc2lua18gaGFwcGVucwo+PiBAQCAtMjYwLDcgKzI1OSw2IEBAIHN0cnVjdCBjb3Jlc2lnaHRf
ZGV2aWNlIHsKPj4gwqDCoMKgwqDCoCBsb2NhbF90wqDCoMKgIG1vZGU7Cj4+IMKgwqDCoMKgwqAg
YXRvbWljX3QgcmVmY250Owo+PiDCoMKgwqDCoMKgIGJvb2wgb3JwaGFuOwo+PiAtwqDCoMKgIGJv
b2wgZW5hYmxlOwo+PiDCoMKgwqDCoMKgIC8qIHNpbmsgc3BlY2lmaWMgZmllbGRzICovCj4+IMKg
wqDCoMKgwqAgYm9vbCBzeXNmc19zaW5rX2FjdGl2YXRlZDsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3Qg
ZGV2X2V4dF9hdHRyaWJ1dGUgKmVhOwo+IApfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpMaW51eC1zdG0zMiBtYWlsaW5nIGxpc3QKTGludXgtc3RtMzJAc3Qt
bWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbQpodHRwczovL3N0LW1kLW1haWxtYW4uc3Rvcm1yZXBs
eS5jb20vbWFpbG1hbi9saXN0aW5mby9saW51eC1zdG0zMgo=
