Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 618C1872EAE
	for <lists+linux-stm32@lfdr.de>; Wed,  6 Mar 2024 07:14:41 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 0B5D7C6DD72;
	Wed,  6 Mar 2024 06:14:41 +0000 (UTC)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id BC9D5C64102
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Wed,  6 Mar 2024 06:14:39 +0000 (UTC)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 860A31FB;
 Tue,  5 Mar 2024 22:15:15 -0800 (PST)
Received: from [10.162.41.20] (a077893.blr.arm.com [10.162.41.20])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id EB48A3F738;
 Tue,  5 Mar 2024 22:14:34 -0800 (PST)
Message-ID: <c52865b2-8608-4a47-967a-6cf3e11b197a@arm.com>
Date: Wed, 6 Mar 2024 11:44:32 +0530
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Content-Language: en-US
To: Suzuki K Poulose <suzuki.poulose@arm.com>,
 linux-arm-kernel@lists.infradead.org
References: <20240222082142.3663983-1-anshuman.khandual@arm.com>
 <20240222082142.3663983-8-anshuman.khandual@arm.com>
 <c43fcd3a-9813-4e1f-adb3-25cc32c54438@arm.com>
From: Anshuman Khandual <anshuman.khandual@arm.com>
In-Reply-To: <c43fcd3a-9813-4e1f-adb3-25cc32c54438@arm.com>
Cc: Lorenzo Pieralisi <lpieralisi@kernel.org>,
 linux-stm32@st-md-mailman.stormreply.com, linux-kernel@vger.kernel.org,
 linux-acpi@vger.kernel.org, James Clark <james.clark@arm.com>,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Sudeep Holla <sudeep.holla@arm.com>, coresight@lists.linaro.org,
 Mike Leach <mike.leach@linaro.org>
Subject: Re: [Linux-stm32] [PATCH V5 07/11] coresight: catu: Move ACPI
 support from AMBA driver to platform driver
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

CgpPbiAzLzUvMjQgMjM6MDIsIFN1enVraSBLIFBvdWxvc2Ugd3JvdGU6Cj4gT24gMjIvMDIvMjAy
NCAwODoyMSwgQW5zaHVtYW4gS2hhbmR1YWwgd3JvdGU6Cj4+IEFkZCBzdXBwb3J0IGZvciB0aGUg
Y2F0dSBkZXZpY2VzIGluIGEgbmV3IHBsYXRmb3JtIGRyaXZlciwgd2hpY2ggY2FuIHRoZW4KPj4g
YmUgdXNlZCBvbiBBQ1BJIGJhc2VkIHBsYXRmb3Jtcy4gVGhpcyBjaGFuZ2Ugd291bGQgbm93IGFs
bG93IHJ1bnRpbWUgcG93ZXIKPj4gbWFuYWdlbWVudCBmb3IgQUNQSSBiYXNlZCBzeXN0ZW1zLiBU
aGUgZHJpdmVyIHdvdWxkIHRyeSB0byBlbmFibGUgdGhlIEFQQgo+PiBjbG9jayBpZiBhdmFpbGFi
bGUuIEJ1dCBmaXJzdCB0aGlzIHJlbmFtZXMgYW5kIHRoZW4gcmVmYWN0b3JzIGNhdHVfcHJvYmUo
KQo+PiBhbmQgY2F0dV9yZW1vdmUoKSwgbWFraW5nIHN1cmUgaXQgY2FuIGJlIHVzZWQgYm90aCBm
b3IgcGxhdGZvcm0gYW5kIEFNQkEKPj4gZHJpdmVycy4gVGhpcyBhbHNvIG1vdmVzIHBtX3J1bnRp
bWVfcHV0KCkgZnJvbSBjYXR1X3Byb2JlKCkgdG8gdGhlIGNhbGxlcnMuCj4+Cj4+IENjOiBMb3Jl
bnpvIFBpZXJhbGlzaSA8bHBpZXJhbGlzaUBrZXJuZWwub3JnPgo+PiBDYzogU3VkZWVwIEhvbGxh
IDxzdWRlZXAuaG9sbGFAYXJtLmNvbT4KPj4gQ2M6IFN1enVraSBLIFBvdWxvc2UgPHN1enVraS5w
b3Vsb3NlQGFybS5jb20+Cj4+IENjOiBNaWtlIExlYWNoIDxtaWtlLmxlYWNoQGxpbmFyby5vcmc+
Cj4+IENjOiBKYW1lcyBDbGFyayA8amFtZXMuY2xhcmtAYXJtLmNvbT4KPj4gQ2M6IGxpbnV4LWFj
cGlAdmdlci5rZXJuZWwub3JnCj4+IENjOiBsaW51eC1hcm0ta2VybmVsQGxpc3RzLmluZnJhZGVh
ZC5vcmcKPj4gQ2M6IGxpbnV4LWtlcm5lbEB2Z2VyLmtlcm5lbC5vcmcKPj4gQ2M6IGNvcmVzaWdo
dEBsaXN0cy5saW5hcm8ub3JnCj4+IEFja2VkLWJ5OiBTdWRlZXAgSG9sbGEgPHN1ZGVlcC5ob2xs
YUBhcm0uY29tPiAjIEZvciBBQ1BJIHJlbGF0ZWQgY2hhbmdlcwo+PiBSZXZpZXdlZC1ieTogSmFt
ZXMgQ2xhcmsgPGphbWVzLmNsYXJrQGFybS5jb20+Cj4+IFNpZ25lZC1vZmYtYnk6IEFuc2h1bWFu
IEtoYW5kdWFsIDxhbnNodW1hbi5raGFuZHVhbEBhcm0uY29tPgo+PiAtLS0KPj4gQ2hhbmdlcyBp
biBWNToKPj4KPj4gLSBVcGRhdGVkIGNvbW1pdCBtZXNzYWdlIHJlZ2FyZGluZyBjYXR1X3Byb2Jl
L3JlbW92ZSgpIHJlZmFjdG9yaW5nIGFuZCByZW5hbWluZwo+Pgo+PiDCoCBkcml2ZXJzL2FjcGkv
YXJtNjQvYW1iYS5jwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgfMKgwqAg
MSAtCj4+IMKgIGRyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtY2F0dS5jIHwg
MTQyICsrKysrKysrKysrKysrKystLS0KPj4gwqAgZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0
L2NvcmVzaWdodC1jYXR1LmggfMKgwqAgMSArCj4+IMKgIDMgZmlsZXMgY2hhbmdlZCwgMTI0IGlu
c2VydGlvbnMoKyksIDIwIGRlbGV0aW9ucygtKQo+Pgo+PiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9h
Y3BpL2FybTY0L2FtYmEuYyBiL2RyaXZlcnMvYWNwaS9hcm02NC9hbWJhLmMKPj4gaW5kZXggYWZi
NmFmYjY2OTY3Li41ODcwNjFiMGZkMmYgMTAwNjQ0Cj4+IC0tLSBhL2RyaXZlcnMvYWNwaS9hcm02
NC9hbWJhLmMKPj4gKysrIGIvZHJpdmVycy9hY3BpL2FybTY0L2FtYmEuYwo+PiBAQCAtMjcsNyAr
MjcsNiBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGFjcGlfZGV2aWNlX2lkIGFtYmFfaWRfbGlzdFtd
ID0gewo+PiDCoMKgwqDCoMKgIHsiQVJNSEM1MDMiLCAwfSwgLyogQVJNIENvcmVTaWdodCBEZWJ1
ZyAqLwo+PiDCoMKgwqDCoMKgIHsiQVJNSEM5NzkiLCAwfSwgLyogQVJNIENvcmVTaWdodCBUUElV
ICovCj4+IMKgwqDCoMKgwqAgeyJBUk1IQzk3QyIsIDB9LCAvKiBBUk0gQ29yZVNpZ2h0IFNvQy00
MDAgVE1DLCBTb0MtNjAwIEVURi9FVEIgKi8KPj4gLcKgwqDCoCB7IkFSTUhDOUNBIiwgMH0sIC8q
IEFSTSBDb3JlU2lnaHQgQ0FUVSAqLwo+PiDCoMKgwqDCoMKgIHsiIiwgMH0sCj4+IMKgIH07Cj4+
IMKgIGRpZmYgLS1naXQgYS9kcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LWNh
dHUuYyBiL2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtY2F0dS5jCj4+IGlu
ZGV4IDM5NDlkZWQwZDRmYS4uYTNlYTQ2YjUzODk4IDEwMDY0NAo+PiAtLS0gYS9kcml2ZXJzL2h3
dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LWNhdHUuYwo+PiArKysgYi9kcml2ZXJzL2h3dHJh
Y2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LWNhdHUuYwo+PiBAQCAtNyw2ICs3LDggQEAKPj4gwqDC
oCAqIEF1dGhvcjogU3V6dWtpIEsgUG91bG9zZSA8c3V6dWtpLnBvdWxvc2VAYXJtLmNvbT4KPj4g
wqDCoCAqLwo+PiDCoCArI2luY2x1ZGUgPGxpbnV4L3BsYXRmb3JtX2RldmljZS5oPgo+PiArI2lu
Y2x1ZGUgPGxpbnV4L2FjcGkuaD4KPj4gwqAgI2luY2x1ZGUgPGxpbnV4L2FtYmEvYnVzLmg+Cj4+
IMKgICNpbmNsdWRlIDxsaW51eC9kZXZpY2UuaD4KPj4gwqAgI2luY2x1ZGUgPGxpbnV4L2RtYS1t
YXBwaW5nLmg+Cj4+IEBAIC01MDIsMjggKzUwNCwyMCBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGNv
cmVzaWdodF9vcHMgY2F0dV9vcHMgPSB7Cj4+IMKgwqDCoMKgwqAgLmhlbHBlcl9vcHMgPSAmY2F0
dV9oZWxwZXJfb3BzLAo+PiDCoCB9Owo+PiDCoCAtc3RhdGljIGludCBjYXR1X3Byb2JlKHN0cnVj
dCBhbWJhX2RldmljZSAqYWRldiwgY29uc3Qgc3RydWN0IGFtYmFfaWQgKmlkKQo+PiArc3RhdGlj
IGludCBfX2NhdHVfcHJvYmUoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgcmVzb3VyY2UgKnJl
cykKPj4gwqAgewo+PiDCoMKgwqDCoMKgIGludCByZXQgPSAwOwo+PiDCoMKgwqDCoMKgIHUzMiBk
bWFfbWFzazsKPj4gLcKgwqDCoCBzdHJ1Y3QgY2F0dV9kcnZkYXRhICpkcnZkYXRhOwo+PiArwqDC
oMKgIHN0cnVjdCBjYXR1X2RydmRhdGEgKmRydmRhdGEgPSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsK
Pj4gwqDCoMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X2Rlc2MgY2F0dV9kZXNjOwo+PiDCoMKgwqDC
oMKgIHN0cnVjdCBjb3Jlc2lnaHRfcGxhdGZvcm1fZGF0YSAqcGRhdGEgPSBOVUxMOwo+PiAtwqDC
oMKgIHN0cnVjdCBkZXZpY2UgKmRldiA9ICZhZGV2LT5kZXY7Cj4+IMKgwqDCoMKgwqAgdm9pZCBf
X2lvbWVtICpiYXNlOwo+PiDCoCDCoMKgwqDCoMKgIGNhdHVfZGVzYy5uYW1lID0gY29yZXNpZ2h0
X2FsbG9jX2RldmljZV9uYW1lKCZjYXR1X2RldnMsIGRldik7Cj4+IMKgwqDCoMKgwqAgaWYgKCFj
YXR1X2Rlc2MubmFtZSkKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIHJldHVybiAtRU5PTUVNOwo+PiDC
oCAtwqDCoMKgIGRydmRhdGEgPSBkZXZtX2t6YWxsb2MoZGV2LCBzaXplb2YoKmRydmRhdGEpLCBH
RlBfS0VSTkVMKTsKPj4gLcKgwqDCoCBpZiAoIWRydmRhdGEpIHsKPj4gLcKgwqDCoMKgwqDCoMKg
IHJldCA9IC1FTk9NRU07Cj4+IC3CoMKgwqDCoMKgwqDCoCBnb3RvIG91dDsKPj4gLcKgwqDCoCB9
Cj4+IC0KPj4gLcKgwqDCoCBkZXZfc2V0X2RydmRhdGEoZGV2LCBkcnZkYXRhKTsKPj4gLcKgwqDC
oCBiYXNlID0gZGV2bV9pb3JlbWFwX3Jlc291cmNlKGRldiwgJmFkZXYtPnJlcyk7Cj4+ICvCoMKg
wqAgYmFzZSA9IGRldm1faW9yZW1hcF9yZXNvdXJjZShkZXYsIHJlcyk7Cj4+IMKgwqDCoMKgwqAg
aWYgKElTX0VSUihiYXNlKSkgewo+PiDCoMKgwqDCoMKgwqDCoMKgwqAgcmV0ID0gUFRSX0VSUihi
YXNlKTsKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIGdvdG8gb3V0Owo+PiBAQCAtNTY3LDE5ICs1NjEs
MzkgQEAgc3RhdGljIGludCBjYXR1X3Byb2JlKHN0cnVjdCBhbWJhX2RldmljZSAqYWRldiwgY29u
c3Qgc3RydWN0IGFtYmFfaWQgKmlkKQo+PiDCoMKgwqDCoMKgIGRydmRhdGEtPmNzZGV2ID0gY29y
ZXNpZ2h0X3JlZ2lzdGVyKCZjYXR1X2Rlc2MpOwo+PiDCoMKgwqDCoMKgIGlmIChJU19FUlIoZHJ2
ZGF0YS0+Y3NkZXYpKQo+PiDCoMKgwqDCoMKgwqDCoMKgwqAgcmV0ID0gUFRSX0VSUihkcnZkYXRh
LT5jc2Rldik7Cj4+IC3CoMKgwqAgZWxzZQo+PiAtwqDCoMKgwqDCoMKgwqAgcG1fcnVudGltZV9w
dXQoJmFkZXYtPmRldik7Cj4+IMKgIG91dDoKPj4gwqDCoMKgwqDCoCByZXR1cm4gcmV0Owo+PiDC
oCB9Cj4+IMKgIC1zdGF0aWMgdm9pZCBjYXR1X3JlbW92ZShzdHJ1Y3QgYW1iYV9kZXZpY2UgKmFk
ZXYpCj4+ICtzdGF0aWMgaW50IGNhdHVfcHJvYmUoc3RydWN0IGFtYmFfZGV2aWNlICphZGV2LCBj
b25zdCBzdHJ1Y3QgYW1iYV9pZCAqaWQpCj4+IMKgIHsKPj4gLcKgwqDCoCBzdHJ1Y3QgY2F0dV9k
cnZkYXRhICpkcnZkYXRhID0gZGV2X2dldF9kcnZkYXRhKCZhZGV2LT5kZXYpOwo+PiArwqDCoMKg
IHN0cnVjdCBjYXR1X2RydmRhdGEgKmRydmRhdGE7Cj4+ICvCoMKgwqAgaW50IHJldDsKPj4gKwo+
PiArwqDCoMKgIGRydmRhdGEgPSBkZXZtX2t6YWxsb2MoJmFkZXYtPmRldiwgc2l6ZW9mKCpkcnZk
YXRhKSwgR0ZQX0tFUk5FTCk7Cj4+ICvCoMKgwqAgaWYgKCFkcnZkYXRhKQo+PiArwqDCoMKgwqDC
oMKgwqAgcmV0dXJuIC1FTk9NRU07Cj4+ICsKPj4gK8KgwqDCoCBhbWJhX3NldF9kcnZkYXRhKGFk
ZXYsIGRydmRhdGEpOwo+PiArwqDCoMKgIHJldCA9IF9fY2F0dV9wcm9iZSgmYWRldi0+ZGV2LCAm
YWRldi0+cmVzKTsKPj4gK8KgwqDCoCBpZiAoIXJldCkKPj4gK8KgwqDCoMKgwqDCoMKgIHBtX3J1
bnRpbWVfcHV0KCZhZGV2LT5kZXYpOwo+PiArCj4+ICvCoMKgwqAgcmV0dXJuIHJldDsKPj4gK30K
Pj4gKwo+PiArc3RhdGljIHZvaWQgX19jYXR1X3JlbW92ZShzdHJ1Y3QgZGV2aWNlICpkZXYpCj4+
ICt7Cj4+ICvCoMKgwqAgc3RydWN0IGNhdHVfZHJ2ZGF0YSAqZHJ2ZGF0YSA9IGRldl9nZXRfZHJ2
ZGF0YShkZXYpOwo+PiDCoCDCoMKgwqDCoMKgIGNvcmVzaWdodF91bnJlZ2lzdGVyKGRydmRhdGEt
PmNzZGV2KTsKPj4gwqAgfQo+PiDCoCArc3RhdGljIHZvaWQgY2F0dV9yZW1vdmUoc3RydWN0IGFt
YmFfZGV2aWNlICphZGV2KQo+PiArewo+PiArwqDCoMKgIF9fY2F0dV9yZW1vdmUoJmFkZXYtPmRl
dik7Cj4+ICt9Cj4+ICsKPj4gwqAgc3RhdGljIHN0cnVjdCBhbWJhX2lkIGNhdHVfaWRzW10gPSB7
Cj4+IMKgwqDCoMKgwqAgQ1NfQU1CQV9JRCgweDAwMGJiOWVlKSwKPj4gwqDCoMKgwqDCoCB7fSwK
Pj4gQEAgLTU5OCwxMyArNjEyLDEwMyBAQCBzdGF0aWMgc3RydWN0IGFtYmFfZHJpdmVyIGNhdHVf
ZHJpdmVyID0gewo+PiDCoMKgwqDCoMKgIC5pZF90YWJsZcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
PSBjYXR1X2lkcywKPj4gwqAgfTsKPj4gwqAgK3N0YXRpYyBpbnQgY2F0dV9wbGF0Zm9ybV9wcm9i
ZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQo+PiArewo+PiArwqDCoMKgIHN0cnVjdCBy
ZXNvdXJjZSAqcmVzID0gcGxhdGZvcm1fZ2V0X3Jlc291cmNlKHBkZXYsIElPUkVTT1VSQ0VfTUVN
LCAwKTsKPj4gK8KgwqDCoCBzdHJ1Y3QgY2F0dV9kcnZkYXRhICpkcnZkYXRhOwo+PiArwqDCoMKg
IGludCByZXQgPSAwOwo+PiArCj4+ICvCoMKgwqAgZHJ2ZGF0YSA9IGRldm1fa3phbGxvYygmcGRl
di0+ZGV2LCBzaXplb2YoKmRydmRhdGEpLCBHRlBfS0VSTkVMKTsKPj4gK8KgwqDCoCBpZiAoIWRy
dmRhdGEpCj4+ICvCoMKgwqDCoMKgwqDCoCByZXR1cm4gLUVOT01FTTsKPj4gKwo+PiArwqDCoMKg
IGRydmRhdGEtPnBjbGsgPSBjb3Jlc2lnaHRfZ2V0X2VuYWJsZV9hcGJfcGNsaygmcGRldi0+ZGV2
KTsKPj4gK8KgwqDCoCBpZiAoSVNfRVJSKGRydmRhdGEtPnBjbGspKQo+PiArwqDCoMKgwqDCoMKg
wqAgcmV0dXJuIC1FTk9ERVY7Cj4gCj4gCj4gLS0tOD4tLS0KPiAKPj4gKwo+PiArwqDCoMKgIGlm
IChyZXMpIHsKPj4gK8KgwqDCoMKgwqDCoMKgIGRydmRhdGEtPmJhc2UgPSBkZXZtX2lvcmVtYXBf
cmVzb3VyY2UoJnBkZXYtPmRldiwgcmVzKTsKPj4gK8KgwqDCoMKgwqDCoMKgIGlmIChJU19FUlIo
ZHJ2ZGF0YS0+YmFzZSkpIHsKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqAgY2xrX3B1dChkcnZk
YXRhLT5wY2xrKTsKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqAgcmV0dXJuIFBUUl9FUlIoZHJ2
ZGF0YS0+YmFzZSk7Cj4+ICvCoMKgwqDCoMKgwqDCoCB9Cj4+ICvCoMKgwqAgfQo+IAo+IC0tLTw4
LS0tCj4gCj4gVGhlIGFib3ZlIHNlY3Rpb24gc2VlbXMgdW5uY2Vzc2FyeSBhcyB3ZSBhbHJlYWR5
IHRyeSB0byBtYXAgdGhlIGJhc2UgaW4gX19jYXR1X3Byb2JlID8KCkFncmVlZCwgdGhvdWdoIGl0
IHNlZW1zIHVubmVjZXNzYXJ5LCB0aGVyZSBpcyBhIHNtYWxsIGRpZmZlcmVuY2UgaW4gdGhlcmUu
IEluIHRoZSBwbGF0Zm9ybQpkcml2ZXIgY2FzZSBpLmUgY2F0dV9wbGF0Zm9ybV9wcm9iZSgpLCBj
bGtfcHV0KCkgaXMgY2FsbGVkIG9uIHBsYXRmb3JtIGNsb2NrIGRydmRhdGEtPnBjbGsKKGp1c3Qg
ZW5hYmxlZCBlYXJsaWVyKSBmb3IgY2FzZXMgd2hlbiBkZXZtX2lvcmVtYXBfcmVzb3VyY2UoKSBm
YWlscy4KClRvIHJlbW92ZSB0aGlzIHJlZHVuZGFuY3ksIGxldCdzIG1vdmUgZGV2bV9pb3JlbWFw
X3Jlc291cmNlKCkgaW50byBpdCdzIEFNQkEgY2FsbGVyIGkuZQpjYXR1X3Byb2JlKCkgdGh1cyBk
cm9wcGluZyBzdHJ1Y3QgcmVzb3VyY2UgYXJndW1lbnQgZnJvbSBfX2NhdHVfcHJvYmUoKS4gU2lt
aWxhciBzaXR1YXRpb24KaXMgcHJlc2VudCBpbiBjb3Jlc2lnaHQtY3B1LWRlYnVnIGRyaXZlciBh
cyB3ZWxsLCB3aWxsIGZpeCB0aGF0LgoKQnV0IHRoZXJlIGFyZSBzb21lIG90aGVyIGRyaXZlcnMg
aW4gdGhlIHNlcmllcyB3aGVyZSBjb3Jlc2lnaHRfZ2V0X2VuYWJsZV9hcGJfcGNsaygpIGNhbGxl
ZApvbiAnZHJ2ZGF0YS0+cGNsaycgYW5kIGRldm1faW9yZW1hcF9yZXNvdXJjZSgpIGlzIGF0dGVt
cHRlZCBpbnNpZGUgdGhlIGZhY3RvcmVkIF9feHh4X3Byb2JlKCkKZnVuY3Rpb24gd2hpY2ggaXMg
Y29tbW9uIGZvciBib3RoIEFNQkEgYW5kIHBsYXRmb3JtIGRyaXZlcnMuCgpTdWNoIGRyaXZlcnMg
YXJlIC4uLgoKLSB0cGl1Ci0gdG1jCi0gc3RtCi0gcmVwbGljYXRvcgoKSU1ITyBpdCB3b3VsZCBi
ZSBiZXR0ZXIgdG8gZm9sbG93IHNhbWUgc2NoZW1lIGZvciBhbGwgZHJpdmVycyBpbiB0aGUgc2Vy
aWVzLiBQbGVhc2UgZG8gbGV0Cm1lIGtub3cgd2hpY2ggbWV0aG9kIHdpbGwgYmUgcHJlZmVycmVk
LgoKPiAKPj4gKwoKPj4gK8KgwqDCoCBwbV9ydW50aW1lX2dldF9ub3Jlc3VtZSgmcGRldi0+ZGV2
KTsKPj4gK8KgwqDCoCBwbV9ydW50aW1lX3NldF9hY3RpdmUoJnBkZXYtPmRldik7Cj4+ICvCoMKg
wqAgcG1fcnVudGltZV9lbmFibGUoJnBkZXYtPmRldik7Cj4+ICsKPj4gK8KgwqDCoCBkZXZfc2V0
X2RydmRhdGEoJnBkZXYtPmRldiwgZHJ2ZGF0YSk7Cj4+ICvCoMKgwqAgcmV0ID0gX19jYXR1X3By
b2JlKCZwZGV2LT5kZXYsIHJlcyk7Cj4+ICvCoMKgwqAgcG1fcnVudGltZV9wdXQoJnBkZXYtPmRl
dik7Cj4+ICvCoMKgwqAgaWYgKHJldCkKPj4gK8KgwqDCoMKgwqDCoMKgIHBtX3J1bnRpbWVfZGlz
YWJsZSgmcGRldi0+ZGV2KTsKPj4gKwo+PiArwqDCoMKgIHJldHVybiByZXQ7Cj4+ICt9Cj4+ICsK
Pj4gK3N0YXRpYyBpbnQgY2F0dV9wbGF0Zm9ybV9yZW1vdmUoc3RydWN0IHBsYXRmb3JtX2Rldmlj
ZSAqcGRldikKPj4gK3sKPj4gK8KgwqDCoCBzdHJ1Y3QgY2F0dV9kcnZkYXRhICpkcnZkYXRhID0g
ZGV2X2dldF9kcnZkYXRhKCZwZGV2LT5kZXYpOwo+PiArCj4+ICvCoMKgwqAgaWYgKGRydmRhdGEp
Cj4+ICvCoMKgwqDCoMKgwqDCoCBfX2NhdHVfcmVtb3ZlKCZwZGV2LT5kZXYpOwo+IAo+IEkgZG9u
J3QgdW5kZXJzdGFuZCB0aGUgbmVlZCBmb3IgaWYgKCkgY2hlY2sgaGVyZSAoYW5kIG9uIGFsbCB0
aGUgb3RoZXIgZHJpdmVycykuIEV2ZW4gaWYgd2UgaGF2ZSBhIGRydmRhdGEgIT0gTlVMTCwgd2hh
dCBndWFyYW50ZWVzIHRoYXQKPiB0aGUgZHJ2ZGF0YS0+Y3NkZXYgaXMgdmFsaWQgKHdoaWNoIGlz
IHVzZWQgaW4geHhfcmVtb3ZlKSA/CgpBZ3JlZWQsIGFsdGhvdWdoIGRydmRhdGEgaXMgZGVyaXZl
ZCBpbiBfX3h4eF9yZW1vdmUoKSBmdW5jdGlvbnMsIGEgcHJlLWNoZWNrIGhlcmUgaXMgbm90CnJl
cXVpcmVkIC0gc2ltaWxhciB0byB0aGUgQU1CQSByZW1vdmUgcGF0aC4gU3VyZSwgd2lsbCBkcm9w
IHRoZW0gYWNyb3NzIGRyaXZlcnMuCgo+IAo+IFN1enVraQo+IAo+PiArCj4+ICvCoMKgwqAgcG1f
cnVudGltZV9kaXNhYmxlKCZwZGV2LT5kZXYpOwo+PiArwqDCoMKgIGlmIChkcnZkYXRhICYmICFJ
U19FUlJfT1JfTlVMTChkcnZkYXRhLT5wY2xrKSkKPj4gK8KgwqDCoMKgwqDCoMKgIGNsa19wdXQo
ZHJ2ZGF0YS0+cGNsayk7Cj4+ICvCoMKgwqAgcmV0dXJuIDA7Cj4+ICt9Cj4+ICsKPj4gKyNpZmRl
ZiBDT05GSUdfUE0KPj4gK3N0YXRpYyBpbnQgY2F0dV9ydW50aW1lX3N1c3BlbmQoc3RydWN0IGRl
dmljZSAqZGV2KQo+PiArewo+PiArwqDCoMKgIHN0cnVjdCBjYXR1X2RydmRhdGEgKmRydmRhdGEg
PSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsKPj4gKwo+PiArwqDCoMKgIGlmIChkcnZkYXRhICYmICFJ
U19FUlJfT1JfTlVMTChkcnZkYXRhLT5wY2xrKSkKPj4gK8KgwqDCoMKgwqDCoMKgIGNsa19kaXNh
YmxlX3VucHJlcGFyZShkcnZkYXRhLT5wY2xrKTsKPj4gK8KgwqDCoCByZXR1cm4gMDsKPj4gK30K
Pj4gKwo+PiArc3RhdGljIGludCBjYXR1X3J1bnRpbWVfcmVzdW1lKHN0cnVjdCBkZXZpY2UgKmRl
dikKPj4gK3sKPj4gK8KgwqDCoCBzdHJ1Y3QgY2F0dV9kcnZkYXRhICpkcnZkYXRhID0gZGV2X2dl
dF9kcnZkYXRhKGRldik7Cj4+ICsKPj4gK8KgwqDCoCBpZiAoZHJ2ZGF0YSAmJiAhSVNfRVJSX09S
X05VTEwoZHJ2ZGF0YS0+cGNsaykpCj4+ICvCoMKgwqDCoMKgwqDCoCBjbGtfcHJlcGFyZV9lbmFi
bGUoZHJ2ZGF0YS0+cGNsayk7Cj4+ICvCoMKgwqAgcmV0dXJuIDA7Cj4+ICt9Cj4+ICsjZW5kaWYK
Pj4gKwo+PiArc3RhdGljIGNvbnN0IHN0cnVjdCBkZXZfcG1fb3BzIGNhdHVfZGV2X3BtX29wcyA9
IHsKPj4gK8KgwqDCoCBTRVRfUlVOVElNRV9QTV9PUFMoY2F0dV9ydW50aW1lX3N1c3BlbmQsIGNh
dHVfcnVudGltZV9yZXN1bWUsIE5VTEwpCj4+ICt9Owo+PiArCj4+ICsjaWZkZWYgQ09ORklHX0FD
UEkKPj4gK3N0YXRpYyBjb25zdCBzdHJ1Y3QgYWNwaV9kZXZpY2VfaWQgY2F0dV9hY3BpX2lkc1td
ID0gewo+PiArwqDCoMKgIHsiQVJNSEM5Q0EiLCAwfSwgLyogQVJNIENvcmVTaWdodCBDQVRVICov
Cj4+ICvCoMKgwqAge30sCj4+ICt9Owo+PiArCj4+ICtNT0RVTEVfREVWSUNFX1RBQkxFKGFjcGks
IGNhdHVfYWNwaV9pZHMpOwo+PiArI2VuZGlmCj4+ICsKPj4gK3N0YXRpYyBzdHJ1Y3QgcGxhdGZv
cm1fZHJpdmVyIGNhdHVfcGxhdGZvcm1fZHJpdmVyID0gewo+PiArwqDCoMKgIC5wcm9iZcKgwqDC
oCA9IGNhdHVfcGxhdGZvcm1fcHJvYmUsCj4+ICvCoMKgwqAgLnJlbW92ZcKgwqDCoCA9IGNhdHVf
cGxhdGZvcm1fcmVtb3ZlLAo+PiArwqDCoMKgIC5kcml2ZXLCoMKgwqAgPSB7Cj4+ICvCoMKgwqDC
oMKgwqDCoCAubmFtZcKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgPSAiY29yZXNpZ2h0LWNhdHUtcGxh
dGZvcm0iLAo+PiArwqDCoMKgwqDCoMKgwqAgLmFjcGlfbWF0Y2hfdGFibGXCoMKgwqAgPSBBQ1BJ
X1BUUihjYXR1X2FjcGlfaWRzKSwKPj4gK8KgwqDCoMKgwqDCoMKgIC5zdXBwcmVzc19iaW5kX2F0
dHJzwqDCoMKgID0gdHJ1ZSwKPj4gK8KgwqDCoMKgwqDCoMKgIC5wbcKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgPSAmY2F0dV9kZXZfcG1fb3BzLAo+PiArwqDCoMKgIH0sCj4+ICt9Owo+PiArCj4+IMKg
IHN0YXRpYyBpbnQgX19pbml0IGNhdHVfaW5pdCh2b2lkKQo+PiDCoCB7Cj4+IMKgwqDCoMKgwqAg
aW50IHJldDsKPj4gwqAgLcKgwqDCoCByZXQgPSBhbWJhX2RyaXZlcl9yZWdpc3RlcigmY2F0dV9k
cml2ZXIpOwo+PiAtwqDCoMKgIGlmIChyZXQpCj4+IC3CoMKgwqDCoMKgwqDCoCBwcl9pbmZvKCJF
cnJvciByZWdpc3RlcmluZyBjYXR1IGRyaXZlclxuIik7Cj4+ICvCoMKgwqAgcmV0ID0gY29yZXNp
Z2h0X2luaXRfZHJpdmVyKCJjYXR1IiwgJmNhdHVfZHJpdmVyLCAmY2F0dV9wbGF0Zm9ybV9kcml2
ZXIpOwo+PiDCoMKgwqDCoMKgIHRtY19ldHJfc2V0X2NhdHVfb3BzKCZldHJfY2F0dV9idWZfb3Bz
KTsKPj4gwqDCoMKgwqDCoCByZXR1cm4gcmV0Owo+PiDCoCB9Cj4+IEBAIC02MTIsNyArNzE2LDcg
QEAgc3RhdGljIGludCBfX2luaXQgY2F0dV9pbml0KHZvaWQpCj4+IMKgIHN0YXRpYyB2b2lkIF9f
ZXhpdCBjYXR1X2V4aXQodm9pZCkKPj4gwqAgewo+PiDCoMKgwqDCoMKgIHRtY19ldHJfcmVtb3Zl
X2NhdHVfb3BzKCk7Cj4+IC3CoMKgwqAgYW1iYV9kcml2ZXJfdW5yZWdpc3RlcigmY2F0dV9kcml2
ZXIpOwo+PiArwqDCoMKgIGNvcmVzaWdodF9yZW1vdmVfZHJpdmVyKCZjYXR1X2RyaXZlciwgJmNh
dHVfcGxhdGZvcm1fZHJpdmVyKTsKPj4gwqAgfQo+PiDCoCDCoCBtb2R1bGVfaW5pdChjYXR1X2lu
aXQpOwo+PiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdo
dC1jYXR1LmggYi9kcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LWNhdHUuaAo+
PiBpbmRleCA0NDJlMDM0YmJmYmEuLjE0MWZlYWMxYzE0YiAxMDA2NDQKPj4gLS0tIGEvZHJpdmVy
cy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1jYXR1LmgKPj4gKysrIGIvZHJpdmVycy9o
d3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1jYXR1LmgKPj4gQEAgLTYxLDYgKzYxLDcgQEAK
Pj4gwqAgI2RlZmluZSBDQVRVX0lSUUVOX09GRsKgwqDCoMKgwqDCoMKgIDB4MAo+PiDCoCDCoCBz
dHJ1Y3QgY2F0dV9kcnZkYXRhIHsKPj4gK8KgwqDCoCBzdHJ1Y3QgY2xrICpwY2xrOwo+PiDCoMKg
wqDCoMKgIHZvaWQgX19pb21lbSAqYmFzZTsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0
X2RldmljZSAqY3NkZXY7Cj4+IMKgwqDCoMKgwqAgaW50IGlycTsKPiAKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGludXgtc3RtMzIgbWFpbGluZyBsaXN0
CkxpbnV4LXN0bTMyQHN0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20KaHR0cHM6Ly9zdC1tZC1t
YWlsbWFuLnN0b3JtcmVwbHkuY29tL21haWxtYW4vbGlzdGluZm8vbGludXgtc3RtMzIK
