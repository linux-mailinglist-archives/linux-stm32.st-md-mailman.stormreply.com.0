Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id C74C054C8FD
	for <lists+linux-stm32@lfdr.de>; Wed, 15 Jun 2022 14:49:15 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 616F3C5E2C6;
	Wed, 15 Jun 2022 12:49:15 +0000 (UTC)
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 74BAAC0D2BC
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Wed, 15 Jun 2022 12:49:13 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
 t=1655297353; x=1686833353;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=fkWNS1JY+Km6270SQ6VP3bBDBqzjTKZzztGuGJrCrAw=;
 b=nTM3q81p7hrbNRNXTx+mhXT2ewPQKzTu5Fi319tfHverLjb1+CPBWf14
 aNEwDU1KLYxIK47G3SvpF1XOzG4CLIqs51ZwNGwQ9bVjeXHgQf3kPT6DG
 7vDUlEAQ7TzoTaHAW33zCBQ1VbT0gz/YgE6HHQhj1G+qLIMOW//eanPcj
 k0o8AORjBo/N5w+VGCeLh3klSwAyAkmoO8bYiZFLo77N8f+aCOEB0ImSC
 NOwjb2C8moMGrTL3FB2edi52fbPzwvDfehPa+UqE1W8HQ9aqEncPelxlg
 2EcgMhwo0f0C3iJiaF1nMt5ycjbNShmaGRmaMSu15pYfAEps4aOytkuWr A==;
X-IronPort-AV: E=McAfee;i="6400,9594,10378"; a="365299099"
X-IronPort-AV: E=Sophos;i="5.91,302,1647327600"; d="scan'208";a="365299099"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by fmsmga105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 15 Jun 2022 05:49:06 -0700
X-IronPort-AV: E=Sophos;i="5.91,302,1647327600"; d="scan'208";a="687288124"
Received: from mgrymel-mobl1.ger.corp.intel.com (HELO
 ijarvine-MOBL2.ger.corp.intel.com) ([10.249.41.34])
 by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 15 Jun 2022 05:49:00 -0700
From: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>
To: linux-serial@vger.kernel.org, Greg KH <gregkh@linuxfoundation.org>,
 Jiri Slaby <jirislaby@kernel.org>,
 Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
 Vladimir Zapolskiy <vz@mleia.com>, Russell King <linux@armlinux.org.uk>,
 Richard Genoud <richard.genoud@gmail.com>,
 Nicolas Ferre <nicolas.ferre@microchip.com>,
 Alexandre Belloni <alexandre.belloni@bootlin.com>,
 Claudiu Beznea <claudiu.beznea@microchip.com>,
 Shawn Guo <shawnguo@kernel.org>, Sascha Hauer <s.hauer@pengutronix.de>,
 Pengutronix Kernel Team <kernel@pengutronix.de>,
 Fabio Estevam <festevam@gmail.com>, NXP Linux Team <linux-imx@nxp.com>,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Alexandre Torgue <alexandre.torgue@foss.st.com>,
 linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
 linux-stm32@st-md-mailman.stormreply.com
Date: Wed, 15 Jun 2022 15:48:27 +0300
Message-Id: <20220615124829.34516-5-ilpo.jarvinen@linux.intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20220615124829.34516-1-ilpo.jarvinen@linux.intel.com>
References: <20220615124829.34516-1-ilpo.jarvinen@linux.intel.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>,
 Lukas Wunner <lukas@wunner.de>, Lino Sanfilippo <LinoSanfilippo@gmx.de>,
 =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig?= <u.kleine-koenig@pengutronix.de>
Subject: [Linux-stm32] [PATCH v7 4/6] serial: take termios_rwsem for
	.rs485_config() & pass termios as param
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

VG8gYmUgYWJsZSB0byBhbHRlciBBRERSQiB3aXRoaW4gLnJzNDg1X2NvbmZpZygpLCB0YWtlIHRl
cm1pb3NfcndzZW0KYmVmb3JlIGNhbGxpbmcgLnJzNDg1X2NvbmZpZygpIGFuZCBwYXNzIHRlcm1p
b3MuCgpTaWduZWQtb2ZmLWJ5OiBJbHBvIErDpHJ2aW5lbiA8aWxwby5qYXJ2aW5lbkBsaW51eC5p
bnRlbC5jb20+Ci0tLQogZHJpdmVycy90dHkvc2VyaWFsLzgyNTAvODI1MC5oICAgICAgICAgfCAg
MyArKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfZHdsaWIuYyAgIHwgIDMgKystCiBk
cml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2V4YXIuYyAgICB8ICA5ICsrKysrLS0tLQogZHJp
dmVycy90dHkvc2VyaWFsLzgyNTAvODI1MF9maW50ZWsuYyAgfCAgMiArLQogZHJpdmVycy90dHkv
c2VyaWFsLzgyNTAvODI1MF9scGMxOHh4LmMgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsLzgy
NTAvODI1MF9wY2kuYyAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsLzgyNTAvODI1MF9w
b3J0LmMgICAgfCAgMyArKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9hbWJhLXBsMDExLmMgICAgICAg
IHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9hcjkzM3hfdWFydC5jICAgICAgIHwgIDIgKy0K
IGRyaXZlcnMvdHR5L3NlcmlhbC9hdG1lbF9zZXJpYWwuYyAgICAgIHwgIDIgKy0KIGRyaXZlcnMv
dHR5L3NlcmlhbC9mc2xfbHB1YXJ0LmMgICAgICAgIHwgIDQgKystLQogZHJpdmVycy90dHkvc2Vy
aWFsL2lteC5jICAgICAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL21heDMx
MHguYyAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL21jZi5jICAgICAgICAg
ICAgICAgfCAgMyArKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9vbWFwLXNlcmlhbC5jICAgICAgIHwg
IDMgKystCiBkcml2ZXJzL3R0eS9zZXJpYWwvc2MxNmlzN3h4LmMgICAgICAgICB8ICAyICstCiBk
cml2ZXJzL3R0eS9zZXJpYWwvc2VyaWFsX2NvcmUuYyAgICAgICB8IDE1ICsrKysrKysrKysrLS0t
LQogZHJpdmVycy90dHkvc2VyaWFsL3N0bTMyLXVzYXJ0LmMgICAgICAgfCAgMiArLQogaW5jbHVk
ZS9saW51eC9zZXJpYWxfY29yZS5oICAgICAgICAgICAgfCAgMyArKy0KIDE5IGZpbGVzIGNoYW5n
ZWQsIDQwIGluc2VydGlvbnMoKyksIDI2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvdHR5L3NlcmlhbC84MjUwLzgyNTAuaCBiL2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTAu
aAppbmRleCA1Y2M5NjdmZTNiNTkuLmU3YmE2NTAwYWVkZiAxMDA2NDQKLS0tIGEvZHJpdmVycy90
dHkvc2VyaWFsLzgyNTAvODI1MC5oCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTAu
aApAQCAtMjAzLDcgKzIwMyw4IEBAIHZvaWQgc2VyaWFsODI1MF9ycG1fcHV0KHN0cnVjdCB1YXJ0
XzgyNTBfcG9ydCAqcCk7CiB2b2lkIHNlcmlhbDgyNTBfcnBtX2dldF90eChzdHJ1Y3QgdWFydF84
MjUwX3BvcnQgKnApOwogdm9pZCBzZXJpYWw4MjUwX3JwbV9wdXRfdHgoc3RydWN0IHVhcnRfODI1
MF9wb3J0ICpwKTsKIAotaW50IHNlcmlhbDgyNTBfZW00ODVfY29uZmlnKHN0cnVjdCB1YXJ0X3Bv
cnQgKnBvcnQsIHN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1KTsKK2ludCBzZXJpYWw4MjUwX2Vt
NDg1X2NvbmZpZyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpy
czQ4NSwKKwkJCSAgICBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MpOwogdm9pZCBzZXJpYWw4MjUw
X2VtNDg1X3N0YXJ0X3R4KHN0cnVjdCB1YXJ0XzgyNTBfcG9ydCAqcCk7CiB2b2lkIHNlcmlhbDgy
NTBfZW00ODVfc3RvcF90eChzdHJ1Y3QgdWFydF84MjUwX3BvcnQgKnApOwogdm9pZCBzZXJpYWw4
MjUwX2VtNDg1X2Rlc3Ryb3koc3RydWN0IHVhcnRfODI1MF9wb3J0ICpwKTsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfZHdsaWIuYyBiL2RyaXZlcnMvdHR5L3Nlcmlh
bC84MjUwLzgyNTBfZHdsaWIuYwppbmRleCBjODNlN2VhZjM4NzcuLmM5ZDliZDdmN2JkOSAxMDA2
NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsLzgyNTAvODI1MF9kd2xpYi5jCisrKyBiL2RyaXZl
cnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfZHdsaWIuYwpAQCAtODUsNyArODUsOCBAQCB2b2lkIGR3
ODI1MF9kb19zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwLCBzdHJ1Y3Qga3Rlcm1pb3Mg
KnRlcm1pb3MsIHN0cnVjdAogfQogRVhQT1JUX1NZTUJPTF9HUEwoZHc4MjUwX2RvX3NldF90ZXJt
aW9zKTsKIAotc3RhdGljIGludCBkdzgyNTBfcnM0ODVfY29uZmlnKHN0cnVjdCB1YXJ0X3BvcnQg
KnAsIHN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1KQorc3RhdGljIGludCBkdzgyNTBfcnM0ODVf
Y29uZmlnKHN0cnVjdCB1YXJ0X3BvcnQgKnAsIHN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1LAor
CQkJICAgICAgIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcykKIHsKIAl1MzIgdGNyOwogCmRpZmYg
LS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2V4YXIuYyBiL2RyaXZlcnMvdHR5
L3NlcmlhbC84MjUwLzgyNTBfZXhhci5jCmluZGV4IDhiZTNjOWVjZDYyMy4uZmY2N2QxNTRhN2I1
IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2V4YXIuYworKysgYi9k
cml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2V4YXIuYwpAQCAtMTEyLDcgKzExMiw4IEBACiBz
dHJ1Y3QgZXhhcjgyNTA7CiAKIHN0cnVjdCBleGFyODI1MF9wbGF0Zm9ybSB7Ci0JaW50ICgqcnM0
ODVfY29uZmlnKShzdHJ1Y3QgdWFydF9wb3J0ICosIHN0cnVjdCBzZXJpYWxfcnM0ODUgKik7CisJ
aW50ICgqcnM0ODVfY29uZmlnKShzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qgc2VyaWFs
X3JzNDg1ICpyczQ4NSwKKwkJCSAgICBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MpOwogCWNvbnN0
IHN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1X3N1cHBvcnRlZDsKIAlpbnQgKCpyZWdpc3Rlcl9n
cGlvKShzdHJ1Y3QgcGNpX2RldiAqLCBzdHJ1Y3QgdWFydF84MjUwX3BvcnQgKik7CiAJdm9pZCAo
KnVucmVnaXN0ZXJfZ3Bpbykoc3RydWN0IHVhcnRfODI1MF9wb3J0ICopOwpAQCAtNDEwLDcgKzQx
MSw3IEBAIHN0YXRpYyB2b2lkIHhyMTd2MzV4X3VucmVnaXN0ZXJfZ3BpbyhzdHJ1Y3QgdWFydF84
MjUwX3BvcnQgKnBvcnQpCiB9CiAKIHN0YXRpYyBpbnQgZ2VuZXJpY19yczQ4NV9jb25maWcoc3Ry
dWN0IHVhcnRfcG9ydCAqcG9ydCwKLQkJCQlzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NSkKKwkJ
CQlzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NSwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zKQog
ewogCWJvb2wgaXNfcnM0ODUgPSAhIShyczQ4NS0+ZmxhZ3MgJiBTRVJfUlM0ODVfRU5BQkxFRCk7
CiAJdTggX19pb21lbSAqcCA9IHBvcnQtPm1lbWJhc2U7CkBAIC00NDIsNyArNDQzLDcgQEAgc3Rh
dGljIGNvbnN0IHN0cnVjdCBleGFyODI1MF9wbGF0Zm9ybSBleGFyODI1MF9kZWZhdWx0X3BsYXRm
b3JtID0gewogfTsKIAogc3RhdGljIGludCBpb3QyMDQwX3JzNDg1X2NvbmZpZyhzdHJ1Y3QgdWFy
dF9wb3J0ICpwb3J0LAotCQkJCXN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1KQorCQkJCXN0cnVj
dCBzZXJpYWxfcnM0ODUgKnJzNDg1LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MpCiB7CiAJYm9v
bCBpc19yczQ4NSA9ICEhKHJzNDg1LT5mbGFncyAmIFNFUl9SUzQ4NV9FTkFCTEVEKTsKIAl1OCBf
X2lvbWVtICpwID0gcG9ydC0+bWVtYmFzZTsKQEAgLTQ3MSw3ICs0NzIsNyBAQCBzdGF0aWMgaW50
IGlvdDIwNDBfcnM0ODVfY29uZmlnKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiAJdmFsdWUgfD0g
bW9kZTsKIAl3cml0ZWIodmFsdWUsIHAgKyBVQVJUX0VYQVJfTVBJT0xWTF83XzApOwogCi0JcmV0
dXJuIGdlbmVyaWNfcnM0ODVfY29uZmlnKHBvcnQsIHJzNDg1KTsKKwlyZXR1cm4gZ2VuZXJpY19y
czQ4NV9jb25maWcocG9ydCwgcnM0ODUsIHRlcm1pb3MpOwogfQogCiBzdGF0aWMgY29uc3Qgc3Ry
dWN0IHNlcmlhbF9yczQ4NSBpb3QyMDQwX3JzNDg1X3N1cHBvcnRlZCA9IHsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfZmludGVrLmMgYi9kcml2ZXJzL3R0eS9zZXJp
YWwvODI1MC84MjUwX2ZpbnRlay5jCmluZGV4IDFmYjg2YzczNzg2Yy4uZTQ4ZDUyNTM0YmVmIDEw
MDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2ZpbnRlay5jCisrKyBiL2Ry
aXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfZmludGVrLmMKQEAgLTE5Miw3ICsxOTIsNyBAQCBz
dGF0aWMgaW50IGZpbnRla184MjUwX2dldF9sZG5fcmFuZ2Uoc3RydWN0IGZpbnRla184MjUwICpw
ZGF0YSwgaW50ICptaW4sCiB9CiAKIHN0YXRpYyBpbnQgZmludGVrXzgyNTBfcnM0ODVfY29uZmln
KHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0JCQkgICAgICBzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpy
czQ4NSkKKwkJCSAgICAgIHN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1LCBzdHJ1Y3Qga3Rlcm1p
b3MgKnRlcm1pb3MpCiB7CiAJdWludDhfdCBjb25maWcgPSAwOwogCXN0cnVjdCBmaW50ZWtfODI1
MCAqcGRhdGEgPSBwb3J0LT5wcml2YXRlX2RhdGE7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvODI1MC84MjUwX2xwYzE4eHguYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBf
bHBjMTh4eC5jCmluZGV4IDNhMWNiNTFjYmM5MS4uMTg2NWY3YmM1MDIwIDEwMDY0NAotLS0gYS9k
cml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2xwYzE4eHguYworKysgYi9kcml2ZXJzL3R0eS9z
ZXJpYWwvODI1MC84MjUwX2xwYzE4eHguYwpAQCAtMzMsNyArMzMsNyBAQCBzdHJ1Y3QgbHBjMTh4
eF91YXJ0X2RhdGEgewogfTsKIAogc3RhdGljIGludCBscGMxOHh4X3JzNDg1X2NvbmZpZyhzdHJ1
Y3QgdWFydF9wb3J0ICpwb3J0LAotCQkJCXN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1KQorCQkJ
CXN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MpCiB7
CiAJc3RydWN0IHVhcnRfODI1MF9wb3J0ICp1cCA9IHVwX3RvX3U4MjUwcChwb3J0KTsKIAl1MzIg
cnM0ODVfY3RybF9yZWcgPSAwOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsLzgyNTAv
ODI1MF9wY2kuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfcGNpLmMKaW5kZXggYjZk
NzEyNjhhYTdkLi4zNWM3OTk2NDFlMzIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC84
MjUwLzgyNTBfcGNpLmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsLzgyNTAvODI1MF9wY2kuYwpA
QCAtMTU1NCw3ICsxNTU0LDcgQEAgcGNpX2JyY21fdHJ1bWFuYWdlX3NldHVwKHN0cnVjdCBzZXJp
YWxfcHJpdmF0ZSAqcHJpdiwKIAogLyogV2Ugc2hvdWxkIGRvIHByb3BlciBIL1cgdHJhbnNjZWl2
ZXIgc2V0dGluZyBiZWZvcmUgY2hhbmdlIHRvIFJTNDg1IG1vZGUgKi8KIHN0YXRpYyBpbnQgcGNp
X2ZpbnRla19yczQ4NV9jb25maWcoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKLQkJCSAgICAgICBz
dHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NSkKKwkJCQkgICBzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpy
czQ4NSwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zKQogewogCXN0cnVjdCBwY2lfZGV2ICpwY2lf
ZGV2ID0gdG9fcGNpX2Rldihwb3J0LT5kZXYpOwogCXU4IHNldHRpbmc7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX3BvcnQuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC84
MjUwLzgyNTBfcG9ydC5jCmluZGV4IGY0MTdjMjk1MDdlMS4uMGVjMDY5OTVkZjg5IDEwMDY0NAot
LS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX3BvcnQuYworKysgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvODI1MC84MjUwX3BvcnQuYwpAQCAtNjY0LDcgKzY2NCw4IEBAIEVYUE9SVF9TWU1C
T0xfR1BMKHNlcmlhbDgyNTBfZW00ODVfc3VwcG9ydGVkKTsKICAqIGlmIHRoZSB1YXJ0IGlzIGlu
Y2FwYWJsZSBvZiBkcml2aW5nIFJUUyBhcyBhIFRyYW5zbWl0IEVuYWJsZSBzaWduYWwgaW4KICAq
IGhhcmR3YXJlLCByZWx5aW5nIG9uIHNvZnR3YXJlIGVtdWxhdGlvbiBpbnN0ZWFkLgogICovCi1p
bnQgc2VyaWFsODI1MF9lbTQ4NV9jb25maWcoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0
IHNlcmlhbF9yczQ4NSAqcnM0ODUpCitpbnQgc2VyaWFsODI1MF9lbTQ4NV9jb25maWcoc3RydWN0
IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IHNlcmlhbF9yczQ4NSAqcnM0ODUsCisJCQkgICAgc3Ry
dWN0IGt0ZXJtaW9zICp0ZXJtaW9zKQogewogCXN0cnVjdCB1YXJ0XzgyNTBfcG9ydCAqdXAgPSB1
cF90b191ODI1MHAocG9ydCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9hbWJh
LXBsMDExLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvYW1iYS1wbDAxMS5jCmluZGV4IGVjY2Q2NjYy
NWQyNS4uYWVmYjA2MDBhODJjIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvYW1iYS1w
bDAxMS5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9hbWJhLXBsMDExLmMKQEAgLTIxOTgsNyAr
MjE5OCw3IEBAIHN0YXRpYyBpbnQgcGwwMTFfdmVyaWZ5X3BvcnQoc3RydWN0IHVhcnRfcG9ydCAq
cG9ydCwgc3RydWN0IHNlcmlhbF9zdHJ1Y3QgKnNlcikKIH0KIAogc3RhdGljIGludCBwbDAxMV9y
czQ4NV9jb25maWcoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKLQkJCSAgICAgIHN0cnVjdCBzZXJp
YWxfcnM0ODUgKnJzNDg1KQorCQkJICAgICAgc3RydWN0IHNlcmlhbF9yczQ4NSAqcnM0ODUsIHN0
cnVjdCBrdGVybWlvcyAqdGVybWlvcykKIHsKIAlzdHJ1Y3QgdWFydF9hbWJhX3BvcnQgKnVhcCA9
CiAJCWNvbnRhaW5lcl9vZihwb3J0LCBzdHJ1Y3QgdWFydF9hbWJhX3BvcnQsIHBvcnQpOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL2FyOTMzeF91YXJ0LmMgYi9kcml2ZXJzL3R0eS9z
ZXJpYWwvYXI5MzN4X3VhcnQuYwppbmRleCBhYjJjNWIyYTFjZTguLjkzMGQ5YWVkOTBmNSAxMDA2
NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL2FyOTMzeF91YXJ0LmMKKysrIGIvZHJpdmVycy90
dHkvc2VyaWFsL2FyOTMzeF91YXJ0LmMKQEAgLTU4MSw3ICs1ODEsNyBAQCBzdGF0aWMgY29uc3Qg
c3RydWN0IHVhcnRfb3BzIGFyOTMzeF91YXJ0X29wcyA9IHsKIH07CiAKIHN0YXRpYyBpbnQgYXI5
MzN4X2NvbmZpZ19yczQ4NShzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAotCQkJCXN0cnVjdCBzZXJp
YWxfcnM0ODUgKnJzNDg1Y29uZikKKwkJCSAgICAgICBzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4
NWNvbmYsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcykKIHsKIAlzdHJ1Y3QgYXI5MzN4X3VhcnRf
cG9ydCAqdXAgPQogCQljb250YWluZXJfb2YocG9ydCwgc3RydWN0IGFyOTMzeF91YXJ0X3BvcnQs
IHBvcnQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL2F0bWVsX3NlcmlhbC5jIGIv
ZHJpdmVycy90dHkvc2VyaWFsL2F0bWVsX3NlcmlhbC5jCmluZGV4IDc0ZGQxZDNhYzQ2Zi4uYjAz
MmU3YzMwY2UwIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvYXRtZWxfc2VyaWFsLmMK
KysrIGIvZHJpdmVycy90dHkvc2VyaWFsL2F0bWVsX3NlcmlhbC5jCkBAIC0yODYsNyArMjg2LDcg
QEAgc3RhdGljIHZvaWQgYXRtZWxfdGFza2xldF9zY2hlZHVsZShzdHJ1Y3QgYXRtZWxfdWFydF9w
b3J0ICphdG1lbF9wb3J0LAogCiAvKiBFbmFibGUgb3IgZGlzYWJsZSB0aGUgcnM0ODUgc3VwcG9y
dCAqLwogc3RhdGljIGludCBhdG1lbF9jb25maWdfcnM0ODUoc3RydWN0IHVhcnRfcG9ydCAqcG9y
dCwKLQkJCSAgICAgIHN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1Y29uZikKKwkJCSAgICAgIHN0
cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1Y29uZiwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zKQog
ewogCXN0cnVjdCBhdG1lbF91YXJ0X3BvcnQgKmF0bWVsX3BvcnQgPSB0b19hdG1lbF91YXJ0X3Bv
cnQocG9ydCk7CiAJdW5zaWduZWQgaW50IG1vZGU7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvZnNsX2xwdWFydC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL2ZzbF9scHVhcnQuYwppbmRl
eCBkMzU0MTRjYjNlNGUuLjNlOGRhMjRhM2Y3NiAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2Vy
aWFsL2ZzbF9scHVhcnQuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvZnNsX2xwdWFydC5jCkBA
IC0xMzU2LDcgKzEzNTYsNyBAQCBzdGF0aWMgdm9pZCBscHVhcnRfZG1hX3J4X2ZyZWUoc3RydWN0
IHVhcnRfcG9ydCAqcG9ydCkKIH0KIAogc3RhdGljIGludCBscHVhcnRfY29uZmlnX3JzNDg1KHN0
cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0JCQlzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NSkKKwkJ
CSAgICAgICBzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NSwgc3RydWN0IGt0ZXJtaW9zICp0ZXJt
aW9zKQogewogCXN0cnVjdCBscHVhcnRfcG9ydCAqc3BvcnQgPSBjb250YWluZXJfb2YocG9ydCwK
IAkJCXN0cnVjdCBscHVhcnRfcG9ydCwgcG9ydCk7CkBAIC0xMzg2LDcgKzEzODYsNyBAQCBzdGF0
aWMgaW50IGxwdWFydF9jb25maWdfcnM0ODUoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKIH0KIAog
c3RhdGljIGludCBscHVhcnQzMl9jb25maWdfcnM0ODUoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwK
LQkJCXN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1KQorCQkJCSBzdHJ1Y3Qgc2VyaWFsX3JzNDg1
ICpyczQ4NSwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zKQogewogCXN0cnVjdCBscHVhcnRfcG9y
dCAqc3BvcnQgPSBjb250YWluZXJfb2YocG9ydCwKIAkJCXN0cnVjdCBscHVhcnRfcG9ydCwgcG9y
dCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvaW14LmMgYi9kcml2ZXJzL3R0eS9z
ZXJpYWwvaW14LmMKaW5kZXggZjRlZGRlNTQxNzVmLi44YTYzYWI2ZTBkOGUgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvdHR5L3NlcmlhbC9pbXguYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvaW14LmMK
QEAgLTE5MDgsNyArMTkwOCw3IEBAIHN0YXRpYyB2b2lkIGlteF91YXJ0X3BvbGxfcHV0X2NoYXIo
c3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgdW5zaWduZWQgY2hhciBjKQogCiAvKiBjYWxsZWQgd2l0
aCBwb3J0LmxvY2sgdGFrZW4gYW5kIGlycXMgb2ZmIG9yIGZyb20gLnByb2JlIHdpdGhvdXQgbG9j
a2luZyAqLwogc3RhdGljIGludCBpbXhfdWFydF9yczQ4NV9jb25maWcoc3RydWN0IHVhcnRfcG9y
dCAqcG9ydCwKLQkJCQkgc3RydWN0IHNlcmlhbF9yczQ4NSAqcnM0ODVjb25mKQorCQkJCSBzdHJ1
Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NWNvbmYsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcykKIHsK
IAlzdHJ1Y3QgaW14X3BvcnQgKnNwb3J0ID0gKHN0cnVjdCBpbXhfcG9ydCAqKXBvcnQ7CiAJdTMy
IHVjcjI7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvbWF4MzEweC5jIGIvZHJpdmVy
cy90dHkvc2VyaWFsL21heDMxMHguYwppbmRleCBkN2QxNzkxZmNiNTcuLjBlMWRmYWQwMzgyNSAx
MDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL21heDMxMHguYworKysgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvbWF4MzEweC5jCkBAIC0xMDI3LDcgKzEwMjcsNyBAQCBzdGF0aWMgdm9pZCBtYXgz
MTB4X3JzX3Byb2Moc3RydWN0IHdvcmtfc3RydWN0ICp3cykKIH0KIAogc3RhdGljIGludCBtYXgz
MTB4X3JzNDg1X2NvbmZpZyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAotCQkJCXN0cnVjdCBzZXJp
YWxfcnM0ODUgKnJzNDg1KQorCQkJCXN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1LCBzdHJ1Y3Qg
a3Rlcm1pb3MgKnRlcm1pb3MpCiB7CiAJc3RydWN0IG1heDMxMHhfb25lICpvbmUgPSB0b19tYXgz
MTB4X3BvcnQocG9ydCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9tY2YuYyBi
L2RyaXZlcnMvdHR5L3NlcmlhbC9tY2YuYwppbmRleCAwMzZmMTc4ZTNkNjYuLmZiZGY4YzUzZGRk
MCAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL21jZi5jCisrKyBiL2RyaXZlcnMvdHR5
L3NlcmlhbC9tY2YuYwpAQCAtNDMxLDcgKzQzMSw4IEBAIHN0YXRpYyBpbnQgbWNmX3ZlcmlmeV9w
b3J0KHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBzZXJpYWxfc3RydWN0ICpzZXIpCiAv
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKi8KIAogLyogRW5hYmxlIG9yIGRpc2FibGUgdGhlIFJTNDg1IHN1
cHBvcnQgKi8KLXN0YXRpYyBpbnQgbWNmX2NvbmZpZ19yczQ4NShzdHJ1Y3QgdWFydF9wb3J0ICpw
b3J0LCBzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NSkKK3N0YXRpYyBpbnQgbWNmX2NvbmZpZ19y
czQ4NShzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NSwK
KwkJCSAgICBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MpCiB7CiAJdW5zaWduZWQgY2hhciBtcjEs
IG1yMjsKIApkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL29tYXAtc2VyaWFsLmMgYi9k
cml2ZXJzL3R0eS9zZXJpYWwvb21hcC1zZXJpYWwuYwppbmRleCA5ODYyMmMzNWQ4OTYuLjA3NDQ2
YmNiZmE4YyAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL29tYXAtc2VyaWFsLmMKKysr
IGIvZHJpdmVycy90dHkvc2VyaWFsL29tYXAtc2VyaWFsLmMKQEAgLTEzMjUsNyArMTMyNSw4IEBA
IHN0YXRpYyBpbmxpbmUgdm9pZCBzZXJpYWxfb21hcF9hZGRfY29uc29sZV9wb3J0KHN0cnVjdCB1
YXJ0X29tYXBfcG9ydCAqdXApCiAKIC8qIEVuYWJsZSBvciBkaXNhYmxlIHRoZSByczQ4NSBzdXBw
b3J0ICovCiBzdGF0aWMgaW50Ci1zZXJpYWxfb21hcF9jb25maWdfcnM0ODUoc3RydWN0IHVhcnRf
cG9ydCAqcG9ydCwgc3RydWN0IHNlcmlhbF9yczQ4NSAqcnM0ODUpCitzZXJpYWxfb21hcF9jb25m
aWdfcnM0ODUoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IHNlcmlhbF9yczQ4NSAqcnM0
ODUsCisJCQkgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zKQogewogCXN0cnVjdCB1YXJ0X29tYXBf
cG9ydCAqdXAgPSB0b191YXJ0X29tYXBfcG9ydChwb3J0KTsKIAl1bnNpZ25lZCBpbnQgbW9kZTsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9zYzE2aXM3eHguYyBiL2RyaXZlcnMvdHR5
L3NlcmlhbC9zYzE2aXM3eHguYwppbmRleCAyY2VlY2FhNGE0NzguLmY4NGM2OTNlZjVlNyAxMDA2
NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3NjMTZpczd4eC5jCisrKyBiL2RyaXZlcnMvdHR5
L3NlcmlhbC9zYzE2aXM3eHguYwpAQCAtMTEyOCw3ICsxMTI4LDcgQEAgc3RhdGljIHZvaWQgc2Mx
NmlzN3h4X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiB9CiAKIHN0YXRpYyBp
bnQgc2MxNmlzN3h4X2NvbmZpZ19yczQ4NShzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAotCQkJCSAg
c3RydWN0IHNlcmlhbF9yczQ4NSAqcnM0ODUpCisJCQkJICBzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpy
czQ4NSwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zKQogewogCXN0cnVjdCBzYzE2aXM3eHhfcG9y
dCAqcyA9IGRldl9nZXRfZHJ2ZGF0YShwb3J0LT5kZXYpOwogCXN0cnVjdCBzYzE2aXM3eHhfb25l
ICpvbmUgPSB0b19zYzE2aXM3eHhfb25lKHBvcnQsIHBvcnQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy90dHkvc2VyaWFsL3NlcmlhbF9jb3JlLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvc2VyaWFsX2Nv
cmUuYwppbmRleCA2MjFmYzE1ZTJlNTQuLjc2YmIxYjc3YjA2ZSAxMDA2NDQKLS0tIGEvZHJpdmVy
cy90dHkvc2VyaWFsL3NlcmlhbF9jb3JlLmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL3Nlcmlh
bF9jb3JlLmMKQEAgLTEzNTksNyArMTM1OSw4IEBAIGludCB1YXJ0X3JzNDg1X2NvbmZpZyhzdHJ1
Y3QgdWFydF9wb3J0ICpwb3J0KQogCiAJdWFydF9zYW5pdGl6ZV9zZXJpYWxfcnM0ODUocG9ydCwg
cnM0ODUpOwogCi0JcmV0ID0gcG9ydC0+cnM0ODVfY29uZmlnKHBvcnQsIHJzNDg1KTsKKwlyZXQg
PSBwb3J0LT5yczQ4NV9jb25maWcocG9ydCwgcnM0ODUsIE5VTEwpOworCiAJaWYgKHJldCkKIAkJ
bWVtc2V0KHJzNDg1LCAwLCBzaXplb2YoKnJzNDg1KSk7CiAKQEAgLTEzODMsNyArMTM4NCw3IEBA
IHN0YXRpYyBpbnQgdWFydF9nZXRfcnM0ODVfY29uZmlnKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQs
CiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgdWFydF9zZXRfcnM0ODVfY29uZmlnKHN0cnVj
dCB1YXJ0X3BvcnQgKnBvcnQsCitzdGF0aWMgaW50IHVhcnRfc2V0X3JzNDg1X2NvbmZpZyhzdHJ1
Y3QgdHR5X3N0cnVjdCAqdHR5LCBzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAogCQkJIHN0cnVjdCBz
ZXJpYWxfcnM0ODUgX191c2VyICpyczQ4NV91c2VyKQogewogCXN0cnVjdCBzZXJpYWxfcnM0ODUg
cnM0ODU7CkBAIC0xNDAyLDcgKzE0MDMsNyBAQCBzdGF0aWMgaW50IHVhcnRfc2V0X3JzNDg1X2Nv
bmZpZyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAogCXVhcnRfc2FuaXRpemVfc2VyaWFsX3JzNDg1
KHBvcnQsICZyczQ4NSk7CiAKIAlzcGluX2xvY2tfaXJxc2F2ZSgmcG9ydC0+bG9jaywgZmxhZ3Mp
OwotCXJldCA9IHBvcnQtPnJzNDg1X2NvbmZpZyhwb3J0LCAmcnM0ODUpOworCXJldCA9IHBvcnQt
PnJzNDg1X2NvbmZpZyhwb3J0LCAmcnM0ODUsICZ0dHktPnRlcm1pb3MpOwogCWlmICghcmV0KQog
CQlwb3J0LT5yczQ4NSA9IHJzNDg1OwogCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUoJnBvcnQtPmxv
Y2ssIGZsYWdzKTsKQEAgLTE1MTEsNiArMTUxMiwxMCBAQCB1YXJ0X2lvY3RsKHN0cnVjdCB0dHlf
c3RydWN0ICp0dHksIHVuc2lnbmVkIGludCBjbWQsIHVuc2lnbmVkIGxvbmcgYXJnKQogCWlmIChy
ZXQgIT0gLUVOT0lPQ1RMQ01EKQogCQlnb3RvIG91dDsKIAorCS8qIHJzNDg1X2NvbmZpZyByZXF1
aXJlcyBtb3JlIGxvY2tpbmcgdGhhbiBvdGhlcnMgKi8KKwlpZiAoY21kID09IFRJT0NHUlM0ODUp
CisJCWRvd25fd3JpdGUoJnR0eS0+dGVybWlvc19yd3NlbSk7CisKIAltdXRleF9sb2NrKCZwb3J0
LT5tdXRleCk7CiAJdXBvcnQgPSB1YXJ0X3BvcnRfY2hlY2soc3RhdGUpOwogCkBAIC0xNTM0LDcg
KzE1MzksNyBAQCB1YXJ0X2lvY3RsKHN0cnVjdCB0dHlfc3RydWN0ICp0dHksIHVuc2lnbmVkIGlu
dCBjbWQsIHVuc2lnbmVkIGxvbmcgYXJnKQogCQlicmVhazsKIAogCWNhc2UgVElPQ1NSUzQ4NToK
LQkJcmV0ID0gdWFydF9zZXRfcnM0ODVfY29uZmlnKHVwb3J0LCB1YXJnKTsKKwkJcmV0ID0gdWFy
dF9zZXRfcnM0ODVfY29uZmlnKHR0eSwgdXBvcnQsIHVhcmcpOwogCQlicmVhazsKIAogCWNhc2Ug
VElPQ1NJU083ODE2OgpAQCAtMTU1MSw2ICsxNTU2LDggQEAgdWFydF9pb2N0bChzdHJ1Y3QgdHR5
X3N0cnVjdCAqdHR5LCB1bnNpZ25lZCBpbnQgY21kLCB1bnNpZ25lZCBsb25nIGFyZykKIAl9CiBv
dXRfdXA6CiAJbXV0ZXhfdW5sb2NrKCZwb3J0LT5tdXRleCk7CisJaWYgKGNtZCA9PSBUSU9DR1JT
NDg1KQorCQl1cF93cml0ZSgmdHR5LT50ZXJtaW9zX3J3c2VtKTsKIG91dDoKIAlyZXR1cm4gcmV0
OwogfQpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL3N0bTMyLXVzYXJ0LmMgYi9kcml2
ZXJzL3R0eS9zZXJpYWwvc3RtMzItdXNhcnQuYwppbmRleCBkYjNkZDk3MzFlZTEuLmRlOGUzY2Jk
YTRmMyAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3N0bTMyLXVzYXJ0LmMKKysrIGIv
ZHJpdmVycy90dHkvc2VyaWFsL3N0bTMyLXVzYXJ0LmMKQEAgLTk4LDcgKzk4LDcgQEAgc3RhdGlj
IHZvaWQgc3RtMzJfdXNhcnRfY29uZmlnX3JlZ19yczQ4NSh1MzIgKmNyMSwgdTMyICpjcjMsIHUz
MiBkZWxheV9BREUsCiB9CiAKIHN0YXRpYyBpbnQgc3RtMzJfdXNhcnRfY29uZmlnX3JzNDg1KHN0
cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0JCQkJICAgIHN0cnVjdCBzZXJpYWxfcnM0ODUgKnJzNDg1
Y29uZikKKwkJCQkgICAgc3RydWN0IHNlcmlhbF9yczQ4NSAqcnM0ODVjb25mLCBzdHJ1Y3Qga3Rl
cm1pb3MgKnRlcm1pb3MpCiB7CiAJc3RydWN0IHN0bTMyX3BvcnQgKnN0bTMyX3BvcnQgPSB0b19z
dG0zMl9wb3J0KHBvcnQpOwogCWNvbnN0IHN0cnVjdCBzdG0zMl91c2FydF9vZmZzZXRzICpvZnMg
PSAmc3RtMzJfcG9ydC0+aW5mby0+b2ZzOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9zZXJp
YWxfY29yZS5oIGIvaW5jbHVkZS9saW51eC9zZXJpYWxfY29yZS5oCmluZGV4IDU1MThiNzAxNzdi
My4uOTU3N2NmZmI1NTkzIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3NlcmlhbF9jb3JlLmgK
KysrIGIvaW5jbHVkZS9saW51eC9zZXJpYWxfY29yZS5oCkBAIC0xMzIsNyArMTMyLDggQEAgc3Ry
dWN0IHVhcnRfcG9ydCB7CiAJCQkJICAgICAgdW5zaWduZWQgaW50IG9sZCk7CiAJdm9pZAkJCSgq
aGFuZGxlX2JyZWFrKShzdHJ1Y3QgdWFydF9wb3J0ICopOwogCWludAkJCSgqcnM0ODVfY29uZmln
KShzdHJ1Y3QgdWFydF9wb3J0ICosCi0JCQkJCQlzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NSk7
CisJCQkJCQlzdHJ1Y3Qgc2VyaWFsX3JzNDg1ICpyczQ4NSwKKwkJCQkJCXN0cnVjdCBrdGVybWlv
cyAqdGVybWlvcyk7CiAJaW50CQkJKCppc283ODE2X2NvbmZpZykoc3RydWN0IHVhcnRfcG9ydCAq
LAogCQkJCQkJICBzdHJ1Y3Qgc2VyaWFsX2lzbzc4MTYgKmlzbzc4MTYpOwogCXVuc2lnbmVkIGlu
dAkJaXJxOwkJCS8qIGlycSBudW1iZXIgKi8KLS0gCjIuMzAuMgoKX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGludXgtc3RtMzIgbWFpbGluZyBsaXN0Ckxp
bnV4LXN0bTMyQHN0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20KaHR0cHM6Ly9zdC1tZC1tYWls
bWFuLnN0b3JtcmVwbHkuY29tL21haWxtYW4vbGlzdGluZm8vbGludXgtc3RtMzIK
