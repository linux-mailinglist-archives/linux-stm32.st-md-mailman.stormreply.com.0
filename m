Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 01B4E63D957
	for <lists+linux-stm32@lfdr.de>; Wed, 30 Nov 2022 16:23:35 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id B9DC1C6507B;
	Wed, 30 Nov 2022 15:23:34 +0000 (UTC)
Received: from metis.ext.pengutronix.de (metis.ext.pengutronix.de
 [85.220.165.71])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id D3996C63326
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Wed, 30 Nov 2022 15:23:32 +0000 (UTC)
Received: from drehscheibe.grey.stw.pengutronix.de ([2a0a:edc0:0:c01:1d::a2])
 by metis.ext.pengutronix.de with esmtps
 (TLS1.3:ECDHE_RSA_AES_256_GCM_SHA384:256) (Exim 4.92)
 (envelope-from <ukl@pengutronix.de>)
 id 1p0OuS-00009t-Vo; Wed, 30 Nov 2022 16:22:05 +0100
Received: from [2a0a:edc0:0:900:1d::77] (helo=ptz.office.stw.pengutronix.de)
 by drehscheibe.grey.stw.pengutronix.de with esmtp (Exim 4.94.2)
 (envelope-from <ukl@pengutronix.de>)
 id 1p0OuJ-001LdS-Sq; Wed, 30 Nov 2022 16:21:56 +0100
Received: from ukl by ptz.office.stw.pengutronix.de with local (Exim 4.94.2)
 (envelope-from <ukl@pengutronix.de>)
 id 1p0OuJ-001Vqc-PU; Wed, 30 Nov 2022 16:21:55 +0100
From: =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig?= <u.kleine-koenig@pengutronix.de>
To: Thierry Reding <thierry.reding@gmail.com>
Date: Wed, 30 Nov 2022 16:21:38 +0100
Message-Id: <20221130152148.2769768-2-u.kleine-koenig@pengutronix.de>
X-Mailer: git-send-email 2.38.1
In-Reply-To: <20221130152148.2769768-1-u.kleine-koenig@pengutronix.de>
References: <20221130152148.2769768-1-u.kleine-koenig@pengutronix.de>
MIME-Version: 1.0
X-Developer-Signature: v=1; a=openpgp-sha256; l=33730;
 i=u.kleine-koenig@pengutronix.de; h=from:subject;
 bh=6aKwDQeWFfhk7HNIUIW+KFczG8dz0Cbl6n6wGeYnRI0=;
 b=owEBbQGS/pANAwAKAcH8FHityuwJAcsmYgBjh3TheqBOZnA37N8EiQMSn8aVt1bApU3hGZu9W2/8
 Lk3LwJ+JATMEAAEKAB0WIQR+cioWkBis/z50pAvB/BR4rcrsCQUCY4d04QAKCRDB/BR4rcrsCaikCA
 CHUvfaYuPDw9QNqML6mJZ8m6CeaoJG8CMLK9nxftXBxxPYpQqGDOyOOB/ScP6OgtbdFTUj/GxdeHtK
 x5pBgrOrJMvaKiqONoJEUEcVb22lzmWgsGOzjyjfUChlljfw+e06BJe6uunideRUW3Pf1dRw3G5/sI
 Jcp/YWEzuM26Bjnp6guP4OYMLZiL1cPMZgvK16TaE6AY/ECbVyf5eOs8NhzSugjwavxp2Fot8omx2T
 n5TCOyO02/LoLYwff8tF9SWW3Cw6FkoeW4MuUm9B3kF7o5iG0ECNqUqJFNy5R4PEj3jXbJjJpBf+OK
 UsUTssaW73uOGg6t8ZRtwPYauMF8ce
X-Developer-Key: i=u.kleine-koenig@pengutronix.de; a=openpgp;
 fpr=0D2511F322BFAB1C1580266BE2DCDD9132669BD6
X-SA-Exim-Connect-IP: 2a0a:edc0:0:c01:1d::a2
X-SA-Exim-Mail-From: ukl@pengutronix.de
X-SA-Exim-Scanned: No (on metis.ext.pengutronix.de);
 SAEximRunCond expanded to false
X-PTX-Original-Recipient: linux-stm32@st-md-mailman.stormreply.com
Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>,
 Heiko Stuebner <heiko@sntech.de>, Linus Walleij <linus.walleij@linaro.org>,
 dri-devel@lists.freedesktop.org, Nicolas Ferre <nicolas.ferre@microchip.com>,
 Conor Dooley <conor.dooley@microchip.com>,
 Satya Priya <quic_c_skakit@quicinc.com>, Pavel Machek <pavel@ucw.cz>,
 Guenter Roeck <groeck@chromium.org>,
 Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>,
 Fabio Estevam <festevam@gmail.com>, linux-riscv@lists.infradead.org,
 linux-leds@vger.kernel.org, Jerome Brunet <jbrunet@baylibre.com>,
 chrome-platform@lists.linux.dev, Florian Fainelli <f.fainelli@gmail.com>,
 Samuel Holland <samuel@sholland.org>, Sean Anderson <sean.anderson@seco.com>,
 Kevin Hilman <khilman@baylibre.com>, Bartosz Golaszewski <brgl@bgdev.pl>,
 Michal Simek <michal.simek@xilinx.com>,
 linux-stm32@st-md-mailman.stormreply.com, Hammer Hsieh <hammerh0314@gmail.com>,
 linux-rockchip@lists.infradead.org, Chen-Yu Tsai <wens@csie.org>,
 Matthias Kaehlcke <mka@chromium.org>,
 Broadcom internal kernel review list <bcm-kernel-feedback-list@broadcom.com>,
 NXP Linux Team <linux-imx@nxp.com>, Orson Zhai <orsonzhai@gmail.com>,
 linux-sunxi@lists.linux.dev, linux-pwm@vger.kernel.org,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Martin Blumenstingl <martin.blumenstingl@googlemail.com>,
 Ray Jui <rjui@broadcom.com>, Sascha Hauer <s.hauer@pengutronix.de>,
 Stephen Boyd <swboyd@chromium.org>, linux-gpio@vger.kernel.org,
 linux-mediatek@lists.infradead.org, linux-rpi-kernel@lists.infradead.org,
 Baolin Wang <baolin.wang@linux.alibaba.com>,
 Paul Walmsley <paul.walmsley@sifive.com>,
 Matthias Brugger <matthias.bgg@gmail.com>, linux-amlogic@lists.infradead.org,
 Benson Leung <bleung@chromium.org>, linux-arm-kernel@lists.infradead.org,
 Scott Branden <sbranden@broadcom.com>, Bjorn Andersson <andersson@kernel.org>,
 Douglas Anderson <dianders@chromium.org>, Michael Walle <michael@walle.cc>,
 Palmer Dabbelt <palmer@dabbelt.com>,
 Pengutronix Kernel Team <kernel@pengutronix.de>,
 Chunyan Zhang <zhang.lyra@gmail.com>, Shawn Guo <shawnguo@kernel.org>,
 Claudiu Beznea <claudiu.beznea@microchip.com>
Subject: [Linux-stm32] [PATCH v2 01/11] pwm: Make .get_state() callback
	return an error code
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

LmdldF9zdGF0ZSgpIG1pZ2h0IGZhaWwgaW4gc29tZSBjYXNlcy4gVG8gbWFrZSBpdCBwb3NzaWJs
ZSB0aGF0IGEgZHJpdmVyCnNpZ25hbHMgc3VjaCBhIGZhaWx1cmUgY2hhbmdlIHRoZSBwcm90b3R5
cGUgb2YgLmdldF9zdGF0ZSgpIHRvIHJldHVybiBhbgplcnJvciBjb2RlLgoKVGhpcyBwYXRjaCB3
YXMgY3JlYXRlZCB1c2luZyBjb2NjaW5lbGxlIGFuZCB0aGUgZm9sbG93aW5nIHNlbWFudGljIHBh
dGNoOgoKQHAxQAppZGVudGlmaWVyIGdldHN0YXRlZnVuYzsKaWRlbnRpZmllciBkcml2ZXI7CkBA
CiBzdHJ1Y3QgcHdtX29wcyBkcml2ZXIgPSB7CiAgICAgICAgLi4uLAogICAgICAgIC5nZXRfc3Rh
dGUgPSBnZXRzdGF0ZWZ1bmMKICAgICAgICAsLi4uCiB9OwoKQHAyQAppZGVudGlmaWVyIHAxLmdl
dHN0YXRlZnVuYzsKaWRlbnRpZmllciBjaGlwLCBwd20sIHN0YXRlOwpAQAotdm9pZAoraW50CiBn
ZXRzdGF0ZWZ1bmMoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdt
LCBzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKIHsKICAgLi4uCi0gIHJldHVybjsKKyAgcmV0dXJu
IDA7CiAgIC4uLgogfQoKcGx1cyB0aGUgYWN0dWFsIGNoYW5nZSBvZiB0aGUgcHJvdG90eXBlIGlu
IGluY2x1ZGUvbGludXgvcHdtLmggKHBsdXMgc29tZQptYW51YWwgZml4aW5nIG9mIGluZGVudGlv
bnMgYW5kIGVtcHR5IGxpbmVzKS4KClNvIGZvciBub3cgYWxsIGRyaXZlcnMgcmV0dXJuIHN1Y2Nl
c3MgdW5jb25kaXRpb25hbGx5LiBUaGV5IGFyZSBhZGFwdGVkCmluIHRoZSBmb2xsb3dpbmcgcGF0
Y2hlcyB0byBtYWtlIHRoZSBjaGFuZ2VzIGVhc2llciByZXZpZXdhYmxlLgoKU2lnbmVkLW9mZi1i
eTogVXdlIEtsZWluZS1Lw7ZuaWcgPHUua2xlaW5lLWtvZW5pZ0BwZW5ndXRyb25peC5kZT4KLS0t
CiBkcml2ZXJzL2dwaW8vZ3Bpby1tdmVidS5jICAgICAgICAgICAgIHwgIDkgKysrKysrLS0tCiBk
cml2ZXJzL2dwdS9kcm0vYnJpZGdlL3RpLXNuNjVkc2k4Ni5jIHwgMTQgKysrKysrKystLS0tLS0K
IGRyaXZlcnMvbGVkcy9yZ2IvbGVkcy1xY29tLWxwZy5jICAgICAgfCAxNCArKysrKysrKy0tLS0t
LQogZHJpdmVycy9wd20vcHdtLWF0bWVsLmMgICAgICAgICAgICAgICB8ICA2ICsrKystLQogZHJp
dmVycy9wd20vcHdtLWJjbS1pcHJvYy5jICAgICAgICAgICB8ICA4ICsrKysrLS0tCiBkcml2ZXJz
L3B3bS9wd20tY3JjLmMgICAgICAgICAgICAgICAgIHwgMTAgKysrKysrLS0tLQogZHJpdmVycy9w
d20vcHdtLWNyb3MtZWMuYyAgICAgICAgICAgICB8ICA4ICsrKysrLS0tCiBkcml2ZXJzL3B3bS9w
d20tZHdjLmMgICAgICAgICAgICAgICAgIHwgIDYgKysrKy0tCiBkcml2ZXJzL3B3bS9wd20taGli
dnQuYyAgICAgICAgICAgICAgIHwgIDYgKysrKy0tCiBkcml2ZXJzL3B3bS9wd20taW14LXRwbS5j
ICAgICAgICAgICAgIHwgIDggKysrKystLS0KIGRyaXZlcnMvcHdtL3B3bS1pbXgyNy5jICAgICAg
ICAgICAgICAgfCAgOCArKysrKy0tLQogZHJpdmVycy9wd20vcHdtLWludGVsLWxnbS5jICAgICAg
ICAgICB8ICA2ICsrKystLQogZHJpdmVycy9wd20vcHdtLWlxczYyMGEuYyAgICAgICAgICAgICB8
ICA2ICsrKystLQogZHJpdmVycy9wd20vcHdtLWtlZW1iYXkuYyAgICAgICAgICAgICB8ICA2ICsr
KystLQogZHJpdmVycy9wd20vcHdtLWxwc3MuYyAgICAgICAgICAgICAgICB8ICA2ICsrKystLQog
ZHJpdmVycy9wd20vcHdtLW1lc29uLmMgICAgICAgICAgICAgICB8ICA4ICsrKysrLS0tCiBkcml2
ZXJzL3B3bS9wd20tbXRrLWRpc3AuYyAgICAgICAgICAgIHwgMTIgKysrKysrKy0tLS0tCiBkcml2
ZXJzL3B3bS9wd20tcGNhOTY4NS5jICAgICAgICAgICAgIHwgIDggKysrKystLS0KIGRyaXZlcnMv
cHdtL3B3bS1yYXNwYmVycnlwaS1wb2UuYyAgICAgfCAgOCArKysrKy0tLQogZHJpdmVycy9wd20v
cHdtLXJvY2tjaGlwLmMgICAgICAgICAgICB8IDEyICsrKysrKystLS0tLQogZHJpdmVycy9wd20v
cHdtLXNpZml2ZS5jICAgICAgICAgICAgICB8ICA2ICsrKystLQogZHJpdmVycy9wd20vcHdtLXNs
MjhjcGxkLmMgICAgICAgICAgICB8ICA4ICsrKysrLS0tCiBkcml2ZXJzL3B3bS9wd20tc3ByZC5j
ICAgICAgICAgICAgICAgIHwgIDggKysrKystLS0KIGRyaXZlcnMvcHdtL3B3bS1zdG0zMi1scC5j
ICAgICAgICAgICAgfCAgOCArKysrKy0tLQogZHJpdmVycy9wd20vcHdtLXN1bjRpLmMgICAgICAg
ICAgICAgICB8IDEyICsrKysrKystLS0tLQogZHJpdmVycy9wd20vcHdtLXN1bnBsdXMuYyAgICAg
ICAgICAgICB8ICA2ICsrKystLQogZHJpdmVycy9wd20vcHdtLXZpc2NvbnRpLmMgICAgICAgICAg
ICB8ICA2ICsrKystLQogZHJpdmVycy9wd20vcHdtLXhpbGlueC5jICAgICAgICAgICAgICB8ICA4
ICsrKysrLS0tCiBpbmNsdWRlL2xpbnV4L3B3bS5oICAgICAgICAgICAgICAgICAgIHwgIDQgKyst
LQogMjkgZmlsZXMgY2hhbmdlZCwgMTQ2IGluc2VydGlvbnMoKyksIDg5IGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZ3Bpby9ncGlvLW12ZWJ1LmMgYi9kcml2ZXJzL2dwaW8vZ3Bp
by1tdmVidS5jCmluZGV4IDFiYjMxN2I4ZGNjZS4uOTFhNDIzMmVlNThjIDEwMDY0NAotLS0gYS9k
cml2ZXJzL2dwaW8vZ3Bpby1tdmVidS5jCisrKyBiL2RyaXZlcnMvZ3Bpby9ncGlvLW12ZWJ1LmMK
QEAgLTY1Nyw5ICs2NTcsMTAgQEAgc3RhdGljIHZvaWQgbXZlYnVfcHdtX2ZyZWUoc3RydWN0IHB3
bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtKQogCXNwaW5fdW5sb2NrX2lycXJl
c3RvcmUoJm12cHdtLT5sb2NrLCBmbGFncyk7CiB9CiAKLXN0YXRpYyB2b2lkIG12ZWJ1X3B3bV9n
ZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLAotCQkJCXN0cnVjdCBwd21fZGV2aWNlICpw
d20sCi0JCQkJc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpIHsKK3N0YXRpYyBpbnQgbXZlYnVfcHdt
X2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCisJCQkgICAgICAgc3RydWN0IHB3bV9k
ZXZpY2UgKnB3bSwKKwkJCSAgICAgICBzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKK3sKIAogCXN0
cnVjdCBtdmVidV9wd20gKm12cHdtID0gdG9fbXZlYnVfcHdtKGNoaXApOwogCXN0cnVjdCBtdmVi
dV9ncGlvX2NoaXAgKm12Y2hpcCA9IG12cHdtLT5tdmNoaXA7CkBAIC02OTMsNiArNjk0LDggQEAg
c3RhdGljIHZvaWQgbXZlYnVfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCiAJ
CXN0YXRlLT5lbmFibGVkID0gZmFsc2U7CiAKIAlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZtdnB3
bS0+bG9jaywgZmxhZ3MpOworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyBpbnQgbXZlYnVfcHdt
X2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvZ3B1L2RybS9icmlkZ2UvdGktc242NWRzaTg2LmMgYi9kcml2ZXJz
L2dwdS9kcm0vYnJpZGdlL3RpLXNuNjVkc2k4Ni5jCmluZGV4IDNjMzU2MTk0MmViNi4uNjgyNmQy
NDIzYWU5IDEwMDY0NAotLS0gYS9kcml2ZXJzL2dwdS9kcm0vYnJpZGdlL3RpLXNuNjVkc2k4Ni5j
CisrKyBiL2RyaXZlcnMvZ3B1L2RybS9icmlkZ2UvdGktc242NWRzaTg2LmMKQEAgLTE1MDAsOCAr
MTUwMCw4IEBAIHN0YXRpYyBpbnQgdGlfc25fcHdtX2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hp
cCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgdm9p
ZCB0aV9zbl9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9k
ZXZpY2UgKnB3bSwKLQkJCQlzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgdGlf
c25fcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNl
ICpwd20sCisJCQkgICAgICAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IHRp
X3NuNjVkc2k4NiAqcGRhdGEgPSBwd21fY2hpcF90b190aV9zbl9icmlkZ2UoY2hpcCk7CiAJdW5z
aWduZWQgaW50IHB3bV9lbl9pbnY7CkBAIC0xNTEyLDE5ICsxNTEyLDE5IEBAIHN0YXRpYyB2b2lk
IHRpX3NuX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2Rl
dmljZSAqcHdtLAogCiAJcmV0ID0gcmVnbWFwX3JlYWQocGRhdGEtPnJlZ21hcCwgU05fUFdNX0VO
X0lOVl9SRUcsICZwd21fZW5faW52KTsKIAlpZiAocmV0KQotCQlyZXR1cm47CisJCXJldHVybiAw
OwogCiAJcmV0ID0gdGlfc242NWRzaTg2X3JlYWRfdTE2KHBkYXRhLCBTTl9CQUNLTElHSFRfU0NB
TEVfUkVHLCAmc2NhbGUpOwogCWlmIChyZXQpCi0JCXJldHVybjsKKwkJcmV0dXJuIDA7CiAKIAly
ZXQgPSB0aV9zbjY1ZHNpODZfcmVhZF91MTYocGRhdGEsIFNOX0JBQ0tMSUdIVF9SRUcsICZiYWNr
bGlnaHQpOwogCWlmIChyZXQpCi0JCXJldHVybjsKKwkJcmV0dXJuIDA7CiAKIAlyZXQgPSByZWdt
YXBfcmVhZChwZGF0YS0+cmVnbWFwLCBTTl9QV01fUFJFX0RJVl9SRUcsICZwcmVfZGl2KTsKIAlp
ZiAocmV0KQotCQlyZXR1cm47CisJCXJldHVybiAwOwogCiAJc3RhdGUtPmVuYWJsZWQgPSBGSUVM
RF9HRVQoU05fUFdNX0VOX01BU0ssIHB3bV9lbl9pbnYpOwogCWlmIChGSUVMRF9HRVQoU05fUFdN
X0lOVl9NQVNLLCBwd21fZW5faW52KSkKQEAgLTE1MzksNiArMTUzOSw4IEBAIHN0YXRpYyB2b2lk
IHRpX3NuX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2Rl
dmljZSAqcHdtLAogCiAJaWYgKHN0YXRlLT5kdXR5X2N5Y2xlID4gc3RhdGUtPnBlcmlvZCkKIAkJ
c3RhdGUtPmR1dHlfY3ljbGUgPSBzdGF0ZS0+cGVyaW9kOworCisJcmV0dXJuIDA7CiB9CiAKIHN0
YXRpYyBjb25zdCBzdHJ1Y3QgcHdtX29wcyB0aV9zbl9wd21fb3BzID0gewpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9sZWRzL3JnYi9sZWRzLXFjb20tbHBnLmMgYi9kcml2ZXJzL2xlZHMvcmdiL2xlZHMt
cWNvbS1scGcuYwppbmRleCAwMmY1MWNjNjE4MzcuLjc0MWNjMmZkODE3ZCAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9sZWRzL3JnYi9sZWRzLXFjb20tbHBnLmMKKysrIGIvZHJpdmVycy9sZWRzL3JnYi9s
ZWRzLXFjb20tbHBnLmMKQEAgLTk2OCw4ICs5NjgsOCBAQCBzdGF0aWMgaW50IGxwZ19wd21fYXBw
bHkoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCXJldHVy
biByZXQ7CiB9CiAKLXN0YXRpYyB2b2lkIGxwZ19wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hp
cCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKLQkJCSAgICAgIHN0cnVjdCBwd21fc3Rh
dGUgKnN0YXRlKQorc3RhdGljIGludCBscGdfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAg
KmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCisJCQkgICAgIHN0cnVjdCBwd21fc3RhdGUg
KnN0YXRlKQogewogCXN0cnVjdCBscGcgKmxwZyA9IGNvbnRhaW5lcl9vZihjaGlwLCBzdHJ1Y3Qg
bHBnLCBwd20pOwogCXN0cnVjdCBscGdfY2hhbm5lbCAqY2hhbiA9ICZscGctPmNoYW5uZWxzW3B3
bS0+aHdwd21dOwpAQCAtOTgyLDIwICs5ODIsMjAgQEAgc3RhdGljIHZvaWQgbHBnX3B3bV9nZXRf
c3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCiAJ
cmV0ID0gcmVnbWFwX3JlYWQobHBnLT5tYXAsIGNoYW4tPmJhc2UgKyBMUEdfU0laRV9DTEtfUkVH
LCAmdmFsKTsKIAlpZiAocmV0KQotCQlyZXR1cm47CisJCXJldHVybiAwOwogCiAJcmVmY2xrID0g
bHBnX2Nsa19yYXRlc1t2YWwgJiBQV01fQ0xLX1NFTEVDVF9NQVNLXTsKIAlpZiAocmVmY2xrKSB7
CiAJCXJldCA9IHJlZ21hcF9yZWFkKGxwZy0+bWFwLCBjaGFuLT5iYXNlICsgTFBHX1BSRURJVl9D
TEtfUkVHLCAmdmFsKTsKIAkJaWYgKHJldCkKLQkJCXJldHVybjsKKwkJCXJldHVybiAwOwogCiAJ
CXByZV9kaXYgPSBscGdfcHJlX2RpdnNbRklFTERfR0VUKFBXTV9GUkVRX1BSRV9ESVZfTUFTSywg
dmFsKV07CiAJCW0gPSBGSUVMRF9HRVQoUFdNX0ZSRVFfRVhQX01BU0ssIHZhbCk7CiAKIAkJcmV0
ID0gcmVnbWFwX2J1bGtfcmVhZChscGctPm1hcCwgY2hhbi0+YmFzZSArIFBXTV9WQUxVRV9SRUcs
ICZwd21fdmFsdWUsIHNpemVvZihwd21fdmFsdWUpKTsKIAkJaWYgKHJldCkKLQkJCXJldHVybjsK
KwkJCXJldHVybiAwOwogCiAJCXN0YXRlLT5wZXJpb2QgPSBESVZfUk9VTkRfVVBfVUxMKCh1NjQp
TlNFQ19QRVJfU0VDICogTFBHX1JFU09MVVRJT04gKiBwcmVfZGl2ICogKDEgPDwgbSksIHJlZmNs
ayk7CiAJCXN0YXRlLT5kdXR5X2N5Y2xlID0gRElWX1JPVU5EX1VQX1VMTCgodTY0KU5TRUNfUEVS
X1NFQyAqIHB3bV92YWx1ZSAqIHByZV9kaXYgKiAoMSA8PCBtKSwgcmVmY2xrKTsKQEAgLTEwMDYs
MTMgKzEwMDYsMTUgQEAgc3RhdGljIHZvaWQgbHBnX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9j
aGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCiAJcmV0ID0gcmVnbWFwX3JlYWQo
bHBnLT5tYXAsIGNoYW4tPmJhc2UgKyBQV01fRU5BQkxFX0NPTlRST0xfUkVHLCAmdmFsKTsKIAlp
ZiAocmV0KQotCQlyZXR1cm47CisJCXJldHVybiAwOwogCiAJc3RhdGUtPmVuYWJsZWQgPSBGSUVM
RF9HRVQoTFBHX0VOQUJMRV9DT05UUk9MX09VVFBVVCwgdmFsKTsKIAlzdGF0ZS0+cG9sYXJpdHkg
PSBQV01fUE9MQVJJVFlfTk9STUFMOwogCiAJaWYgKHN0YXRlLT5kdXR5X2N5Y2xlID4gc3RhdGUt
PnBlcmlvZCkKIAkJc3RhdGUtPmR1dHlfY3ljbGUgPSBzdGF0ZS0+cGVyaW9kOworCisJcmV0dXJu
IDA7CiB9CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHdtX29wcyBscGdfcHdtX29wcyA9IHsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvcHdtL3B3bS1hdG1lbC5jIGIvZHJpdmVycy9wd20vcHdtLWF0bWVs
LmMKaW5kZXggOGUwMGE0Mjg2MTQ1Li5jZGJjMjM2NDkwMzIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
cHdtL3B3bS1hdG1lbC5jCisrKyBiL2RyaXZlcnMvcHdtL3B3bS1hdG1lbC5jCkBAIC0zNTYsOCAr
MzU2LDggQEAgc3RhdGljIGludCBhdG1lbF9wd21fYXBwbHkoc3RydWN0IHB3bV9jaGlwICpjaGlw
LCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgdm9pZCBh
dG1lbF9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZp
Y2UgKnB3bSwKLQkJCQlzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgYXRtZWxf
cHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpw
d20sCisJCQkgICAgICAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IGF0bWVs
X3B3bV9jaGlwICphdG1lbF9wd20gPSB0b19hdG1lbF9wd21fY2hpcChjaGlwKTsKIAl1MzIgc3Is
IGNtcjsKQEAgLTM5Niw2ICszOTYsOCBAQCBzdGF0aWMgdm9pZCBhdG1lbF9wd21fZ2V0X3N0YXRl
KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKIAkJc3RhdGUt
PnBvbGFyaXR5ID0gUFdNX1BPTEFSSVRZX0lOVkVSU0VEOwogCWVsc2UKIAkJc3RhdGUtPnBvbGFy
aXR5ID0gUFdNX1BPTEFSSVRZX05PUk1BTDsKKworCXJldHVybiAwOwogfQogCiBzdGF0aWMgY29u
c3Qgc3RydWN0IHB3bV9vcHMgYXRtZWxfcHdtX29wcyA9IHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
cHdtL3B3bS1iY20taXByb2MuYyBiL2RyaXZlcnMvcHdtL3B3bS1iY20taXByb2MuYwppbmRleCA3
MjUxMDM3ZDRkZDUuLjk3ZWMxMzFlYjdjMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9wd20vcHdtLWJj
bS1pcHJvYy5jCisrKyBiL2RyaXZlcnMvcHdtL3B3bS1iY20taXByb2MuYwpAQCAtNjgsOCArNjgs
OCBAQCBzdGF0aWMgdm9pZCBpcHJvY19wd21jX2Rpc2FibGUoc3RydWN0IGlwcm9jX3B3bWMgKmlw
LCB1bnNpZ25lZCBpbnQgY2hhbm5lbCkKIAluZGVsYXkoNDAwKTsKIH0KIAotc3RhdGljIHZvaWQg
aXByb2NfcHdtY19nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2Rl
dmljZSAqcHdtLAotCQkJCSBzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgaXBy
b2NfcHdtY19nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2Rldmlj
ZSAqcHdtLAorCQkJCXN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQogewogCXN0cnVjdCBpcHJvY19w
d21jICppcCA9IHRvX2lwcm9jX3B3bWMoY2hpcCk7CiAJdTY0IHRtcCwgbXVsdGksIHJhdGU7CkBA
IC05MSw3ICs5MSw3IEBAIHN0YXRpYyB2b2lkIGlwcm9jX3B3bWNfZ2V0X3N0YXRlKHN0cnVjdCBw
d21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKIAlpZiAocmF0ZSA9PSAwKSB7
CiAJCXN0YXRlLT5wZXJpb2QgPSAwOwogCQlzdGF0ZS0+ZHV0eV9jeWNsZSA9IDA7Ci0JCXJldHVy
bjsKKwkJcmV0dXJuIDA7CiAJfQogCiAJdmFsdWUgPSByZWFkbChpcC0+YmFzZSArIElQUk9DX1BX
TV9QUkVTQ0FMRV9PRkZTRVQpOwpAQCAtMTA3LDYgKzEwNyw4IEBAIHN0YXRpYyB2b2lkIGlwcm9j
X3B3bWNfZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2Ug
KnB3bSwKIAl2YWx1ZSA9IHJlYWRsKGlwLT5iYXNlICsgSVBST0NfUFdNX0RVVFlfQ1lDTEVfT0ZG
U0VUKHB3bS0+aHdwd20pKTsKIAl0bXAgPSAodmFsdWUgJiBJUFJPQ19QV01fUEVSSU9EX01BWCkg
KiBtdWx0aTsKIAlzdGF0ZS0+ZHV0eV9jeWNsZSA9IGRpdjY0X3U2NCh0bXAsIHJhdGUpOworCisJ
cmV0dXJuIDA7CiB9CiAKIHN0YXRpYyBpbnQgaXByb2NfcHdtY19hcHBseShzdHJ1Y3QgcHdtX2No
aXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCmRpZmYgLS1naXQgYS9kcml2ZXJzL3B3
bS9wd20tY3JjLmMgYi9kcml2ZXJzL3B3bS9wd20tY3JjLmMKaW5kZXggN2IzNTdkMWNmNjQyLi40
MDk5ODUwMTE3YmEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcHdtL3B3bS1jcmMuYworKysgYi9kcml2
ZXJzL3B3bS9wd20tY3JjLmMKQEAgLTEyMSw4ICsxMjEsOCBAQCBzdGF0aWMgaW50IGNyY19wd21f
YXBwbHkoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCXJl
dHVybiAwOwogfQogCi1zdGF0aWMgdm9pZCBjcmNfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2No
aXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCi0JCQkgICAgICBzdHJ1Y3QgcHdtX3N0
YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgY3JjX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlw
ICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAorCQkJICAgICBzdHJ1Y3QgcHdtX3N0YXRl
ICpzdGF0ZSkKIHsKIAlzdHJ1Y3QgY3J5c3RhbGNvdmVfcHdtICpjcmNfcHdtID0gdG9fY3JjX3B3
bShjaGlwKTsKIAlzdHJ1Y3QgZGV2aWNlICpkZXYgPSBjcmNfcHdtLT5jaGlwLmRldjsKQEAgLTEz
MiwxMyArMTMyLDEzIEBAIHN0YXRpYyB2b2lkIGNyY19wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21f
Y2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKIAllcnJvciA9IHJlZ21hcF9yZWFk
KGNyY19wd20tPnJlZ21hcCwgUFdNMF9DTEtfRElWLCAmY2xrX2Rpdl9yZWcpOwogCWlmIChlcnJv
cikgewogCQlkZXZfZXJyKGRldiwgIkVycm9yIHJlYWRpbmcgUFdNMF9DTEtfRElWICVkXG4iLCBl
cnJvcik7Ci0JCXJldHVybjsKKwkJcmV0dXJuIDA7CiAJfQogCiAJZXJyb3IgPSByZWdtYXBfcmVh
ZChjcmNfcHdtLT5yZWdtYXAsIFBXTTBfRFVUWV9DWUNMRSwgJmR1dHlfY3ljbGVfcmVnKTsKIAlp
ZiAoZXJyb3IpIHsKIAkJZGV2X2VycihkZXYsICJFcnJvciByZWFkaW5nIFBXTTBfRFVUWV9DWUNM
RSAlZFxuIiwgZXJyb3IpOwotCQlyZXR1cm47CisJCXJldHVybiAwOwogCX0KIAogCWNsa19kaXYg
PSAoY2xrX2Rpdl9yZWcgJiB+UFdNX09VVFBVVF9FTkFCTEUpICsgMTsKQEAgLTE0OSw2ICsxNDks
OCBAQCBzdGF0aWMgdm9pZCBjcmNfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAs
IHN0cnVjdCBwd21fZGV2aWNlICpwd20sCiAJCURJVl9ST1VORF9VUF9VTEwoZHV0eV9jeWNsZV9y
ZWcgKiBzdGF0ZS0+cGVyaW9kLCBQV01fTUFYX0xFVkVMKTsKIAlzdGF0ZS0+cG9sYXJpdHkgPSBQ
V01fUE9MQVJJVFlfTk9STUFMOwogCXN0YXRlLT5lbmFibGVkID0gISEoY2xrX2Rpdl9yZWcgJiBQ
V01fT1VUUFVUX0VOQUJMRSk7CisKKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVj
dCBwd21fb3BzIGNyY19wd21fb3BzID0gewpkaWZmIC0tZ2l0IGEvZHJpdmVycy9wd20vcHdtLWNy
b3MtZWMuYyBiL2RyaXZlcnMvcHdtL3B3bS1jcm9zLWVjLmMKaW5kZXggN2YxMGY1NmMzZWI2Li4x
MTY4NGVkYzA2MjAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcHdtL3B3bS1jcm9zLWVjLmMKKysrIGIv
ZHJpdmVycy9wd20vcHdtLWNyb3MtZWMuYwpAQCAtMTgzLDggKzE4Myw4IEBAIHN0YXRpYyBpbnQg
Y3Jvc19lY19wd21fYXBwbHkoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2Rldmlj
ZSAqcHdtLAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgdm9pZCBjcm9zX2VjX3B3bV9nZXRfc3Rh
dGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAotCQkJCSAg
c3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCitzdGF0aWMgaW50IGNyb3NfZWNfcHdtX2dldF9zdGF0
ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCisJCQkJIHN0
cnVjdCBwd21fc3RhdGUgKnN0YXRlKQogewogCXN0cnVjdCBjcm9zX2VjX3B3bV9kZXZpY2UgKmVj
X3B3bSA9IHB3bV90b19jcm9zX2VjX3B3bShjaGlwKTsKIAlzdHJ1Y3QgY3Jvc19lY19wd20gKmNo
YW5uZWwgPSBwd21fZ2V0X2NoaXBfZGF0YShwd20pOwpAQCAtMTkzLDcgKzE5Myw3IEBAIHN0YXRp
YyB2b2lkIGNyb3NfZWNfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVj
dCBwd21fZGV2aWNlICpwd20sCiAJcmV0ID0gY3Jvc19lY19wd21fZ2V0X2R1dHkoZWNfcHdtLCBw
d20tPmh3cHdtKTsKIAlpZiAocmV0IDwgMCkgewogCQlkZXZfZXJyKGNoaXAtPmRldiwgImVycm9y
IGdldHRpbmcgaW5pdGlhbCBkdXR5OiAlZFxuIiwgcmV0KTsKLQkJcmV0dXJuOworCQlyZXR1cm4g
MDsKIAl9CiAKIAlzdGF0ZS0+ZW5hYmxlZCA9IChyZXQgPiAwKTsKQEAgLTIxMiw2ICsyMTIsOCBA
QCBzdGF0aWMgdm9pZCBjcm9zX2VjX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlw
LCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCQlzdGF0ZS0+ZHV0eV9jeWNsZSA9IGNoYW5uZWwt
PmR1dHlfY3ljbGU7CiAJZWxzZQogCQlzdGF0ZS0+ZHV0eV9jeWNsZSA9IHJldDsKKworCXJldHVy
biAwOwogfQogCiBzdGF0aWMgc3RydWN0IHB3bV9kZXZpY2UgKgpkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9wd20vcHdtLWR3Yy5jIGIvZHJpdmVycy9wd20vcHdtLWR3Yy5jCmluZGV4IDc1NjgzMDBiYjEx
ZS4uYmQyMzA4ODEyMDk2IDEwMDY0NAotLS0gYS9kcml2ZXJzL3B3bS9wd20tZHdjLmMKKysrIGIv
ZHJpdmVycy9wd20vcHdtLWR3Yy5jCkBAIC0xNjMsOCArMTYzLDggQEAgc3RhdGljIGludCBkd2Nf
cHdtX2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwK
IAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHZvaWQgZHdjX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3
bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAotCQkJICAgICAgc3RydWN0IHB3
bV9zdGF0ZSAqc3RhdGUpCitzdGF0aWMgaW50IGR3Y19wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21f
Y2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKKwkJCSAgICAgc3RydWN0IHB3bV9z
dGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IGR3Y19wd20gKmR3YyA9IHRvX2R3Y19wd20oY2hpcCk7
CiAJdTY0IGR1dHksIHBlcmlvZDsKQEAgLTE4OCw2ICsxODgsOCBAQCBzdGF0aWMgdm9pZCBkd2Nf
cHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpw
d20sCiAJc3RhdGUtPnBvbGFyaXR5ID0gUFdNX1BPTEFSSVRZX0lOVkVSU0VEOwogCiAJcG1fcnVu
dGltZV9wdXRfc3luYyhjaGlwLT5kZXYpOworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyBjb25z
dCBzdHJ1Y3QgcHdtX29wcyBkd2NfcHdtX29wcyA9IHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvcHdt
L3B3bS1oaWJ2dC5jIGIvZHJpdmVycy9wd20vcHdtLWhpYnZ0LmMKaW5kZXggMzMzZjFiMThmZjRl
Li4xMmMwNWMxNTVjYWIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcHdtL3B3bS1oaWJ2dC5jCisrKyBi
L2RyaXZlcnMvcHdtL3B3bS1oaWJ2dC5jCkBAIC0xMjgsOCArMTI4LDggQEAgc3RhdGljIHZvaWQg
aGlidnRfcHdtX3NldF9wb2xhcml0eShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCiAJCQkJUFdNX1BP
TEFSSVRZX01BU0ssICgweDAgPDwgUFdNX1BPTEFSSVRZX1NISUZUKSk7CiB9CiAKLXN0YXRpYyB2
b2lkIGhpYnZ0X3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdt
X2RldmljZSAqcHdtLAotCQkJCXN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQorc3RhdGljIGludCBo
aWJ2dF9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZp
Y2UgKnB3bSwKKwkJCSAgICAgICBzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKIHsKIAlzdHJ1Y3Qg
aGlidnRfcHdtX2NoaXAgKmhpX3B3bV9jaGlwID0gdG9faGlidnRfcHdtX2NoaXAoY2hpcCk7CiAJ
dm9pZCBfX2lvbWVtICpiYXNlOwpAQCAtMTQ2LDYgKzE0Niw4IEBAIHN0YXRpYyB2b2lkIGhpYnZ0
X3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAq
cHdtLAogCiAJdmFsdWUgPSByZWFkbChiYXNlICsgUFdNX0NUUkxfQUREUihwd20tPmh3cHdtKSk7
CiAJc3RhdGUtPmVuYWJsZWQgPSAoUFdNX0VOQUJMRV9NQVNLICYgdmFsdWUpOworCisJcmV0dXJu
IDA7CiB9CiAKIHN0YXRpYyBpbnQgaGlidnRfcHdtX2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hp
cCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvcHdtL3B3bS1p
bXgtdHBtLmMgYi9kcml2ZXJzL3B3bS9wd20taW14LXRwbS5jCmluZGV4IGU1ZTdiN2MzMzlhOC4u
ZWQxYWFkOTZmZmYwIDEwMDY0NAotLS0gYS9kcml2ZXJzL3B3bS9wd20taW14LXRwbS5jCisrKyBi
L2RyaXZlcnMvcHdtL3B3bS1pbXgtdHBtLmMKQEAgLTEzMiw5ICsxMzIsOSBAQCBzdGF0aWMgaW50
IHB3bV9pbXhfdHBtX3JvdW5kX3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwKIAlyZXR1cm4g
MDsKIH0KIAotc3RhdGljIHZvaWQgcHdtX2lteF90cG1fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hp
cCAqY2hpcCwKLQkJCQkgIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCi0JCQkJICBzdHJ1Y3QgcHdt
X3N0YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgcHdtX2lteF90cG1fZ2V0X3N0YXRlKHN0cnVjdCBw
d21fY2hpcCAqY2hpcCwKKwkJCQkgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKKwkJCQkgc3RydWN0
IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IGlteF90cG1fcHdtX2NoaXAgKnRwbSA9IHRv
X2lteF90cG1fcHdtX2NoaXAoY2hpcCk7CiAJdTMyIHJhdGUsIHZhbCwgcHJlc2NhbGU7CkBAIC0x
NjQsNiArMTY0LDggQEAgc3RhdGljIHZvaWQgcHdtX2lteF90cG1fZ2V0X3N0YXRlKHN0cnVjdCBw
d21fY2hpcCAqY2hpcCwKIAogCS8qIGdldCBjaGFubmVsIHN0YXR1cyAqLwogCXN0YXRlLT5lbmFi
bGVkID0gRklFTERfR0VUKFBXTV9JTVhfVFBNX0NuU0NfRUxTLCB2YWwpID8gdHJ1ZSA6IGZhbHNl
OworCisJcmV0dXJuIDA7CiB9CiAKIC8qIHRoaXMgZnVuY3Rpb24gaXMgc3VwcG9zZWQgdG8gYmUg
Y2FsbGVkIHdpdGggbXV0ZXggaG9sZCAqLwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9wd20vcHdtLWlt
eDI3LmMgYi9kcml2ZXJzL3B3bS9wd20taW14MjcuYwppbmRleCBlYTkxYTJmODFhOWYuLjNhMjJj
MmZkZGM0NSAxMDA2NDQKLS0tIGEvZHJpdmVycy9wd20vcHdtLWlteDI3LmMKKysrIGIvZHJpdmVy
cy9wd20vcHdtLWlteDI3LmMKQEAgLTExOCw4ICsxMTgsOCBAQCBzdGF0aWMgdm9pZCBwd21faW14
MjdfY2xrX2Rpc2FibGVfdW5wcmVwYXJlKHN0cnVjdCBwd21faW14MjdfY2hpcCAqaW14KQogCWNs
a19kaXNhYmxlX3VucHJlcGFyZShpbXgtPmNsa19pcGcpOwogfQogCi1zdGF0aWMgdm9pZCBwd21f
aW14MjdfZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwKLQkJCQlzdHJ1Y3QgcHdtX2Rl
dmljZSAqcHdtLCBzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgcHdtX2lteDI3
X2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCisJCQkgICAgICAgc3RydWN0IHB3bV9k
ZXZpY2UgKnB3bSwgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IHB3bV9pbXgy
N19jaGlwICppbXggPSB0b19wd21faW14MjdfY2hpcChjaGlwKTsKIAl1MzIgcGVyaW9kLCBwcmVz
Y2FsZXIsIHB3bV9jbGssIHZhbDsKQEAgLTEyOCw3ICsxMjgsNyBAQCBzdGF0aWMgdm9pZCBwd21f
aW14MjdfZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwKIAogCXJldCA9IHB3bV9pbXgy
N19jbGtfcHJlcGFyZV9lbmFibGUoaW14KTsKIAlpZiAocmV0IDwgMCkKLQkJcmV0dXJuOworCQly
ZXR1cm4gMDsKIAogCXZhbCA9IHJlYWRsKGlteC0+bW1pb19iYXNlICsgTVgzX1BXTUNSKTsKIApA
QCAtMTcwLDYgKzE3MCw4IEBAIHN0YXRpYyB2b2lkIHB3bV9pbXgyN19nZXRfc3RhdGUoc3RydWN0
IHB3bV9jaGlwICpjaGlwLAogCXN0YXRlLT5kdXR5X2N5Y2xlID0gRElWX1JPVU5EX1VQX1VMTCh0
bXAsIHB3bV9jbGspOwogCiAJcHdtX2lteDI3X2Nsa19kaXNhYmxlX3VucHJlcGFyZShpbXgpOwor
CisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyB2b2lkIHB3bV9pbXgyN19zd19yZXNldChzdHJ1Y3Qg
cHdtX2NoaXAgKmNoaXApCmRpZmYgLS1naXQgYS9kcml2ZXJzL3B3bS9wd20taW50ZWwtbGdtLmMg
Yi9kcml2ZXJzL3B3bS9wd20taW50ZWwtbGdtLmMKaW5kZXggYjY2YzM1MDc0MDg3Li4wY2Q3ZGQ1
NDhlODIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcHdtL3B3bS1pbnRlbC1sZ20uYworKysgYi9kcml2
ZXJzL3B3bS9wd20taW50ZWwtbGdtLmMKQEAgLTg2LDggKzg2LDggQEAgc3RhdGljIGludCBsZ21f
cHdtX2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwK
IAlyZXR1cm4gbGdtX3B3bV9lbmFibGUoY2hpcCwgMSk7CiB9CiAKLXN0YXRpYyB2b2lkIGxnbV9w
d21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3
bSwKLQkJCSAgICAgIHN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQorc3RhdGljIGludCBsZ21fcHdt
X2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20s
CisJCQkgICAgIHN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQogewogCXN0cnVjdCBsZ21fcHdtX2No
aXAgKnBjID0gdG9fbGdtX3B3bV9jaGlwKGNoaXApOwogCXUzMiBkdXR5LCB2YWw7CkBAIC0xMDAs
NiArMTAwLDggQEAgc3RhdGljIHZvaWQgbGdtX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlw
ICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCXJlZ21hcF9yZWFkKHBjLT5yZWdtYXAs
IExHTV9QV01fRkFOX0NPTjAsICZ2YWwpOwogCWR1dHkgPSBGSUVMRF9HRVQoTEdNX1BXTV9GQU5f
RENfTVNLLCB2YWwpOwogCXN0YXRlLT5kdXR5X2N5Y2xlID0gRElWX1JPVU5EX1VQKGR1dHkgKiBw
Yy0+cGVyaW9kLCBMR01fUFdNX01BWF9EVVRZX0NZQ0xFKTsKKworCXJldHVybiAwOwogfQogCiBz
dGF0aWMgY29uc3Qgc3RydWN0IHB3bV9vcHMgbGdtX3B3bV9vcHMgPSB7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL3B3bS9wd20taXFzNjIwYS5jIGIvZHJpdmVycy9wd20vcHdtLWlxczYyMGEuYwppbmRl
eCA1NGJkOTVhNWNhYjAuLjE1YWFlNTNkYjVhYiAxMDA2NDQKLS0tIGEvZHJpdmVycy9wd20vcHdt
LWlxczYyMGEuYworKysgYi9kcml2ZXJzL3B3bS9wd20taXFzNjIwYS5jCkBAIC0xMDQsOCArMTA0
LDggQEAgc3RhdGljIGludCBpcXM2MjBfcHdtX2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwg
c3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgdm9pZCBp
cXM2MjBfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2
aWNlICpwd20sCi0JCQkJIHN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQorc3RhdGljIGludCBpcXM2
MjBfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNl
ICpwd20sCisJCQkJc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IGlxczYyMF9w
d21fcHJpdmF0ZSAqaXFzNjIwX3B3bTsKIApAQCAtMTI2LDYgKzEyNiw4IEBAIHN0YXRpYyB2b2lk
IGlxczYyMF9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9k
ZXZpY2UgKnB3bSwKIAltdXRleF91bmxvY2soJmlxczYyMF9wd20tPmxvY2spOwogCiAJc3RhdGUt
PnBlcmlvZCA9IElRUzYyMF9QV01fUEVSSU9EX05TOworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRp
YyBpbnQgaXFzNjIwX3B3bV9ub3RpZmllcihzdHJ1Y3Qgbm90aWZpZXJfYmxvY2sgKm5vdGlmaWVy
LApkaWZmIC0tZ2l0IGEvZHJpdmVycy9wd20vcHdtLWtlZW1iYXkuYyBiL2RyaXZlcnMvcHdtL3B3
bS1rZWVtYmF5LmMKaW5kZXggNzMzODExYjA1NzIxLi5hYzAyZDhiYjRhMGIgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvcHdtL3B3bS1rZWVtYmF5LmMKKysrIGIvZHJpdmVycy9wd20vcHdtLWtlZW1iYXku
YwpAQCAtODksOCArODksOCBAQCBzdGF0aWMgdm9pZCBrZWVtYmF5X3B3bV9kaXNhYmxlKHN0cnVj
dCBrZWVtYmF5X3B3bSAqcHJpdiwgaW50IGNoKQogCQkJCUtNQl9QV01fTEVBRElOX09GRlNFVChj
aCkpOwogfQogCi1zdGF0aWMgdm9pZCBrZWVtYmF5X3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9j
aGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAotCQkJCSAgc3RydWN0IHB3bV9zdGF0
ZSAqc3RhdGUpCitzdGF0aWMgaW50IGtlZW1iYXlfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2No
aXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCisJCQkJIHN0cnVjdCBwd21fc3RhdGUg
KnN0YXRlKQogewogCXN0cnVjdCBrZWVtYmF5X3B3bSAqcHJpdiA9IHRvX2tlZW1iYXlfcHdtX2Rl
dihjaGlwKTsKIAl1bnNpZ25lZCBsb25nIGxvbmcgaGlnaCwgbG93OwpAQCAtMTEzLDYgKzExMyw4
IEBAIHN0YXRpYyB2b2lkIGtlZW1iYXlfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNo
aXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCiAJc3RhdGUtPmR1dHlfY3ljbGUgPSBESVZfUk9V
TkRfVVBfVUxMKGhpZ2gsIGNsa19yYXRlKTsKIAlzdGF0ZS0+cGVyaW9kID0gRElWX1JPVU5EX1VQ
X1VMTChoaWdoICsgbG93LCBjbGtfcmF0ZSk7CiAJc3RhdGUtPnBvbGFyaXR5ID0gUFdNX1BPTEFS
SVRZX05PUk1BTDsKKworCXJldHVybiAwOwogfQogCiBzdGF0aWMgaW50IGtlZW1iYXlfcHdtX2Fw
cGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvcHdtL3B3bS1scHNzLmMgYi9kcml2ZXJzL3B3bS9wd20tbHBzcy5jCmlu
ZGV4IGFjY2RlZjVkZDU4ZS4uODFhYzI5N2I4YmE1IDEwMDY0NAotLS0gYS9kcml2ZXJzL3B3bS9w
d20tbHBzcy5jCisrKyBiL2RyaXZlcnMvcHdtL3B3bS1scHNzLmMKQEAgLTIwNSw4ICsyMDUsOCBA
QCBzdGF0aWMgaW50IHB3bV9scHNzX2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0
IHB3bV9kZXZpY2UgKnB3bSwKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgdm9pZCBwd21fbHBz
c19nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdt
LAotCQkJICAgICAgIHN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQorc3RhdGljIGludCBwd21fbHBz
c19nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdt
LAorCQkJICAgICAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IHB3bV9scHNz
X2NoaXAgKmxwd20gPSB0b19scHdtKGNoaXApOwogCXVuc2lnbmVkIGxvbmcgYmFzZV91bml0X3Jh
bmdlOwpAQCAtMjM2LDYgKzIzNiw4IEBAIHN0YXRpYyB2b2lkIHB3bV9scHNzX2dldF9zdGF0ZShz
dHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCiAJc3RhdGUtPmVu
YWJsZWQgPSAhIShjdHJsICYgUFdNX0VOQUJMRSk7CiAKIAlwbV9ydW50aW1lX3B1dChjaGlwLT5k
ZXYpOworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcHdtX29wcyBwd21f
bHBzc19vcHMgPSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3B3bS9wd20tbWVzb24uYyBiL2RyaXZl
cnMvcHdtL3B3bS1tZXNvbi5jCmluZGV4IDU3MTEyZjQzOGM2ZC4uMTZkNzljYTVkOGY1IDEwMDY0
NAotLS0gYS9kcml2ZXJzL3B3bS9wd20tbWVzb24uYworKysgYi9kcml2ZXJzL3B3bS9wd20tbWVz
b24uYwpAQCAtMzE4LDggKzMxOCw4IEBAIHN0YXRpYyB1bnNpZ25lZCBpbnQgbWVzb25fcHdtX2Nu
dF90b19ucyhzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCiAJcmV0dXJuIGNudCAqIGZpbl9ucyAqIChj
aGFubmVsLT5wcmVfZGl2ICsgMSk7CiB9CiAKLXN0YXRpYyB2b2lkIG1lc29uX3B3bV9nZXRfc3Rh
dGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAotCQkJCXN0
cnVjdCBwd21fc3RhdGUgKnN0YXRlKQorc3RhdGljIGludCBtZXNvbl9wd21fZ2V0X3N0YXRlKHN0
cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKKwkJCSAgICAgICBz
dHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKIHsKIAlzdHJ1Y3QgbWVzb25fcHdtICptZXNvbiA9IHRv
X21lc29uX3B3bShjaGlwKTsKIAlzdHJ1Y3QgbWVzb25fcHdtX2NoYW5uZWxfZGF0YSAqY2hhbm5l
bF9kYXRhOwpAQCAtMzI3LDcgKzMyNyw3IEBAIHN0YXRpYyB2b2lkIG1lc29uX3B3bV9nZXRfc3Rh
dGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCXUzMiB2
YWx1ZSwgdG1wOwogCiAJaWYgKCFzdGF0ZSkKLQkJcmV0dXJuOworCQlyZXR1cm4gMDsKIAogCWNo
YW5uZWwgPSAmbWVzb24tPmNoYW5uZWxzW3B3bS0+aHdwd21dOwogCWNoYW5uZWxfZGF0YSA9ICZt
ZXNvbl9wd21fcGVyX2NoYW5uZWxfZGF0YVtwd20tPmh3cHdtXTsKQEAgLTM1Nyw2ICszNTcsOCBA
QCBzdGF0aWMgdm9pZCBtZXNvbl9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwg
c3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKIAkJc3RhdGUtPnBlcmlvZCA9IDA7CiAJCXN0YXRlLT5k
dXR5X2N5Y2xlID0gMDsKIAl9CisKKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVj
dCBwd21fb3BzIG1lc29uX3B3bV9vcHMgPSB7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3B3bS9wd20t
bXRrLWRpc3AuYyBiL2RyaXZlcnMvcHdtL3B3bS1tdGstZGlzcC5jCmluZGV4IGM2MDUwMTNlNDEx
NC4uOWE2YmIzMzRhMzFiIDEwMDY0NAotLS0gYS9kcml2ZXJzL3B3bS9wd20tbXRrLWRpc3AuYwor
KysgYi9kcml2ZXJzL3B3bS9wd20tbXRrLWRpc3AuYwpAQCAtMTcyLDkgKzE3Miw5IEBAIHN0YXRp
YyBpbnQgbXRrX2Rpc3BfcHdtX2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3
bV9kZXZpY2UgKnB3bSwKIAlyZXR1cm4gMDsKIH0KIAotc3RhdGljIHZvaWQgbXRrX2Rpc3BfcHdt
X2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCi0JCQkJICAgc3RydWN0IHB3bV9kZXZp
Y2UgKnB3bSwKLQkJCQkgICBzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgbXRr
X2Rpc3BfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCisJCQkJICBzdHJ1Y3Qg
cHdtX2RldmljZSAqcHdtLAorCQkJCSAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3Ry
dWN0IG10a19kaXNwX3B3bSAqbWRwID0gdG9fbXRrX2Rpc3BfcHdtKGNoaXApOwogCXU2NCByYXRl
LCBwZXJpb2QsIGhpZ2hfd2lkdGg7CkBAIC0xODQsMTQgKzE4NCwxNCBAQCBzdGF0aWMgdm9pZCBt
dGtfZGlzcF9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwKIAllcnIgPSBjbGtf
cHJlcGFyZV9lbmFibGUobWRwLT5jbGtfbWFpbik7CiAJaWYgKGVyciA8IDApIHsKIAkJZGV2X2Vy
cihjaGlwLT5kZXYsICJDYW4ndCBlbmFibGUgbWRwLT5jbGtfbWFpbjogJXBlXG4iLCBFUlJfUFRS
KGVycikpOwotCQlyZXR1cm47CisJCXJldHVybiAwOwogCX0KIAogCWVyciA9IGNsa19wcmVwYXJl
X2VuYWJsZShtZHAtPmNsa19tbSk7CiAJaWYgKGVyciA8IDApIHsKIAkJZGV2X2VycihjaGlwLT5k
ZXYsICJDYW4ndCBlbmFibGUgbWRwLT5jbGtfbW06ICVwZVxuIiwgRVJSX1BUUihlcnIpKTsKIAkJ
Y2xrX2Rpc2FibGVfdW5wcmVwYXJlKG1kcC0+Y2xrX21haW4pOwotCQlyZXR1cm47CisJCXJldHVy
biAwOwogCX0KIAogCXJhdGUgPSBjbGtfZ2V0X3JhdGUobWRwLT5jbGtfbWFpbik7CkBAIC0yMTEs
NiArMjExLDggQEAgc3RhdGljIHZvaWQgbXRrX2Rpc3BfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdt
X2NoaXAgKmNoaXAsCiAJc3RhdGUtPnBvbGFyaXR5ID0gUFdNX1BPTEFSSVRZX05PUk1BTDsKIAlj
bGtfZGlzYWJsZV91bnByZXBhcmUobWRwLT5jbGtfbW0pOwogCWNsa19kaXNhYmxlX3VucHJlcGFy
ZShtZHAtPmNsa19tYWluKTsKKworCXJldHVybiAwOwogfQogCiBzdGF0aWMgY29uc3Qgc3RydWN0
IHB3bV9vcHMgbXRrX2Rpc3BfcHdtX29wcyA9IHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvcHdtL3B3
bS1wY2E5Njg1LmMgYi9kcml2ZXJzL3B3bS9wd20tcGNhOTY4NS5jCmluZGV4IGYyMzBjMTBkMjhi
Yi4uNDFiZTI0NGU3ZGQzIDEwMDY0NAotLS0gYS9kcml2ZXJzL3B3bS9wd20tcGNhOTY4NS5jCisr
KyBiL2RyaXZlcnMvcHdtL3B3bS1wY2E5Njg1LmMKQEAgLTQzMSw4ICs0MzEsOCBAQCBzdGF0aWMg
aW50IHBjYTk2ODVfcHdtX2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9k
ZXZpY2UgKnB3bSwKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgdm9pZCBwY2E5Njg1X3B3bV9n
ZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAot
CQkJCSAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCitzdGF0aWMgaW50IHBjYTk2ODVfcHdtX2dl
dF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCisJ
CQkJIHN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQogewogCXN0cnVjdCBwY2E5Njg1ICpwY2EgPSB0
b19wY2EoY2hpcCk7CiAJdW5zaWduZWQgbG9uZyBsb25nIGR1dHk7CkBAIC00NTgsMTIgKzQ1OCwx
NCBAQCBzdGF0aWMgdm9pZCBwY2E5Njg1X3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpj
aGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCQkgKi8KIAkJc3RhdGUtPmR1dHlfY3ljbGUg
PSAwOwogCQlzdGF0ZS0+ZW5hYmxlZCA9IGZhbHNlOwotCQlyZXR1cm47CisJCXJldHVybiAwOwog
CX0KIAogCXN0YXRlLT5lbmFibGVkID0gdHJ1ZTsKIAlkdXR5ID0gcGNhOTY4NV9wd21fZ2V0X2R1
dHkocGNhLCBwd20tPmh3cHdtKTsKIAlzdGF0ZS0+ZHV0eV9jeWNsZSA9IERJVl9ST1VORF9ET1dO
X1VMTChkdXR5ICogc3RhdGUtPnBlcmlvZCwgUENBOTY4NV9DT1VOVEVSX1JBTkdFKTsKKworCXJl
dHVybiAwOwogfQogCiBzdGF0aWMgaW50IHBjYTk2ODVfcHdtX3JlcXVlc3Qoc3RydWN0IHB3bV9j
aGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9w
d20vcHdtLXJhc3BiZXJyeXBpLXBvZS5jIGIvZHJpdmVycy9wd20vcHdtLXJhc3BiZXJyeXBpLXBv
ZS5jCmluZGV4IDZmZjczMDI5ZjM2Ny4uMjkzOWI3MWE3YmE3IDEwMDY0NAotLS0gYS9kcml2ZXJz
L3B3bS9wd20tcmFzcGJlcnJ5cGktcG9lLmMKKysrIGIvZHJpdmVycy9wd20vcHdtLXJhc3BiZXJy
eXBpLXBvZS5jCkBAIC04Miw5ICs4Miw5IEBAIHN0YXRpYyBpbnQgcmFzcGJlcnJ5cGlfcHdtX2dl
dF9wcm9wZXJ0eShzdHJ1Y3QgcnBpX2Zpcm13YXJlICpmaXJtd2FyZSwKIAlyZXR1cm4gMDsKIH0K
IAotc3RhdGljIHZvaWQgcmFzcGJlcnJ5cGlfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAg
KmNoaXAsCi0JCQkJICAgICAgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKLQkJCQkgICAgICBzdHJ1
Y3QgcHdtX3N0YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgcmFzcGJlcnJ5cGlfcHdtX2dldF9zdGF0
ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCisJCQkJICAgICBzdHJ1Y3QgcHdtX2RldmljZSAqcHdt
LAorCQkJCSAgICAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IHJhc3BiZXJy
eXBpX3B3bSAqcnBpcHdtID0gcmFzcGJlcnJ5cGlfcHdtX2Zyb21fY2hpcChjaGlwKTsKIApAQCAt
OTMsNiArOTMsOCBAQCBzdGF0aWMgdm9pZCByYXNwYmVycnlwaV9wd21fZ2V0X3N0YXRlKHN0cnVj
dCBwd21fY2hpcCAqY2hpcCwKIAkJCQkJIFJQSV9QV01fTUFYX0RVVFkpOwogCXN0YXRlLT5lbmFi
bGVkID0gISEocnBpcHdtLT5kdXR5X2N5Y2xlKTsKIAlzdGF0ZS0+cG9sYXJpdHkgPSBQV01fUE9M
QVJJVFlfTk9STUFMOworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyBpbnQgcmFzcGJlcnJ5cGlf
cHdtX2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvcHdtL3B3bS1yb2NrY2hpcC5jIGIvZHJpdmVycy9wd20vcHdt
LXJvY2tjaGlwLmMKaW5kZXggYTVhZjg1OTIxN2MxLi4zZWM3ZDE3NTY5MDMgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvcHdtL3B3bS1yb2NrY2hpcC5jCisrKyBiL2RyaXZlcnMvcHdtL3B3bS1yb2NrY2hp
cC5jCkBAIC01Nyw5ICs1Nyw5IEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IHJvY2tjaGlwX3B3bV9j
aGlwICp0b19yb2NrY2hpcF9wd21fY2hpcChzdHJ1Y3QgcHdtX2NoaXAgKmMpCiAJcmV0dXJuIGNv
bnRhaW5lcl9vZihjLCBzdHJ1Y3Qgcm9ja2NoaXBfcHdtX2NoaXAsIGNoaXApOwogfQogCi1zdGF0
aWMgdm9pZCByb2NrY2hpcF9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwKLQkJ
CQkgICBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAotCQkJCSAgIHN0cnVjdCBwd21fc3RhdGUgKnN0
YXRlKQorc3RhdGljIGludCByb2NrY2hpcF9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAq
Y2hpcCwKKwkJCQkgIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCisJCQkJICBzdHJ1Y3QgcHdtX3N0
YXRlICpzdGF0ZSkKIHsKIAlzdHJ1Y3Qgcm9ja2NoaXBfcHdtX2NoaXAgKnBjID0gdG9fcm9ja2No
aXBfcHdtX2NoaXAoY2hpcCk7CiAJdTMyIGVuYWJsZV9jb25mID0gcGMtPmRhdGEtPmVuYWJsZV9j
b25mOwpAQCAtNzAsMTEgKzcwLDExIEBAIHN0YXRpYyB2b2lkIHJvY2tjaGlwX3B3bV9nZXRfc3Rh
dGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLAogCiAJcmV0ID0gY2xrX2VuYWJsZShwYy0+cGNsayk7
CiAJaWYgKHJldCkKLQkJcmV0dXJuOworCQlyZXR1cm4gMDsKIAogCXJldCA9IGNsa19lbmFibGUo
cGMtPmNsayk7CiAJaWYgKHJldCkKLQkJcmV0dXJuOworCQlyZXR1cm4gMDsKIAogCWNsa19yYXRl
ID0gY2xrX2dldF9yYXRlKHBjLT5jbGspOwogCkBAIC05Niw2ICs5Niw4IEBAIHN0YXRpYyB2b2lk
IHJvY2tjaGlwX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLAogCiAJY2xrX2Rp
c2FibGUocGMtPmNsayk7CiAJY2xrX2Rpc2FibGUocGMtPnBjbGspOworCisJcmV0dXJuIDA7CiB9
CiAKIHN0YXRpYyB2b2lkIHJvY2tjaGlwX3B3bV9jb25maWcoc3RydWN0IHB3bV9jaGlwICpjaGlw
LCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9wd20vcHdtLXNp
Zml2ZS5jIGIvZHJpdmVycy9wd20vcHdtLXNpZml2ZS5jCmluZGV4IDJkNGZhNWU1ZmRkNC4uMWU5
ODcwYWEyOWU5IDEwMDY0NAotLS0gYS9kcml2ZXJzL3B3bS9wd20tc2lmaXZlLmMKKysrIGIvZHJp
dmVycy9wd20vcHdtLXNpZml2ZS5jCkBAIC0xMDUsOCArMTA1LDggQEAgc3RhdGljIHZvaWQgcHdt
X3NpZml2ZV91cGRhdGVfY2xvY2soc3RydWN0IHB3bV9zaWZpdmVfZGRhdGEgKmRkYXRhLAogCQki
TmV3IHJlYWxfcGVyaW9kID0gJXUgbnNcbiIsIGRkYXRhLT5yZWFsX3BlcmlvZCk7CiB9CiAKLXN0
YXRpYyB2b2lkIHB3bV9zaWZpdmVfZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3Ry
dWN0IHB3bV9kZXZpY2UgKnB3bSwKLQkJCQkgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCitzdGF0
aWMgaW50IHB3bV9zaWZpdmVfZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0
IHB3bV9kZXZpY2UgKnB3bSwKKwkJCQlzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKIHsKIAlzdHJ1
Y3QgcHdtX3NpZml2ZV9kZGF0YSAqZGRhdGEgPSBwd21fc2lmaXZlX2NoaXBfdG9fZGRhdGEoY2hp
cCk7CiAJdTMyIGR1dHksIHZhbDsKQEAgLTEyMyw2ICsxMjMsOCBAQCBzdGF0aWMgdm9pZCBwd21f
c2lmaXZlX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNl
ICpwd20sCiAJc3RhdGUtPmR1dHlfY3ljbGUgPQogCQkodTY0KWR1dHkgKiBkZGF0YS0+cmVhbF9w
ZXJpb2QgPj4gUFdNX1NJRklWRV9DTVBXSURUSDsKIAlzdGF0ZS0+cG9sYXJpdHkgPSBQV01fUE9M
QVJJVFlfSU5WRVJTRUQ7CisKKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIGludCBwd21fc2lmaXZl
X2FwcGx5KHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvcHdtL3B3bS1zbDI4Y3BsZC5jIGIvZHJpdmVycy9wd20vcHdtLXNs
MjhjcGxkLmMKaW5kZXggNTg5YWVhYWE2YWM4Li5lNjQ5MDBhZDRiYTEgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvcHdtL3B3bS1zbDI4Y3BsZC5jCisrKyBiL2RyaXZlcnMvcHdtL3B3bS1zbDI4Y3BsZC5j
CkBAIC04Nyw5ICs4Nyw5IEBAIHN0cnVjdCBzbDI4Y3BsZF9wd20gewogI2RlZmluZSBzbDI4Y3Bs
ZF9wd21fZnJvbV9jaGlwKF9jaGlwKSBcCiAJY29udGFpbmVyX29mKF9jaGlwLCBzdHJ1Y3Qgc2wy
OGNwbGRfcHdtLCBwd21fY2hpcCkKIAotc3RhdGljIHZvaWQgc2wyOGNwbGRfcHdtX2dldF9zdGF0
ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCi0JCQkJICAgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwK
LQkJCQkgICBzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0ZSkKK3N0YXRpYyBpbnQgc2wyOGNwbGRfcHdt
X2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCisJCQkJICBzdHJ1Y3QgcHdtX2Rldmlj
ZSAqcHdtLAorCQkJCSAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0IHNsMjhj
cGxkX3B3bSAqcHJpdiA9IHNsMjhjcGxkX3B3bV9mcm9tX2NoaXAoY2hpcCk7CiAJdW5zaWduZWQg
aW50IHJlZzsKQEAgLTExNSw2ICsxMTUsOCBAQCBzdGF0aWMgdm9pZCBzbDI4Y3BsZF9wd21fZ2V0
X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwKIAkgKiB0aGUgUFdNIGNvcmUuCiAJICovCiAJ
c3RhdGUtPmR1dHlfY3ljbGUgPSBtaW4oc3RhdGUtPmR1dHlfY3ljbGUsIHN0YXRlLT5wZXJpb2Qp
OworCisJcmV0dXJuIDA7CiB9CiAKIHN0YXRpYyBpbnQgc2wyOGNwbGRfcHdtX2FwcGx5KHN0cnVj
dCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvcHdtL3B3bS1zcHJkLmMgYi9kcml2ZXJzL3B3bS9wd20tc3ByZC5jCmluZGV4IDcwMDRm
NTViYmYxMS4uYmRhOGJjNWFmOTc2IDEwMDY0NAotLS0gYS9kcml2ZXJzL3B3bS9wd20tc3ByZC5j
CisrKyBiL2RyaXZlcnMvcHdtL3B3bS1zcHJkLmMKQEAgLTY1LDggKzY1LDggQEAgc3RhdGljIHZv
aWQgc3ByZF9wd21fd3JpdGUoc3RydWN0IHNwcmRfcHdtX2NoaXAgKnNwYywgdTMyIGh3aWQsCiAJ
d3JpdGVsX3JlbGF4ZWQodmFsLCBzcGMtPmJhc2UgKyBvZmZzZXQpOwogfQogCi1zdGF0aWMgdm9p
ZCBzcHJkX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2Rl
dmljZSAqcHdtLAotCQkJICAgICAgIHN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQorc3RhdGljIGlu
dCBzcHJkX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2Rl
dmljZSAqcHdtLAorCQkJICAgICAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCiB7CiAJc3RydWN0
IHNwcmRfcHdtX2NoaXAgKnNwYyA9CiAJCWNvbnRhaW5lcl9vZihjaGlwLCBzdHJ1Y3Qgc3ByZF9w
d21fY2hpcCwgY2hpcCk7CkBAIC04Myw3ICs4Myw3IEBAIHN0YXRpYyB2b2lkIHNwcmRfcHdtX2dl
dF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCiAJ
aWYgKHJldCkgewogCQlkZXZfZXJyKHNwYy0+ZGV2LCAiZmFpbGVkIHRvIGVuYWJsZSBwd20ldSBj
bG9ja3NcbiIsCiAJCQlwd20tPmh3cHdtKTsKLQkJcmV0dXJuOworCQlyZXR1cm4gMDsKIAl9CiAK
IAl2YWwgPSBzcHJkX3B3bV9yZWFkKHNwYywgcHdtLT5od3B3bSwgU1BSRF9QV01fRU5BQkxFKTsK
QEAgLTExMyw2ICsxMTMsOCBAQCBzdGF0aWMgdm9pZCBzcHJkX3B3bV9nZXRfc3RhdGUoc3RydWN0
IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCS8qIERpc2FibGUgUFdN
IGNsb2NrcyBpZiB0aGUgUFdNIGNoYW5uZWwgaXMgbm90IGluIGVuYWJsZSBzdGF0ZS4gKi8KIAlp
ZiAoIXN0YXRlLT5lbmFibGVkKQogCQljbGtfYnVsa19kaXNhYmxlX3VucHJlcGFyZShTUFJEX1BX
TV9DSE5fQ0xLU19OVU0sIGNobi0+Y2xrcyk7CisKKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIGlu
dCBzcHJkX3B3bV9jb25maWcoc3RydWN0IHNwcmRfcHdtX2NoaXAgKnNwYywgc3RydWN0IHB3bV9k
ZXZpY2UgKnB3bSwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvcHdtL3B3bS1zdG0zMi1scC5jIGIvZHJp
dmVycy9wd20vcHdtLXN0bTMyLWxwLmMKaW5kZXggMzExNWFiYjNmNTJhLi4zOTM2NGM1MmNmZTQg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcHdtL3B3bS1zdG0zMi1scC5jCisrKyBiL2RyaXZlcnMvcHdt
L3B3bS1zdG0zMi1scC5jCkBAIC0xNTcsOSArMTU3LDkgQEAgc3RhdGljIGludCBzdG0zMl9wd21f
bHBfYXBwbHkoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAog
CXJldHVybiByZXQ7CiB9CiAKLXN0YXRpYyB2b2lkIHN0bTMyX3B3bV9scF9nZXRfc3RhdGUoc3Ry
dWN0IHB3bV9jaGlwICpjaGlwLAotCQkJCSAgIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCi0JCQkJ
ICAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCitzdGF0aWMgaW50IHN0bTMyX3B3bV9scF9nZXRf
c3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLAorCQkJCSAgc3RydWN0IHB3bV9kZXZpY2UgKnB3
bSwKKwkJCQkgIHN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQogewogCXN0cnVjdCBzdG0zMl9wd21f
bHAgKnByaXYgPSB0b19zdG0zMl9wd21fbHAoY2hpcCk7CiAJdW5zaWduZWQgbG9uZyByYXRlID0g
Y2xrX2dldF9yYXRlKHByaXYtPmNsayk7CkBAIC0xODUsNiArMTg1LDggQEAgc3RhdGljIHZvaWQg
c3RtMzJfcHdtX2xwX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsCiAJdG1wID0gcHJk
IC0gdmFsOwogCXRtcCA9ICh0bXAgPDwgcHJlc2MpICogTlNFQ19QRVJfU0VDOwogCXN0YXRlLT5k
dXR5X2N5Y2xlID0gRElWX1JPVU5EX0NMT1NFU1RfVUxMKHRtcCwgcmF0ZSk7CisKKwlyZXR1cm4g
MDsKIH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBwd21fb3BzIHN0bTMyX3B3bV9scF9vcHMgPSB7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL3B3bS9wd20tc3VuNGkuYyBiL2RyaXZlcnMvcHdtL3B3bS1z
dW40aS5jCmluZGV4IGM4NDQ1YjBhMzMzOS4uMzdkNzVlMjUyZDRlIDEwMDY0NAotLS0gYS9kcml2
ZXJzL3B3bS9wd20tc3VuNGkuYworKysgYi9kcml2ZXJzL3B3bS9wd20tc3VuNGkuYwpAQCAtMTA4
LDkgKzEwOCw5IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBzdW40aV9wd21fd3JpdGVsKHN0cnVjdCBz
dW40aV9wd21fY2hpcCAqY2hpcCwKIAl3cml0ZWwodmFsLCBjaGlwLT5iYXNlICsgb2Zmc2V0KTsK
IH0KIAotc3RhdGljIHZvaWQgc3VuNGlfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNo
aXAsCi0JCQkJc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKLQkJCQlzdHJ1Y3QgcHdtX3N0YXRlICpz
dGF0ZSkKK3N0YXRpYyBpbnQgc3VuNGlfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNo
aXAsCisJCQkgICAgICAgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKKwkJCSAgICAgICBzdHJ1Y3Qg
cHdtX3N0YXRlICpzdGF0ZSkKIHsKIAlzdHJ1Y3Qgc3VuNGlfcHdtX2NoaXAgKnN1bjRpX3B3bSA9
IHRvX3N1bjRpX3B3bV9jaGlwKGNoaXApOwogCXU2NCBjbGtfcmF0ZSwgdG1wOwpAQCAtMTMyLDcg
KzEzMiw3IEBAIHN0YXRpYyB2b2lkIHN1bjRpX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlw
ICpjaGlwLAogCQlzdGF0ZS0+ZHV0eV9jeWNsZSA9IERJVl9ST1VORF9VUF9VTEwoc3RhdGUtPnBl
cmlvZCwgMik7CiAJCXN0YXRlLT5wb2xhcml0eSA9IFBXTV9QT0xBUklUWV9OT1JNQUw7CiAJCXN0
YXRlLT5lbmFibGVkID0gdHJ1ZTsKLQkJcmV0dXJuOworCQlyZXR1cm4gMDsKIAl9CiAKIAlpZiAo
KFBXTV9SRUdfUFJFU0NBTCh2YWwsIHB3bS0+aHdwd20pID09IFBXTV9QUkVTQ0FMX01BU0spICYm
CkBAIC0xNDIsNyArMTQyLDcgQEAgc3RhdGljIHZvaWQgc3VuNGlfcHdtX2dldF9zdGF0ZShzdHJ1
Y3QgcHdtX2NoaXAgKmNoaXAsCiAJCXByZXNjYWxlciA9IHByZXNjYWxlcl90YWJsZVtQV01fUkVH
X1BSRVNDQUwodmFsLCBwd20tPmh3cHdtKV07CiAKIAlpZiAocHJlc2NhbGVyID09IDApCi0JCXJl
dHVybjsKKwkJcmV0dXJuIDA7CiAKIAlpZiAodmFsICYgQklUX0NIKFBXTV9BQ1RfU1RBVEUsIHB3
bS0+aHdwd20pKQogCQlzdGF0ZS0+cG9sYXJpdHkgPSBQV01fUE9MQVJJVFlfTk9STUFMOwpAQCAt
MTYyLDYgKzE2Miw4IEBAIHN0YXRpYyB2b2lkIHN1bjRpX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3
bV9jaGlwICpjaGlwLAogCiAJdG1wID0gKHU2NClwcmVzY2FsZXIgKiBOU0VDX1BFUl9TRUMgKiBQ
V01fUkVHX1BSRCh2YWwpOwogCXN0YXRlLT5wZXJpb2QgPSBESVZfUk9VTkRfQ0xPU0VTVF9VTEwo
dG1wLCBjbGtfcmF0ZSk7CisKKwlyZXR1cm4gMDsKIH0KIAogc3RhdGljIGludCBzdW40aV9wd21f
Y2FsY3VsYXRlKHN0cnVjdCBzdW40aV9wd21fY2hpcCAqc3VuNGlfcHdtLApkaWZmIC0tZ2l0IGEv
ZHJpdmVycy9wd20vcHdtLXN1bnBsdXMuYyBiL2RyaXZlcnMvcHdtL3B3bS1zdW5wbHVzLmMKaW5k
ZXggZTc3NmZkMTY1MTJkLi5kNmViZTlmMDNiMzUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcHdtL3B3
bS1zdW5wbHVzLmMKKysrIGIvZHJpdmVycy9wd20vcHdtLXN1bnBsdXMuYwpAQCAtMTI0LDggKzEy
NCw4IEBAIHN0YXRpYyBpbnQgc3VucGx1c19wd21fYXBwbHkoc3RydWN0IHB3bV9jaGlwICpjaGlw
LCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgdm9pZCBz
dW5wbHVzX3B3bV9nZXRfc3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2Rl
dmljZSAqcHdtLAotCQkJCSAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpCitzdGF0aWMgaW50IHN1
bnBsdXNfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2
aWNlICpwd20sCisJCQkJIHN0cnVjdCBwd21fc3RhdGUgKnN0YXRlKQogewogCXN0cnVjdCBzdW5w
bHVzX3B3bSAqcHJpdiA9IHRvX3N1bnBsdXNfcHdtKGNoaXApOwogCXUzMiBtb2RlMCwgZGRfZnJl
cSwgZHV0eTsKQEAgLTE1NSw2ICsxNTUsOCBAQCBzdGF0aWMgdm9pZCBzdW5wbHVzX3B3bV9nZXRf
c3RhdGUoc3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCX0K
IAogCXN0YXRlLT5wb2xhcml0eSA9IFBXTV9QT0xBUklUWV9OT1JNQUw7CisKKwlyZXR1cm4gMDsK
IH0KIAogc3RhdGljIGNvbnN0IHN0cnVjdCBwd21fb3BzIHN1bnBsdXNfcHdtX29wcyA9IHsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvcHdtL3B3bS12aXNjb250aS5jIGIvZHJpdmVycy9wd20vcHdtLXZp
c2NvbnRpLmMKaW5kZXggOTI3YzRjYmIxZGFmLi5lM2ZiNzliM2UyYTcgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvcHdtL3B3bS12aXNjb250aS5jCisrKyBiL2RyaXZlcnMvcHdtL3B3bS12aXNjb250aS5j
CkBAIC0xMDMsOCArMTAzLDggQEAgc3RhdGljIGludCB2aXNjb250aV9wd21fYXBwbHkoc3RydWN0
IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAogCXJldHVybiAwOwogfQog
Ci1zdGF0aWMgdm9pZCB2aXNjb250aV9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hp
cCwgc3RydWN0IHB3bV9kZXZpY2UgKnB3bSwKLQkJCQkgICBzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0
ZSkKK3N0YXRpYyBpbnQgdmlzY29udGlfcHdtX2dldF9zdGF0ZShzdHJ1Y3QgcHdtX2NoaXAgKmNo
aXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20sCisJCQkJICBzdHJ1Y3QgcHdtX3N0YXRlICpzdGF0
ZSkKIHsKIAlzdHJ1Y3QgdmlzY29udGlfcHdtX2NoaXAgKnByaXYgPSB2aXNjb250aV9wd21fZnJv
bV9jaGlwKGNoaXApOwogCXUzMiBwZXJpb2QsIGR1dHksIHB3bWMwLCBwd21jMF9jbGs7CkBAIC0x
MjIsNiArMTIyLDggQEAgc3RhdGljIHZvaWQgdmlzY29udGlfcHdtX2dldF9zdGF0ZShzdHJ1Y3Qg
cHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICpwd20KIAkJc3RhdGUtPnBvbGFyaXR5
ID0gUFdNX1BPTEFSSVRZX05PUk1BTDsKIAogCXN0YXRlLT5lbmFibGVkID0gdHJ1ZTsKKworCXJl
dHVybiAwOwogfQogCiBzdGF0aWMgY29uc3Qgc3RydWN0IHB3bV9vcHMgdmlzY29udGlfcHdtX29w
cyA9IHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvcHdtL3B3bS14aWxpbnguYyBiL2RyaXZlcnMvcHdt
L3B3bS14aWxpbnguYwppbmRleCA0ZGFiMmI4NmM0MjcuLmY3YTUwZmRjZDlhNSAxMDA2NDQKLS0t
IGEvZHJpdmVycy9wd20vcHdtLXhpbGlueC5jCisrKyBiL2RyaXZlcnMvcHdtL3B3bS14aWxpbngu
YwpAQCAtMTY5LDkgKzE2OSw5IEBAIHN0YXRpYyBpbnQgeGlsaW54X3B3bV9hcHBseShzdHJ1Y3Qg
cHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21fZGV2aWNlICp1bnVzZWQsCiAJcmV0dXJuIDA7CiB9
CiAKLXN0YXRpYyB2b2lkIHhpbGlueF9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hpcCAqY2hp
cCwKLQkJCQkgc3RydWN0IHB3bV9kZXZpY2UgKnVudXNlZCwKLQkJCQkgc3RydWN0IHB3bV9zdGF0
ZSAqc3RhdGUpCitzdGF0aWMgaW50IHhpbGlueF9wd21fZ2V0X3N0YXRlKHN0cnVjdCBwd21fY2hp
cCAqY2hpcCwKKwkJCQlzdHJ1Y3QgcHdtX2RldmljZSAqdW51c2VkLAorCQkJCXN0cnVjdCBwd21f
c3RhdGUgKnN0YXRlKQogewogCXN0cnVjdCB4aWxpbnhfdGltZXJfcHJpdiAqcHJpdiA9IHhpbGlu
eF9wd21fY2hpcF90b19wcml2KGNoaXApOwogCXUzMiB0bHIwLCB0bHIxLCB0Y3NyMCwgdGNzcjE7
CkBAIC0xOTEsNiArMTkxLDggQEAgc3RhdGljIHZvaWQgeGlsaW54X3B3bV9nZXRfc3RhdGUoc3Ry
dWN0IHB3bV9jaGlwICpjaGlwLAogCSAqLwogCWlmIChzdGF0ZS0+cGVyaW9kID09IHN0YXRlLT5k
dXR5X2N5Y2xlKQogCQlzdGF0ZS0+ZHV0eV9jeWNsZSA9IDA7CisKKwlyZXR1cm4gMDsKIH0KIAog
c3RhdGljIGNvbnN0IHN0cnVjdCBwd21fb3BzIHhpbGlueF9wd21fb3BzID0gewpkaWZmIC0tZ2l0
IGEvaW5jbHVkZS9saW51eC9wd20uaCBiL2luY2x1ZGUvbGludXgvcHdtLmgKaW5kZXggZDcwYzZl
NWE4MzlkLi40ZGUwOTE2M2M5NjggMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvcHdtLmgKKysr
IGIvaW5jbHVkZS9saW51eC9wd20uaApAQCAtMjc2LDggKzI3Niw4IEBAIHN0cnVjdCBwd21fb3Bz
IHsKIAkJICAgICAgIHN0cnVjdCBwd21fY2FwdHVyZSAqcmVzdWx0LCB1bnNpZ25lZCBsb25nIHRp
bWVvdXQpOwogCWludCAoKmFwcGx5KShzdHJ1Y3QgcHdtX2NoaXAgKmNoaXAsIHN0cnVjdCBwd21f
ZGV2aWNlICpwd20sCiAJCSAgICAgY29uc3Qgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpOwotCXZv
aWQgKCpnZXRfc3RhdGUpKHN0cnVjdCBwd21fY2hpcCAqY2hpcCwgc3RydWN0IHB3bV9kZXZpY2Ug
KnB3bSwKLQkJCSAgc3RydWN0IHB3bV9zdGF0ZSAqc3RhdGUpOworCWludCAoKmdldF9zdGF0ZSko
c3RydWN0IHB3bV9jaGlwICpjaGlwLCBzdHJ1Y3QgcHdtX2RldmljZSAqcHdtLAorCQkJIHN0cnVj
dCBwd21fc3RhdGUgKnN0YXRlKTsKIAlzdHJ1Y3QgbW9kdWxlICpvd25lcjsKIH07CiAKLS0gCjIu
MzguMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGlu
dXgtc3RtMzIgbWFpbGluZyBsaXN0CkxpbnV4LXN0bTMyQHN0LW1kLW1haWxtYW4uc3Rvcm1yZXBs
eS5jb20KaHR0cHM6Ly9zdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tL21haWxtYW4vbGlzdGlu
Zm8vbGludXgtc3RtMzIK
