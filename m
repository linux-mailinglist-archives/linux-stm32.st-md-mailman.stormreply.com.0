Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id D1D9C20FCDD
	for <lists+linux-stm32@lfdr.de>; Tue, 30 Jun 2020 21:41:21 +0200 (CEST)
Received: from ip-172-31-3-76.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 94377C36B11;
	Tue, 30 Jun 2020 19:41:21 +0000 (UTC)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 79020C36B0C
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Tue, 30 Jun 2020 19:41:18 +0000 (UTC)
Received: from localhost (p54b336a9.dip0.t-ipconnect.de [84.179.54.169])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id E0D37206B6;
 Tue, 30 Jun 2020 19:41:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1593546077;
 bh=MUY2zAb9ej42QoUZhuM7uIq2vBR0S2G7iTH/6kZSNoo=;
 h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
 b=KHMtbm5+UulStf9r28guPNnQXe7wJgyeZ49Hn0ellKbk5ls0Mb76DNdfrDQM5T2RA
 zPSqDcgj2GptvgtQ1VWqMt5cZYgOPZEPN9mS7m1ku2b27tHfuNwdx/kz6Ui2a69RFg
 AN1YTohIRrSu7BBPK5PAMpZDsVvWUnmfFdqI5NT4=
Date: Tue, 30 Jun 2020 21:41:07 +0200
From: Wolfram Sang <wsa@kernel.org>
To: Alain Volmat <alain.volmat@st.com>
Message-ID: <20200630194107.GA999@ninjato>
References: <1593070769-9106-1-git-send-email-alain.volmat@st.com>
 <1593070769-9106-4-git-send-email-alain.volmat@st.com>
MIME-Version: 1.0
In-Reply-To: <1593070769-9106-4-git-send-email-alain.volmat@st.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Cc: mark.rutland@arm.com, devicetree@vger.kernel.org,
 linux-kernel@vger.kernel.org, pierre-yves.mordret@st.com, robh+dt@kernel.org,
 linux-i2c@vger.kernel.org, mcoquelin.stm32@gmail.com, fabrice.gasnier@st.com,
 linux-stm32@st-md-mailman.stormreply.com, linux-arm-kernel@lists.infradead.org
Subject: Re: [Linux-stm32] [PATCH v2 3/4] dt-bindings: i2c-stm32: add SMBus
	Alert bindings
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: multipart/mixed; boundary="===============2805891913906701535=="
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>


--===============2805891913906701535==
Content-Type: multipart/signed; micalg=pgp-sha512;
	protocol="application/pgp-signature"; boundary="fUYQa+Pmc3FrFX/N"
Content-Disposition: inline


--fUYQa+Pmc3FrFX/N
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Thu, Jun 25, 2020 at 09:39:28AM +0200, Alain Volmat wrote:
> Add a new binding of the i2c-stm32f7 driver to enable the handling
> of the SMBUS-Alert.
>=20
> The I2C/SMBUS framework already provides a mechanism to enable SMBus-Alert
> by naming an IRQ line "smbus_alert". However, on stm32, the SMBus-Alert is
> part of the i2c IRQ. Using the smbus_alert naming here would lead to havi=
ng
> 2 handlers (the handler of the driver and the smbus_alert handler
> from I2C/SMBUS framework) on the unique i2c IRQ of the stm32. Meaning that
> the smbus_alert handler would get called for all IRQ generated by the stm=
32
> I2C controller.
>=20
> For that reason, the smbus_alert IRQ naming cannot be used and a dedicated
> binding is introduced.

What if we update the core to not register another irq handler if the
"smbus_alert" and main irq are the same?

I think it could work. However, while trying to make a proof-of-concept,
I found that irq descriptions in the generic i2c binding document are
probably mixed up. And before fixing that, I'd like to get HostNotify
done first.

Makes sense?


--fUYQa+Pmc3FrFX/N
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAABCgAdFiEEOZGx6rniZ1Gk92RdFA3kzBSgKbYFAl77lU8ACgkQFA3kzBSg
KbbT6g/9Egl83vNI937BTjmBcYCaXx6Gp6/eqR5ivn/5S8K8m02jfXpEFtmtcbmm
zUSWjyEJhmbtW3As/aCComDpEw4tTMM/ZknYMsJekBL5HzE+9vhIJXZv4HpQZjNw
xrWRp6+FKNiLH4gsooYoUXY20QJGCDKM5afVP+cf9krmG8GSc352k/44B32h5j3k
ipYKq79nrRmwc4znBCFWsnheElVUcBV/NdNrbF94JmilR1XjfWskZhWVVicgE0N5
by+k0pLA4y47w6FZ7t02VeOqzMQD7IcBEE+zc6tJIXkkAzdlW2qvLeRMa/yaG0nW
h9jPkiGfeVZIXVOWUEJf1IQqcdhHlbcJ5Y0YfpJqYMO91stBHvggGC1W0QpK/IDy
1NXX9Kq/Mt5wpK5NIHP3Z80I0k0SoRdIDj/9+u/uv59eOirk2fP4SGxFhIG1MCDP
yJLZGkZfG/bUytZ7q7MOZhhz1lEnFBHy+JQSz0oKBlAE1XIEWLcsc72sAIxBdY2Z
MXJ9ZqNJ3jp0G84gxO8DpKbXytRCwnMI/q3v8bPl8iPwnh09J+qiqSQa8t9z5sPD
eAndynskw8ircBx2IAWdSJsEaGW/en8kO985aA8tMl/0iuDCSZecr4L/U20VirI+
98SVuiNYHZm7ndamn2offfUBn8ZF/zN5zklIsKrVoJP71NXWTec=
=C1fS
-----END PGP SIGNATURE-----

--fUYQa+Pmc3FrFX/N--

--===============2805891913906701535==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

_______________________________________________
Linux-stm32 mailing list
Linux-stm32@st-md-mailman.stormreply.com
https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32

--===============2805891913906701535==--
