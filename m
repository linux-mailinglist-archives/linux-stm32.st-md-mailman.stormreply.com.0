Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 49C25A28763
	for <lists+linux-stm32@lfdr.de>; Wed,  5 Feb 2025 11:06:18 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 12965C78F8E;
	Wed,  5 Feb 2025 10:06:18 +0000 (UTC)
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.12])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 4542CC78F8D
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Wed,  5 Feb 2025 10:06:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
 t=1738749976; x=1770285976;
 h=from:to:subject:date:message-id:in-reply-to:references:
 mime-version:content-transfer-encoding;
 bh=m1nIzWs06AanBrJnD4cbNoscp4yRzWZnOCCF13NFqwk=;
 b=JVYhVNqYxlkQ4dXbV3a021KNjfaHjg28/gPcJbGrhzQWEf4vB90A3IuS
 wUkmcwVIY3S0ntuZ/yQtoYNrex7SYQXxAR3vLq9U0V+4cATfXp97R91qt
 QM/KMk9ZbG42MVCE6SK+66wfbeVXRF69V/0UhOpDVIrW7pFB0nS6v4y6A
 o24PkrZvuf8WyJRtPUOraqQlQ1dNOfx8eeK4LI6sbXLcYvWrw1KoSkNFx
 heDtkBk1Qd6AMv2VJRCn2WTpoUrh1StGr0qg2t/eeqwWMf7H7mWBBVUSe
 yt5//6mjIUm+oxBvntZE6nVedzSMGJpcAqoQMBkeCApPJr/WOW6iOtEXy Q==;
X-CSE-ConnectionGUID: hkaMYGheTQSXINAIK1tKNA==
X-CSE-MsgGUID: oyGTI2FnTruDnZrR3x05OQ==
X-IronPort-AV: E=McAfee;i="6700,10204,11336"; a="50699154"
X-IronPort-AV: E=Sophos;i="6.13,261,1732608000"; d="scan'208";a="50699154"
Received: from orviesa007.jf.intel.com ([10.64.159.147])
 by orvoesa104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 05 Feb 2025 02:06:14 -0800
X-CSE-ConnectionGUID: xT6a6RyCTPu/RkB2k1KF/Q==
X-CSE-MsgGUID: 1ZMHjD+ATXqAra7YRxBgMQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.12,224,1728975600"; d="scan'208";a="111297741"
Received: from mohdfai2-ilbpg12-1.png.intel.com ([10.88.227.73])
 by orviesa007.jf.intel.com with ESMTP; 05 Feb 2025 02:06:06 -0800
From: Faizal Rahim <faizal.abdul.rahim@linux.intel.com>
To: Tony Nguyen <anthony.l.nguyen@intel.com>,
 Przemek Kitszel <przemyslaw.kitszel@intel.com>,
 Andrew Lunn <andrew+netdev@lunn.ch>,
 "David S . Miller" <davem@davemloft.net>,
 Eric Dumazet <edumazet@google.com>, Jakub Kicinski <kuba@kernel.org>,
 Paolo Abeni <pabeni@redhat.com>,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Alexandre Torgue <alexandre.torgue@foss.st.com>,
 Simon Horman <horms@kernel.org>, Russell King <linux@armlinux.org.uk>,
 Alexei Starovoitov <ast@kernel.org>,
 Daniel Borkmann <daniel@iogearbox.net>,
 Jesper Dangaard Brouer <hawk@kernel.org>,
 John Fastabend <john.fastabend@gmail.com>,
 Russell King <rmk+kernel@armlinux.org.uk>, Furong Xu <0x1207@gmail.com>,
 Vladimir Oltean <vladimir.oltean@nxp.com>,
 Serge Semin <fancer.lancer@gmail.com>,
 Xiaolei Wang <xiaolei.wang@windriver.com>,
 Suraj Jaiswal <quic_jsuraj@quicinc.com>,
 Kory Maincent <kory.maincent@bootlin.com>, Petr Tesarik <petr@tesarici.cz>,
 Faizal Rahim <faizal.abdul.rahim@linux.intel.com>,
 Choong Yong Liang <yong.liang.choong@linux.intel.com>,
 Kunihiko Hayashi <hayashi.kunihiko@socionext.com>,
 Vinicius Costa Gomes <vinicius.gomes@intel.com>,
 intel-wired-lan@lists.osuosl.org, netdev@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-stm32@st-md-mailman.stormreply.com,
 linux-arm-kernel@lists.infradead.org, bpf@vger.kernel.org
Date: Wed,  5 Feb 2025 05:05:20 -0500
Message-Id: <20250205100524.1138523-6-faizal.abdul.rahim@linux.intel.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20250205100524.1138523-1-faizal.abdul.rahim@linux.intel.com>
References: <20250205100524.1138523-1-faizal.abdul.rahim@linux.intel.com>
MIME-Version: 1.0
Subject: [Linux-stm32] [PATCH iwl-next v2 5/9] igc: Add support for frame
	preemption verification
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

VGhpcyBwYXRjaCBpbXBsZW1lbnRzIHRoZSAiZXRodG9vbCAtLXNldC1tbSIgY2FsbGJhY2sgdG8g
dHJpZ2dlciB0aGUKZnJhbWUgcHJlZW1wdGlvbiB2ZXJpZmljYXRpb24gaGFuZHNoYWtlLgoKVXNl
cyB0aGUgTUFDIE1lcmdlIFNvZnR3YXJlIFZlcmlmaWNhdGlvbiAobW1zdikgbWVjaGFuaXNtIGlu
IGV0aHRvb2wKdG8gcGVyZm9ybSB0aGUgdmVyaWZpY2F0aW9uIGhhbmRzaGFrZSBmb3IgaWdjLgpU
aGUgc3RydWN0dXJlIGZwZS5tbXN2IGlzIHNldCBieSBtbXN2IGluIGV0aHRvb2wgYW5kIHNob3Vs
ZCByZW1haW4KcmVhZC1vbmx5IGZvciB0aGUgZHJpdmVyLgoKaWdjIGRvZXMgbm90IHVzZSB0d28g
bW1zdiBjYWxsYmFja3M6CmEpIGNvbmZpZ3VyZV90eCgpCiAgIC0gaWdjIGxhY2tzIHJlZ2lzdGVy
cyB0byBjb25maWd1cmUgRlBFIGluIHRoZSB0cmFuc21pdCBkaXJlY3Rpb24uCgpiKSBjb25maWd1
cmVfcG1hYygpCiAgIC0gdGhpcyBjYWxsYmFjayBkeW5hbWljYWxseSBjb250cm9scyBwbWFjX2Vu
YWJsZWQgYXQgcnVudGltZS4gRm9yCiAgICAgZXhhbXBsZSwgbW1zdiBjYWxscyBjb25maWd1cmVf
cG1hYygpIGFuZCBkaXNhYmxlcyBwbWFjX2VuYWJsZWQgd2hlbgogICAgIHRoZSBsaW5rIHBhcnRu
ZXIgZ29lcyBkb3duLCBldmVuIGlmIHRoZSB1c2VyIHByZXZpb3VzbHkgZW5hYmxlZCBpdC4KICAg
ICBUaGUgaW50ZW50aW9uIGlzIHRvIHNhdmUgcG93ZXIgYnV0IGl0IGlzIG5vdCBmZWFzaWJsZSBp
biBpZ2MKICAgICBiZWNhdXNlIGl0IGNhdXNlcyBhbiBlbmRsZXNzIGFkYXB0ZXIgcmVzZXQgbG9v
cDoKCgkgMSkgQm9hcmQgQSBhbmQgQm9hcmQgQiBjb21wbGV0ZSB0aGUgdmVyaWZpY2F0aW9uIGhh
bmRzaGFrZS4KICAgICAgICAgICAgVHggbW9kZSByZWdpc3RlciBmb3IgYm90aCBib2FyZHMgYXJl
IGluIFRTTiBtb2RlLgoJIDIpIEJvYXJkIEIgbGluayBnb2VzIGRvd24uCgogICAgICAgICBPbiBC
b2FyZCBBOgoJIDMpIG1tc3YgY2FsbHMgY29uZmlndXJlX3BtYWMoKSB3aXRoIHBtYWNfZW5hYmxl
ZCA9IGZhbHNlLgoJIDQpIGNvbmZpZ3VyZV9wbWFjKCkgaW4gaWdjIHVwZGF0ZXMgYSBuZXcgZmll
bGQgYmFzZWQgb24KICAgICAgICAgICAgcG1hY19lbmFibGVkLiBEcml2ZXIgdXNlcyB0aGlzIGZp
ZWxkIGluIGlnY190c25fbmV3X2ZsYWdzKCkKICAgICAgICAgICAgdG8gaW5kaWNhdGUgdGhhdCB0
aGUgdXNlciBlbmFibGVkL2Rpc2FibGVkIEZQRS4KCSA1KSBjb25maWd1cmVfcG1hYygpIGluIGln
YyBjYWxscyBpZ2NfdHNuX29mZmxvYWRfYXBwbHkoKSB0byBjaGVjawogICAgICAgICAgICB3aGV0
aGVyIGFuIGFkYXB0ZXIgcmVzZXQgaXMgbmVlZGVkLiBDYWxscyBleGlzdGluZyBsb2dpYyBpbgog
ICAgICAgICAgICBpZ2NfdHNuX3dpbGxfdHhfbW9kZV9jaGFuZ2UoKSBhbmQgaWdjX3Rzbl9uZXdf
ZmxhZ3MoKS4KCSA2KSBTaW5jZSBwbWFjX2VuYWJsZWQgaXMgbm93IGRpc2FibGVkIGFuZCBubyBv
dGhlciBUU04gZmVhdHVyZQogICAgICAgICAgICBpcyBhY3RpdmUsIGlnY190c25fd2lsbF90eF9t
b2RlX2NoYW5nZSgpIGV2YWx1YXRlcyB0byB0cnVlCiAgICAgICAgICAgIGJlY2F1c2UgVHggbW9k
ZSB3aWxsIHN3aXRjaCBmcm9tIFRTTiB0byBMZWdhY3kuCgkgNykgRHJpdmVyIHJlc2V0cyB0aGUg
YWRhcHRlci4KCSA4KSBSZWdpc3RlcnMgYXJlIHNldCwgYW5kIFR4IG1vZGUgc3dpdGNoZXMgdG8g
TGVnYWN5LgoJIDkpIFdoZW4gbGluayBwYXJ0bmVyIGlzIHVwLCBzdGVwcyAz4oCTOCByZXBlYXQs
IGJ1dCB0aGlzIHRpbWUKICAgICAgICAgICAgd2l0aCBwbWFjX2VuYWJsZWQgPSB0cnVlLCByZWFj
dGl2YXRpbmcgVFNOLgogICAgICAgICAgICBpZ2NfdHNuX3dpbGxfdHhfbW9kZV9jaGFuZ2UoKSBl
dmFsdWF0ZXMgdG8gdHJ1ZSBhZ2FpbiwKICAgICAgICAgICAgc2luY2UgVHggbW9kZSB3aWxsIHN3
aXRjaCBmcm9tIExlZ2FjeSB0byBUU04uCgkxMCkgRHJpdmVyIHJlc2V0cyB0aGUgYWRhcHRlci4K
CTExKSBSZXN0IGFkYXB0ZXIgY29tcGxldGVzLCByZWdpc3RlcnMgYXJlIHNldCwgYW5kIFR4IG1v
ZGUKCSAgICBzd2l0Y2hlcyB0byBUU04uCgogICAgICAgIE9uIEJvYXJkIEI6CgkxMikgQWRhcHRl
ciByZXNldCBvbiBCb2FyZCBBIGF0IHN0ZXAgMTAgY2F1c2VzIGl0IHRvIGRldGVjdCBpdHMKICAg
ICAgICAgICAgbGluayBwYXJ0bmVyIGFzIGRvd24uCgkxMykgUmVwZWF0cyBzdGVwcyAz4oCTOC4K
CTE0KSBPbmNlIHJlc2V0IGFkYXB0ZXIgb24gQm9hcmQgQSBpcyBjb21wbGV0ZWQgYXQgc3RlcCAx
MSwgaXQKICAgICAgICAgICAgZGV0ZWN0cyBpdHMgbGluayBwYXJ0bmVyIGFzIHVwLgoJMTUpIFJl
cGVhdHMgc3RlcHMgOeKAkzExLgoKICAgLSB0aGlzIGN5Y2xlIHJlcGVhdHMgaW5kZWZpbml0ZWx5
LiBUbyBhdm9pZCB0aGlzIGlzc3VlLCBJR0Mgb25seSB1c2VzCiAgICAgbW1zdi5wbWFjX2VuYWJs
ZWQgdG8gdHJhY2sgd2hldGhlciBGUEUgaXMgZW5hYmxlZCBvciBkaXNhYmxlZC4KCkNvLWRldmVs
b3BlZC1ieTogVmluaWNpdXMgQ29zdGEgR29tZXMgPHZpbmljaXVzLmdvbWVzQGludGVsLmNvbT4K
U2lnbmVkLW9mZi1ieTogVmluaWNpdXMgQ29zdGEgR29tZXMgPHZpbmljaXVzLmdvbWVzQGludGVs
LmNvbT4KQ28tZGV2ZWxvcGVkLWJ5OiBDaG9vbmcgWW9uZyBMaWFuZyA8eW9uZy5saWFuZy5jaG9v
bmdAbGludXguaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBDaG9vbmcgWW9uZyBMaWFuZyA8eW9u
Zy5saWFuZy5jaG9vbmdAbGludXguaW50ZWwuY29tPgpTaWduZWQtb2ZmLWJ5OiBGYWl6YWwgUmFo
aW0gPGZhaXphbC5hYmR1bC5yYWhpbUBsaW51eC5pbnRlbC5jb20+Ci0tLQogZHJpdmVycy9uZXQv
ZXRoZXJuZXQvaW50ZWwvaWdjL2lnYy5oICAgICAgICAgfCAgMTIgKy0KIGRyaXZlcnMvbmV0L2V0
aGVybmV0L2ludGVsL2lnYy9pZ2NfZGVmaW5lcy5oIHwgIDEwICstCiBkcml2ZXJzL25ldC9ldGhl
cm5ldC9pbnRlbC9pZ2MvaWdjX2V0aHRvb2wuYyB8ICAxOSArKysKIGRyaXZlcnMvbmV0L2V0aGVy
bmV0L2ludGVsL2lnYy9pZ2NfbWFpbi5jICAgIHwgIDUwICsrKysrLQogZHJpdmVycy9uZXQvZXRo
ZXJuZXQvaW50ZWwvaWdjL2lnY190c24uYyAgICAgfCAxNjAgKysrKysrKysrKysrKysrKysrLQog
ZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaWdjL2lnY190c24uaCAgICAgfCAgMzMgKysrKwog
NiBmaWxlcyBjaGFuZ2VkLCAyNzkgaW5zZXJ0aW9ucygrKSwgNSBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pZ2MvaWdjLmggYi9kcml2ZXJzL25l
dC9ldGhlcm5ldC9pbnRlbC9pZ2MvaWdjLmgKaW5kZXggMjJlY2RhYzI2Y2Y0Li43MDViZDQ3Mzll
M2IgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2MuaAorKysg
Yi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pZ2MvaWdjLmgKQEAgLTQwLDYgKzQwLDEwIEBA
IHZvaWQgaWdjX2V0aHRvb2xfc2V0X29wcyhzdHJ1Y3QgbmV0X2RldmljZSAqKTsKIAogI2RlZmlu
ZSBJR0NfTUFYX1RYX1RTVEFNUF9SRUdTCQk0CiAKK3N0cnVjdCBmcGVfdCB7CisJc3RydWN0IGV0
aHRvb2xfbW1zdiBtbXN2OworfTsKKwogZW51bSBpZ2NfbWFjX2ZpbHRlcl90eXBlIHsKIAlJR0Nf
TUFDX0ZJTFRFUl9UWVBFX0RTVCA9IDAsCiAJSUdDX01BQ19GSUxURVJfVFlQRV9TUkMKQEAgLTMz
Miw2ICszMzYsOCBAQCBzdHJ1Y3QgaWdjX2FkYXB0ZXIgewogCQlzdHJ1Y3QgdGltZXNwZWM2NCBw
ZXJpb2Q7CiAJfSBwZXJvdXRbSUdDX05fUEVST1VUXTsKIAorCXN0cnVjdCBmcGVfdCBmcGU7CisK
IAkvKiBMRURzICovCiAJc3RydWN0IG11dGV4IGxlZF9tdXRleDsKIAlzdHJ1Y3QgaWdjX2xlZF9j
bGFzc2RldiAqbGVkczsKQEAgLTM4OSwxMCArMzk1LDExIEBAIGV4dGVybiBjaGFyIGlnY19kcml2
ZXJfbmFtZVtdOwogI2RlZmluZSBJR0NfRkxBR19UU05fUUJWX0VOQUJMRUQJQklUKDE3KQogI2Rl
ZmluZSBJR0NfRkxBR19UU05fUUFWX0VOQUJMRUQJQklUKDE4KQogI2RlZmluZSBJR0NfRkxBR19U
U05fTEVHQUNZX0VOQUJMRUQJQklUKDE5KQorI2RlZmluZSBJR0NfRkxBR19UU05fUFJFRU1QVF9F
TkFCTEVECUJJVCgyMCkKIAogI2RlZmluZSBJR0NfRkxBR19UU05fQU5ZX0VOQUJMRUQJCQkJXAog
CShJR0NfRkxBR19UU05fUUJWX0VOQUJMRUQgfCBJR0NfRkxBR19UU05fUUFWX0VOQUJMRUQgfAlc
Ci0JIElHQ19GTEFHX1RTTl9MRUdBQ1lfRU5BQkxFRCkKKwkgSUdDX0ZMQUdfVFNOX0xFR0FDWV9F
TkFCTEVEIHwgSUdDX0ZMQUdfVFNOX1BSRUVNUFRfRU5BQkxFRCkKIAogI2RlZmluZSBJR0NfRkxB
R19SU1NfRklFTERfSVBWNF9VRFAJQklUKDYpCiAjZGVmaW5lIElHQ19GTEFHX1JTU19GSUVMRF9J
UFY2X1VEUAlCSVQoNykKQEAgLTczNiw3ICs3NDMsMTAgQEAgc3RydWN0IGlnY19uZmNfcnVsZSAq
aWdjX2dldF9uZmNfcnVsZShzdHJ1Y3QgaWdjX2FkYXB0ZXIgKmFkYXB0ZXIsCiAJCQkJICAgICAg
dTMyIGxvY2F0aW9uKTsKIGludCBpZ2NfYWRkX25mY19ydWxlKHN0cnVjdCBpZ2NfYWRhcHRlciAq
YWRhcHRlciwgc3RydWN0IGlnY19uZmNfcnVsZSAqcnVsZSk7CiB2b2lkIGlnY19kZWxfbmZjX3J1
bGUoc3RydWN0IGlnY19hZGFwdGVyICphZGFwdGVyLCBzdHJ1Y3QgaWdjX25mY19ydWxlICpydWxl
KTsKK3ZvaWQgaWdjX2Rpc2FibGVfZW1wdHlfYWRkcl9yZWN2KHN0cnVjdCBpZ2NfYWRhcHRlciAq
YWRhcHRlcik7CitpbnQgaWdjX2VuYWJsZV9lbXB0eV9hZGRyX3JlY3Yoc3RydWN0IGlnY19hZGFw
dGVyICphZGFwdGVyKTsKIHN0cnVjdCBpZ2NfcmluZyAqaWdjX2dldF90eF9yaW5nKHN0cnVjdCBp
Z2NfYWRhcHRlciAqYWRhcHRlciwgaW50IGNwdSk7Cit2b2lkIGlnY19mbHVzaF90eF9kZXNjcmlw
dG9ycyhzdHJ1Y3QgaWdjX3JpbmcgKnJpbmcpOwogdm9pZCBpZ2NfcHRwX2luaXQoc3RydWN0IGln
Y19hZGFwdGVyICphZGFwdGVyKTsKIHZvaWQgaWdjX3B0cF9yZXNldChzdHJ1Y3QgaWdjX2FkYXB0
ZXIgKmFkYXB0ZXIpOwogdm9pZCBpZ2NfcHRwX3N1c3BlbmQoc3RydWN0IGlnY19hZGFwdGVyICph
ZGFwdGVyKTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2Nf
ZGVmaW5lcy5oIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaWdjL2lnY19kZWZpbmVzLmgK
aW5kZXggYjE5YWM2ZjMwZGFjLi41NjNiMTU0YzNlOTQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0
L2V0aGVybmV0L2ludGVsL2lnYy9pZ2NfZGVmaW5lcy5oCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVy
bmV0L2ludGVsL2lnYy9pZ2NfZGVmaW5lcy5oCkBAIC0zMDgsNiArMzA4LDEwIEBACiAjZGVmaW5l
IElHQ19UWERfRFRZUF9DCQkweDAwMDAwMDAwIC8qIENvbnRleHQgRGVzY3JpcHRvciAqLwogI2Rl
ZmluZSBJR0NfVFhEX1BPUFRTX0lYU00JMHgwMSAgICAgICAvKiBJbnNlcnQgSVAgY2hlY2tzdW0g
Ki8KICNkZWZpbmUgSUdDX1RYRF9QT1BUU19UWFNNCTB4MDIgICAgICAgLyogSW5zZXJ0IFRDUC9V
RFAgY2hlY2tzdW0gKi8KKyNkZWZpbmUgSUdDX1RYRF9QT1BUU19TTURfVgkweDAxICAgICAgIC8q
IFRyYW5zbWl0dGVkIHBhY2tldCBpcyBhIFNNRC1WZXJpZnkgKi8KKyNkZWZpbmUgSUdDX1RYRF9Q
T1BUU19TTURfUgkweDAyICAgICAgIC8qIFRyYW5zbWl0dGVkIHBhY2tldCBpcyBhIFNNRC1SZXNw
b25zZSAqLworI2RlZmluZSBJR0NfVFhEX1BPUFRTX1NNRF9TSElGVAkxMgorI2RlZmluZSBJR0Nf
VFhEX1BPUFRTX1NNRF9NQVNLCTB4MzAwMAogI2RlZmluZSBJR0NfVFhEX0NNRF9FT1AJCTB4MDEw
MDAwMDAgLyogRW5kIG9mIFBhY2tldCAqLwogI2RlZmluZSBJR0NfVFhEX0NNRF9JQwkJMHgwNDAw
MDAwMCAvKiBJbnNlcnQgQ2hlY2tzdW0gKi8KICNkZWZpbmUgSUdDX1RYRF9DTURfREVYVAkweDIw
MDAwMDAwIC8qIERlc2MgZXh0ZW5zaW9uICgwID0gbGVnYWN5KSAqLwpAQCAtMzYzLDYgKzM2Nyw4
IEBACiAjZGVmaW5lIElHQ19TUlJDVExfVElNRVIwU0VMKHRpbWVyKQkoKCh0aW1lcikgJiAweDMp
IDw8IDE3KQogCiAvKiBSZWNlaXZlIERlc2NyaXB0b3IgYml0IGRlZmluaXRpb25zICovCisjZGVm
aW5lIElHQ19SWERfU1RBVF9TTURfVFlQRV9WCTB4MDEJLyogU01ELVYgUGFja2V0ICovCisjZGVm
aW5lIElHQ19SWERfU1RBVF9TTURfVFlQRV9SCTB4MDIJLyogU01ELVIgUGFja2V0ICovCiAjZGVm
aW5lIElHQ19SWERfU1RBVF9FT1AJMHgwMgkvKiBFbmQgb2YgUGFja2V0ICovCiAjZGVmaW5lIElH
Q19SWERfU1RBVF9JWFNNCTB4MDQJLyogSWdub3JlIGNoZWNrc3VtICovCiAjZGVmaW5lIElHQ19S
WERfU1RBVF9VRFBDUwkweDEwCS8qIFVEUCB4c3VtIGNhbGN1bGF0ZWQgKi8KQEAgLTM3Miw3ICsz
NzgsOCBAQAogI2RlZmluZSBJR0NfUlhERVhUX1NUQVRFUlJfTEIJMHgwMDA0MDAwMAogCiAvKiBB
ZHZhbmNlZCBSZWNlaXZlIERlc2NyaXB0b3IgYml0IGRlZmluaXRpb25zICovCi0jZGVmaW5lIElH
Q19SWERBRFZfU1RBVF9UU0lQCTB4MDgwMDAgLyogdGltZXN0YW1wIGluIHBhY2tldCAqLworI2Rl
ZmluZSBJR0NfUlhEQURWX1NUQVRfU01EX1RZUEVfTUFTSwkweDA2MDAwCisjZGVmaW5lIElHQ19S
WERBRFZfU1RBVF9UU0lQCQkweDA4MDAwIC8qIHRpbWVzdGFtcCBpbiBwYWNrZXQgKi8KIAogI2Rl
ZmluZSBJR0NfUlhERVhUX1NUQVRFUlJfTDRFCQkweDIwMDAwMDAwCiAjZGVmaW5lIElHQ19SWERF
WFRfU1RBVEVSUl9JUEUJCTB4NDAwMDAwMDAKQEAgLTU0Myw2ICs1NTAsNyBAQAogCiAvKiBUcmFu
c21pdCBTY2hlZHVsaW5nICovCiAjZGVmaW5lIElHQ19UUUFWQ1RSTF9UUkFOU01JVF9NT0RFX1RT
TgkweDAwMDAwMDAxCisjZGVmaW5lIElHQ19UUUFWQ1RSTF9QUkVFTVBUX0VOQQkweDAwMDAwMDAy
CiAjZGVmaW5lIElHQ19UUUFWQ1RSTF9FTkhBTkNFRF9RQVYJMHgwMDAwMDAwOAogI2RlZmluZSBJ
R0NfVFFBVkNUUkxfRlVUU0NERElTCQkweDAwMDAwMDgwCiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
bmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2NfZXRodG9vbC5jIGIvZHJpdmVycy9uZXQvZXRoZXJu
ZXQvaW50ZWwvaWdjL2lnY19ldGh0b29sLmMKaW5kZXggODE3ODM4Njc3ODE3Li40MWNiMDM4MTZm
OTIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2NfZXRodG9v
bC5jCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2NfZXRodG9vbC5jCkBA
IC04LDYgKzgsNyBAQAogCiAjaW5jbHVkZSAiaWdjLmgiCiAjaW5jbHVkZSAiaWdjX2RpYWcuaCIK
KyNpbmNsdWRlICJpZ2NfdHNuLmgiCiAKIC8qIGZvcndhcmQgZGVjbGFyYXRpb24gKi8KIHN0cnVj
dCBpZ2Nfc3RhdHMgewpAQCAtMTc4MSw2ICsxNzgyLDIzIEBAIHN0YXRpYyBpbnQgaWdjX2V0aHRv
b2xfc2V0X2VlZShzdHJ1Y3QgbmV0X2RldmljZSAqbmV0ZGV2LAogCXJldHVybiAwOwogfQogCitz
dGF0aWMgaW50IGlnY19ldGh0b29sX3NldF9tbShzdHJ1Y3QgbmV0X2RldmljZSAqbmV0ZGV2LAor
CQkJICAgICAgc3RydWN0IGV0aHRvb2xfbW1fY2ZnICpjbWQsCisJCQkgICAgICBzdHJ1Y3QgbmV0
bGlua19leHRfYWNrICpleHRhY2spCit7CisJc3RydWN0IGlnY19hZGFwdGVyICphZGFwdGVyID0g
bmV0ZGV2X3ByaXYobmV0ZGV2KTsKKwlzdHJ1Y3QgZnBlX3QgKmZwZSA9ICZhZGFwdGVyLT5mcGU7
CisKKwlldGh0b29sX21tc3Zfc2V0X21tKCZmcGUtPm1tc3YsIGNtZCk7CisKKwlpZiAoZnBlLT5t
bXN2LnBtYWNfZW5hYmxlZCkKKwkJc3RhdGljX2JyYW5jaF9lbmFibGUoJmlnY19mcGVfZW5hYmxl
ZCk7CisJZWxzZQorCQlzdGF0aWNfYnJhbmNoX2Rpc2FibGUoJmlnY19mcGVfZW5hYmxlZCk7CisK
KwlyZXR1cm4gaWdjX3Rzbl9vZmZsb2FkX2FwcGx5KGFkYXB0ZXIpOworfQorCiBzdGF0aWMgaW50
IGlnY19ldGh0b29sX2dldF9saW5rX2tzZXR0aW5ncyhzdHJ1Y3QgbmV0X2RldmljZSAqbmV0ZGV2
LAogCQkJCQkgIHN0cnVjdCBldGh0b29sX2xpbmtfa3NldHRpbmdzICpjbWQpCiB7CkBAIC0yMDY4
LDYgKzIwODYsNyBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGV0aHRvb2xfb3BzIGlnY19ldGh0b29s
X29wcyA9IHsKIAkuc2V0X3J4ZmgJCT0gaWdjX2V0aHRvb2xfc2V0X3J4ZmgsCiAJLmdldF90c19p
bmZvCQk9IGlnY19ldGh0b29sX2dldF90c19pbmZvLAogCS5nZXRfY2hhbm5lbHMJCT0gaWdjX2V0
aHRvb2xfZ2V0X2NoYW5uZWxzLAorCS5zZXRfbW0JCQk9IGlnY19ldGh0b29sX3NldF9tbSwKIAku
c2V0X2NoYW5uZWxzCQk9IGlnY19ldGh0b29sX3NldF9jaGFubmVscywKIAkuZ2V0X3ByaXZfZmxh
Z3MJCT0gaWdjX2V0aHRvb2xfZ2V0X3ByaXZfZmxhZ3MsCiAJLnNldF9wcml2X2ZsYWdzCQk9IGln
Y19ldGh0b29sX3NldF9wcml2X2ZsYWdzLApkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvZXRoZXJu
ZXQvaW50ZWwvaWdjL2lnY19tYWluLmMgYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pZ2Mv
aWdjX21haW4uYwppbmRleCA0NGU0ZjkyNTQ5MWYuLjM5NjQxMDUyMmUwMSAxMDA2NDQKLS0tIGEv
ZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaWdjL2lnY19tYWluLmMKKysrIGIvZHJpdmVycy9u
ZXQvZXRoZXJuZXQvaW50ZWwvaWdjL2lnY19tYWluLmMKQEAgLTI1MjksNyArMjUyOSw3IEBAIHN0
YXRpYyBpbnQgaWdjX3hkcF9ydW5fcHJvZyhzdHJ1Y3QgaWdjX2FkYXB0ZXIgKmFkYXB0ZXIsIHN0
cnVjdCB4ZHBfYnVmZiAqeGRwKQogfQogCiAvKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgX19uZXRp
Zl90eF9sb2NrIGlzIGhlbGQgYnkgdGhlIGNhbGxlci4gKi8KLXN0YXRpYyB2b2lkIGlnY19mbHVz
aF90eF9kZXNjcmlwdG9ycyhzdHJ1Y3QgaWdjX3JpbmcgKnJpbmcpCit2b2lkIGlnY19mbHVzaF90
eF9kZXNjcmlwdG9ycyhzdHJ1Y3QgaWdjX3JpbmcgKnJpbmcpCiB7CiAJLyogT25jZSB0YWlsIHBv
aW50ZXIgaXMgdXBkYXRlZCwgaGFyZHdhcmUgY2FuIGZldGNoIHRoZSBkZXNjcmlwdG9ycwogCSAq
IGFueSB0aW1lIHNvIHdlIGlzc3VlIGEgd3JpdGUgbWVtYmFyIGhlcmUgdG8gZW5zdXJlIGFsbCBt
ZW1vcnkKQEAgLTI2MTgsNiArMjYxOCwxNSBAQCBzdGF0aWMgaW50IGlnY19jbGVhbl9yeF9pcnEo
c3RydWN0IGlnY19xX3ZlY3RvciAqcV92ZWN0b3IsIGNvbnN0IGludCBidWRnZXQpCiAJCQlzaXpl
IC09IElHQ19UU19IRFJfTEVOOwogCQl9CiAKKwkJaWYgKHN0YXRpY19icmFuY2hfdW5saWtlbHko
JmlnY19mcGVfZW5hYmxlZCkgJiYKKwkJICAgIGlnY19mcGVfaXNfdmVyaWZ5X29yX3Jlc3BvbnNl
KHJ4X2Rlc2MsIHNpemUpKSB7CisJCQlpZ2NfZnBlX2xwX2V2ZW50X3N0YXR1cyhyeF9kZXNjLCAm
YWRhcHRlci0+ZnBlLm1tc3YpOworCQkJLyogQWR2YW5jZSB0aGUgcmluZyBuZXh0LXRvLWNsZWFu
ICovCisJCQlpZ2NfaXNfbm9uX2VvcChyeF9yaW5nLCByeF9kZXNjKTsKKwkJCWNsZWFuZWRfY291
bnQrKzsKKwkJCWNvbnRpbnVlOworCQl9CisKIAkJaWYgKCFza2IpIHsKIAkJCXhkcF9pbml0X2J1
ZmYoJmN0eC54ZHAsIHRydWVzaXplLCAmcnhfcmluZy0+eGRwX3J4cSk7CiAJCQl4ZHBfcHJlcGFy
ZV9idWZmKCZjdHgueGRwLCBwa3RidWYgLSBpZ2Nfcnhfb2Zmc2V0KHJ4X3JpbmcpLApAQCAtMzA2
NSw2ICszMDc0LDExIEBAIHN0YXRpYyBib29sIGlnY19jbGVhbl90eF9pcnEoc3RydWN0IGlnY19x
X3ZlY3RvciAqcV92ZWN0b3IsIGludCBuYXBpX2J1ZGdldCkKIAkJaWYgKCEoZW9wX2Rlc2MtPndi
LnN0YXR1cyAmIGNwdV90b19sZTMyKElHQ19UWERfU1RBVF9ERCkpKQogCQkJYnJlYWs7CiAKKwkJ
aWYgKHN0YXRpY19icmFuY2hfdW5saWtlbHkoJmlnY19mcGVfZW5hYmxlZCkgJiYKKwkJICAgIGln
Y19mcGVfdHJhbnNtaXR0ZWRfc21kX3YodHhfZGVzYykpCisJCQlldGh0b29sX21tc3ZfZXZlbnRf
aGFuZGxlKCZhZGFwdGVyLT5mcGUubW1zdiwKKwkJCQkJCSAgRVRIVE9PTF9NTVNWX0xEX1NFTlRf
VkVSSUZZX01QQUNLRVQpOworCiAJCS8qIEhvbGQgdGhlIGNvbXBsZXRpb25zIHdoaWxlIHRoZXJl
J3MgYSBwZW5kaW5nIHR4IGhhcmR3YXJlCiAJCSAqIHRpbWVzdGFtcCByZXF1ZXN0IGZyb20gWERQ
IFR4IG1ldGFkYXRhLgogCQkgKi8KQEAgLTM5NTYsNiArMzk3MCwzMCBAQCBzdGF0aWMgaW50IGln
Y191Y191bnN5bmMoc3RydWN0IG5ldF9kZXZpY2UgKm5ldGRldiwgY29uc3QgdW5zaWduZWQgY2hh
ciAqYWRkcikKIAlyZXR1cm4gMDsKIH0KIAorLyoqCisgKiBpZ2NfZW5hYmxlX2VtcHR5X2FkZHJf
cmVjdiAtIEVuYWJsZSByeCBvZiBwYWNrZXRzIHdpdGggYWxsLXplcm9lcyBNQUMgYWRkcmVzcwor
ICogQGFkYXB0ZXI6IFBvaW50ZXIgdG8gdGhlIGlnY19hZGFwdGVyIHN0cnVjdHVyZS4KKyAqCisg
KiBGcmFtZSBwcmVlbXB0aW9uIHZlcmlmaWNhdGlvbiByZXF1aXJlcyB0aGF0IHBhY2tldHMgd2l0
aCB0aGUgYWxsLXplcm9lcworICogTUFDIGFkZHJlc3MgYXJlIGFsbG93ZWQgdG8gYmUgcmVjZWl2
ZWQgYnkgSUdDLiBUaGlzIGZ1bmN0aW9uIGFkZHMgdGhlCisgKiBhbGwtemVyb2VzIGRlc3RpbmF0
aW9uIGFkZHJlc3MgdG8gdGhlIGxpc3Qgb2YgYWNjZXB0YWJsZSBhZGRyZXNzZXMuCisgKgorICog
UmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIG5lZ2F0aXZlIHZhbHVlIG90aGVyd2lzZS4KKyAqLworaW50
IGlnY19lbmFibGVfZW1wdHlfYWRkcl9yZWN2KHN0cnVjdCBpZ2NfYWRhcHRlciAqYWRhcHRlcikK
K3sKKwl1OCBlbXB0eVtFVEhfQUxFTl0gPSB7IH07CisKKwlyZXR1cm4gaWdjX2FkZF9tYWNfZmls
dGVyKGFkYXB0ZXIsIElHQ19NQUNfRklMVEVSX1RZUEVfRFNULCBlbXB0eSwgLTEpOworfQorCit2
b2lkIGlnY19kaXNhYmxlX2VtcHR5X2FkZHJfcmVjdihzdHJ1Y3QgaWdjX2FkYXB0ZXIgKmFkYXB0
ZXIpCit7CisJdTggZW1wdHlbRVRIX0FMRU5dID0geyB9OworCisJaWdjX2RlbF9tYWNfZmlsdGVy
KGFkYXB0ZXIsIElHQ19NQUNfRklMVEVSX1RZUEVfRFNULCBlbXB0eSk7Cit9CisKIC8qKgogICog
aWdjX3NldF9yeF9tb2RlIC0gU2Vjb25kYXJ5IFVuaWNhc3QsIE11bHRpY2FzdCBhbmQgUHJvbWlz
Y3VvdXMgbW9kZSBzZXQKICAqIEBuZXRkZXY6IG5ldHdvcmsgaW50ZXJmYWNlIGRldmljZSBzdHJ1
Y3R1cmUKQEAgLTU3NTUsNiArNTc5MywxMCBAQCBzdGF0aWMgdm9pZCBpZ2Nfd2F0Y2hkb2dfdGFz
ayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAJCQkgKi8KIAkJCWlnY190c25fYWRqdXN0X3R4
dGltZV9vZmZzZXQoYWRhcHRlcik7CiAKKwkJCWlmIChhZGFwdGVyLT5mcGUubW1zdi5wbWFjX2Vu
YWJsZWQpCisJCQkJZXRodG9vbF9tbXN2X2xpbmtfc3RhdGVfaGFuZGxlKCZhZGFwdGVyLT5mcGUu
bW1zdiwKKwkJCQkJCQkgICAgICAgdHJ1ZSk7CisKIAkJCWlmIChhZGFwdGVyLT5saW5rX3NwZWVk
ICE9IFNQRUVEXzEwMDApCiAJCQkJZ290byBub193YWl0OwogCkBAIC01NzkwLDYgKzU4MzIsMTAg
QEAgc3RhdGljIHZvaWQgaWdjX3dhdGNoZG9nX3Rhc2soc3RydWN0IHdvcmtfc3RydWN0ICp3b3Jr
KQogCQkJbmV0ZGV2X2luZm8obmV0ZGV2LCAiTklDIExpbmsgaXMgRG93blxuIik7CiAJCQluZXRp
Zl9jYXJyaWVyX29mZihuZXRkZXYpOwogCisJCQlpZiAoYWRhcHRlci0+ZnBlLm1tc3YucG1hY19l
bmFibGVkKQorCQkJCWV0aHRvb2xfbW1zdl9saW5rX3N0YXRlX2hhbmRsZSgmYWRhcHRlci0+ZnBl
Lm1tc3YsCisJCQkJCQkJICAgICAgIGZhbHNlKTsKKwogCQkJLyogbGluayBzdGF0ZSBoYXMgY2hh
bmdlZCwgc2NoZWR1bGUgcGh5IGluZm8gdXBkYXRlICovCiAJCQlpZiAoIXRlc3RfYml0KF9fSUdD
X0RPV04sICZhZGFwdGVyLT5zdGF0ZSkpCiAJCQkJbW9kX3RpbWVyKCZhZGFwdGVyLT5waHlfaW5m
b190aW1lciwKQEAgLTcxMTAsNiArNzE1Niw4IEBAIHN0YXRpYyBpbnQgaWdjX3Byb2JlKHN0cnVj
dCBwY2lfZGV2ICpwZGV2LAogCiAJaWdjX3Rzbl9jbGVhcl9zY2hlZHVsZShhZGFwdGVyKTsKIAor
CWlnY19mcGVfaW5pdChhZGFwdGVyKTsKKwogCS8qIHJlc2V0IHRoZSBoYXJkd2FyZSB3aXRoIHRo
ZSBuZXcgc2V0dGluZ3MgKi8KIAlpZ2NfcmVzZXQoYWRhcHRlcik7CiAKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2NfdHNuLmMgYi9kcml2ZXJzL25ldC9ldGhl
cm5ldC9pbnRlbC9pZ2MvaWdjX3Rzbi5jCmluZGV4IGYwMjEzY2ZjZTA3ZC4uNTJmZjZmMzI0ZDc5
IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pZ2MvaWdjX3Rzbi5jCisr
KyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2NfdHNuLmMKQEAgLTEsMTAgKzEs
MTUzIEBACiAvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAogLyogQ29weXJpZ2h0
IChjKSAgMjAxOSBJbnRlbCBDb3Jwb3JhdGlvbiAqLwogCisjaW5jbHVkZSA8bGludXgva2VybmVs
Lmg+CiAjaW5jbHVkZSAiaWdjLmgiCisjaW5jbHVkZSAiaWdjX2Jhc2UuaCIKICNpbmNsdWRlICJp
Z2NfaHcuaCIKICNpbmNsdWRlICJpZ2NfdHNuLmgiCiAKK0RFRklORV9TVEFUSUNfS0VZX0ZBTFNF
KGlnY19mcGVfZW5hYmxlZCk7CisKK3N0YXRpYyBpbnQgaWdjX2ZwZV9pbml0X3NtZF9mcmFtZShz
dHJ1Y3QgaWdjX3JpbmcgKnJpbmcsCisJCQkJICBzdHJ1Y3QgaWdjX3R4X2J1ZmZlciAqYnVmZmVy
LAorCQkJCSAgc3RydWN0IHNrX2J1ZmYgKnNrYikKK3sKKwlkbWFfYWRkcl90IGRtYSA9IGRtYV9t
YXBfc2luZ2xlKHJpbmctPmRldiwgc2tiLT5kYXRhLCBza2ItPmxlbiwKKwkJCQkJRE1BX1RPX0RF
VklDRSk7CisKKwlpZiAoZG1hX21hcHBpbmdfZXJyb3IocmluZy0+ZGV2LCBkbWEpKSB7CisJCW5l
dGRldl9lcnJfb25jZShyaW5nLT5uZXRkZXYsICJGYWlsZWQgdG8gbWFwIERNQSBmb3IgVFhcbiIp
OworCQlyZXR1cm4gLUVOT01FTTsKKwl9CisKKwlidWZmZXItPnNrYiA9IHNrYjsKKwlidWZmZXIt
PnByb3RvY29sID0gMDsKKwlidWZmZXItPmJ5dGVjb3VudCA9IHNrYi0+bGVuOworCWJ1ZmZlci0+
Z3NvX3NlZ3MgPSAxOworCWJ1ZmZlci0+dGltZV9zdGFtcCA9IGppZmZpZXM7CisJZG1hX3VubWFw
X2xlbl9zZXQoYnVmZmVyLCBsZW4sIHNrYi0+bGVuKTsKKwlkbWFfdW5tYXBfYWRkcl9zZXQoYnVm
ZmVyLCBkbWEsIGRtYSk7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBpZ2NfZnBlX2lu
aXRfdHhfZGVzY3JpcHRvcihzdHJ1Y3QgaWdjX3JpbmcgKnJpbmcsCisJCQkJICAgICAgc3RydWN0
IHNrX2J1ZmYgKnNrYiwgaW50IHR5cGUpCit7CisJc3RydWN0IGlnY190eF9idWZmZXIgKmJ1ZmZl
cjsKKwl1bmlvbiBpZ2NfYWR2X3R4X2Rlc2MgKmRlc2M7CisJdTMyIGNtZF90eXBlLCBvbGluZm9f
c3RhdHVzOworCWludCBlcnI7CisKKwlpZiAoIWlnY19kZXNjX3VudXNlZChyaW5nKSkKKwkJcmV0
dXJuIC1FQlVTWTsKKworCWlmICh0eXBlICE9IElHQ19UWERfUE9QVFNfU01EX1YgJiYgdHlwZSAh
PSBJR0NfVFhEX1BPUFRTX1NNRF9SKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWJ1ZmZlciA9ICZy
aW5nLT50eF9idWZmZXJfaW5mb1tyaW5nLT5uZXh0X3RvX3VzZV07CisJZXJyID0gaWdjX2ZwZV9p
bml0X3NtZF9mcmFtZShyaW5nLCBidWZmZXIsIHNrYik7CisJaWYgKGVycikKKwkJcmV0dXJuIGVy
cjsKKworCWNtZF90eXBlID0gSUdDX0FEVlRYRF9EVFlQX0RBVEEgfCBJR0NfQURWVFhEX0RDTURf
REVYVCB8CisJCSAgIElHQ19BRFZUWERfRENNRF9JRkNTIHwgSUdDX1RYRF9EQ01EIHwKKwkJICAg
YnVmZmVyLT5ieXRlY291bnQ7CisJb2xpbmZvX3N0YXR1cyA9IGJ1ZmZlci0+Ynl0ZWNvdW50IDw8
IElHQ19BRFZUWERfUEFZTEVOX1NISUZUOworCisJc3dpdGNoICh0eXBlKSB7CisJY2FzZSBJR0Nf
VFhEX1BPUFRTX1NNRF9WOgorCQlvbGluZm9fc3RhdHVzIHw9IChJR0NfVFhEX1BPUFRTX1NNRF9W
IDw8IElHQ19UWERfUE9QVFNfU01EX1NISUZUKTsKKwkJYnJlYWs7CisJY2FzZSBJR0NfVFhEX1BP
UFRTX1NNRF9SOgorCQlvbGluZm9fc3RhdHVzIHw9IChJR0NfVFhEX1BPUFRTX1NNRF9SIDw8IElH
Q19UWERfUE9QVFNfU01EX1NISUZUKTsKKwkJYnJlYWs7CisJfQorCisJZGVzYyA9IElHQ19UWF9E
RVNDKHJpbmcsIHJpbmctPm5leHRfdG9fdXNlKTsKKwlkZXNjLT5yZWFkLmNtZF90eXBlX2xlbiA9
IGNwdV90b19sZTMyKGNtZF90eXBlKTsKKwlkZXNjLT5yZWFkLm9saW5mb19zdGF0dXMgPSBjcHVf
dG9fbGUzMihvbGluZm9fc3RhdHVzKTsKKwlkZXNjLT5yZWFkLmJ1ZmZlcl9hZGRyID0gY3B1X3Rv
X2xlNjQoZG1hX3VubWFwX2FkZHIoYnVmZmVyLCBkbWEpKTsKKworCW5ldGRldl90eF9zZW50X3F1
ZXVlKHR4cmluZ190eHEocmluZyksIHNrYi0+bGVuKTsKKworCWJ1ZmZlci0+bmV4dF90b193YXRj
aCA9IGRlc2M7CisJcmluZy0+bmV4dF90b191c2UgPSAocmluZy0+bmV4dF90b191c2UgKyAxKSAl
IHJpbmctPmNvdW50OworCisJcmV0dXJuIDA7Cit9CisKK2Jvb2wgaWdjX2ZwZV90cmFuc21pdHRl
ZF9zbWRfdih1bmlvbiBpZ2NfYWR2X3R4X2Rlc2MgKnR4X2Rlc2MpCit7CisJdTggc21kID0gRklF
TERfR0VUKElHQ19UWERfUE9QVFNfU01EX01BU0ssIHR4X2Rlc2MtPnJlYWQub2xpbmZvX3N0YXR1
cyk7CisKKwlyZXR1cm4gc21kID09IElHQ19UWERfUE9QVFNfU01EX1Y7Cit9CisKK3N0YXRpYyBp
bnQgaWdjX2ZwZV94bWl0X3NtZF9mcmFtZShzdHJ1Y3QgaWdjX2FkYXB0ZXIgKmFkYXB0ZXIsIGlu
dCB0eXBlKQoreworCWludCBjcHUgPSBzbXBfcHJvY2Vzc29yX2lkKCk7CisJc3RydWN0IG5ldGRl
dl9xdWV1ZSAqbnE7CisJc3RydWN0IGlnY19yaW5nICpyaW5nOworCXN0cnVjdCBza19idWZmICpz
a2I7CisJdm9pZCAqZGF0YTsKKwlpbnQgZXJyOworCisJaWYgKCFuZXRpZl9ydW5uaW5nKGFkYXB0
ZXItPm5ldGRldikpCisJCXJldHVybiAtRU5PVENPTk47CisKKwlyaW5nID0gaWdjX2dldF90eF9y
aW5nKGFkYXB0ZXIsIGNwdSk7CisJbnEgPSB0eHJpbmdfdHhxKHJpbmcpOworCisJc2tiID0gYWxs
b2Nfc2tiKFNNRF9GUkFNRV9TSVpFLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXNrYikKKwkJcmV0dXJu
IC1FTk9NRU07CisKKwlkYXRhID0gc2tiX3B1dChza2IsIFNNRF9GUkFNRV9TSVpFKTsKKwltZW1z
ZXQoZGF0YSwgMCwgU01EX0ZSQU1FX1NJWkUpOworCisJX19uZXRpZl90eF9sb2NrKG5xLCBjcHUp
OworCisJZXJyID0gaWdjX2ZwZV9pbml0X3R4X2Rlc2NyaXB0b3IocmluZywgc2tiLCB0eXBlKTsK
KwlpZ2NfZmx1c2hfdHhfZGVzY3JpcHRvcnMocmluZyk7CisKKwlfX25ldGlmX3R4X3VubG9jayhu
cSk7CisKKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMgdm9pZCBpZ2NfZnBlX3NlbmRfbXBhY2tl
dChzdHJ1Y3QgZXRodG9vbF9tbXN2ICptbXN2LAorCQkJCSBlbnVtIGV0aHRvb2xfbXBhY2tldCB0
eXBlKQoreworCXN0cnVjdCBmcGVfdCAqZnBlID0gY29udGFpbmVyX29mKG1tc3YsIHN0cnVjdCBm
cGVfdCwgbW1zdik7CisJc3RydWN0IGlnY19hZGFwdGVyICphZGFwdGVyOworCWludCBlcnI7CisK
KwlhZGFwdGVyID0gY29udGFpbmVyX29mKGZwZSwgc3RydWN0IGlnY19hZGFwdGVyLCBmcGUpOwor
CisJaWYgKHR5cGUgPT0gRVRIVE9PTF9NUEFDS0VUX1ZFUklGWSkgeworCQllcnIgPSBpZ2NfZnBl
X3htaXRfc21kX2ZyYW1lKGFkYXB0ZXIsIElHQ19UWERfUE9QVFNfU01EX1YpOworCQlpZiAoZXJy
KQorCQkJbmV0ZGV2X2VycihhZGFwdGVyLT5uZXRkZXYsICJFcnJvciBzZW5kaW5nIFNNRC1WXG4i
KTsKKwl9IGVsc2UgaWYgKHR5cGUgPT0gRVRIVE9PTF9NUEFDS0VUX1JFU1BPTlNFKSB7CisJCWVy
ciA9IGlnY19mcGVfeG1pdF9zbWRfZnJhbWUoYWRhcHRlciwgSUdDX1RYRF9QT1BUU19TTURfUik7
CisJCWlmIChlcnIpCisJCQluZXRkZXZfZXJyKGFkYXB0ZXItPm5ldGRldiwgIkVycm9yIHNlbmRp
bmcgU01ELVIgZnJhbWVcbiIpOworCX0KK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBldGh0b29s
X21tc3Zfb3BzIGlnY19tbXN2X29wcyA9IHsKKwkuc2VuZF9tcGFja2V0ID0gaWdjX2ZwZV9zZW5k
X21wYWNrZXQsCit9OworCit2b2lkIGlnY19mcGVfaW5pdChzdHJ1Y3QgaWdjX2FkYXB0ZXIgKmFk
YXB0ZXIpCit7CisJc3RydWN0IGZwZV90ICpmcGUgPSAmYWRhcHRlci0+ZnBlOworCisJZXRodG9v
bF9tbXN2X2luaXQoJmFkYXB0ZXItPmZwZS5tbXN2LCBhZGFwdGVyLT5uZXRkZXYsICZpZ2NfbW1z
dl9vcHMpOworfQorCiBzdGF0aWMgYm9vbCBpc19hbnlfbGF1bmNodGltZShzdHJ1Y3QgaWdjX2Fk
YXB0ZXIgKmFkYXB0ZXIpCiB7CiAJaW50IGk7CkBAIC00OSw2ICsxOTIsOSBAQCBzdGF0aWMgdW5z
aWduZWQgaW50IGlnY190c25fbmV3X2ZsYWdzKHN0cnVjdCBpZ2NfYWRhcHRlciAqYWRhcHRlcikK
IAlpZiAoYWRhcHRlci0+c3RyaWN0X3ByaW9yaXR5X2VuYWJsZSkKIAkJbmV3X2ZsYWdzIHw9IElH
Q19GTEFHX1RTTl9MRUdBQ1lfRU5BQkxFRDsKIAorCWlmIChhZGFwdGVyLT5mcGUubW1zdi5wbWFj
X2VuYWJsZWQpCisJCW5ld19mbGFncyB8PSBJR0NfRkxBR19UU05fUFJFRU1QVF9FTkFCTEVEOwor
CiAJcmV0dXJuIG5ld19mbGFnczsKIH0KIApAQCAtMTQ4LDcgKzI5NCw4IEBAIHN0YXRpYyBpbnQg
aWdjX3Rzbl9kaXNhYmxlX29mZmxvYWQoc3RydWN0IGlnY19hZGFwdGVyICphZGFwdGVyKQogCiAJ
dHFhdmN0cmwgPSByZDMyKElHQ19UUUFWQ1RSTCk7CiAJdHFhdmN0cmwgJj0gfihJR0NfVFFBVkNU
UkxfVFJBTlNNSVRfTU9ERV9UU04gfAotCQkgICAgICBJR0NfVFFBVkNUUkxfRU5IQU5DRURfUUFW
IHwgSUdDX1RRQVZDVFJMX0ZVVFNDRERJUyk7CisJCSAgICAgIElHQ19UUUFWQ1RSTF9FTkhBTkNF
RF9RQVYgfCBJR0NfVFFBVkNUUkxfRlVUU0NERElTIHwKKwkJICAgICAgSUdDX1RRQVZDVFJMX1BS
RUVNUFRfRU5BKTsKIAogCXdyMzIoSUdDX1RRQVZDVFJMLCB0cWF2Y3RybCk7CiAKQEAgLTM3MCwx
MCArNTE3LDE0IEBAIHN0YXRpYyBpbnQgaWdjX3Rzbl9lbmFibGVfb2ZmbG9hZChzdHJ1Y3QgaWdj
X2FkYXB0ZXIgKmFkYXB0ZXIpCiAJCXdyMzIoSUdDX1RYUUNUTChpKSwgdHhxY3RsKTsKIAl9CiAK
LQl0cWF2Y3RybCA9IHJkMzIoSUdDX1RRQVZDVFJMKSAmIH5JR0NfVFFBVkNUUkxfRlVUU0NERElT
OworCXRxYXZjdHJsID0gcmQzMihJR0NfVFFBVkNUUkwpICYgfihJR0NfVFFBVkNUUkxfRlVUU0NE
RElTIHwKKwkJICAgSUdDX1RRQVZDVFJMX1BSRUVNUFRfRU5BKTsKIAogCXRxYXZjdHJsIHw9IElH
Q19UUUFWQ1RSTF9UUkFOU01JVF9NT0RFX1RTTiB8IElHQ19UUUFWQ1RSTF9FTkhBTkNFRF9RQVY7
CiAKKwlpZiAoYWRhcHRlci0+ZnBlLm1tc3YucG1hY19lbmFibGVkKQorCQl0cWF2Y3RybCB8PSBJ
R0NfVFFBVkNUUkxfUFJFRU1QVF9FTkE7CisKIAlhZGFwdGVyLT5xYnZfY291bnQrKzsKIAogCWN5
Y2xlID0gYWRhcHRlci0+Y3ljbGVfdGltZTsKQEAgLTQzNCw2ICs1ODUsMTEgQEAgaW50IGlnY190
c25fcmVzZXQoc3RydWN0IGlnY19hZGFwdGVyICphZGFwdGVyKQogCXVuc2lnbmVkIGludCBuZXdf
ZmxhZ3M7CiAJaW50IGVyciA9IDA7CiAKKwlpZiAoYWRhcHRlci0+ZnBlLm1tc3YucG1hY19lbmFi
bGVkKQorCQlpZ2NfZW5hYmxlX2VtcHR5X2FkZHJfcmVjdihhZGFwdGVyKTsKKwllbHNlCisJCWln
Y19kaXNhYmxlX2VtcHR5X2FkZHJfcmVjdihhZGFwdGVyKTsKKwogCW5ld19mbGFncyA9IGlnY190
c25fbmV3X2ZsYWdzKGFkYXB0ZXIpOwogCiAJaWYgKCEobmV3X2ZsYWdzICYgSUdDX0ZMQUdfVFNO
X0FOWV9FTkFCTEVEKSkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2ln
Yy9pZ2NfdHNuLmggYi9kcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pZ2MvaWdjX3Rzbi5oCmlu
ZGV4IDk4ZWM4NDVhODZiZi4uODg5ZDcwYzZkODI3IDEwMDY0NAotLS0gYS9kcml2ZXJzL25ldC9l
dGhlcm5ldC9pbnRlbC9pZ2MvaWdjX3Rzbi5oCisrKyBiL2RyaXZlcnMvbmV0L2V0aGVybmV0L2lu
dGVsL2lnYy9pZ2NfdHNuLmgKQEAgLTQsOSArNCw0MiBAQAogI2lmbmRlZiBfSUdDX1RTTl9IXwog
I2RlZmluZSBfSUdDX1RTTl9IXwogCisjZGVmaW5lIFNNRF9GUkFNRV9TSVpFCQkJNjAKKworREVD
TEFSRV9TVEFUSUNfS0VZX0ZBTFNFKGlnY19mcGVfZW5hYmxlZCk7CisKK3ZvaWQgaWdjX2ZwZV9p
bml0KHN0cnVjdCBpZ2NfYWRhcHRlciAqYWRhcHRlcik7Cit1MzIgaWdjX2ZwZV9nZXRfc3VwcG9y
dGVkX2ZyYWdfc2l6ZSh1MzIgdXNlcl9mcmFnX3NpemUpOworYm9vbCBpZ2NfZnBlX3RyYW5zbWl0
dGVkX3NtZF92KHVuaW9uIGlnY19hZHZfdHhfZGVzYyAqdHhfZGVzYyk7CiBpbnQgaWdjX3Rzbl9v
ZmZsb2FkX2FwcGx5KHN0cnVjdCBpZ2NfYWRhcHRlciAqYWRhcHRlcik7CiBpbnQgaWdjX3Rzbl9y
ZXNldChzdHJ1Y3QgaWdjX2FkYXB0ZXIgKmFkYXB0ZXIpOwogdm9pZCBpZ2NfdHNuX2FkanVzdF90
eHRpbWVfb2Zmc2V0KHN0cnVjdCBpZ2NfYWRhcHRlciAqYWRhcHRlcik7CiBib29sIGlnY190c25f
aXNfdGFwcmlvX2FjdGl2YXRlZF9ieV91c2VyKHN0cnVjdCBpZ2NfYWRhcHRlciAqYWRhcHRlcik7
CiAKK3N0YXRpYyBpbmxpbmUgdm9pZCBpZ2NfZnBlX2xwX2V2ZW50X3N0YXR1cyh1bmlvbiBpZ2Nf
YWR2X3J4X2Rlc2MgKnJ4X2Rlc2MsCisJCQkJCSAgIHN0cnVjdCBldGh0b29sX21tc3YgKm1tc3Yp
Cit7CisJX19sZTMyIHN0YXR1c19lcnJvciA9IGxlMzJfdG9fY3B1KHJ4X2Rlc2MtPndiLnVwcGVy
LnN0YXR1c19lcnJvcik7CisJaW50IHNtZDsKKworCXNtZCA9IEZJRUxEX0dFVChJR0NfUlhEQURW
X1NUQVRfU01EX1RZUEVfTUFTSywgc3RhdHVzX2Vycm9yKTsKKworCWlmIChzbWQgPT0gSUdDX1JY
RF9TVEFUX1NNRF9UWVBFX1YpCisJCWV0aHRvb2xfbW1zdl9ldmVudF9oYW5kbGUobW1zdiwgRVRI
VE9PTF9NTVNWX0xQX1NFTlRfVkVSSUZZX01QQUNLRVQpOworCWVsc2UgaWYgKHNtZCA9PSBJR0Nf
UlhEX1NUQVRfU01EX1RZUEVfUikKKwkJZXRodG9vbF9tbXN2X2V2ZW50X2hhbmRsZShtbXN2LCBF
VEhUT09MX01NU1ZfTFBfU0VOVF9SRVNQT05TRV9NUEFDS0VUKTsKK30KKworc3RhdGljIGlubGlu
ZSBib29sIGlnY19mcGVfaXNfdmVyaWZ5X29yX3Jlc3BvbnNlKHVuaW9uIGlnY19hZHZfcnhfZGVz
YyAqcnhfZGVzYywKKwkJCQkJCSB1bnNpZ25lZCBpbnQgc2l6ZSkKK3sKKwlfX2xlMzIgc3RhdHVz
X2Vycm9yID0gbGUzMl90b19jcHUocnhfZGVzYy0+d2IudXBwZXIuc3RhdHVzX2Vycm9yKTsKKwlp
bnQgc21kOworCisJc21kID0gRklFTERfR0VUKElHQ19SWERBRFZfU1RBVF9TTURfVFlQRV9NQVNL
LCBzdGF0dXNfZXJyb3IpOworCisJcmV0dXJuICgoc21kID09IElHQ19SWERfU1RBVF9TTURfVFlQ
RV9WIHx8IHNtZCA9PSBJR0NfUlhEX1NUQVRfU01EX1RZUEVfUikgJiYKKwkJc2l6ZSA9PSBTTURf
RlJBTUVfU0laRSk7Cit9CisKICNlbmRpZiAvKiBfSUdDX0JBU0VfSCAqLwotLSAKMi4zNC4xCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpMaW51eC1zdG0z
MiBtYWlsaW5nIGxpc3QKTGludXgtc3RtMzJAc3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbQpo
dHRwczovL3N0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20vbWFpbG1hbi9saXN0aW5mby9saW51
eC1zdG0zMgo=
