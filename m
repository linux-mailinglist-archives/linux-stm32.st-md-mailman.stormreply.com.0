Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 9D4CAA8672C
	for <lists+linux-stm32@lfdr.de>; Fri, 11 Apr 2025 22:32:25 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 5F393C78F67;
	Fri, 11 Apr 2025 20:32:25 +0000 (UTC)
Received: from relay9-d.mail.gandi.net (relay9-d.mail.gandi.net
 [217.70.183.199])
 (using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 83F95C7803A
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Fri, 11 Apr 2025 20:32:24 +0000 (UTC)
Received: by mail.gandi.net (Postfix) with ESMTPSA id 68733439F5;
 Fri, 11 Apr 2025 20:32:22 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=bootlin.com; s=gm1;
 t=1744403543;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=E1LEEOj+dRfAxqML0b7ZiCS95DdAAf0qejLXDfRihnk=;
 b=epNuqUzgNVnwVYaVaVvzgEHjHohpnkYYZdTN5Cs1TMjSCVY5TnZv/cwwLKcoByehiP9mQv
 Slcom2nwmqxj/wDz0krvJG7A5sbXZDaCvPfpP+mo3X5PPZ4XyevvfxmvhNgX2nUwI39M/t
 6PeRwfRO0fp9OGqWj3Q+NyRjB1s0414UbuV2X58QYWd3JpDDlSlxI+4OhbbOWQOuniFtfZ
 Z6dUQuBpF74Iv/gSZFntRnLUx2WOkzzFoT76wH1/jpnd71MJrdQs+qIuk22cocqtbFVQgj
 27e6YPQySVwhGPcTmXduwVhxOV++HOyrWkpA3NSgL2PhUrhiZa3Hz114eBazag==
From: =?utf-8?q?Alexis_Lothor=C3=A9_=28eBPF_Foundation=29?=
 <alexis.lothore@bootlin.com>
Date: Fri, 11 Apr 2025 22:32:12 +0200
MIME-Version: 1.0
Message-Id: <20250411-many_args_arm64-v1-3-0a32fe72339e@bootlin.com>
References: <20250411-many_args_arm64-v1-0-0a32fe72339e@bootlin.com>
In-Reply-To: <20250411-many_args_arm64-v1-0-0a32fe72339e@bootlin.com>
To: Alexei Starovoitov <ast@kernel.org>, 
 Daniel Borkmann <daniel@iogearbox.net>, 
 John Fastabend <john.fastabend@gmail.com>, 
 Andrii Nakryiko <andrii@kernel.org>, 
 Martin KaFai Lau <martin.lau@linux.dev>, 
 Eduard Zingerman <eddyz87@gmail.com>, Song Liu <song@kernel.org>, 
 Yonghong Song <yonghong.song@linux.dev>, KP Singh <kpsingh@kernel.org>, 
 Stanislav Fomichev <sdf@fomichev.me>, Hao Luo <haoluo@google.com>, 
 Jiri Olsa <jolsa@kernel.org>, Puranjay Mohan <puranjay@kernel.org>, 
 Xu Kuohai <xukuohai@huaweicloud.com>, 
 Catalin Marinas <catalin.marinas@arm.com>, Will Deacon <will@kernel.org>, 
 Mykola Lysenko <mykolal@fb.com>, Shuah Khan <shuah@kernel.org>, 
 Maxime Coquelin <mcoquelin.stm32@gmail.com>, 
 Alexandre Torgue <alexandre.torgue@foss.st.com>, 
 Florent Revest <revest@chromium.org>
X-Mailer: b4 0.14.2
X-GND-State: clean
X-GND-Score: -100
X-GND-Cause: gggruggvucftvghtrhhoucdtuddrgeefvddrtddtgddvuddvjeekucetufdoteggodetrfdotffvucfrrhhofhhilhgvmecuifetpfffkfdpucggtfgfnhhsuhgsshgtrhhisggvnecuuegrihhlohhuthemuceftddunecusecvtfgvtghiphhivghnthhsucdlqddutddtmdenucfjughrpefhfffugggtgffkfhgjvfevofesthekredtredtjeenucfhrhhomheptehlvgigihhsucfnohhthhhorhorucdlvgeurffhucfhohhunhgurghtihhonhdmuceorghlvgigihhsrdhlohhthhhorhgvsegsohhothhlihhnrdgtohhmqeenucggtffrrghtthgvrhhnpeeljeektefffeevleegkeelhfethffgieegudevffejheelieeffeejtddujeegueenucfkphepvdgrtddvmeekgedvkeemfhelgegtmegvtddtmeemfhekheenucevlhhushhtvghrufhiiigvpedtnecurfgrrhgrmhepihhnvghtpedvrgdtvdemkeegvdekmehfleegtgemvgdttdemmehfkeehpdhhvghloheplgduledvrdduieekrddurdduleejngdpmhgrihhlfhhrohhmpegrlhgvgihishdrlhhothhhohhrvgessghoohhtlhhinhdrtghomhdpnhgspghrtghpthhtohepfedtpdhrtghpthhtohepshgufhesfhhomhhitghhvghvrdhmvgdprhgtphhtthhopehmrghrthhinhdrlhgruheslhhinhhugidruggvvhdprhgtphhtthhopeiguhhkuhhohhgriheshhhurgifvghitghlohhuugdrtghomhdprhgtphhtthhopehjohhlshgrsehkvghrnhgvl
 hdrohhrghdprhgtphhtthhopegrlhgvgihishdrlhhothhhohhrvgessghoohhtlhhinhdrtghomhdprhgtphhtthhopehmhihkohhlrghlsehfsgdrtghomhdprhgtphhtthhopeifihhllheskhgvrhhnvghlrdhorhhgpdhrtghpthhtohepmhgtohhquhgvlhhinhdrshhtmhefvdesghhmrghilhdrtghomh
X-GND-Sasl: alexis.lothore@bootlin.com
Cc: linux-kselftest@vger.kernel.org,
 Bastien Curutchet <bastien.curutchet@bootlin.com>, ebpf@linuxfoundation.org,
 linux-kernel@vger.kernel.org,
 =?utf-8?q?Alexis_Lothor=C3=A9_=28eBPF_Foundation=29?=
 <alexis.lothore@bootlin.com>, Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
 bpf@vger.kernel.org, linux-stm32@st-md-mailman.stormreply.com,
 linux-arm-kernel@lists.infradead.org
Subject: [Linux-stm32] [PATCH RFC bpf-next 3/4] bpf/selftests: add tests to
 validate proper arguments alignment on ARM64
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

V2hlbiBkZWFsaW5nIHdpdGggbGFyZ2UgdHlwZXMgKD44IGJ5dGVzKSwgQVJNNjQgdHJhbXBvbGlu
ZXMgbmVlZCB0byB0YWtlCmV4dHJhIGNhcmUgYWJvdXQgdGhlIGFyZ3VtZW50cyBhbGlnbm1lbnQg
dG8gcmVzcGVjdCB0aGUgY2FsbGluZwpjb252ZW50aW9uIHNldCBieSBBQVBDUzY0LgoKQWRkIHR3
byB0ZXN0cyBlbnN1cmluZyB0aGF0IHRoZSBCUEYgdHJhbXBvbGluZSBhcnJhbmdlcyBhcmd1bWVu
dHMgd2l0aAp0aGUgcmVsZXZhbnQgbGF5b3V0LiBUaGUgdHdvIG5ldyB0ZXN0cyBpbnZvbHZlIGFs
bW9zdCB0aGUgc2FtZQphcmd1bWVudHMsIGV4Y2VwdCB0aGF0IHRoZSBzZWNvbmQgb25lIHJlcXVp
cmVzIGEgbW9yZSBzcGVjaWZpYyBhbGlnbm1lbnQKdG8gYmUgc2V0IGJ5IHRoZSB0cmFtcG9saW5l
IHdoZW4gcHJlcGFyaW5nIGFyZ3VtZW50cyBiZWZvcmUgY2FsbGluZyB0aGUKdGhlIHRhcmdldCBm
dW5jdGlvbi4KClNpZ25lZC1vZmYtYnk6IEFsZXhpcyBMb3Rob3LDqSAoZUJQRiBGb3VuZGF0aW9u
KSA8YWxleGlzLmxvdGhvcmVAYm9vdGxpbi5jb20+Ci0tLQogLi4uL3NlbGZ0ZXN0cy9icGYvcHJv
Z190ZXN0cy90cmFjaW5nX3N0cnVjdC5jICAgICAgfCAyMyArKysrKysrKwogdG9vbHMvdGVzdGlu
Zy9zZWxmdGVzdHMvYnBmL3Byb2dzL3RyYWNpbmdfc3RydWN0LmMgfCAxMCArKystCiAuLi4vc2Vs
ZnRlc3RzL2JwZi9wcm9ncy90cmFjaW5nX3N0cnVjdF9tYW55X2FyZ3MuYyB8IDY3ICsrKysrKysr
KysrKysrKysrKysrKysKIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0cy9icGYvdGVzdF9rbW9kcy9icGZf
dGVzdG1vZC5jIHwgNTAgKysrKysrKysrKysrKysrKwogNCBmaWxlcyBjaGFuZ2VkLCAxNDkgaW5z
ZXJ0aW9ucygrKSwgMSBkZWxldGlvbigtKQoKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rpbmcvc2Vs
ZnRlc3RzL2JwZi9wcm9nX3Rlc3RzL3RyYWNpbmdfc3RydWN0LmMgYi90b29scy90ZXN0aW5nL3Nl
bGZ0ZXN0cy9icGYvcHJvZ190ZXN0cy90cmFjaW5nX3N0cnVjdC5jCmluZGV4IDE5ZTY4ZDRiMzUz
Mjc4YmY4ZTI5MTdlNjJmNjJjODlkMTRkN2ZlODAuLmVjYjVkMzg1MzlmOGIyZmMyNzVmOTM3MTNj
ZTJhN2FhZDkwOGI5MjkgMTAwNjQ0Ci0tLSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2JwZi9w
cm9nX3Rlc3RzL3RyYWNpbmdfc3RydWN0LmMKKysrIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMv
YnBmL3Byb2dfdGVzdHMvdHJhY2luZ19zdHJ1Y3QuYwpAQCAtMTA4LDYgKzEwOCwyOSBAQCBzdGF0
aWMgdm9pZCB0ZXN0X3N0cnVjdF9tYW55X2FyZ3Modm9pZCkKIAlBU1NFUlRfRVEoc2tlbC0+YnNz
LT50OV9pLCAyNywgInQ5OmkiKTsKIAlBU1NFUlRfRVEoc2tlbC0+YnNzLT50OV9yZXQsIDI1OCwg
InQ5IHJldCIpOwogCisJQVNTRVJUX0VRKHNrZWwtPmJzcy0+dDEwX2FfYSwgMjcsICJ0MTA6YS5h
Iik7CisJQVNTRVJUX0VRKHNrZWwtPmJzcy0+dDEwX2FfYiwgMjgsICJ0MTA6YS5iIik7CisJQVNT
RVJUX0VRKHNrZWwtPmJzcy0+dDEwX2JfYSwgMjksICJ0MTA6Yi5hIik7CisJQVNTRVJUX0VRKHNr
ZWwtPmJzcy0+dDEwX2JfYiwgMzAsICJ0MTA6Yi5iIik7CisJQVNTRVJUX0VRKHNrZWwtPmJzcy0+
dDEwX2NfYSwgMzEsICJ0MTA6Yy5hIik7CisJQVNTRVJUX0VRKHNrZWwtPmJzcy0+dDEwX2NfYiwg
MzIsICJ0MTA6Yy5iIik7CisJQVNTRVJUX0VRKHNrZWwtPmJzcy0+dDEwX2RfYSwgMzMsICJ0MTA6
ZC5hIik7CisJQVNTRVJUX0VRKHNrZWwtPmJzcy0+dDEwX2RfYiwgMzQsICJ0MTA6ZC5iIik7CisJ
QVNTRVJUX0VRKHNrZWwtPmJzcy0+dDEwX2UsIDM1LCAidDEwOmUiKTsKKwlBU1NFUlRfRVEoc2tl
bC0+YnNzLT50MTBfZl9hLCAzNiwgInQxMDpmLmEiKTsKKwlBU1NFUlRfRVEoc2tlbC0+YnNzLT50
MTBfZl9iLCAzNywgInQxMDpmLmIiKTsKKworCUFTU0VSVF9FUShza2VsLT5ic3MtPnQxMF9yZXQs
IDM1MiwgInQxMCByZXQiKTsKKworCUFTU0VSVF9FUShza2VsLT5ic3MtPnQxMV9hLCAzOCwgInQx
MTphIik7CisJQVNTRVJUX0VRKHNrZWwtPmJzcy0+dDExX2IsIDM5LCAidDExOmIiKTsKKwlBU1NF
UlRfRVEoc2tlbC0+YnNzLT50MTFfYywgNDAsICJ0MTE6YyIpOworCUFTU0VSVF9FUShza2VsLT5i
c3MtPnQxMV9kLCA0MSwgInQxMTpkIik7CisJQVNTRVJUX0VRKHNrZWwtPmJzcy0+dDExX2UsIDQy
LCAidDExOmUiKTsKKwlBU1NFUlRfRVEoc2tlbC0+YnNzLT50MTFfZiwgNDMsICJ0MTE6ZiIpOwor
CisJQVNTRVJUX0VRKHNrZWwtPmJzcy0+dDExX3JldCwgMjQzLCAidDExIHJldCIpOworCiBkZXN0
cm95X3NrZWw6CiAJdHJhY2luZ19zdHJ1Y3RfbWFueV9hcmdzX19kZXN0cm95KHNrZWwpOwogfQpk
aWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMvYnBmL3Byb2dzL3RyYWNpbmdfc3Ry
dWN0LmMgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9icGYvcHJvZ3MvdHJhY2luZ19zdHJ1Y3Qu
YwppbmRleCBjNDM1YTNhODMyOGFiMTU4MGM2Mzk2N2E3ZjBhYjc3OWFhN2NhNGQ0Li5mZWFiZjYx
OGEyZTAxMWIwZDA4ZWVhYTZjYzA5ZmJhMTkyMmVjYjNmIDEwMDY0NAotLS0gYS90b29scy90ZXN0
aW5nL3NlbGZ0ZXN0cy9icGYvcHJvZ3MvdHJhY2luZ19zdHJ1Y3QuYworKysgYi90b29scy90ZXN0
aW5nL3NlbGZ0ZXN0cy9icGYvcHJvZ3MvdHJhY2luZ19zdHJ1Y3QuYwpAQCAtMTgsNiArMTgsMTUg
QEAgc3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfMyB7CiAJaW50IGJbXTsKIH07CiAKK3N0
cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzQgeworCV9fdTY0IGE7CisJX191NjQgYjsKK307
CisKK3N0cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzUgeworCV9faW50MTI4IGE7Cit9Owor
CiBsb25nIHQxX2FfYSwgdDFfYV9iLCB0MV9iLCB0MV9jLCB0MV9yZXQsIHQxX25yZWdzOwogX191
NjQgdDFfcmVnMCwgdDFfcmVnMSwgdDFfcmVnMiwgdDFfcmVnMzsKIGxvbmcgdDJfYSwgdDJfYl9h
LCB0Ml9iX2IsIHQyX2MsIHQyX3JldDsKQEAgLTI1LDcgKzM0LDYgQEAgbG9uZyB0M19hLCB0M19i
LCB0M19jX2EsIHQzX2NfYiwgdDNfcmV0OwogbG9uZyB0NF9hX2EsIHQ0X2IsIHQ0X2MsIHQ0X2Qs
IHQ0X2VfYSwgdDRfZV9iLCB0NF9yZXQ7CiBsb25nIHQ1X3JldDsKIGludCB0NjsKLQogU0VDKCJm
ZW50cnkvYnBmX3Rlc3Rtb2RfdGVzdF9zdHJ1Y3RfYXJnXzEiKQogaW50IEJQRl9QUk9HMih0ZXN0
X3N0cnVjdF9hcmdfMSwgc3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfMiwgYSwgaW50LCBi
LCBpbnQsIGMpCiB7CmRpZmYgLS1naXQgYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9icGYvcHJv
Z3MvdHJhY2luZ19zdHJ1Y3RfbWFueV9hcmdzLmMgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9i
cGYvcHJvZ3MvdHJhY2luZ19zdHJ1Y3RfbWFueV9hcmdzLmMKaW5kZXggNDc0MjAxMmFjZTA2YWY5
NDlkN2YxNWEyMTEzMWFhZWY3YWIwMDZlNC4uNmYwODZiM2QzMmQ1Zjg5ZTQyNmFhNGI3OWRhYTI0
YmRiNDI4NjFkYiAxMDA2NDQKLS0tIGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMvYnBmL3Byb2dz
L3RyYWNpbmdfc3RydWN0X21hbnlfYXJncy5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3Rz
L2JwZi9wcm9ncy90cmFjaW5nX3N0cnVjdF9tYW55X2FyZ3MuYwpAQCAtMTgsNiArMTgsMTQgQEAg
c3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfNSB7CiBsb25nIHQ3X2EsIHQ3X2IsIHQ3X2Ms
IHQ3X2QsIHQ3X2UsIHQ3X2ZfYSwgdDdfZl9iLCB0N19yZXQ7CiBsb25nIHQ4X2EsIHQ4X2IsIHQ4
X2MsIHQ4X2QsIHQ4X2UsIHQ4X2ZfYSwgdDhfZl9iLCB0OF9nLCB0OF9yZXQ7CiBsb25nIHQ5X2Es
IHQ5X2IsIHQ5X2MsIHQ5X2QsIHQ5X2UsIHQ5X2YsIHQ5X2csIHQ5X2hfYSwgdDlfaF9iLCB0OV9o
X2MsIHQ5X2hfZCwgdDlfaSwgdDlfcmV0OworX191NjQgdDEwX2FfYSwgdDEwX2FfYiwgdDEwX2Jf
YSwgdDEwX2JfYiwgdDEwX2NfYSwgdDEwX2NfYiwgdDEwX2RfYSwgdDEwX2RfYiwKKwl0MTBfZl9h
LCB0MTBfZl9iOworc2hvcnQgdDEwX2U7CitpbnQgdDEwX3JldDsKK19faW50MTI4IHQxMV9hLCB0
MTFfYiwgdDExX2MsIHQxMV9kLCB0MTFfZjsKK3Nob3J0IHQxMV9lOworaW50IHQxMV9yZXQ7CisK
IAogU0VDKCJmZW50cnkvYnBmX3Rlc3Rtb2RfdGVzdF9zdHJ1Y3RfYXJnXzciKQogaW50IEJQRl9Q
Uk9HMih0ZXN0X3N0cnVjdF9tYW55X2FyZ3NfMSwgX191NjQsIGEsIHZvaWQgKiwgYiwgc2hvcnQs
IGMsIGludCwgZCwKQEAgLTkyLDQgKzEwMCw2MyBAQCBpbnQgQlBGX1BST0cyKHRlc3Rfc3RydWN0
X21hbnlfYXJnc182LCBfX3U2NCwgYSwgdm9pZCAqLCBiLCBzaG9ydCwgYywgaW50LCBkLCB2bwog
CXJldHVybiAwOwogfQogCitTRUMoImZlbnRyeS9icGZfdGVzdG1vZF90ZXN0X3N0cnVjdF9hcmdf
MTAiKQoraW50IEJQRl9QUk9HMih0ZXN0X3N0cnVjdF9tYW55X2FyZ3NfNywgc3RydWN0IGJwZl90
ZXN0bW9kX3N0cnVjdF9hcmdfNCwgYSwKKwkgICAgICBzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3RydWN0
X2FyZ180LCBiLAorCSAgICAgIHN0cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzQsIGMsCisJ
ICAgICAgc3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfNCwgZCwgc2hvcnQsIGUsCisJICAg
ICAgc3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfNCwgZikKK3sKKwl0MTBfYV9hID0gYS5h
OworCXQxMF9hX2IgPSBhLmI7CisJdDEwX2JfYSA9IGIuYTsKKwl0MTBfYl9iID0gYi5iOworCXQx
MF9jX2EgPSBjLmE7CisJdDEwX2NfYiA9IGMuYjsKKwl0MTBfZF9hID0gZC5hOworCXQxMF9kX2Ig
PSBkLmI7CisJdDEwX2UgPSBlOworCXQxMF9mX2EgPSBmLmE7CisJdDEwX2ZfYiA9IGYuYjsKKwly
ZXR1cm4gMDsKK30KKworU0VDKCJmZXhpdC9icGZfdGVzdG1vZF90ZXN0X3N0cnVjdF9hcmdfMTAi
KQoraW50IEJQRl9QUk9HMih0ZXN0X3N0cnVjdF9tYW55X2FyZ3NfOCwgc3RydWN0IGJwZl90ZXN0
bW9kX3N0cnVjdF9hcmdfNCwgYSwKKwkgICAgICBzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3RydWN0X2Fy
Z180LCBiLAorCSAgICAgIHN0cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzQsIGMsCisJICAg
ICAgc3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfNCwgZCwgc2hvcnQsIGUsCisJICAgICAg
c3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfNCwgZiwgaW50LCByZXQpCit7CisJdDEwX3Jl
dCA9IHJldDsKKwlyZXR1cm4gMDsKK30KKworU0VDKCJmZW50cnkvYnBmX3Rlc3Rtb2RfdGVzdF9z
dHJ1Y3RfYXJnXzExIikKK2ludCBCUEZfUFJPRzIodGVzdF9zdHJ1Y3RfbWFueV9hcmdzXzksIHN0
cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzUsIGEsCisJICAgICAgc3RydWN0IGJwZl90ZXN0
bW9kX3N0cnVjdF9hcmdfNSwgYiwKKwkgICAgICBzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3RydWN0X2Fy
Z181LCBjLAorCSAgICAgIHN0cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzUsIGQsIGludCwg
ZSwKKwkgICAgICBzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3RydWN0X2FyZ181LCBmKQoreworCXQxMV9h
ID0gYS5hOworCXQxMV9iID0gYi5hOworCXQxMV9jID0gYy5hOworCXQxMV9kID0gZC5hOworCXQx
MV9lID0gZTsKKwl0MTFfZiA9IGYuYTsKKwlyZXR1cm4gMDsKK30KKworU0VDKCJmZXhpdC9icGZf
dGVzdG1vZF90ZXN0X3N0cnVjdF9hcmdfMTEiKQoraW50IEJQRl9QUk9HMih0ZXN0X3N0cnVjdF9t
YW55X2FyZ3NfMTAsIHN0cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzUsIGEsCisJICAgICAg
c3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfNSwgYiwKKwkgICAgICBzdHJ1Y3QgYnBmX3Rl
c3Rtb2Rfc3RydWN0X2FyZ181LCBjLAorCSAgICAgIHN0cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3Rf
YXJnXzUsIGQsIGludCwgZSwKKwkgICAgICBzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3RydWN0X2FyZ181
LCBmLCBpbnQsIHJldCkKK3sKKwl0MTFfcmV0ID0gcmV0OworCXJldHVybiAwOworfQorCiBjaGFy
IF9saWNlbnNlW10gU0VDKCJsaWNlbnNlIikgPSAiR1BMIjsKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rl
c3Rpbmcvc2VsZnRlc3RzL2JwZi90ZXN0X2ttb2RzL2JwZl90ZXN0bW9kLmMgYi90b29scy90ZXN0
aW5nL3NlbGZ0ZXN0cy9icGYvdGVzdF9rbW9kcy9icGZfdGVzdG1vZC5jCmluZGV4IGYzOGVhZjBk
MzVlZmE3MTJlYzI4OGYwNjk4M2M4NmIwMmMwZDNlMGUuLjk2YzgwZGE3MjVjOTc4ZjJlNDhkZjg2
MDJkZDYzMTU1OTcxYTdiZjYgMTAwNjQ0Ci0tLSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2Jw
Zi90ZXN0X2ttb2RzL2JwZl90ZXN0bW9kLmMKKysrIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMv
YnBmL3Rlc3Rfa21vZHMvYnBmX3Rlc3Rtb2QuYwpAQCAtNjIsNiArNjIsMTUgQEAgc3RydWN0IGJw
Zl90ZXN0bW9kX3N0cnVjdF9hcmdfNSB7CiAJbG9uZyBkOwogfTsKIAorc3RydWN0IGJwZl90ZXN0
bW9kX3N0cnVjdF9hcmdfNiB7CisJdTY0IGE7CisJdTY0IGI7Cit9OworCitzdHJ1Y3QgYnBmX3Rl
c3Rtb2Rfc3RydWN0X2FyZ183IHsKKwlfX2ludDEyOCBhOworfTsKKwogX19icGZfaG9va19zdGFy
dCgpOwogCiBub2lubGluZSBpbnQKQEAgLTEyOCw2ICsxMzcsMjkgQEAgYnBmX3Rlc3Rtb2RfdGVz
dF9zdHJ1Y3RfYXJnXzkodTY0IGEsIHZvaWQgKmIsIHNob3J0IGMsIGludCBkLCB2b2lkICplLCBj
aGFyIGYsCiAJcmV0dXJuIGJwZl90ZXN0bW9kX3Rlc3Rfc3RydWN0X2FyZ19yZXN1bHQ7CiB9CiAK
K25vaW5saW5lIGludCBicGZfdGVzdG1vZF90ZXN0X3N0cnVjdF9hcmdfMTAoc3RydWN0IGJwZl90
ZXN0bW9kX3N0cnVjdF9hcmdfNiBhLAorCQkJCQkgICAgc3RydWN0IGJwZl90ZXN0bW9kX3N0cnVj
dF9hcmdfNiBiLAorCQkJCQkgICAgc3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfNiBjLAor
CQkJCQkgICAgc3RydWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfNiBkLAorCQkJCQkgICAgc2hv
cnQgZSwKKwkJCQkJICAgIHN0cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzYgZikKK3sKKwli
cGZfdGVzdG1vZF90ZXN0X3N0cnVjdF9hcmdfcmVzdWx0ID0KKwkJYS5hICsgYS5iICsgYi5hICsg
Yi5iICsgYy5hICsgYy5iICsgZC5hICsgZC5iICsgZSArIGYuYSArIGYuYjsKKwlyZXR1cm4gYnBm
X3Rlc3Rtb2RfdGVzdF9zdHJ1Y3RfYXJnX3Jlc3VsdDsKK30KKworbm9pbmxpbmUgaW50IGJwZl90
ZXN0bW9kX3Rlc3Rfc3RydWN0X2FyZ18xMShzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3RydWN0X2FyZ183
IGEsCisJCQkJCSAgICBzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3RydWN0X2FyZ183IGIsCisJCQkJCSAg
ICBzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3RydWN0X2FyZ183IGMsCisJCQkJCSAgICBzdHJ1Y3QgYnBm
X3Rlc3Rtb2Rfc3RydWN0X2FyZ183IGQsCisJCQkJCSAgICBzaG9ydCBlLAorCQkJCQkgICAgc3Ry
dWN0IGJwZl90ZXN0bW9kX3N0cnVjdF9hcmdfNyBmKQoreworCWJwZl90ZXN0bW9kX3Rlc3Rfc3Ry
dWN0X2FyZ19yZXN1bHQgPSBhLmEgKyBiLmEgKyBjLmEgKyBkLmEgKyBlICsgZi5hOworCXJldHVy
biBicGZfdGVzdG1vZF90ZXN0X3N0cnVjdF9hcmdfcmVzdWx0OworfQorCiBub2lubGluZSBpbnQK
IGJwZl90ZXN0bW9kX3Rlc3RfYXJnX3B0cl90b19zdHJ1Y3Qoc3RydWN0IGJwZl90ZXN0bW9kX3N0
cnVjdF9hcmdfMSAqYSkgewogCWJwZl90ZXN0bW9kX3Rlc3Rfc3RydWN0X2FyZ19yZXN1bHQgPSBh
LT5hOwpAQCAtMzk0LDYgKzQyNiwxNiBAQCBicGZfdGVzdG1vZF90ZXN0X3JlYWQoc3RydWN0IGZp
bGUgKmZpbGUsIHN0cnVjdCBrb2JqZWN0ICprb2JqLAogCXN0cnVjdCBicGZfdGVzdG1vZF9zdHJ1
Y3RfYXJnXzMgKnN0cnVjdF9hcmczOwogCXN0cnVjdCBicGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzQg
c3RydWN0X2FyZzQgPSB7MjEsIDIyfTsKIAlzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3RydWN0X2FyZ181
IHN0cnVjdF9hcmc1ID0gezIzLCAyNCwgMjUsIDI2fTsKKwlzdHJ1Y3QgYnBmX3Rlc3Rtb2Rfc3Ry
dWN0X2FyZ182IHN0cnVjdF9hcmc2X2EgPSB7MjcsIDI4fTsKKwlzdHJ1Y3QgYnBmX3Rlc3Rtb2Rf
c3RydWN0X2FyZ182IHN0cnVjdF9hcmc2X2IgPSB7MjksIDMwfTsKKwlzdHJ1Y3QgYnBmX3Rlc3Rt
b2Rfc3RydWN0X2FyZ182IHN0cnVjdF9hcmc2X2MgPSB7MzEsIDMyfTsKKwlzdHJ1Y3QgYnBmX3Rl
c3Rtb2Rfc3RydWN0X2FyZ182IHN0cnVjdF9hcmc2X2QgPSB7MzMsIDM0fTsKKwlzdHJ1Y3QgYnBm
X3Rlc3Rtb2Rfc3RydWN0X2FyZ182IHN0cnVjdF9hcmc2X2YgPSB7MzYsIDM3fTsKKwlzdHJ1Y3Qg
YnBmX3Rlc3Rtb2Rfc3RydWN0X2FyZ183IHN0cnVjdF9hcmc3X2EgPSB7Mzh9OworCXN0cnVjdCBi
cGZfdGVzdG1vZF9zdHJ1Y3RfYXJnXzcgc3RydWN0X2FyZzdfYiA9IHszOX07CisJc3RydWN0IGJw
Zl90ZXN0bW9kX3N0cnVjdF9hcmdfNyBzdHJ1Y3RfYXJnN19jID0gezQwfTsKKwlzdHJ1Y3QgYnBm
X3Rlc3Rtb2Rfc3RydWN0X2FyZ183IHN0cnVjdF9hcmc3X2QgPSB7NDF9OworCXN0cnVjdCBicGZf
dGVzdG1vZF9zdHJ1Y3RfYXJnXzcgc3RydWN0X2FyZzdfZiA9IHs0M307CiAJaW50IGkgPSAxOwog
CiAJd2hpbGUgKGJwZl90ZXN0bW9kX3JldHVybl9wdHIoaSkpCkBAIC00MTEsNiArNDUzLDE0IEBA
IGJwZl90ZXN0bW9kX3Rlc3RfcmVhZChzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IGtvYmplY3Qg
KmtvYmosCiAJKHZvaWQpYnBmX3Rlc3Rtb2RfdGVzdF9zdHJ1Y3RfYXJnXzkoMTYsICh2b2lkICop
MTcsIDE4LCAxOSwgKHZvaWQgKikyMCwKIAkJCQkJICAgIDIxLCAyMiwgc3RydWN0X2FyZzUsIDI3
KTsKIAorCSh2b2lkKWJwZl90ZXN0bW9kX3Rlc3Rfc3RydWN0X2FyZ18xMChzdHJ1Y3RfYXJnNl9h
LCBzdHJ1Y3RfYXJnNl9iLAorCQkJCQkgICAgIHN0cnVjdF9hcmc2X2MsIHN0cnVjdF9hcmc2X2Qs
IDM1LAorCQkJCQkgICAgIHN0cnVjdF9hcmc2X2YpOworCisJKHZvaWQpYnBmX3Rlc3Rtb2RfdGVz
dF9zdHJ1Y3RfYXJnXzExKHN0cnVjdF9hcmc3X2EsIHN0cnVjdF9hcmc3X2IsCisJCQkJCSAgICAg
c3RydWN0X2FyZzdfYywgc3RydWN0X2FyZzdfZCwgNDIsCisJCQkJCSAgICAgc3RydWN0X2FyZzdf
Zik7CisKIAkodm9pZClicGZfdGVzdG1vZF90ZXN0X2FyZ19wdHJfdG9fc3RydWN0KCZzdHJ1Y3Rf
YXJnMV8yKTsKIAogCSh2b2lkKXRyYWNlX2JwZl90ZXN0bW9kX3Rlc3RfcmF3X3RwX251bGwoTlVM
TCk7CgotLSAKMi40OS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpMaW51eC1zdG0zMiBtYWlsaW5nIGxpc3QKTGludXgtc3RtMzJAc3QtbWQtbWFpbG1h
bi5zdG9ybXJlcGx5LmNvbQpodHRwczovL3N0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20vbWFp
bG1hbi9saXN0aW5mby9saW51eC1zdG0zMgo=
