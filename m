Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id A94308C7D56
	for <lists+linux-stm32@lfdr.de>; Thu, 16 May 2024 21:38:25 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 5FB4EC6DD66;
	Thu, 16 May 2024 19:38:25 +0000 (UTC)
Received: from phobos.denx.de (phobos.denx.de [85.214.62.61])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id CBAE7C6C83A
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Thu, 16 May 2024 19:38:19 +0000 (UTC)
Received: from tr.lan (ip-86-49-120-218.bb.vodafone.cz [86.49.120.218])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits))
 (No client certificate requested)
 (Authenticated sender: marex@denx.de)
 by phobos.denx.de (Postfix) with ESMTPSA id 67679883EE;
 Thu, 16 May 2024 21:38:18 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=denx.de;
 s=phobos-20191101; t=1715888298;
 bh=ChUciinnAvsjojkvS/MYve+PpTJWNZD2hDTCiqT8s2E=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=VpzgTC0Ax2BVCbLMP6VdDoLa6ENSoEjhsueIMsIS7xRjzaJeckruvLPdSMA2zc/0t
 7GnPAYlfahDmQdN2tvlTFAVXSWmFE/BlTvn5CvTPCGsFVMDkH3tbnrzWbTCkkePLtl
 wxrTZ4Wb8Hr4CzuiYYpqtJRxIE46SwQKs2s2tymsGS4T2lnkwJed6icYL4iME/m+cr
 hAbdzwsVqegTo0TO+GzsjsPSddjoa2Kav0FUyEOx1caVmB00+fQjT14gIdOggaVtmL
 OrXeLJsorEgp3DxJlunFcR7F8sj0COdPxNqGi1QYh6PSpJLrnNxPNY/FrjmBh6ySDC
 q5ua+soa3liig==
From: Marek Vasut <marex@denx.de>
To: linux-crypto@vger.kernel.org
Date: Thu, 16 May 2024 21:37:41 +0200
Message-ID: <20240516193757.12458-2-marex@denx.de>
X-Mailer: git-send-email 2.43.0
In-Reply-To: <20240516193757.12458-1-marex@denx.de>
References: <20240516193757.12458-1-marex@denx.de>
MIME-Version: 1.0
X-Virus-Scanned: clamav-milter 0.103.8 at phobos.denx.de
X-Virus-Status: Clean
Cc: Marek Vasut <marex@denx.de>, Rob Herring <robh@kernel.org>,
 Herbert Xu <herbert@gondor.apana.org.au>,
 Yang Yingliang <yangyingliang@huawei.com>, kernel@dh-electronics.com,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig?= <u.kleine-koenig@pengutronix.de>,
 Olivia Mackall <olivia@selenic.com>, linux-stm32@st-md-mailman.stormreply.com,
 linux-arm-kernel@lists.infradead.org
Subject: [Linux-stm32] [PATCH v2 2/2] hwrng: stm32 - cache device pointer in
	struct stm32_rng_private
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

UGxhY2UgZGV2aWNlIHBvaW50ZXIgaW4gc3RydWN0IHN0bTMyX3JuZ19wcml2YXRlIGFuZCB1c2Ug
aXQgYWxsIG92ZXIgdGhlCnBsYWNlIHRvIGdldCByaWQgb2YgdGhlIGhvcnJpYmxlIHR5cGUgY2Fz
dHMgdGhyb3VnaG91dCB0aGUgZHJpdmVyLgoKTm8gZnVuY3Rpb25hbCBjaGFuZ2UuCgpBY2tlZC1i
eTogR2F0aWVuIENoZXZhbGxpZXIgPGdhdGllbi5jaGV2YWxsaWVyQGZvc3Muc3QuY29tPgpTaWdu
ZWQtb2ZmLWJ5OiBNYXJlayBWYXN1dCA8bWFyZXhAZGVueC5kZT4KLS0tCkNjOiAiVXdlIEtsZWlu
ZS1Lw7ZuaWciIDx1LmtsZWluZS1rb2VuaWdAcGVuZ3V0cm9uaXguZGU+CkNjOiBBbGV4YW5kcmUg
VG9yZ3VlIDxhbGV4YW5kcmUudG9yZ3VlQGZvc3Muc3QuY29tPgpDYzogR2F0aWVuIENoZXZhbGxp
ZXIgPGdhdGllbi5jaGV2YWxsaWVyQGZvc3Muc3QuY29tPgpDYzogSGVyYmVydCBYdSA8aGVyYmVy
dEBnb25kb3IuYXBhbmEub3JnLmF1PgpDYzogTWFyZWsgVmFzdXQgPG1hcmV4QGRlbnguZGU+CkNj
OiBNYXhpbWUgQ29xdWVsaW4gPG1jb3F1ZWxpbi5zdG0zMkBnbWFpbC5jb20+CkNjOiBPbGl2aWEg
TWFja2FsbCA8b2xpdmlhQHNlbGVuaWMuY29tPgpDYzogUm9iIEhlcnJpbmcgPHJvYmhAa2VybmVs
Lm9yZz4KQ2M6IFlhbmcgWWluZ2xpYW5nIDx5YW5neWluZ2xpYW5nQGh1YXdlaS5jb20+CkNjOiBr
ZXJuZWxAZGgtZWxlY3Ryb25pY3MuY29tCkNjOiBsaW51eC1hcm0ta2VybmVsQGxpc3RzLmluZnJh
ZGVhZC5vcmcKQ2M6IGxpbnV4LWNyeXB0b0B2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4LXN0bTMy
QHN0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20KLS0tClYyOiBGaXggdXAgZGV2X2VyciBuZXds
aW5lcwogICAgQWRkIEFCIGZyb20gR2F0aWVuCi0tLQogZHJpdmVycy9jaGFyL2h3X3JhbmRvbS9z
dG0zMi1ybmcuYyB8IDMwICsrKysrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLQogMSBmaWxlIGNo
YW5nZWQsIDEzIGluc2VydGlvbnMoKyksIDE3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvY2hhci9od19yYW5kb20vc3RtMzItcm5nLmMgYi9kcml2ZXJzL2NoYXIvaHdfcmFuZG9t
L3N0bTMyLXJuZy5jCmluZGV4IDZkZWM0YWRjNDk4NTMuLmEzZDVkZjE3NmM2ZTggMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvY2hhci9od19yYW5kb20vc3RtMzItcm5nLmMKKysrIGIvZHJpdmVycy9jaGFy
L2h3X3JhbmRvbS9zdG0zMi1ybmcuYwpAQCAtNzAsNiArNzAsNyBAQCBzdHJ1Y3Qgc3RtMzJfcm5n
X2NvbmZpZyB7CiAKIHN0cnVjdCBzdG0zMl9ybmdfcHJpdmF0ZSB7CiAJc3RydWN0IGh3cm5nIHJu
ZzsKKwlzdHJ1Y3QgZGV2aWNlICpkZXY7CiAJdm9pZCBfX2lvbWVtICpiYXNlOwogCXN0cnVjdCBj
bGsgKmNsazsKIAlzdHJ1Y3QgcmVzZXRfY29udHJvbCAqcnN0OwpAQCAtOTksNyArMTAwLDcgQEAg
c3RydWN0IHN0bTMyX3JuZ19wcml2YXRlIHsKICAqLwogc3RhdGljIGludCBzdG0zMl9ybmdfY29u
Y2VhbF9zZWVkX2Vycm9yX2NvbmRfcmVzZXQoc3RydWN0IHN0bTMyX3JuZ19wcml2YXRlICpwcml2
KQogewotCXN0cnVjdCBkZXZpY2UgKmRldiA9IChzdHJ1Y3QgZGV2aWNlICopcHJpdi0+cm5nLnBy
aXY7CisJc3RydWN0IGRldmljZSAqZGV2ID0gcHJpdi0+ZGV2OwogCXUzMiBzciA9IHJlYWRsX3Jl
bGF4ZWQocHJpdi0+YmFzZSArIFJOR19TUik7CiAJdTMyIGNyID0gcmVhZGxfcmVsYXhlZChwcml2
LT5iYXNlICsgUk5HX0NSKTsKIAlpbnQgZXJyOwpAQCAtMTcxLDcgKzE3Miw3IEBAIHN0YXRpYyBp
bnQgc3RtMzJfcm5nX2NvbmNlYWxfc2VlZF9lcnJvcihzdHJ1Y3QgaHdybmcgKnJuZykKIHsKIAlz
dHJ1Y3Qgc3RtMzJfcm5nX3ByaXZhdGUgKnByaXYgPSBjb250YWluZXJfb2Yocm5nLCBzdHJ1Y3Qg
c3RtMzJfcm5nX3ByaXZhdGUsIHJuZyk7CiAKLQlkZXZfZGJnKChzdHJ1Y3QgZGV2aWNlICopcHJp
di0+cm5nLnByaXYsICJDb25jZWFsaW5nIHNlZWQgZXJyb3JcbiIpOworCWRldl9kYmcocHJpdi0+
ZGV2LCAiQ29uY2VhbGluZyBzZWVkIGVycm9yXG4iKTsKIAogCWlmIChwcml2LT5kYXRhLT5oYXNf
Y29uZF9yZXNldCkKIAkJcmV0dXJuIHN0bTMyX3JuZ19jb25jZWFsX3NlZWRfZXJyb3JfY29uZF9y
ZXNldChwcml2KTsKQEAgLTE4Nyw3ICsxODgsNyBAQCBzdGF0aWMgaW50IHN0bTMyX3JuZ19yZWFk
KHN0cnVjdCBod3JuZyAqcm5nLCB2b2lkICpkYXRhLCBzaXplX3QgbWF4LCBib29sIHdhaXQpCiAJ
aW50IHJldHZhbCA9IDAsIGVyciA9IDA7CiAJdTMyIHNyOwogCi0JcmV0dmFsID0gcG1fcnVudGlt
ZV9yZXN1bWVfYW5kX2dldCgoc3RydWN0IGRldmljZSAqKXByaXYtPnJuZy5wcml2KTsKKwlyZXR2
YWwgPSBwbV9ydW50aW1lX3Jlc3VtZV9hbmRfZ2V0KHByaXYtPmRldik7CiAJaWYgKHJldHZhbCkK
IAkJcmV0dXJuIHJldHZhbDsKIApAQCAtMjA2LDggKzIwNyw3IEBAIHN0YXRpYyBpbnQgc3RtMzJf
cm5nX3JlYWQoc3RydWN0IGh3cm5nICpybmcsIHZvaWQgKmRhdGEsIHNpemVfdCBtYXgsIGJvb2wg
d2FpdCkKIAkJCQkJCQkJICAgc3IsIHNyLAogCQkJCQkJCQkgICAxMCwgNTAwMDApOwogCQkJaWYg
KGVycikgewotCQkJCWRldl9lcnIoKHN0cnVjdCBkZXZpY2UgKilwcml2LT5ybmcucHJpdiwKLQkJ
CQkJIiVzOiB0aW1lb3V0ICV4IVxuIiwgX19mdW5jX18sIHNyKTsKKwkJCQlkZXZfZXJyKHByaXYt
PmRldiwgIiVzOiB0aW1lb3V0ICV4IVxuIiwgX19mdW5jX18sIHNyKTsKIAkJCQlicmVhazsKIAkJ
CX0KIAkJfSBlbHNlIGlmICghc3IpIHsKQEAgLTIyMCw4ICsyMjAsNyBAQCBzdGF0aWMgaW50IHN0
bTMyX3JuZ19yZWFkKHN0cnVjdCBod3JuZyAqcm5nLCB2b2lkICpkYXRhLCBzaXplX3QgbWF4LCBi
b29sIHdhaXQpCiAJCQkJZXJyID0gc3RtMzJfcm5nX2NvbmNlYWxfc2VlZF9lcnJvcihybmcpOwog
CQkJCWkrKzsKIAkJCQlpZiAoZXJyICYmIGkgPiBSTkdfTkJfUkVDT1ZFUl9UUklFUykgewotCQkJ
CQlkZXZfZXJyKChzdHJ1Y3QgZGV2aWNlICopcHJpdi0+cm5nLnByaXYsCi0JCQkJCQkiQ291bGRu
J3QgcmVjb3ZlciBmcm9tIHNlZWQgZXJyb3JcbiIpOworCQkJCQlkZXZfZXJyKHByaXYtPmRldiwg
IkNvdWxkbid0IHJlY292ZXIgZnJvbSBzZWVkIGVycm9yXG4iKTsKIAkJCQkJcmV0dmFsID0gLUVO
T1RSRUNPVkVSQUJMRTsKIAkJCQkJZ290byBleGl0X3JwbTsKIAkJCQl9CkBAIC0yMzksOCArMjM4
LDcgQEAgc3RhdGljIGludCBzdG0zMl9ybmdfcmVhZChzdHJ1Y3QgaHdybmcgKnJuZywgdm9pZCAq
ZGF0YSwgc2l6ZV90IG1heCwgYm9vbCB3YWl0KQogCQkJZXJyID0gc3RtMzJfcm5nX2NvbmNlYWxf
c2VlZF9lcnJvcihybmcpOwogCQkJaSsrOwogCQkJaWYgKGVyciAmJiBpID4gUk5HX05CX1JFQ09W
RVJfVFJJRVMpIHsKLQkJCQlkZXZfZXJyKChzdHJ1Y3QgZGV2aWNlICopcHJpdi0+cm5nLnByaXYs
Ci0JCQkJCSJDb3VsZG4ndCByZWNvdmVyIGZyb20gc2VlZCBlcnJvciIpOworCQkJCWRldl9lcnIo
cHJpdi0+ZGV2LCAiQ291bGRuJ3QgcmVjb3ZlciBmcm9tIHNlZWQgZXJyb3IiKTsKIAkJCQlyZXR2
YWwgPSAtRU5PVFJFQ09WRVJBQkxFOwogCQkJCWdvdG8gZXhpdF9ycG07CiAJCQl9CkBAIC0yNTUs
OCArMjUzLDggQEAgc3RhdGljIGludCBzdG0zMl9ybmdfcmVhZChzdHJ1Y3QgaHdybmcgKnJuZywg
dm9pZCAqZGF0YSwgc2l6ZV90IG1heCwgYm9vbCB3YWl0KQogCX0KIAogZXhpdF9ycG06Ci0JcG1f
cnVudGltZV9tYXJrX2xhc3RfYnVzeSgoc3RydWN0IGRldmljZSAqKSBwcml2LT5ybmcucHJpdik7
Ci0JcG1fcnVudGltZV9wdXRfc3luY19hdXRvc3VzcGVuZCgoc3RydWN0IGRldmljZSAqKSBwcml2
LT5ybmcucHJpdik7CisJcG1fcnVudGltZV9tYXJrX2xhc3RfYnVzeShwcml2LT5kZXYpOworCXBt
X3J1bnRpbWVfcHV0X3N5bmNfYXV0b3N1c3BlbmQocHJpdi0+ZGV2KTsKIAogCXJldHVybiByZXR2
YWwgfHwgIXdhaXQgPyByZXR2YWwgOiAtRUlPOwogfQpAQCAtMzMxLDggKzMyOSw3IEBAIHN0YXRp
YyBpbnQgc3RtMzJfcm5nX2luaXQoc3RydWN0IGh3cm5nICpybmcpCiAJCQkJCQkJMTAsIDUwMDAw
KTsKIAkJaWYgKGVycikgewogCQkJY2xrX2Rpc2FibGVfdW5wcmVwYXJlKHByaXYtPmNsayk7Ci0J
CQlkZXZfZXJyKChzdHJ1Y3QgZGV2aWNlICopcHJpdi0+cm5nLnByaXYsCi0JCQkJIiVzOiB0aW1l
b3V0ICV4IVxuIiwgX19mdW5jX18sIHJlZyk7CisJCQlkZXZfZXJyKHByaXYtPmRldiwgIiVzOiB0
aW1lb3V0ICV4IVxuIiwgX19mdW5jX18sIHJlZyk7CiAJCQlyZXR1cm4gLUVJTlZBTDsKIAkJfQog
CX0gZWxzZSB7CkBAIC0zNjAsOCArMzU3LDcgQEAgc3RhdGljIGludCBzdG0zMl9ybmdfaW5pdChz
dHJ1Y3QgaHdybmcgKnJuZykKIAkJCQkJCTEwLCAxMDAwMDApOwogCWlmIChlcnIgfHwgKHJlZyAm
IH5STkdfU1JfRFJEWSkpIHsKIAkJY2xrX2Rpc2FibGVfdW5wcmVwYXJlKHByaXYtPmNsayk7Ci0J
CWRldl9lcnIoKHN0cnVjdCBkZXZpY2UgKilwcml2LT5ybmcucHJpdiwKLQkJCSIlczogdGltZW91
dDoleCBTUjogJXghXG4iLCBfX2Z1bmNfXywgZXJyLCByZWcpOworCQlkZXZfZXJyKHByaXYtPmRl
diwgIiVzOiB0aW1lb3V0OiV4IFNSOiAleCFcbiIsIF9fZnVuY19fLCBlcnIsIHJlZyk7CiAJCXJl
dHVybiAtRUlOVkFMOwogCX0KIApAQCAtNDY3LDggKzQ2Myw3IEBAIHN0YXRpYyBpbnQgX19tYXli
ZV91bnVzZWQgc3RtMzJfcm5nX3Jlc3VtZShzdHJ1Y3QgZGV2aWNlICpkZXYpCiAKIAkJaWYgKGVy
cikgewogCQkJY2xrX2Rpc2FibGVfdW5wcmVwYXJlKHByaXYtPmNsayk7Ci0JCQlkZXZfZXJyKChz
dHJ1Y3QgZGV2aWNlICopcHJpdi0+cm5nLnByaXYsCi0JCQkJIiVzOiB0aW1lb3V0OiV4IENSOiAl
eCFcbiIsIF9fZnVuY19fLCBlcnIsIHJlZyk7CisJCQlkZXZfZXJyKHByaXYtPmRldiwgIiVzOiB0
aW1lb3V0OiV4IENSOiAleCFcbiIsIF9fZnVuY19fLCBlcnIsIHJlZyk7CiAJCQlyZXR1cm4gLUVJ
TlZBTDsKIAkJfQogCX0gZWxzZSB7CkBAIC01NDMsNiArNTM4LDcgQEAgc3RhdGljIGludCBzdG0z
Ml9ybmdfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqb2ZkZXYpCiAKIAlwcml2LT5jZWQg
PSBvZl9wcm9wZXJ0eV9yZWFkX2Jvb2wobnAsICJjbG9jay1lcnJvci1kZXRlY3QiKTsKIAlwcml2
LT5sb2NrX2NvbmYgPSBvZl9wcm9wZXJ0eV9yZWFkX2Jvb2wobnAsICJzdCxybmctbG9jay1jb25m
Iik7CisJcHJpdi0+ZGV2ID0gZGV2OwogCiAJcHJpdi0+ZGF0YSA9IG9mX2RldmljZV9nZXRfbWF0
Y2hfZGF0YShkZXYpOwogCWlmICghcHJpdi0+ZGF0YSkKLS0gCjIuNDMuMAoKX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGludXgtc3RtMzIgbWFpbGluZyBs
aXN0CkxpbnV4LXN0bTMyQHN0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20KaHR0cHM6Ly9zdC1t
ZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tL21haWxtYW4vbGlzdGluZm8vbGludXgtc3RtMzIK
