Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 9E9B6595B02
	for <lists+linux-stm32@lfdr.de>; Tue, 16 Aug 2022 13:58:45 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 46B6BC640F2;
	Tue, 16 Aug 2022 11:58:45 +0000 (UTC)
Received: from mga05.intel.com (mga05.intel.com [192.55.52.43])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 6CADCC04003
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Tue, 16 Aug 2022 11:58:43 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
 t=1660651123; x=1692187123;
 h=from:to:cc:subject:date:message-id:in-reply-to:
 references:mime-version:content-transfer-encoding;
 bh=1bh+UGysoUhStctNsjINRe0spSsNdt49PHyq4TTPmPY=;
 b=i6rQMf6qzfETihJ8+x5OaAVIWbFFiqCfQ2C0u8WXdaq0H2oqMhdbxdQR
 zy0qfuiWIO8cK04A+kwAZT79/SLQ/pq8Own/zGDoOztJ7vmBZvJdWDq/t
 jJmLoM0UIMD0Yo6+UtUUeAmGu2l9ye4lY6PvLBBf+02efdA/SAb+PgpD7
 kaeefcxe8lTRLhgKh1qJQloEWOQu6puJqmr6cSr10Y5Ioqnw98IFmcJ3l
 hu/IEenmXWp0KrEHTno7+cRKErW9W+/tM7SzveEMhHRox1rovWJEdqzWP
 I57oAhtbrD289/7vaVjMIZCr+HLG8UGzYYQb7hUSg4mxPdnuMvYl97KDJ A==;
X-IronPort-AV: E=McAfee;i="6400,9594,10440"; a="378488829"
X-IronPort-AV: E=Sophos;i="5.93,240,1654585200"; d="scan'208";a="378488829"
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
 by fmsmga105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 16 Aug 2022 04:58:40 -0700
X-IronPort-AV: E=Sophos;i="5.93,240,1654585200"; d="scan'208";a="667080831"
Received: from tturcu-mobl1.ger.corp.intel.com (HELO
 ijarvine-MOBL2.ger.corp.intel.com) ([10.252.51.153])
 by fmsmga008-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 16 Aug 2022 04:58:17 -0700
From: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>
To: linux-serial@vger.kernel.org,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Jiri Slaby <jirislaby@kernel.org>,
 Andy Shevchenko <andriy.shevchenko@linux.intel.com>,
 Al Cooper <alcooperx@gmail.com>,
 Broadcom internal kernel review list <bcm-kernel-feedback-list@broadcom.com>, 
 =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>,
 Matthias Brugger <matthias.bgg@gmail.com>,
 Tobias Klauser <tklauser@distanz.ch>, Russell King <linux@armlinux.org.uk>,
 Vineet Gupta <vgupta@kernel.org>,
 Richard Genoud <richard.genoud@gmail.com>,
 Nicolas Ferre <nicolas.ferre@microchip.com>,
 Alexandre Belloni <alexandre.belloni@bootlin.com>,
 Claudiu Beznea <claudiu.beznea@microchip.com>,
 Alexander Shiyan <shc_work@mail.ru>, Baruch Siach <baruch@tkos.co.il>,
 "Maciej W. Rozycki" <macro@orcam.me.uk>, Shawn Guo <shawnguo@kernel.org>,
 Sascha Hauer <s.hauer@pengutronix.de>,
 Pengutronix Kernel Team <kernel@pengutronix.de>,
 Fabio Estevam <festevam@gmail.com>, NXP Linux Team <linux-imx@nxp.com>,
 Karol Gugala <kgugala@antmicro.com>,
 Mateusz Holenko <mholenko@antmicro.com>, Gabriel Somlo <gsomlo@gmail.com>,
 Joel Stanley <joel@jms.id.au>, Vladimir Zapolskiy <vz@mleia.com>,
 Neil Armstrong <narmstrong@baylibre.com>,
 Kevin Hilman <khilman@baylibre.com>, Jerome Brunet <jbrunet@baylibre.com>,
 Martin Blumenstingl <martin.blumenstingl@googlemail.com>,
 Taichi Sugaya <sugaya.taichi@socionext.com>,
 Takao Orito <orito.takao@socionext.com>, Liviu Dudau <liviu.dudau@arm.com>,
 Sudeep Holla <sudeep.holla@arm.com>,
 Lorenzo Pieralisi <lpieralisi@kernel.org>, Andy Gross <agross@kernel.org>,
 Bjorn Andersson <bjorn.andersson@linaro.org>,
 Konrad Dybcio <konrad.dybcio@somainline.org>,
 =?UTF-8?q?Pali=20Roh=C3=A1r?= <pali@kernel.org>,
 =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>,
 Manivannan Sadhasivam <mani@kernel.org>,
 Michael Ellerman <mpe@ellerman.id.au>, Nicholas Piggin <npiggin@gmail.com>,
 Christophe Leroy <christophe.leroy@csgroup.eu>,
 Kevin Cernekee <cernekee@gmail.com>,
 Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>,
 Alim Akhtar <alim.akhtar@samsung.com>,
 Laxman Dewangan <ldewangan@nvidia.com>,
 Thierry Reding <thierry.reding@gmail.com>,
 Jonathan Hunter <jonathanh@nvidia.com>,
 Palmer Dabbelt <palmer@dabbelt.com>,
 Paul Walmsley <paul.walmsley@sifive.com>, Orson Zhai <orsonzhai@gmail.com>,
 Baolin Wang <baolin.wang@linux.alibaba.com>,
 Chunyan Zhang <zhang.lyra@gmail.com>,
 Patrice Chotard <patrice.chotard@foss.st.com>,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Alexandre Torgue <alexandre.torgue@foss.st.com>,
 "David S. Miller" <davem@davemloft.net>,
 Hammer Hsieh <hammerh0314@gmail.com>, Peter Korsgaard <jacmet@sunsite.dk>,
 Timur Tabi <timur@kernel.org>, Michal Simek <michal.simek@xilinx.com>,
 linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
 linux-mediatek@lists.infradead.org, linux-snps-arc@lists.infradead.org,
 linux-amlogic@lists.infradead.org, linux-arm-msm@vger.kernel.org,
 linux-actions@lists.infradead.org, linuxppc-dev@lists.ozlabs.org,
 linux-unisoc@lists.infradead.org, linux-samsung-soc@vger.kernel.org,
 linux-tegra@vger.kernel.org, linux-riscv@lists.infradead.org,
 linux-stm32@st-md-mailman.stormreply.com, sparclinux@vger.kernel.org
Date: Tue, 16 Aug 2022 14:57:37 +0300
Message-Id: <20220816115739.10928-7-ilpo.jarvinen@linux.intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20220816115739.10928-1-ilpo.jarvinen@linux.intel.com>
References: <20220816115739.10928-1-ilpo.jarvinen@linux.intel.com>
MIME-Version: 1.0
Cc: Johan Hovold <johan@kernel.org>
Subject: [Linux-stm32] [PATCH 6/8] serial: Make ->set_termios() old ktermios
	const
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

VGhlcmUgc2hvdWxkIGJlIG5vIHJlYXNvbiB0byBhZGp1c3Qgb2xkIGt0ZXJtaW9zIHdoaWNoIGlz
IGdvaW5nIHRvIGdldApkaXNjYXJkZWQgYW55d2F5LgoKU2lnbmVkLW9mZi1ieTogSWxwbyBKw6Ry
dmluZW4gPGlscG8uamFydmluZW5AbGludXguaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvdHR5L3Nl
cmlhbC8yMTI4NS5jICAgICAgICAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFs
LzgyNTAvODI1MF9iY203MjcxLmMgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvODI1
MC84MjUwX2R3LmMgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgy
NTBfZHdsaWIuYyAgICAgICAgfCAgMyArKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBf
ZHdsaWIuaCAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsLzgyNTAvODI1MF9maW50
ZWsuYyAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2xwc3MuYyAg
ICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfbWlkLmMgICAgICAg
ICAgfCAgNSArKy0tLQogZHJpdmVycy90dHkvc2VyaWFsLzgyNTAvODI1MF9tdGsuYyAgICAgICAg
ICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX29tYXAuYyAgICAgICAgIHwg
IDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfcG9ydC5jICAgICAgICAgfCAgNiAr
KystLS0KIGRyaXZlcnMvdHR5L3NlcmlhbC9hbHRlcmFfanRhZ3VhcnQuYyAgICAgICAgfCAgNCAr
Ky0tCiBkcml2ZXJzL3R0eS9zZXJpYWwvYWx0ZXJhX3VhcnQuYyAgICAgICAgICAgIHwgIDIgKy0K
IGRyaXZlcnMvdHR5L3NlcmlhbC9hbWJhLXBsMDEwLmMgICAgICAgICAgICAgfCAgMiArLQogZHJp
dmVycy90dHkvc2VyaWFsL2FtYmEtcGwwMTEuYyAgICAgICAgICAgICB8ICA0ICsrLS0KIGRyaXZl
cnMvdHR5L3NlcmlhbC9hcGJ1YXJ0LmMgICAgICAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90
dHkvc2VyaWFsL2FyOTMzeF91YXJ0LmMgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9z
ZXJpYWwvYXJjX3VhcnQuYyAgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3Nlcmlh
bC9hdG1lbF9zZXJpYWwuYyAgICAgICAgICAgfCAgNSArKystLQogZHJpdmVycy90dHkvc2VyaWFs
L2JjbTYzeHhfdWFydC5jICAgICAgICAgICB8ICA1ICsrLS0tCiBkcml2ZXJzL3R0eS9zZXJpYWwv
Y2xwczcxMXguYyAgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9jcG1f
dWFydC9jcG1fdWFydF9jb3JlLmMgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL2RpZ2ljb2xv
ci11c2FydC5jICAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvZHouYyAgICAgICAg
ICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9mc2xfbGluZmxleHVhcnQu
YyAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL2ZzbF9scHVhcnQuYyAgICAgICAg
ICAgICB8ICA0ICsrLS0KIGRyaXZlcnMvdHR5L3NlcmlhbC9pY29tLmMgICAgICAgICAgICAgICAg
ICAgfCAgNSArKy0tLQogZHJpdmVycy90dHkvc2VyaWFsL2lteC5jICAgICAgICAgICAgICAgICAg
ICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvaXAyMnppbG9nLmMgICAgICAgICAgICAgIHwg
IDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9qc20vanNtX3R0eS5jICAgICAgICAgICAgfCAgNCAr
Ky0tCiBkcml2ZXJzL3R0eS9zZXJpYWwvbGFudGlxLmMgICAgICAgICAgICAgICAgIHwgIDQgKyst
LQogZHJpdmVycy90dHkvc2VyaWFsL2xpdGV1YXJ0LmMgICAgICAgICAgICAgICB8ICAyICstCiBk
cml2ZXJzL3R0eS9zZXJpYWwvbHBjMzJ4eF9ocy5jICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZl
cnMvdHR5L3NlcmlhbC9tYXgzMTAwLmMgICAgICAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90
dHkvc2VyaWFsL21heDMxMHguYyAgICAgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9z
ZXJpYWwvbWNmLmMgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3Nlcmlh
bC9tZW5fejEzNV91YXJ0LmMgICAgICAgICAgfCAgNCArKy0tCiBkcml2ZXJzL3R0eS9zZXJpYWwv
bWVzb25fdWFydC5jICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9taWxi
ZWF1dF91c2lvLmMgICAgICAgICAgfCAgMyArKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9tcGM1Mnh4
X3VhcnQuYyAgICAgICAgICAgfCAxMiArKysrKystLS0tLS0KIGRyaXZlcnMvdHR5L3NlcmlhbC9t
cHMyLXVhcnQuYyAgICAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL21zbV9z
ZXJpYWwuYyAgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvbXV4LmMgICAg
ICAgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9tdmVidS11YXJ0LmMg
ICAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL214cy1hdWFydC5jICAgICAg
ICAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvb21hcC1zZXJpYWwuYyAgICAgICAg
ICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9vd2wtdWFydC5jICAgICAgICAgICAgICAg
fCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL3BjaF91YXJ0LmMgICAgICAgICAgICAgICB8ICAz
ICsrLQogZHJpdmVycy90dHkvc2VyaWFsL3BpYzMyX3VhcnQuYyAgICAgICAgICAgICB8ICAyICst
CiBkcml2ZXJzL3R0eS9zZXJpYWwvcG1hY196aWxvZy5jICAgICAgICAgICAgIHwgIDQgKystLQog
ZHJpdmVycy90dHkvc2VyaWFsL3B4YS5jICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBkcml2
ZXJzL3R0eS9zZXJpYWwvcWNvbV9nZW5pX3NlcmlhbC5jICAgICAgIHwgIDMgKystCiBkcml2ZXJz
L3R0eS9zZXJpYWwvcmRhLXVhcnQuYyAgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5
L3NlcmlhbC9ycDIuYyAgICAgICAgICAgICAgICAgICAgfCAgNSArKy0tLQogZHJpdmVycy90dHkv
c2VyaWFsL3NhMTEwMC5jICAgICAgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJp
YWwvc2Ftc3VuZ190dHkuYyAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9z
YjEyNTAtZHVhcnQuYyAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL3NjMTZp
czd4eC5jICAgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvc2NjbnhwLmMg
ICAgICAgICAgICAgICAgIHwgIDMgKystCiBkcml2ZXJzL3R0eS9zZXJpYWwvc2VyaWFsLXRlZ3Jh
LmMgICAgICAgICAgIHwgIDMgKystCiBkcml2ZXJzL3R0eS9zZXJpYWwvc2VyaWFsX2NvcmUuYyAg
ICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9zZXJpYWxfdHh4OS5jICAgICAg
ICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL3NoLXNjaS5jICAgICAgICAgICAgICAg
ICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvc2lmaXZlLmMgICAgICAgICAgICAgICAgIHwg
IDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC9zcHJkX3NlcmlhbC5jICAgICAgICAgICAgfCAgNSAr
Ky0tLQogZHJpdmVycy90dHkvc2VyaWFsL3N0LWFzYy5jICAgICAgICAgICAgICAgICB8ICAyICst
CiBkcml2ZXJzL3R0eS9zZXJpYWwvc3RtMzItdXNhcnQuYyAgICAgICAgICAgIHwgIDIgKy0KIGRy
aXZlcnMvdHR5L3NlcmlhbC9zdW5odi5jICAgICAgICAgICAgICAgICAgfCAgMiArLQogZHJpdmVy
cy90dHkvc2VyaWFsL3N1bnBsdXMtdWFydC5jICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0
eS9zZXJpYWwvc3Vuc2FiLmMgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3Nl
cmlhbC9zdW5zdS5jICAgICAgICAgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFs
L3N1bnppbG9nLmMgICAgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS9zZXJpYWwvdGVn
cmEtdGN1LmMgICAgICAgICAgICAgIHwgIDIgKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC90aW1idWFy
dC5jICAgICAgICAgICAgICAgfCAgNCArKy0tCiBkcml2ZXJzL3R0eS9zZXJpYWwvdWFydGxpdGUu
YyAgICAgICAgICAgICAgIHwgIDUgKysrLS0KIGRyaXZlcnMvdHR5L3NlcmlhbC91Y2NfdWFydC5j
ICAgICAgICAgICAgICAgfCAgMyArKy0KIGRyaXZlcnMvdHR5L3NlcmlhbC92dDg1MDBfc2VyaWFs
LmMgICAgICAgICAgfCAgMiArLQogZHJpdmVycy90dHkvc2VyaWFsL3hpbGlueF91YXJ0cHMuYyAg
ICAgICAgICB8ICAzICsrLQogZHJpdmVycy90dHkvc2VyaWFsL3pzLmMgICAgICAgICAgICAgICAg
ICAgICB8ICAyICstCiBkcml2ZXJzL3R0eS90dHlfaW9jdGwuYyAgICAgICAgICAgICAgICAgICAg
IHwgIDIgKy0KIGluY2x1ZGUvbGludXgvc2VyaWFsXzgyNTAuaCAgICAgICAgICAgICAgICAgfCAg
NCArKy0tCiBpbmNsdWRlL2xpbnV4L3NlcmlhbF9jb3JlLmggICAgICAgICAgICAgICAgIHwgIDYg
KysrLS0tCiA4MiBmaWxlcyBjaGFuZ2VkLCAxMTcgaW5zZXJ0aW9ucygrKSwgMTEyIGRlbGV0aW9u
cygtKQoKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC8yMTI4NS5jIGIvZHJpdmVycy90
dHkvc2VyaWFsLzIxMjg1LmMKaW5kZXggNzUyMGNjMDJmZDRkLi4yZjE3YmY0YjIyMWUgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC8yMTI4NS5jCisrKyBiL2RyaXZlcnMvdHR5L3Nlcmlh
bC8yMTI4NS5jCkBAIC0yNDMsNyArMjQzLDcgQEAgc3RhdGljIHZvaWQgc2VyaWFsMjEyODVfc2h1
dGRvd24oc3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIAogc3RhdGljIHZvaWQKIHNlcmlhbDIxMjg1
X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqdGVy
bWlvcywKLQkJCXN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJY29uc3Qgc3RydWN0IGt0ZXJtaW9z
ICpvbGQpCiB7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKIAl1bnNpZ25lZCBpbnQgYmF1ZCwgcXVv
dCwgaF9sY3IsIGI7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2Jj
bTcyNzEuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfYmNtNzI3MS5jCmluZGV4IDhl
ZmRjMjcxZWI3NS4uZmE4Y2NmMjA0ZDg2IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwv
ODI1MC84MjUwX2JjbTcyNzEuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2Jj
bTcyNzEuYwpAQCAtNzU1LDcgKzc1NSw3IEBAIHN0YXRpYyB2b2lkIHNldF9jbG9ja19tdXgoc3Ry
dWN0IHVhcnRfcG9ydCAqdXAsIHN0cnVjdCBicmNtdWFydF9wcml2ICpwcml2LAogCiBzdGF0aWMg
dm9pZCBicmNtc3RiX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnVwLAogCQkJCXN0cnVj
dCBrdGVybWlvcyAqdGVybWlvcywKLQkJCQlzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQljb25z
dCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlzdHJ1Y3QgdWFydF84MjUwX3BvcnQgKnA4MjUw
ID0gdXBfdG9fdTgyNTBwKHVwKTsKIAlzdHJ1Y3QgYnJjbXVhcnRfcHJpdiAqcHJpdiA9IHVwLT5w
cml2YXRlX2RhdGE7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2R3
LmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2R3LmMKaW5kZXggYTYwNGI0MmU0NDU4
Li43ZGI1MTc4MTI4OWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBf
ZHcuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2R3LmMKQEAgLTM1MCw3ICsz
NTAsNyBAQCBkdzgyNTBfZG9fcG0oc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgdW5zaWduZWQgaW50
IHN0YXRlLCB1bnNpZ25lZCBpbnQgb2xkKQogfQogCiBzdGF0aWMgdm9pZCBkdzgyNTBfc2V0X3Rl
cm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkJ
ICAgICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJICAgICAgIGNvbnN0IHN0cnVjdCBrdGVy
bWlvcyAqb2xkKQogewogCXVuc2lnbmVkIGxvbmcgbmV3cmF0ZSA9IHR0eV90ZXJtaW9zX2JhdWRf
cmF0ZSh0ZXJtaW9zKSAqIDE2OwogCXN0cnVjdCBkdzgyNTBfZGF0YSAqZCA9IHRvX2R3ODI1MF9k
YXRhKHAtPnByaXZhdGVfZGF0YSk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1
MC84MjUwX2R3bGliLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2R3bGliLmMKaW5k
ZXggZGJlNGQ0NGY2MGQ0Li43NWYzMmYwNTRlYmIgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3Nl
cmlhbC84MjUwLzgyNTBfZHdsaWIuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUw
X2R3bGliLmMKQEAgLTkyLDcgKzkyLDggQEAgc3RhdGljIHZvaWQgZHc4MjUwX3NldF9kaXZpc29y
KHN0cnVjdCB1YXJ0X3BvcnQgKnAsIHVuc2lnbmVkIGludCBiYXVkLAogCXNlcmlhbDgyNTBfZG9f
c2V0X2Rpdmlzb3IocCwgYmF1ZCwgcXVvdCwgcXVvdF9mcmFjKTsKIH0KIAotdm9pZCBkdzgyNTBf
ZG9fc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJt
aW9zLCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKK3ZvaWQgZHc4MjUwX2RvX3NldF90ZXJtaW9zKHN0
cnVjdCB1YXJ0X3BvcnQgKnAsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKKwkJCSAgIGNvbnN0
IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXAtPnN0YXR1cyAmPSB+VVBTVEFUX0FVVE9DVFM7
CiAJaWYgKHRlcm1pb3MtPmNfY2ZsYWcgJiBDUlRTQ1RTKQpkaWZmIC0tZ2l0IGEvZHJpdmVycy90
dHkvc2VyaWFsLzgyNTAvODI1MF9kd2xpYi5oIGIvZHJpdmVycy90dHkvc2VyaWFsLzgyNTAvODI1
MF9kd2xpYi5oCmluZGV4IDA1NWJmZGM4Nzk4NS4uZjEzZTkxZjJjYWNlIDEwMDY0NAotLS0gYS9k
cml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2R3bGliLmgKKysrIGIvZHJpdmVycy90dHkvc2Vy
aWFsLzgyNTAvODI1MF9kd2xpYi5oCkBAIC00Nyw3ICs0Nyw3IEBAIHN0cnVjdCBkdzgyNTBfZGF0
YSB7CiAJdW5zaWduZWQgaW50CQl1YXJ0XzE2NTUwX2NvbXBhdGlibGU6MTsKIH07CiAKLXZvaWQg
ZHc4MjUwX2RvX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnAsIHN0cnVjdCBrdGVybWlv
cyAqdGVybWlvcywgc3RydWN0IGt0ZXJtaW9zICpvbGQpOwordm9pZCBkdzgyNTBfZG9fc2V0X3Rl
cm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLCBjb25z
dCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCk7CiB2b2lkIGR3ODI1MF9zZXR1cF9wb3J0KHN0cnVjdCB1
YXJ0X3BvcnQgKnApOwogCiBzdGF0aWMgaW5saW5lIHN0cnVjdCBkdzgyNTBfZGF0YSAqdG9fZHc4
MjUwX2RhdGEoc3RydWN0IGR3ODI1MF9wb3J0X2RhdGEgKmRhdGEpCmRpZmYgLS1naXQgYS9kcml2
ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2ZpbnRlay5jIGIvZHJpdmVycy90dHkvc2VyaWFsLzgy
NTAvODI1MF9maW50ZWsuYwppbmRleCA2NWI2YjNjYmFmZjYuLmUyYWEyYTFhMDJkZCAxMDA2NDQK
LS0tIGEvZHJpdmVycy90dHkvc2VyaWFsLzgyNTAvODI1MF9maW50ZWsuYworKysgYi9kcml2ZXJz
L3R0eS9zZXJpYWwvODI1MC84MjUwX2ZpbnRlay5jCkBAIC0yNzgsNyArMjc4LDcgQEAgc3RhdGlj
IHZvaWQgZmludGVrXzgyNTBfc2V0X21heF9maWZvKHN0cnVjdCBmaW50ZWtfODI1MCAqcGRhdGEp
CiAKIHN0YXRpYyB2b2lkIGZpbnRla184MjUwX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQg
KnBvcnQsCiAJCQkJICAgIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKLQkJCQkgICAgc3RydWN0
IGt0ZXJtaW9zICpvbGQpCisJCQkJICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewog
CXN0cnVjdCBmaW50ZWtfODI1MCAqcGRhdGEgPSBwb3J0LT5wcml2YXRlX2RhdGE7CiAJdW5zaWdu
ZWQgaW50IGJhdWQgPSB0dHlfdGVybWlvc19iYXVkX3JhdGUodGVybWlvcyk7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2xwc3MuYyBiL2RyaXZlcnMvdHR5L3Nlcmlh
bC84MjUwLzgyNTBfbHBzcy5jCmluZGV4IDRiYTQzYmVmOTkzMy4uNDRjYzc1NWIxYTI5IDEwMDY0
NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX2xwc3MuYworKysgYi9kcml2ZXJz
L3R0eS9zZXJpYWwvODI1MC84MjUwX2xwc3MuYwpAQCAtNzAsNyArNzAsNyBAQCBzdGF0aWMgaW5s
aW5lIHN0cnVjdCBscHNzODI1MCAqdG9fbHBzczgyNTAoc3RydWN0IGR3ODI1MF9wb3J0X2RhdGEg
KmRhdGEpCiB9CiAKIHN0YXRpYyB2b2lkIGJ5dF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0
ICpwLCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkgICAgc3RydWN0IGt0ZXJtaW9zICpv
bGQpCisJCQkgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJdW5zaWduZWQgaW50
IGJhdWQgPSB0dHlfdGVybWlvc19iYXVkX3JhdGUodGVybWlvcyk7CiAJc3RydWN0IGxwc3M4MjUw
ICpscHNzID0gdG9fbHBzczgyNTAocC0+cHJpdmF0ZV9kYXRhKTsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfbWlkLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84
MjUwX21pZC5jCmluZGV4IGEyYTAzYWNiMDRhZC4uMmNjNzhhNGJmN2ExIDEwMDY0NAotLS0gYS9k
cml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX21pZC5jCisrKyBiL2RyaXZlcnMvdHR5L3Nlcmlh
bC84MjUwLzgyNTBfbWlkLmMKQEAgLTIwNiw5ICsyMDYsOCBAQCBzdGF0aWMgdm9pZCBkbnZfZXhp
dChzdHJ1Y3QgbWlkODI1MCAqbWlkKQogCiAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiAKLXN0YXRp
YyB2b2lkIG1pZDgyNTBfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcCwKLQkJCQlzdHJ1
Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkJc3RydWN0IGt0ZXJtaW9zICpvbGQpCitzdGF0aWMg
dm9pZCBtaWQ4MjUwX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnAsIHN0cnVjdCBrdGVy
bWlvcyAqdGVybWlvcywKKwkJCQljb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAl1bnNp
Z25lZCBpbnQgYmF1ZCA9IHR0eV90ZXJtaW9zX2JhdWRfcmF0ZSh0ZXJtaW9zKTsKIAlzdHJ1Y3Qg
bWlkODI1MCAqbWlkID0gcC0+cHJpdmF0ZV9kYXRhOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkv
c2VyaWFsLzgyNTAvODI1MF9tdGsuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfbXRr
LmMKaW5kZXggNTQwNTFlYzdiNDk5Li5mYjFkNWVjMDk0MGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
dHR5L3NlcmlhbC84MjUwLzgyNTBfbXRrLmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsLzgyNTAv
ODI1MF9tdGsuYwpAQCAtMjkxLDcgKzI5MSw3IEBAIHN0YXRpYyB2b2lkIG10azgyNTBfc2V0X2Zs
b3dfY3RybChzdHJ1Y3QgdWFydF84MjUwX3BvcnQgKnVwLCBpbnQgbW9kZSkKIAogc3RhdGljIHZv
aWQKIG10azgyNTBfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0
ZXJtaW9zICp0ZXJtaW9zLAotCQkJc3RydWN0IGt0ZXJtaW9zICpvbGQpCisJCSAgICBjb25zdCBz
dHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlzdGF0aWMgY29uc3QgdW5zaWduZWQgc2hvcnQgZnJh
Y3Rpb25fTF9tYXBwaW5nW10gPSB7CiAJCTAsIDEsIDB4NSwgMHgxNSwgMHg1NSwgMHg1NywgMHg1
NywgMHg3NywgMHg3RiwgMHhGRiwgMHhGRgpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFs
LzgyNTAvODI1MF9vbWFwLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX29tYXAuYwpp
bmRleCAwZGNlY2JiYzM5NjcuLmI0Mzg5NGUxNWIwNyAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkv
c2VyaWFsLzgyNTAvODI1MF9vbWFwLmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsLzgyNTAvODI1
MF9vbWFwLmMKQEAgLTM1MCw3ICszNTAsNyBAQCBzdGF0aWMgdm9pZCBvbWFwODI1MF9yZXN0b3Jl
X3JlZ3Moc3RydWN0IHVhcnRfODI1MF9wb3J0ICp1cCkKICAqLwogc3RhdGljIHZvaWQgb21hcF84
MjUwX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiAJCQkJICBzdHJ1Y3Qga3Rl
cm1pb3MgKnRlcm1pb3MsCi0JCQkJICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkgIGNvbnN0
IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCB1YXJ0XzgyNTBfcG9ydCAqdXAgPSB1
cF90b191ODI1MHAocG9ydCk7CiAJc3RydWN0IG9tYXA4MjUwX3ByaXYgKnByaXYgPSB1cC0+cG9y
dC5wcml2YXRlX2RhdGE7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUw
X3BvcnQuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC84MjUwLzgyNTBfcG9ydC5jCmluZGV4IDM5YjM1
YTYxOTU4Yy4uYmQzMjA3NjExZjY0IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvODI1
MC84MjUwX3BvcnQuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvODI1MC84MjUwX3BvcnQuYwpA
QCAtMjY1MSw3ICsyNjUxLDcgQEAgc3RhdGljIHZvaWQgc2VyaWFsODI1MF9zZXRfZGl2aXNvcihz
dHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCB1bnNpZ25lZCBpbnQgYmF1ZCwKIAogc3RhdGljIHVuc2ln
bmVkIGludCBzZXJpYWw4MjUwX2dldF9iYXVkX3JhdGUoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwK
IAkJCQkJICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkJCSAgICAgc3RydWN0IGt0
ZXJtaW9zICpvbGQpCisJCQkJCSAgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJ
dW5zaWduZWQgaW50IHRvbGVyYW5jZSA9IHBvcnQtPnVhcnRjbGsgLyAxMDA7CiAJdW5zaWduZWQg
aW50IG1pbjsKQEAgLTI3MzcsNyArMjczNyw3IEBAIEVYUE9SVF9TWU1CT0xfR1BMKHNlcmlhbDgy
NTBfdXBkYXRlX3VhcnRjbGspOwogCiB2b2lkCiBzZXJpYWw4MjUwX2RvX3NldF90ZXJtaW9zKHN0
cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKLQkJCSAgc3Ry
dWN0IGt0ZXJtaW9zICpvbGQpCisJCSAgICAgICAgICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9s
ZCkKIHsKIAlzdHJ1Y3QgdWFydF84MjUwX3BvcnQgKnVwID0gdXBfdG9fdTgyNTBwKHBvcnQpOwog
CXVuc2lnbmVkIGNoYXIgY3ZhbDsKQEAgLTI4NzUsNyArMjg3NSw3IEBAIEVYUE9SVF9TWU1CT0wo
c2VyaWFsODI1MF9kb19zZXRfdGVybWlvcyk7CiAKIHN0YXRpYyB2b2lkCiBzZXJpYWw4MjUwX3Nl
dF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlv
cywKLQkJICAgICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkgICAgICAgY29uc3Qgc3RydWN0
IGt0ZXJtaW9zICpvbGQpCiB7CiAJaWYgKHBvcnQtPnNldF90ZXJtaW9zKQogCQlwb3J0LT5zZXRf
dGVybWlvcyhwb3J0LCB0ZXJtaW9zLCBvbGQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2Vy
aWFsL2FsdGVyYV9qdGFndWFydC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL2FsdGVyYV9qdGFndWFy
dC5jCmluZGV4IGNiNzkxYzUxNDlhMy4uMjNmMzM5NzU3ODk0IDEwMDY0NAotLS0gYS9kcml2ZXJz
L3R0eS9zZXJpYWwvYWx0ZXJhX2p0YWd1YXJ0LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL2Fs
dGVyYV9qdGFndWFydC5jCkBAIC0xMDYsOCArMTA2LDggQEAgc3RhdGljIHZvaWQgYWx0ZXJhX2p0
YWd1YXJ0X2JyZWFrX2N0bChzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBpbnQgYnJlYWtfc3RhdGUp
CiB9CiAKIHN0YXRpYyB2b2lkIGFsdGVyYV9qdGFndWFydF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFy
dF9wb3J0ICpwb3J0LAotCQkJCQlzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkJCXN0cnVj
dCBrdGVybWlvcyAqb2xkKQorCQkJCSAgICAgICAgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAor
CQkJCSAgICAgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJLyogSnVzdCBjb3B5
IHRoZSBvbGQgdGVybWlvcyBzZXR0aW5ncyBiYWNrICovCiAJaWYgKG9sZCkKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvdHR5L3NlcmlhbC9hbHRlcmFfdWFydC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL2Fs
dGVyYV91YXJ0LmMKaW5kZXggOGI3NDllZDU1N2M2Li5hMzhkYjJjYjhkYzEgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvdHR5L3NlcmlhbC9hbHRlcmFfdWFydC5jCisrKyBiL2RyaXZlcnMvdHR5L3Nlcmlh
bC9hbHRlcmFfdWFydC5jCkBAIC0xNzUsNyArMTc1LDcgQEAgc3RhdGljIHZvaWQgYWx0ZXJhX3Vh
cnRfYnJlYWtfY3RsKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIGludCBicmVha19zdGF0ZSkKIAog
c3RhdGljIHZvaWQgYWx0ZXJhX3VhcnRfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9y
dCwKIAkJCQkgICAgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkJCSAgICBzdHJ1Y3Qga3Rl
cm1pb3MgKm9sZCkKKwkJCQkgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJdW5z
aWduZWQgbG9uZyBmbGFnczsKIAl1bnNpZ25lZCBpbnQgYmF1ZCwgYmF1ZGNsazsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9hbWJhLXBsMDEwLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwv
YW1iYS1wbDAxMC5jCmluZGV4IGZhZTBiNTgxZmY0Mi4uYWYyN2ZiOGVjMTQ1IDEwMDY0NAotLS0g
YS9kcml2ZXJzL3R0eS9zZXJpYWwvYW1iYS1wbDAxMC5jCisrKyBiL2RyaXZlcnMvdHR5L3Nlcmlh
bC9hbWJhLXBsMDEwLmMKQEAgLTM3MCw3ICszNzAsNyBAQCBzdGF0aWMgdm9pZCBwbDAxMF9zaHV0
ZG93bihzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQogCiBzdGF0aWMgdm9pZAogcGwwMTBfc2V0X3Rl
cm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAot
CQkgICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAq
b2xkKQogewogCXVuc2lnbmVkIGludCBsY3JfaCwgb2xkX2NyOwogCXVuc2lnbmVkIGxvbmcgZmxh
Z3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvYW1iYS1wbDAxMS5jIGIvZHJpdmVy
cy90dHkvc2VyaWFsL2FtYmEtcGwwMTEuYwppbmRleCAxNWYwZTRkODhjNWEuLjM5Zjc5YmM1YWJh
MSAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL2FtYmEtcGwwMTEuYworKysgYi9kcml2
ZXJzL3R0eS9zZXJpYWwvYW1iYS1wbDAxMS5jCkBAIC0yMDMwLDcgKzIwMzAsNyBAQCBwbDAxMV9z
ZXR1cF9zdGF0dXNfbWFza3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9z
ICp0ZXJtaW9zKQogCiBzdGF0aWMgdm9pZAogcGwwMTFfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRf
cG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkgICAgIHN0cnVjdCBrdGVy
bWlvcyAqb2xkKQorCQkgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCB1
YXJ0X2FtYmFfcG9ydCAqdWFwID0KIAkgICAgY29udGFpbmVyX29mKHBvcnQsIHN0cnVjdCB1YXJ0
X2FtYmFfcG9ydCwgcG9ydCk7CkBAIC0yMTYyLDcgKzIxNjIsNyBAQCBwbDAxMV9zZXRfdGVybWlv
cyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCiAKIHN0
YXRpYyB2b2lkCiBzYnNhX3VhcnRfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwg
c3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkK
KwkJICAgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJc3RydWN0IHVhcnRfYW1i
YV9wb3J0ICp1YXAgPQogCSAgICBjb250YWluZXJfb2YocG9ydCwgc3RydWN0IHVhcnRfYW1iYV9w
b3J0LCBwb3J0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9hcGJ1YXJ0LmMgYi9k
cml2ZXJzL3R0eS9zZXJpYWwvYXBidWFydC5jCmluZGV4IDllZjgyZDg3MGZmMi4uNDUwZjRlZGZk
YTBmIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvYXBidWFydC5jCisrKyBiL2RyaXZl
cnMvdHR5L3NlcmlhbC9hcGJ1YXJ0LmMKQEAgLTIyOCw3ICsyMjgsNyBAQCBzdGF0aWMgdm9pZCBh
cGJ1YXJ0X3NodXRkb3duKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiB9CiAKIHN0YXRpYyB2b2lk
IGFwYnVhcnRfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKLQkJCQlzdHJ1Y3Qg
a3Rlcm1pb3MgKnRlcm1pb3MsIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJCXN0cnVjdCBrdGVy
bWlvcyAqdGVybWlvcywgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJdW5zaWduZWQg
aW50IGNyOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvYXI5MzN4X3VhcnQuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9hcjkzM3hfdWFydC5jCmlu
ZGV4IDMyY2FlYWMxMjk4NS4uMGE0MDIwZGJhMTY1IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvYXI5MzN4X3VhcnQuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvYXI5MzN4X3VhcnQu
YwpAQCAtMjgzLDcgKzI4Myw3IEBAIHN0YXRpYyB2b2lkIGFyOTMzeF91YXJ0X2dldF9zY2FsZV9z
dGVwKHVuc2lnbmVkIGludCBjbGssCiAKIHN0YXRpYyB2b2lkIGFyOTMzeF91YXJ0X3NldF90ZXJt
aW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiAJCQkJICAgIHN0cnVjdCBrdGVybWlvcyAqbmV3
LAotCQkJCSAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkgICAgY29uc3Qgc3RydWN0IGt0
ZXJtaW9zICpvbGQpCiB7CiAJc3RydWN0IGFyOTMzeF91YXJ0X3BvcnQgKnVwID0KIAkJY29udGFp
bmVyX29mKHBvcnQsIHN0cnVjdCBhcjkzM3hfdWFydF9wb3J0LCBwb3J0KTsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvdHR5L3NlcmlhbC9hcmNfdWFydC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL2FyY191
YXJ0LmMKaW5kZXggMmEwOWU5MmVmOWVkLi4yYTY1ZWEyNjYwZTEgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvdHR5L3NlcmlhbC9hcmNfdWFydC5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9hcmNfdWFy
dC5jCkBAIC0zNTEsNyArMzUxLDcgQEAgc3RhdGljIHZvaWQgYXJjX3NlcmlhbF9zaHV0ZG93bihz
dHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQogCiBzdGF0aWMgdm9pZAogYXJjX3NlcmlhbF9zZXRfdGVy
bWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKm5ldywKLQkJICAg
ICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkgICAgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9z
ICpvbGQpCiB7CiAJc3RydWN0IGFyY191YXJ0X3BvcnQgKnVhcnQgPSB0b19hcmNfcG9ydChwb3J0
KTsKIAl1bnNpZ25lZCBpbnQgYmF1ZCwgdWFydGwsIHVhcnRoLCBod192YWw7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL3R0eS9zZXJpYWwvYXRtZWxfc2VyaWFsLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwv
YXRtZWxfc2VyaWFsLmMKaW5kZXggMzBiYTllZWY3YjM5Li5hODUxNjlhYTgzOWQgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvdHR5L3NlcmlhbC9hdG1lbF9zZXJpYWwuYworKysgYi9kcml2ZXJzL3R0eS9z
ZXJpYWwvYXRtZWxfc2VyaWFsLmMKQEAgLTIxMjQsOCArMjEyNCw5IEBAIHN0YXRpYyB2b2lkIGF0
bWVsX3NlcmlhbF9wbShzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCB1bnNpZ25lZCBpbnQgc3RhdGUs
CiAvKgogICogQ2hhbmdlIHRoZSBwb3J0IHBhcmFtZXRlcnMKICAqLwotc3RhdGljIHZvaWQgYXRt
ZWxfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0
ZXJtaW9zLAotCQkJICAgICAgc3RydWN0IGt0ZXJtaW9zICpvbGQpCitzdGF0aWMgdm9pZCBhdG1l
bF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAorCQkJICAgICAgc3RydWN0IGt0
ZXJtaW9zICp0ZXJtaW9zLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7
CiAJc3RydWN0IGF0bWVsX3VhcnRfcG9ydCAqYXRtZWxfcG9ydCA9IHRvX2F0bWVsX3VhcnRfcG9y
dChwb3J0KTsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkv
c2VyaWFsL2JjbTYzeHhfdWFydC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL2JjbTYzeHhfdWFydC5j
CmluZGV4IDUzYjQzMTc0YWE0MC4uNWQ5NzM3YzJkMWYyIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0
eS9zZXJpYWwvYmNtNjN4eF91YXJ0LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL2JjbTYzeHhf
dWFydC5jCkBAIC00OTIsOSArNDkyLDggQEAgc3RhdGljIHZvaWQgYmNtX3VhcnRfc2h1dGRvd24o
c3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIC8qCiAgKiBzZXJpYWwgY29yZSByZXF1ZXN0IHRvIGNo
YW5nZSBjdXJyZW50IHVhcnQgc2V0dGluZwogICovCi1zdGF0aWMgdm9pZCBiY21fdWFydF9zZXRf
dGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAotCQkJCSBzdHJ1Y3Qga3Rlcm1pb3MgKm5l
dywKLQkJCQkgc3RydWN0IGt0ZXJtaW9zICpvbGQpCitzdGF0aWMgdm9pZCBiY21fdWFydF9zZXRf
dGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKm5ldywKKwkJ
CQkgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJdW5zaWduZWQgaW50IGN0bCwgYmF1
ZCwgcXVvdCwgaWVyOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L3R0eS9zZXJpYWwvY2xwczcxMXguYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9jbHBzNzExeC5jCmlu
ZGV4IGI5YjY2YWQzMWEwOC4uNDA0YjQzYTVhZTMzIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvY2xwczcxMXguYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvY2xwczcxMXguYwpAQCAt
MjUxLDcgKzI1MSw3IEBAIHN0YXRpYyB2b2lkIHVhcnRfY2xwczcxMXhfc2h1dGRvd24oc3RydWN0
IHVhcnRfcG9ydCAqcG9ydCkKIAogc3RhdGljIHZvaWQgdWFydF9jbHBzNzExeF9zZXRfdGVybWlv
cyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAogCQkJCSAgICAgIHN0cnVjdCBrdGVybWlvcyAqdGVy
bWlvcywKLQkJCQkgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkgICAgICBjb25zdCBz
dHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAl1MzIgdWJybGNyOwogCXVuc2lnbmVkIGludCBiYXVk
LCBxdW90OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL2NwbV91YXJ0L2NwbV91YXJ0
X2NvcmUuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9jcG1fdWFydC9jcG1fdWFydF9jb3JlLmMKaW5k
ZXggZGIwN2Q2YTVkNzY0Li5hNDcxM2NiMDMwNGQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3Nl
cmlhbC9jcG1fdWFydC9jcG1fdWFydF9jb3JlLmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL2Nw
bV91YXJ0L2NwbV91YXJ0X2NvcmUuYwpAQCAtNDg0LDcgKzQ4NCw3IEBAIHN0YXRpYyB2b2lkIGNw
bV91YXJ0X3NodXRkb3duKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiAKIHN0YXRpYyB2b2lkIGNw
bV91YXJ0X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0gICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKyAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCWlu
dCBiYXVkOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvZGlnaWNvbG9yLXVzYXJ0LmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvZGlnaWNvbG9yLXVz
YXJ0LmMKaW5kZXggYWY5NTFlNmEyZWY0Li4wYzBhNjIzNDZmMjMgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvdHR5L3NlcmlhbC9kaWdpY29sb3ItdXNhcnQuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwv
ZGlnaWNvbG9yLXVzYXJ0LmMKQEAgLTI4Nyw3ICsyODcsNyBAQCBzdGF0aWMgdm9pZCBkaWdpY29s
b3JfdWFydF9zaHV0ZG93bihzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQogCiBzdGF0aWMgdm9pZCBk
aWdpY29sb3JfdWFydF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAogCQkJCSAg
ICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkJICAgICAgIHN0cnVjdCBrdGVybWlv
cyAqb2xkKQorCQkJCSAgICAgICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAl1bnNp
Z25lZCBpbnQgYmF1ZCwgZGl2aXNvcjsKIAl1OCBjb25maWcgPSAwOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy90dHkvc2VyaWFsL2R6LmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvZHouYwppbmRleCAzZWFm
NGU4NWJmZGQuLjgyOWI0NTJkYWVlOSAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL2R6
LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL2R6LmMKQEAgLTU1OSw3ICs1NTksNyBAQCBzdGF0
aWMgdm9pZCBkel9yZXNldChzdHJ1Y3QgZHpfcG9ydCAqZHBvcnQpCiB9CiAKIHN0YXRpYyB2b2lk
IGR6X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnVwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3Mg
KnRlcm1pb3MsCi0JCQkgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZF90ZXJtaW9zKQorCQkJICAgY29u
c3Qgc3RydWN0IGt0ZXJtaW9zICpvbGRfdGVybWlvcykKIHsKIAlzdHJ1Y3QgZHpfcG9ydCAqZHBv
cnQgPSB0b19kcG9ydCh1cG9ydCk7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKZGlmZiAtLWdpdCBh
L2RyaXZlcnMvdHR5L3NlcmlhbC9mc2xfbGluZmxleHVhcnQuYyBiL2RyaXZlcnMvdHR5L3Nlcmlh
bC9mc2xfbGluZmxleHVhcnQuYwppbmRleCA5OGJiMGMzMTVlMTMuLjg0ZTgxNTNlNTQyMCAxMDA2
NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL2ZzbF9saW5mbGV4dWFydC5jCisrKyBiL2RyaXZl
cnMvdHR5L3NlcmlhbC9mc2xfbGluZmxleHVhcnQuYwpAQCAtNDAxLDcgKzQwMSw3IEBAIHN0YXRp
YyB2b2lkIGxpbmZsZXhfc2h1dGRvd24oc3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIAogc3RhdGlj
IHZvaWQKIGxpbmZsZXhfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0
IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkgICAgc3RydWN0IGt0ZXJtaW9zICpvbGQpCisJCSAgICBj
b25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCXVu
c2lnbmVkIGxvbmcgY3IsIG9sZF9jciwgY3IxOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2Vy
aWFsL2ZzbF9scHVhcnQuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9mc2xfbHB1YXJ0LmMKaW5kZXgg
ZjZjMzNjZDIyOGM4Li43MTUzOTgwMmY1YTkgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3Nlcmlh
bC9mc2xfbHB1YXJ0LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL2ZzbF9scHVhcnQuYwpAQCAt
MTgzMyw3ICsxODMzLDcgQEAgc3RhdGljIHZvaWQgbHB1YXJ0MzJfc2h1dGRvd24oc3RydWN0IHVh
cnRfcG9ydCAqcG9ydCkKIAogc3RhdGljIHZvaWQKIGxwdWFydF9zZXRfdGVybWlvcyhzdHJ1Y3Qg
dWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCSAgIHN0cnVjdCBr
dGVybWlvcyAqb2xkKQorCQkgICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlzdHJ1
Y3QgbHB1YXJ0X3BvcnQgKnNwb3J0ID0gY29udGFpbmVyX29mKHBvcnQsIHN0cnVjdCBscHVhcnRf
cG9ydCwgcG9ydCk7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKQEAgLTIwNzMsNyArMjA3Myw3IEBA
IHN0YXRpYyB2b2lkIGxwdWFydDMyX3NlcmlhbF9zZXRicmcoc3RydWN0IGxwdWFydF9wb3J0ICpz
cG9ydCwKIAogc3RhdGljIHZvaWQKIGxwdWFydDMyX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3Bv
cnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKLQkJICAgc3RydWN0IGt0ZXJtaW9z
ICpvbGQpCisJCSAgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJc3RydWN0IGxw
dWFydF9wb3J0ICpzcG9ydCA9IGNvbnRhaW5lcl9vZihwb3J0LCBzdHJ1Y3QgbHB1YXJ0X3BvcnQs
IHBvcnQpOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvaWNvbS5jIGIvZHJpdmVycy90dHkvc2VyaWFsL2ljb20uYwppbmRleCA0NWRmMjk5NDdm
ZTguLjgxOWY5NTdiNmI4NCAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL2ljb20uYwor
KysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvaWNvbS5jCkBAIC0xMzUxLDkgKzEzNTEsOCBAQCBzdGF0
aWMgdm9pZCBpY29tX2Nsb3NlKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiAJa3JlZl9wdXQoJmlj
b21fcG9ydC0+YWRhcHRlci0+a3JlZiwgaWNvbV9rcmVmX3JlbGVhc2UpOwogfQogCi1zdGF0aWMg
dm9pZCBpY29tX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0JCQkgICAgIHN0
cnVjdCBrdGVybWlvcyAqdGVybWlvcywKLQkJCSAgICAgc3RydWN0IGt0ZXJtaW9zICpvbGRfdGVy
bWlvcykKK3N0YXRpYyB2b2lkIGljb21fc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9y
dCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAorCQkJICAgICBjb25zdCBzdHJ1Y3Qga3Rlcm1p
b3MgKm9sZF90ZXJtaW9zKQogewogCXN0cnVjdCBpY29tX3BvcnQgKmljb21fcG9ydCA9IHRvX2lj
b21fcG9ydChwb3J0KTsKIAlpbnQgYmF1ZDsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3Nlcmlh
bC9pbXguYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9pbXguYwppbmRleCA1MjI0NDVhOGY2NjYuLjU4
NzVlZTY2NDkyYiAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL2lteC5jCisrKyBiL2Ry
aXZlcnMvdHR5L3NlcmlhbC9pbXguYwpAQCAtMTYyMCw3ICsxNjIwLDcgQEAgc3RhdGljIHZvaWQg
aW14X3VhcnRfZmx1c2hfYnVmZmVyKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiAKIHN0YXRpYyB2
b2lkCiBpbXhfdWFydF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qg
a3Rlcm1pb3MgKnRlcm1pb3MsCi0JCSAgICAgc3RydWN0IGt0ZXJtaW9zICpvbGQpCisJCSAgICAg
Y29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJc3RydWN0IGlteF9wb3J0ICpzcG9ydCA9
IChzdHJ1Y3QgaW14X3BvcnQgKilwb3J0OwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CmRpZmYgLS1n
aXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvaXAyMnppbG9nLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwv
aXAyMnppbG9nLmMKaW5kZXggNjU1ZTY0YjI2ODUyLi5kZDBhODkxNWNlNGYgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvdHR5L3NlcmlhbC9pcDIyemlsb2cuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwv
aXAyMnppbG9nLmMKQEAgLTg3Myw3ICs4NzMsNyBAQCBpcDIyemlsb2dfY29udmVydF90b196cyhz
dHJ1Y3QgdWFydF9pcDIyemlsb2dfcG9ydCAqdXAsIHVuc2lnbmVkIGludCBjZmxhZywKIC8qIFRo
ZSBwb3J0IGxvY2sgaXMgbm90IGhlbGQuICAqLwogc3RhdGljIHZvaWQKIGlwMjJ6aWxvZ19zZXRf
dGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3Ms
Ci0JCSAgICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkgICAgICBjb25zdCBzdHJ1Y3Qga3Rl
cm1pb3MgKm9sZCkKIHsKIAlzdHJ1Y3QgdWFydF9pcDIyemlsb2dfcG9ydCAqdXAgPQogCQljb250
YWluZXJfb2YocG9ydCwgc3RydWN0IHVhcnRfaXAyMnppbG9nX3BvcnQsIHBvcnQpOwpkaWZmIC0t
Z2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL2pzbS9qc21fdHR5LmMgYi9kcml2ZXJzL3R0eS9zZXJp
YWwvanNtL2pzbV90dHkuYwppbmRleCBjYjU4YmRlYzJmNDMuLjIyMmFmYzI3MGM4OCAxMDA2NDQK
LS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL2pzbS9qc21fdHR5LmMKKysrIGIvZHJpdmVycy90dHkv
c2VyaWFsL2pzbS9qc21fdHR5LmMKQEAgLTMwMCw4ICszMDAsOCBAQCBzdGF0aWMgdm9pZCBqc21f
dHR5X2Nsb3NlKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiB9CiAKIHN0YXRpYyB2b2lkIGpzbV90
dHlfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKLQkJCQkgc3RydWN0IGt0ZXJt
aW9zICp0ZXJtaW9zLAotCQkJCSBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZF90ZXJtaW9zKQorCQkJCXN0
cnVjdCBrdGVybWlvcyAqdGVybWlvcywKKwkJCQljb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZF90
ZXJtaW9zKQogewogCXVuc2lnbmVkIGxvbmcgbG9ja19mbGFnczsKIAlzdHJ1Y3QganNtX2NoYW5u
ZWwgKmNoYW5uZWwgPQpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL2xhbnRpcS5jIGIv
ZHJpdmVycy90dHkvc2VyaWFsL2xhbnRpcS5jCmluZGV4IGEzMTIwYzMzNDdkZC4uNjYzN2IzY2Fh
NmI3IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvbGFudGlxLmMKKysrIGIvZHJpdmVy
cy90dHkvc2VyaWFsL2xhbnRpcS5jCkBAIC00MDUsOCArNDA1LDggQEAgbHFhc2Nfc2h1dGRvd24o
c3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIH0KIAogc3RhdGljIHZvaWQKLWxxYXNjX3NldF90ZXJt
aW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0Jc3RydWN0IGt0ZXJtaW9zICpuZXcsIHN0cnVj
dCBrdGVybWlvcyAqb2xkKQorbHFhc2Nfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9y
dCwgc3RydWN0IGt0ZXJtaW9zICpuZXcsCisJCSAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQp
CiB7CiAJdW5zaWduZWQgaW50IGNmbGFnOwogCXVuc2lnbmVkIGludCBpZmxhZzsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9saXRldWFydC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL2xp
dGV1YXJ0LmMKaW5kZXggMzI4YjUwNTIxZjE0Li40YzA2MDQzMjVlZTkgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvdHR5L3NlcmlhbC9saXRldWFydC5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9saXRl
dWFydC5jCkBAIC0xNzgsNyArMTc4LDcgQEAgc3RhdGljIHZvaWQgbGl0ZXVhcnRfc2h1dGRvd24o
c3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIH0KIAogc3RhdGljIHZvaWQgbGl0ZXVhcnRfc2V0X3Rl
cm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICpuZXcsCi0JCQkJ
IHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJCSBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkK
IHsKIAl1bnNpZ25lZCBpbnQgYmF1ZDsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwpkaWZmIC0tZ2l0
IGEvZHJpdmVycy90dHkvc2VyaWFsL2xwYzMyeHhfaHMuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9s
cGMzMnh4X2hzLmMKaW5kZXggOTMxNDBjYWMxY2ExLi4wZDVlZjdkZjI3ZDAgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvdHR5L3NlcmlhbC9scGMzMnh4X2hzLmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFs
L2xwYzMyeHhfaHMuYwpAQCAtNDkzLDcgKzQ5Myw3IEBAIHN0YXRpYyB2b2lkIHNlcmlhbF9scGMz
Mnh4X3NodXRkb3duKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiAvKiBwb3J0LT5sb2NrIGlzIG5v
dCBoZWxkLiAgKi8KIHN0YXRpYyB2b2lkIHNlcmlhbF9scGMzMnh4X3NldF90ZXJtaW9zKHN0cnVj
dCB1YXJ0X3BvcnQgKnBvcnQsCiAJCQkJICAgICAgIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywK
LQkJCQkgICAgICAgc3RydWN0IGt0ZXJtaW9zICpvbGQpCisJCQkJICAgICAgIGNvbnN0IHN0cnVj
dCBrdGVybWlvcyAqb2xkKQogewogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CiAJdW5zaWduZWQgaW50
IGJhdWQsIHF1b3Q7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvbWF4MzEwMC5jIGIv
ZHJpdmVycy90dHkvc2VyaWFsL21heDMxMDAuYwppbmRleCAwYjVmMjFmYmI1M2QuLmM2OTYwMmYz
NTZmZCAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL21heDMxMDAuYworKysgYi9kcml2
ZXJzL3R0eS9zZXJpYWwvbWF4MzEwMC5jCkBAIC00MTgsNyArNDE4LDcgQEAgc3RhdGljIHZvaWQg
bWF4MzEwMF9zZXRfbWN0cmwoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgdW5zaWduZWQgaW50IG1j
dHJsKQogCiBzdGF0aWMgdm9pZAogbWF4MzEwMF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0
ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCSAgICBzdHJ1Y3Qga3Rlcm1pb3Mg
Km9sZCkKKwkJICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCBtYXgz
MTAwX3BvcnQgKnMgPSBjb250YWluZXJfb2YocG9ydCwKIAkJCQkJICAgICAgc3RydWN0IG1heDMx
MDBfcG9ydCwKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9tYXgzMTB4LmMgYi9kcml2
ZXJzL3R0eS9zZXJpYWwvbWF4MzEweC5jCmluZGV4IGFiMTBjYTRhNDViNS4uNzI0MDQ5YTdhOTdk
IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvbWF4MzEweC5jCisrKyBiL2RyaXZlcnMv
dHR5L3NlcmlhbC9tYXgzMTB4LmMKQEAgLTkwNiw3ICs5MDYsNyBAQCBzdGF0aWMgdm9pZCBtYXgz
MTB4X2JyZWFrX2N0bChzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBpbnQgYnJlYWtfc3RhdGUpCiAK
IHN0YXRpYyB2b2lkIG1heDMxMHhfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwK
IAkJCQlzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkJc3RydWN0IGt0ZXJtaW9zICpvbGQp
CisJCQkJY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJdW5zaWduZWQgaW50IGxjciA9
IDAsIGZsb3cgPSAwOwogCWludCBiYXVkOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFs
L21jZi5jIGIvZHJpdmVycy90dHkvc2VyaWFsL21jZi5jCmluZGV4IGY0YWFhYWRkMDc0Mi4uYjFj
ZDlhNzZkZDkzIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvbWNmLmMKKysrIGIvZHJp
dmVycy90dHkvc2VyaWFsL21jZi5jCkBAIC0xOTIsNyArMTkyLDcgQEAgc3RhdGljIHZvaWQgbWNm
X3NodXRkb3duKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiAvKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8K
IAogc3RhdGljIHZvaWQgbWNmX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0
cnVjdCBrdGVybWlvcyAqdGVybWlvcywKLQlzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCSAgICBj
b25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCXVu
c2lnbmVkIGludCBiYXVkLCBiYXVkY2xrOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFs
L21lbl96MTM1X3VhcnQuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9tZW5fejEzNV91YXJ0LmMKaW5k
ZXggMTIxMTdiNTk2ZTczLi4zNjkwZjVjZjBmNDMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3Nl
cmlhbC9tZW5fejEzNV91YXJ0LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL21lbl96MTM1X3Vh
cnQuYwpAQCAtNjQ2LDggKzY0Niw4IEBAIHN0YXRpYyB2b2lkIG1lbl96MTM1X3NodXRkb3duKHN0
cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiB9CiAKIHN0YXRpYyB2b2lkIG1lbl96MTM1X3NldF90ZXJt
aW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0JCQkJc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9z
LAotCQkJCXN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJCSBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1p
b3MsCisJCQkJIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCBtZW5fejEz
NV9wb3J0ICp1YXJ0ID0gdG9fbWVuX3oxMzUocG9ydCk7CiAJdW5zaWduZWQgaW50IGJhdWQ7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvbWVzb25fdWFydC5jIGIvZHJpdmVycy90dHkv
c2VyaWFsL21lc29uX3VhcnQuYwppbmRleCA2YzhkYjE5ZmQ1NzIuLmY1MjUzNDE0MWI1YSAxMDA2
NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL21lc29uX3VhcnQuYworKysgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvbWVzb25fdWFydC5jCkBAIC0zMzUsNyArMzM1LDcgQEAgc3RhdGljIHZvaWQgbWVz
b25fdWFydF9jaGFuZ2Vfc3BlZWQoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgdW5zaWduZWQgbG9u
ZyBiYXVkKQogCiBzdGF0aWMgdm9pZCBtZXNvbl91YXJ0X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0
X3BvcnQgKnBvcnQsCiAJCQkJICAgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkJCSAgIHN0
cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJCSAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQog
ewogCXVuc2lnbmVkIGludCBjZmxhZ3MsIGlmbGFncywgYmF1ZDsKIAl1bnNpZ25lZCBsb25nIGZs
YWdzOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL21pbGJlYXV0X3VzaW8uYyBiL2Ry
aXZlcnMvdHR5L3NlcmlhbC9taWxiZWF1dF91c2lvLmMKaW5kZXggMzQ3MDg4YmIzODBlLi5jMTVl
MGQ4NGRjN2UgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC9taWxiZWF1dF91c2lvLmMK
KysrIGIvZHJpdmVycy90dHkvc2VyaWFsL21pbGJlYXV0X3VzaW8uYwpAQCAtMjk4LDcgKzI5OCw4
IEBAIHN0YXRpYyB2b2lkIG1sYl91c2lvX3NodXRkb3duKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQp
CiB9CiAKIHN0YXRpYyB2b2lkIG1sYl91c2lvX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQg
KnBvcnQsCi0JCQlzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsIHN0cnVjdCBrdGVybWlvcyAqb2xk
KQorCQkJCSBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCisJCQkJIGNvbnN0IHN0cnVjdCBrdGVy
bWlvcyAqb2xkKQogewogCXVuc2lnbmVkIGludCBlc2NyLCBzbXIgPSBNTEJfVVNJT19TTVJfU09F
OwogCXVuc2lnbmVkIGxvbmcgZmxhZ3MsIGJhdWQsIHF1b3Q7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L3R0eS9zZXJpYWwvbXBjNTJ4eF91YXJ0LmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvbXBjNTJ4eF91
YXJ0LmMKaW5kZXggM2YxOTg2Yzg5Njk0Li42ZjA5YjFjYjNlMWMgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvdHR5L3NlcmlhbC9tcGM1Mnh4X3VhcnQuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvbXBj
NTJ4eF91YXJ0LmMKQEAgLTEwMSw3ICsxMDEsNyBAQCBzdHJ1Y3QgcHNjX29wcyB7CiAJdm9pZAkJ
KCpjd19yZXN0b3JlX2ludHMpKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpOwogCXVuc2lnbmVkIGlu
dAkoKnNldF9iYXVkcmF0ZSkoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKIAkJCQkJc3RydWN0IGt0
ZXJtaW9zICpuZXcsCi0JCQkJCXN0cnVjdCBrdGVybWlvcyAqb2xkKTsKKwkJCQkJY29uc3Qgc3Ry
dWN0IGt0ZXJtaW9zICpvbGQpOwogCWludAkJKCpjbG9ja19hbGxvYykoc3RydWN0IHVhcnRfcG9y
dCAqcG9ydCk7CiAJdm9pZAkJKCpjbG9ja19yZWxzZSkoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCk7
CiAJaW50CQkoKmNsb2NrKShzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBpbnQgZW5hYmxlKTsKQEAg
LTI4Nyw3ICsyODcsNyBAQCBzdGF0aWMgdm9pZCBtcGM1Mnh4X3BzY19jd19yZXN0b3JlX2ludHMo
c3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIAogc3RhdGljIHVuc2lnbmVkIGludCBtcGM1MjAwX3Bz
Y19zZXRfYmF1ZHJhdGUoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKIAkJCQkJICAgICBzdHJ1Y3Qg
a3Rlcm1pb3MgKm5ldywKLQkJCQkJICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkJICAg
ICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAl1bnNpZ25lZCBpbnQgYmF1ZDsKIAl1
bnNpZ25lZCBpbnQgZGl2aXNvcjsKQEAgLTMwNSw3ICszMDUsNyBAQCBzdGF0aWMgdW5zaWduZWQg
aW50IG1wYzUyMDBfcHNjX3NldF9iYXVkcmF0ZShzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAogCiBz
dGF0aWMgdW5zaWduZWQgaW50IG1wYzUyMDBiX3BzY19zZXRfYmF1ZHJhdGUoc3RydWN0IHVhcnRf
cG9ydCAqcG9ydCwKIAkJCQkJICAgICAgc3RydWN0IGt0ZXJtaW9zICpuZXcsCi0JCQkJCSAgICAg
IHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJCQkgICAgICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3Mg
Km9sZCkKIHsKIAl1bnNpZ25lZCBpbnQgYmF1ZDsKIAl1bnNpZ25lZCBpbnQgZGl2aXNvcjsKQEAg
LTUzMyw3ICs1MzMsNyBAQCBzdGF0aWMgdm9pZCBtcGM1MTJ4X3BzY19jd19yZXN0b3JlX2ludHMo
c3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIAogc3RhdGljIHVuc2lnbmVkIGludCBtcGM1MTJ4X3Bz
Y19zZXRfYmF1ZHJhdGUoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKIAkJCQkJICAgICBzdHJ1Y3Qg
a3Rlcm1pb3MgKm5ldywKLQkJCQkJICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkJICAg
ICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAl1bnNpZ25lZCBpbnQgYmF1ZDsKIAl1
bnNpZ25lZCBpbnQgZGl2aXNvcjsKQEAgLTg4MCw3ICs4ODAsNyBAQCBzdGF0aWMgaW5saW5lIHZv
aWQgbXBjNTEyNV9zZXRfZGl2aXNvcihzdHJ1Y3QgbXBjNTEyNV9wc2MgX19pb21lbSAqcHNjLAog
CiBzdGF0aWMgdW5zaWduZWQgaW50IG1wYzUxMjVfcHNjX3NldF9iYXVkcmF0ZShzdHJ1Y3QgdWFy
dF9wb3J0ICpwb3J0LAogCQkJCQkgICAgIHN0cnVjdCBrdGVybWlvcyAqbmV3LAotCQkJCQkgICAg
IHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJCQkgICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAq
b2xkKQogewogCXVuc2lnbmVkIGludCBiYXVkOwogCXVuc2lnbmVkIGludCBkaXZpc29yOwpAQCAt
MTE2Nyw3ICsxMTY3LDcgQEAgbXBjNTJ4eF91YXJ0X3NodXRkb3duKHN0cnVjdCB1YXJ0X3BvcnQg
KnBvcnQpCiAKIHN0YXRpYyB2b2lkCiBtcGM1Mnh4X3VhcnRfc2V0X3Rlcm1pb3Moc3RydWN0IHVh
cnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICpuZXcsCi0JCQkgc3RydWN0IGt0ZXJtaW9z
ICpvbGQpCisJCQkgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJdW5zaWduZWQgbG9u
ZyBmbGFnczsKIAl1bnNpZ25lZCBjaGFyIG1yMSwgbXIyOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90
dHkvc2VyaWFsL21wczItdWFydC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL21wczItdWFydC5jCmlu
ZGV4IDVlOTQyOWRjYzUxZi4uMmUzZTZjZjE2ODE3IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvbXBzMi11YXJ0LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL21wczItdWFydC5jCkBA
IC0zNTgsNyArMzU4LDcgQEAgc3RhdGljIHZvaWQgbXBzMl91YXJ0X3NodXRkb3duKHN0cnVjdCB1
YXJ0X3BvcnQgKnBvcnQpCiAKIHN0YXRpYyB2b2lkCiBtcHMyX3VhcnRfc2V0X3Rlcm1pb3Moc3Ry
dWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkgICAgICBz
dHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJICAgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQp
CiB7CiAJdW5zaWduZWQgbG9uZyBmbGFnczsKIAl1bnNpZ25lZCBpbnQgYmF1ZCwgYmF1ZGRpdjsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9tc21fc2VyaWFsLmMgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvbXNtX3NlcmlhbC5jCmluZGV4IDMxNTk4ODlkZGFlMS4uN2RkMTlhMjgxNTc5IDEw
MDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvbXNtX3NlcmlhbC5jCisrKyBiL2RyaXZlcnMv
dHR5L3NlcmlhbC9tc21fc2VyaWFsLmMKQEAgLTEyNjMsNyArMTI2Myw3IEBAIHN0YXRpYyB2b2lk
IG1zbV9zaHV0ZG93bihzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQogfQogCiBzdGF0aWMgdm9pZCBt
c21fc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0
ZXJtaW9zLAotCQkJICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJICAgIGNvbnN0IHN0cnVj
dCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCBtc21fcG9ydCAqbXNtX3BvcnQgPSB0b19tc21f
cG9ydChwb3J0KTsKIAlzdHJ1Y3QgbXNtX2RtYSAqZG1hID0gJm1zbV9wb3J0LT5yeF9kbWE7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvbXV4LmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwv
bXV4LmMKaW5kZXggMGJhMGY0ZDk0NTlkLi5lZDBlNzYzZjYyMmEgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvdHR5L3NlcmlhbC9tdXguYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvbXV4LmMKQEAgLTI4
OSw3ICsyODksNyBAQCBzdGF0aWMgdm9pZCBtdXhfc2h1dGRvd24oc3RydWN0IHVhcnRfcG9ydCAq
cG9ydCkKICAqLwogc3RhdGljIHZvaWQKIG11eF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0
ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JICAgICAgICBzdHJ1Y3Qga3Rlcm1p
b3MgKm9sZCkKKwkgICAgICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogfQogCmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvbXZlYnUtdWFydC5jIGIvZHJpdmVycy90dHkv
c2VyaWFsL212ZWJ1LXVhcnQuYwppbmRleCA2NWVhZWNkMTBiN2MuLmJhMTZlMWRhNmJkMyAxMDA2
NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL212ZWJ1LXVhcnQuYworKysgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvbXZlYnUtdWFydC5jCkBAIC01NjQsNyArNTY0LDcgQEAgc3RhdGljIHVuc2lnbmVk
IGludCBtdmVidV91YXJ0X2JhdWRfcmF0ZV9zZXQoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgdW5z
aWduZWQgaW4KIAogc3RhdGljIHZvaWQgbXZlYnVfdWFydF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFy
dF9wb3J0ICpwb3J0LAogCQkJCSAgIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKLQkJCQkgICBz
dHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkgICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkK
IHsKIAl1bnNpZ25lZCBsb25nIGZsYWdzOwogCXVuc2lnbmVkIGludCBiYXVkLCBtaW5fYmF1ZCwg
bWF4X2JhdWQ7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvbXhzLWF1YXJ0LmMgYi9k
cml2ZXJzL3R0eS9zZXJpYWwvbXhzLWF1YXJ0LmMKaW5kZXggMTk0NGRhZjg1OTNhLi5kMjFhNGYz
ZWYyZmUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC9teHMtYXVhcnQuYworKysgYi9k
cml2ZXJzL3R0eS9zZXJpYWwvbXhzLWF1YXJ0LmMKQEAgLTk1OSw3ICs5NTksNyBAQCBzdGF0aWMg
aW50IG14c19hdWFydF9kbWFfaW5pdChzdHJ1Y3QgbXhzX2F1YXJ0X3BvcnQgKnMpCiAjZGVmaW5l
IENUU19BVF9BVUFSVCgpCSFtY3RybF9ncGlvX3RvX2dwaW9kKHMtPmdwaW9zLCBVQVJUX0dQSU9f
Q1RTKQogc3RhdGljIHZvaWQgbXhzX2F1YXJ0X3NldHRlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAq
dSwKIAkJCQkgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkJCSBzdHJ1Y3Qga3Rlcm1pb3Mg
Km9sZCkKKwkJCQkgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJc3RydWN0IG14c19h
dWFydF9wb3J0ICpzID0gdG9fYXVhcnRfcG9ydCh1KTsKIAl1MzIgY3RybCwgY3RybDIsIGRpdjsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9vbWFwLXNlcmlhbC5jIGIvZHJpdmVycy90
dHkvc2VyaWFsL29tYXAtc2VyaWFsLmMKaW5kZXggMGFhNjY2ZTI0N2Q1Li5jODdkODViOTAxYTcg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC9vbWFwLXNlcmlhbC5jCisrKyBiL2RyaXZl
cnMvdHR5L3NlcmlhbC9vbWFwLXNlcmlhbC5jCkBAIC04MDIsNyArODAyLDcgQEAgc3RhdGljIHZv
aWQgc2VyaWFsX29tYXBfdWFydF9xb3Nfd29yayhzdHJ1Y3Qgd29ya19zdHJ1Y3QgKndvcmspCiAK
IHN0YXRpYyB2b2lkCiBzZXJpYWxfb21hcF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpw
b3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQlzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkK
KwkJCWNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCB1YXJ0X29tYXBfcG9y
dCAqdXAgPSB0b191YXJ0X29tYXBfcG9ydChwb3J0KTsKIAl1bnNpZ25lZCBjaGFyIGN2YWwgPSAw
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL293bC11YXJ0LmMgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvb3dsLXVhcnQuYwppbmRleCA4ODhlMTdlM2YyNWYuLmZkZTM5Y2MxMTQ1ZCAxMDA2
NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL293bC11YXJ0LmMKKysrIGIvZHJpdmVycy90dHkv
c2VyaWFsL293bC11YXJ0LmMKQEAgLTMyOCw3ICszMjgsNyBAQCBzdGF0aWMgdm9pZCBvd2xfdWFy
dF9jaGFuZ2VfYmF1ZHJhdGUoc3RydWN0IG93bF91YXJ0X3BvcnQgKm93bF9wb3J0LAogCiBzdGF0
aWMgdm9pZCBvd2xfdWFydF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAogCQkJ
CSBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkJIHN0cnVjdCBrdGVybWlvcyAqb2xkKQor
CQkJCSBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlzdHJ1Y3Qgb3dsX3VhcnRfcG9y
dCAqb3dsX3BvcnQgPSB0b19vd2xfdWFydF9wb3J0KHBvcnQpOwogCXVuc2lnbmVkIGludCBiYXVk
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL3BjaF91YXJ0LmMgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvcGNoX3VhcnQuYwppbmRleCA4YTkwNjVlNGE5MDMuLjExYmE1ZGYwNjE4ZiAxMDA2
NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3BjaF91YXJ0LmMKKysrIGIvZHJpdmVycy90dHkv
c2VyaWFsL3BjaF91YXJ0LmMKQEAgLTEzMDEsNyArMTMwMSw4IEBAIHN0YXRpYyB2b2lkIHBjaF91
YXJ0X3NodXRkb3duKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiAgKmJpdHMuICBVcGRhdGUgcmVh
ZF9zdGF0dXNfbWFzayBhbmQgaWdub3JlX3N0YXR1c19tYXNrIHRvIGluZGljYXRlCiAgKnRoZSB0
eXBlcyBvZiBldmVudHMgd2UgYXJlIGludGVyZXN0ZWQgaW4gcmVjZWl2aW5nLiAgKi8KIHN0YXRp
YyB2b2lkIHBjaF91YXJ0X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0JCQkJ
IHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywgc3RydWN0IGt0ZXJtaW9zICpvbGQpCisJCQkJIHN0
cnVjdCBrdGVybWlvcyAqdGVybWlvcywKKwkJCQkgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQp
CiB7CiAJaW50IHJ0bjsKIAl1bnNpZ25lZCBpbnQgYmF1ZCwgcGFyaXR5LCBiaXRzLCBzdGI7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvcGljMzJfdWFydC5jIGIvZHJpdmVycy90dHkv
c2VyaWFsL3BpYzMyX3VhcnQuYwppbmRleCBmNDE4ZjFkZTY2YjMuLjJiOGJhMDcwMmI3MCAxMDA2
NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3BpYzMyX3VhcnQuYworKysgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvcGljMzJfdWFydC5jCkBAIC02MDksNyArNjA5LDcgQEAgc3RhdGljIHZvaWQgcGlj
MzJfdWFydF9zaHV0ZG93bihzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQogLyogc2VyaWFsIGNvcmUg
cmVxdWVzdCB0byBjaGFuZ2UgY3VycmVudCB1YXJ0IHNldHRpbmcgKi8KIHN0YXRpYyB2b2lkIHBp
YzMyX3VhcnRfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKIAkJCQkgICBzdHJ1
Y3Qga3Rlcm1pb3MgKm5ldywKLQkJCQkgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkgICBj
b25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlzdHJ1Y3QgcGljMzJfc3BvcnQgKnNwb3J0
ID0gdG9fcGljMzJfc3BvcnQocG9ydCk7CiAJdW5zaWduZWQgaW50IGJhdWQ7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL3R0eS9zZXJpYWwvcG1hY196aWxvZy5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3Bt
YWNfemlsb2cuYwppbmRleCBmNjMyNTdiOGU4NzIuLmZlMmU0ZWM0MjNmNyAxMDA2NDQKLS0tIGEv
ZHJpdmVycy90dHkvc2VyaWFsL3BtYWNfemlsb2cuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwv
cG1hY196aWxvZy5jCkBAIC0xMjAyLDcgKzEyMDIsNyBAQCBzdGF0aWMgdm9pZCBwbXpfaXJkYV9z
ZXR1cChzdHJ1Y3QgdWFydF9wbWFjX3BvcnQgKnVhcCwgdW5zaWduZWQgbG9uZyAqYmF1ZCkKIAog
CiBzdGF0aWMgdm9pZCBfX3Btel9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBz
dHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkK
KwkJCSAgICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCB1YXJ0X3Bt
YWNfcG9ydCAqdWFwID0gdG9fcG16KHBvcnQpOwogCXVuc2lnbmVkIGxvbmcgYmF1ZDsKQEAgLTEy
NDQsNyArMTI0NCw3IEBAIHN0YXRpYyB2b2lkIF9fcG16X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0
X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKIAogLyogVGhlIHBvcnQgbG9j
ayBpcyBub3QgaGVsZC4gICovCiBzdGF0aWMgdm9pZCBwbXpfc2V0X3Rlcm1pb3Moc3RydWN0IHVh
cnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkJICAgIHN0cnVjdCBr
dGVybWlvcyAqb2xkKQorCQkJICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0
cnVjdCB1YXJ0X3BtYWNfcG9ydCAqdWFwID0gdG9fcG16KHBvcnQpOwogCXVuc2lnbmVkIGxvbmcg
ZmxhZ3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvcHhhLmMgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvcHhhLmMKaW5kZXggOTMwOWZmZDg3YzhlLi4yZDI1MjMxZmFkODQgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvdHR5L3NlcmlhbC9weGEuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvcHhh
LmMKQEAgLTQyMyw3ICs0MjMsNyBAQCBzdGF0aWMgdm9pZCBzZXJpYWxfcHhhX3NodXRkb3duKHN0
cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiAKIHN0YXRpYyB2b2lkCiBzZXJpYWxfcHhhX3NldF90ZXJt
aW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKLQkJ
ICAgICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkgICAgICAgY29uc3Qgc3RydWN0IGt0ZXJt
aW9zICpvbGQpCiB7CiAJc3RydWN0IHVhcnRfcHhhX3BvcnQgKnVwID0gKHN0cnVjdCB1YXJ0X3B4
YV9wb3J0ICopcG9ydDsKIAl1bnNpZ25lZCBjaGFyIGN2YWwsIGZjciA9IDA7CmRpZmYgLS1naXQg
YS9kcml2ZXJzL3R0eS9zZXJpYWwvcWNvbV9nZW5pX3NlcmlhbC5jIGIvZHJpdmVycy90dHkvc2Vy
aWFsL3Fjb21fZ2VuaV9zZXJpYWwuYwppbmRleCBmNDY5OGEwNjRhNGQuLjUyMTgyZjZhNTQ0NCAx
MDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3Fjb21fZ2VuaV9zZXJpYWwuYworKysgYi9k
cml2ZXJzL3R0eS9zZXJpYWwvcWNvbV9nZW5pX3NlcmlhbC5jCkBAIC0xMDA1LDcgKzEwMDUsOCBA
QCBzdGF0aWMgdW5zaWduZWQgbG9uZyBnZXRfY2xrX2Rpdl9yYXRlKHN0cnVjdCBjbGsgKmNsaywg
dW5zaWduZWQgaW50IGJhdWQsCiB9CiAKIHN0YXRpYyB2b2lkIHFjb21fZ2VuaV9zZXJpYWxfc2V0
X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqdXBvcnQsCi0JCQkJc3RydWN0IGt0ZXJtaW9zICp0
ZXJtaW9zLCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkJIHN0cnVjdCBrdGVybWlvcyAqdGVy
bWlvcywKKwkJCQkJIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXVuc2lnbmVkIGlu
dCBiYXVkOwogCXUzMiBiaXRzX3Blcl9jaGFyOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2Vy
aWFsL3JkYS11YXJ0LmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvcmRhLXVhcnQuYwppbmRleCBmZWIy
MDU0YWJhMzcuLjBlMzg3ZTIxNDRmYSAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3Jk
YS11YXJ0LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL3JkYS11YXJ0LmMKQEAgLTIzOCw3ICsy
MzgsNyBAQCBzdGF0aWMgdm9pZCByZGFfdWFydF9jaGFuZ2VfYmF1ZHJhdGUoc3RydWN0IHJkYV91
YXJ0X3BvcnQgKnJkYV9wb3J0LAogCiBzdGF0aWMgdm9pZCByZGFfdWFydF9zZXRfdGVybWlvcyhz
dHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAogCQkJCSBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0J
CQkJIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJCSBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9s
ZCkKIHsKIAlzdHJ1Y3QgcmRhX3VhcnRfcG9ydCAqcmRhX3BvcnQgPSB0b19yZGFfdWFydF9wb3J0
KHBvcnQpOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvcnAyLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvcnAyLmMKaW5kZXggNjY4OWQ4YWRkOGY3
Li5iODFhZmIwNmYxZjQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC9ycDIuYworKysg
Yi9kcml2ZXJzL3R0eS9zZXJpYWwvcnAyLmMKQEAgLTM3MCw5ICszNzAsOCBAQCBzdGF0aWMgdm9p
ZCBfX3JwMl91YXJ0X3NldF90ZXJtaW9zKHN0cnVjdCBycDJfdWFydF9wb3J0ICp1cCwKIAkgICAg
ICAgdXAtPnVjb2RlICsgUlAyX1JYX1NXRkxPVyk7CiB9CiAKLXN0YXRpYyB2b2lkIHJwMl91YXJ0
X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0JCQkJIHN0cnVjdCBrdGVybWlv
cyAqbmV3LAotCQkJCSBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKK3N0YXRpYyB2b2lkIHJwMl91YXJ0
X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqbmV3
LAorCQkJCSBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlzdHJ1Y3QgcnAyX3VhcnRf
cG9ydCAqdXAgPSBwb3J0X3RvX3VwKHBvcnQpOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CmRpZmYg
LS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvc2ExMTAwLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwv
c2ExMTAwLmMKaW5kZXggZTY0ZTQyYTE5ZDFhLi5kZDllMzI1M2NhYjQgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvdHR5L3NlcmlhbC9zYTExMDAuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvc2ExMTAw
LmMKQEAgLTQwOSw3ICs0MDksNyBAQCBzdGF0aWMgdm9pZCBzYTExMDBfc2h1dGRvd24oc3RydWN0
IHVhcnRfcG9ydCAqcG9ydCkKIAogc3RhdGljIHZvaWQKIHNhMTEwMF9zZXRfdGVybWlvcyhzdHJ1
Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCSAgIHN0cnVj
dCBrdGVybWlvcyAqb2xkKQorCQkgICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlz
dHJ1Y3Qgc2ExMTAwX3BvcnQgKnNwb3J0ID0KIAkJY29udGFpbmVyX29mKHBvcnQsIHN0cnVjdCBz
YTExMDBfcG9ydCwgcG9ydCk7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvc2Ftc3Vu
Z190dHkuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zYW1zdW5nX3R0eS5jCmluZGV4IGI3YTRiNDdj
ZTc0ZS4uNzdkMTM2MzAyOWY1IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvc2Ftc3Vu
Z190dHkuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvc2Ftc3VuZ190dHkuYwpAQCAtMTUzMCw3
ICsxNTMwLDcgQEAgc3RhdGljIGNvbnN0IHUxNiB1ZGl2c2xvdF90YWJsZVsxNl0gPSB7CiAKIHN0
YXRpYyB2b2lkIHMzYzI0eHhfc2VyaWFsX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBv
cnQsCiAJCQkJICAgICAgIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKLQkJCQkgICAgICAgc3Ry
dWN0IGt0ZXJtaW9zICpvbGQpCisJCQkJICAgICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xk
KQogewogCWNvbnN0IHN0cnVjdCBzM2MyNDEwX3VhcnRjZmcgKmNmZyA9IHMzYzI0eHhfcG9ydF90
b19jZmcocG9ydCk7CiAJc3RydWN0IHMzYzI0eHhfdWFydF9wb3J0ICpvdXJwb3J0ID0gdG9fb3Vy
cG9ydChwb3J0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9zYjEyNTAtZHVhcnQu
YyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zYjEyNTAtZHVhcnQuYwppbmRleCAyY2Y4NTMzZWY3NjAu
LmM1ZDJiNmNkY2I0YSAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3NiMTI1MC1kdWFy
dC5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zYjEyNTAtZHVhcnQuYwpAQCAtNTMxLDcgKzUz
MSw3IEBAIHN0YXRpYyB2b2lkIHNiZF9pbml0X3BvcnQoc3RydWN0IHNiZF9wb3J0ICpzcG9ydCkK
IH0KIAogc3RhdGljIHZvaWQgc2JkX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnVwb3J0
LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkgICAgc3RydWN0IGt0ZXJtaW9zICpvbGRf
dGVybWlvcykKKwkJCSAgICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZF90ZXJtaW9zKQogewog
CXN0cnVjdCBzYmRfcG9ydCAqc3BvcnQgPSB0b19zcG9ydCh1cG9ydCk7CiAJdW5zaWduZWQgaW50
IG1vZGUxID0gMCwgbW9kZTIgPSAwLCBhdXggPSAwOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkv
c2VyaWFsL3NjMTZpczd4eC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3NjMTZpczd4eC5jCmluZGV4
IDI1OWUwOGNjMzQ3Yy4uNWVjZjhmOTBlYjVjIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJp
YWwvc2MxNmlzN3h4LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL3NjMTZpczd4eC5jCkBAIC0x
MDE1LDcgKzEwMTUsNyBAQCBzdGF0aWMgdm9pZCBzYzE2aXM3eHhfYnJlYWtfY3RsKHN0cnVjdCB1
YXJ0X3BvcnQgKnBvcnQsIGludCBicmVha19zdGF0ZSkKIAogc3RhdGljIHZvaWQgc2MxNmlzN3h4
X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiAJCQkJICBzdHJ1Y3Qga3Rlcm1p
b3MgKnRlcm1pb3MsCi0JCQkJICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkgIGNvbnN0IHN0
cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCBzYzE2aXM3eHhfcG9ydCAqcyA9IGRldl9n
ZXRfZHJ2ZGF0YShwb3J0LT5kZXYpOwogCXN0cnVjdCBzYzE2aXM3eHhfb25lICpvbmUgPSB0b19z
YzE2aXM3eHhfb25lKHBvcnQsIHBvcnQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFs
L3NjY254cC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3NjY254cC5jCmluZGV4IGM1NmRlMmUxMDRk
NC4uZGQ5ODUwOWY1MmU1IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvc2NjbnhwLmMK
KysrIGIvZHJpdmVycy90dHkvc2VyaWFsL3NjY254cC5jCkBAIC02MzYsNyArNjM2LDggQEAgc3Rh
dGljIHZvaWQgc2NjbnhwX2JyZWFrX2N0bChzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBpbnQgYnJl
YWtfc3RhdGUpCiB9CiAKIHN0YXRpYyB2b2lkIHNjY254cF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFy
dF9wb3J0ICpwb3J0LAotCQkJICAgICAgIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywgc3RydWN0
IGt0ZXJtaW9zICpvbGQpCisJCQkgICAgICAgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAorCQkJ
ICAgICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCBzY2NueHBfcG9y
dCAqcyA9IGRldl9nZXRfZHJ2ZGF0YShwb3J0LT5kZXYpOwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7
CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvc2VyaWFsLXRlZ3JhLmMgYi9kcml2ZXJz
L3R0eS9zZXJpYWwvc2VyaWFsLXRlZ3JhLmMKaW5kZXggYWQ0ZjM1NjdmZjkwLi5kYTI5OTNmYzJm
MDQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC9zZXJpYWwtdGVncmEuYworKysgYi9k
cml2ZXJzL3R0eS9zZXJpYWwvc2VyaWFsLXRlZ3JhLmMKQEAgLTEyNzEsNyArMTI3MSw4IEBAIHN0
YXRpYyB2b2lkIHRlZ3JhX3VhcnRfZW5hYmxlX21zKHN0cnVjdCB1YXJ0X3BvcnQgKnUpCiB9CiAK
IHN0YXRpYyB2b2lkIHRlZ3JhX3VhcnRfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqdSwK
LQkJc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZHRlcm1pb3Mp
CisJCQkJICAgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAorCQkJCSAgIGNvbnN0IHN0cnVjdCBr
dGVybWlvcyAqb2xkdGVybWlvcykKIHsKIAlzdHJ1Y3QgdGVncmFfdWFydF9wb3J0ICp0dXAgPSB0
b190ZWdyYV91cG9ydCh1KTsKIAl1bnNpZ25lZCBpbnQgYmF1ZDsKZGlmZiAtLWdpdCBhL2RyaXZl
cnMvdHR5L3NlcmlhbC9zZXJpYWxfY29yZS5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3NlcmlhbF9j
b3JlLmMKaW5kZXggMTJjODdjZDIwMWE3Li5jODI5NTkwNGIzMzEgMTAwNjQ0Ci0tLSBhL2RyaXZl
cnMvdHR5L3NlcmlhbC9zZXJpYWxfY29yZS5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zZXJp
YWxfY29yZS5jCkBAIC0zODAsNyArMzgwLDcgQEAgRVhQT1JUX1NZTUJPTCh1YXJ0X3VwZGF0ZV90
aW1lb3V0KTsKICAqLwogdW5zaWduZWQgaW50CiB1YXJ0X2dldF9iYXVkX3JhdGUoc3RydWN0IHVh
cnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkgICBzdHJ1Y3Qga3Rl
cm1pb3MgKm9sZCwgdW5zaWduZWQgaW50IG1pbiwgdW5zaWduZWQgaW50IG1heCkKKwkJICAgY29u
c3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQsIHVuc2lnbmVkIGludCBtaW4sIHVuc2lnbmVkIGludCBt
YXgpCiB7CiAJdW5zaWduZWQgaW50IHRyeTsKIAl1bnNpZ25lZCBpbnQgYmF1ZDsKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9zZXJpYWxfdHh4OS5jIGIvZHJpdmVycy90dHkvc2VyaWFs
L3NlcmlhbF90eHg5LmMKaW5kZXggMjI4ZTM4MGRiMDgwLi5lMTJmMWRjMThjMzggMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvdHR5L3NlcmlhbC9zZXJpYWxfdHh4OS5jCisrKyBiL2RyaXZlcnMvdHR5L3Nl
cmlhbC9zZXJpYWxfdHh4OS5jCkBAIC01OTQsNyArNTk0LDcgQEAgc3RhdGljIHZvaWQgc2VyaWFs
X3R4eDlfc2h1dGRvd24oc3RydWN0IHVhcnRfcG9ydCAqdXApCiAKIHN0YXRpYyB2b2lkCiBzZXJp
YWxfdHh4OV9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICp1cCwgc3RydWN0IGt0ZXJtaW9z
ICp0ZXJtaW9zLAotCQkgICAgICAgc3RydWN0IGt0ZXJtaW9zICpvbGQpCisJCQljb25zdCBzdHJ1
Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAl1bnNpZ25lZCBpbnQgY3ZhbCwgZmNyID0gMDsKIAl1bnNp
Z25lZCBsb25nIGZsYWdzOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL3NoLXNjaS5j
IGIvZHJpdmVycy90dHkvc2VyaWFsL3NoLXNjaS5jCmluZGV4IDAwNzVhMTQyMDAwNS4uOWFkMzY2
M2I1MTUyIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvc2gtc2NpLmMKKysrIGIvZHJp
dmVycy90dHkvc2VyaWFsL3NoLXNjaS5jCkBAIC0yMzY3LDcgKzIzNjcsNyBAQCBzdGF0aWMgdm9p
ZCBzY2lfcmVzZXQoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIH0KIAogc3RhdGljIHZvaWQgc2Np
X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqdGVy
bWlvcywKLQkJCSAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJICAgICAgICAgICAgY29uc3Qg
c3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJdW5zaWduZWQgaW50IGJhdWQsIHNtcl92YWwgPSBT
Q1NNUl9BU1lOQywgc2NyX3ZhbCA9IDAsIGksIGJpdHM7CiAJdW5zaWduZWQgaW50IGJyciA9IDI1
NSwgY2tzID0gMCwgc3JyID0gMTUsIGRsID0gMCwgc2Nja3MgPSAwOwpkaWZmIC0tZ2l0IGEvZHJp
dmVycy90dHkvc2VyaWFsL3NpZml2ZS5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3NpZml2ZS5jCmlu
ZGV4IDVjM2EwNzU0NmE1OC4uNDc2MWYxNzIxMDNhIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvc2lmaXZlLmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL3NpZml2ZS5jCkBAIC02NDYs
NyArNjQ2LDcgQEAgc3RhdGljIGludCBzaWZpdmVfc2VyaWFsX2Nsa19ub3RpZmllcihzdHJ1Y3Qg
bm90aWZpZXJfYmxvY2sgKm5iLAogCiBzdGF0aWMgdm9pZCBzaWZpdmVfc2VyaWFsX3NldF90ZXJt
aW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiAJCQkJICAgICAgc3RydWN0IGt0ZXJtaW9zICp0
ZXJtaW9zLAotCQkJCSAgICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJCSAgICAgIGNvbnN0
IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCBzaWZpdmVfc2VyaWFsX3BvcnQgKnNz
cCA9IHBvcnRfdG9fc2lmaXZlX3NlcmlhbF9wb3J0KHBvcnQpOwogCXVuc2lnbmVkIGxvbmcgZmxh
Z3M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvc3ByZF9zZXJpYWwuYyBiL2RyaXZl
cnMvdHR5L3NlcmlhbC9zcHJkX3NlcmlhbC5jCmluZGV4IDQzMjliOWM5Y2JmMC4uMzQyYTg3OTY3
NjMxIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvc3ByZF9zZXJpYWwuYworKysgYi9k
cml2ZXJzL3R0eS9zZXJpYWwvc3ByZF9zZXJpYWwuYwpAQCAtNzcxLDkgKzc3MSw4IEBAIHN0YXRp
YyB2b2lkIHNwcmRfc2h1dGRvd24oc3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIAlkZXZtX2ZyZWVf
aXJxKHBvcnQtPmRldiwgcG9ydC0+aXJxLCBwb3J0KTsKIH0KIAotc3RhdGljIHZvaWQgc3ByZF9z
ZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAotCQkJICAgICBzdHJ1Y3Qga3Rlcm1p
b3MgKnRlcm1pb3MsCi0JCQkgICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorc3RhdGljIHZvaWQg
c3ByZF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3Mg
KnRlcm1pb3MsCisJCSAgICAgICAgICAgICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsK
IAl1bnNpZ25lZCBpbnQgYmF1ZCwgcXVvdDsKIAl1bnNpZ25lZCBpbnQgbGNyID0gMCwgZmM7CmRp
ZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9zZXJpYWwvc3QtYXNjLmMgYi9kcml2ZXJzL3R0eS9zZXJp
YWwvc3QtYXNjLmMKaW5kZXggY2NlNDJmNGM5YmMyLi5mY2VjZWE2ODlhMGQgMTAwNjQ0Ci0tLSBh
L2RyaXZlcnMvdHR5L3NlcmlhbC9zdC1hc2MuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvc3Qt
YXNjLmMKQEAgLTUwMCw3ICs1MDAsNyBAQCBzdGF0aWMgdm9pZCBhc2NfcG0oc3RydWN0IHVhcnRf
cG9ydCAqcG9ydCwgdW5zaWduZWQgaW50IHN0YXRlLAogfQogCiBzdGF0aWMgdm9pZCBhc2Nfc2V0
X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9z
LAotCQkJICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJICAgIGNvbnN0IHN0cnVjdCBrdGVy
bWlvcyAqb2xkKQogewogCXN0cnVjdCBhc2NfcG9ydCAqYXNjcG9ydCA9IHRvX2FzY19wb3J0KHBv
cnQpOwogCXN0cnVjdCBncGlvX2Rlc2MgKmdwaW9kOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkv
c2VyaWFsL3N0bTMyLXVzYXJ0LmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwvc3RtMzItdXNhcnQuYwpp
bmRleCAyYzg1ZGJmMTY1YzQuLjBiMTg2MTViMmNhNCAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkv
c2VyaWFsL3N0bTMyLXVzYXJ0LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL3N0bTMyLXVzYXJ0
LmMKQEAgLTEwODksNyArMTA4OSw3IEBAIHN0YXRpYyB2b2lkIHN0bTMyX3VzYXJ0X3NodXRkb3du
KHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiAKIHN0YXRpYyB2b2lkIHN0bTMyX3VzYXJ0X3NldF90
ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiAJCQkJICAgIHN0cnVjdCBrdGVybWlvcyAq
dGVybWlvcywKLQkJCQkgICAgc3RydWN0IGt0ZXJtaW9zICpvbGQpCisJCQkJICAgIGNvbnN0IHN0
cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXN0cnVjdCBzdG0zMl9wb3J0ICpzdG0zMl9wb3J0ID0g
dG9fc3RtMzJfcG9ydChwb3J0KTsKIAljb25zdCBzdHJ1Y3Qgc3RtMzJfdXNhcnRfb2Zmc2V0cyAq
b2ZzID0gJnN0bTMyX3BvcnQtPmluZm8tPm9mczsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3Nl
cmlhbC9zdW5odi5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3N1bmh2LmMKaW5kZXggZWFmYWRhOGZi
NmZhLi4xOTM4YmE1ZTk4YzAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC9zdW5odi5j
CisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zdW5odi5jCkBAIC0zMjMsNyArMzIzLDcgQEAgc3Rh
dGljIHZvaWQgc3VuaHZfc2h1dGRvd24oc3RydWN0IHVhcnRfcG9ydCAqcG9ydCkKIAogLyogcG9y
dC0+bG9jayBpcyBub3QgaGVsZC4gICovCiBzdGF0aWMgdm9pZCBzdW5odl9zZXRfdGVybWlvcyhz
dHJ1Y3QgdWFydF9wb3J0ICpwb3J0LCBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkgICAg
ICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAq
b2xkKQogewogCXVuc2lnbmVkIGludCBiYXVkID0gdWFydF9nZXRfYmF1ZF9yYXRlKHBvcnQsIHRl
cm1pb3MsIG9sZCwgMCwgNDAwMDAwMCk7CiAJdW5zaWduZWQgaW50IHF1b3QgPSB1YXJ0X2dldF9k
aXZpc29yKHBvcnQsIGJhdWQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL3N1bnBs
dXMtdWFydC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3N1bnBsdXMtdWFydC5jCmluZGV4IDYwYzcz
NjYyZjk1NS4uN2FmZTYxYTBlNzJlIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwvc3Vu
cGx1cy11YXJ0LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFsL3N1bnBsdXMtdWFydC5jCkBAIC0z
MzMsNyArMzMzLDcgQEAgc3RhdGljIHZvaWQgc3VucGx1c19zaHV0ZG93bihzdHJ1Y3QgdWFydF9w
b3J0ICpwb3J0KQogCiBzdGF0aWMgdm9pZCBzdW5wbHVzX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0
X3BvcnQgKnBvcnQsCiAJCQkJc3RydWN0IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkJCXN0cnVjdCBr
dGVybWlvcyAqb2xkdGVybWlvcykKKwkJCQljb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZHRlcm1p
b3MpCiB7CiAJdTMyIGV4dCwgZGl2LCBkaXZfbCwgZGl2X2gsIGJhdWQsIGxjcjsKIAl1MzIgY2xr
ID0gcG9ydC0+dWFydGNsazsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC9zdW5zYWIu
YyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zdW5zYWIuYwppbmRleCA2ZWE1MjI5M2Q5ZjMuLmI1NDk4
MjI5YjE0NyAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3N1bnNhYi5jCisrKyBiL2Ry
aXZlcnMvdHR5L3NlcmlhbC9zdW5zYWIuYwpAQCAtNzc2LDcgKzc3Niw3IEBAIHN0YXRpYyB2b2lk
IHN1bnNhYl9jb252ZXJ0X3RvX3NhYihzdHJ1Y3QgdWFydF9zdW5zYWJfcG9ydCAqdXAsIHVuc2ln
bmVkIGludCBjZmxhCiAKIC8qIHBvcnQtPmxvY2sgaXMgbm90IGhlbGQuICAqLwogc3RhdGljIHZv
aWQgc3Vuc2FiX3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVy
bWlvcyAqdGVybWlvcywKLQkJCSAgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCSAgICAg
ICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlzdHJ1Y3QgdWFydF9zdW5zYWJfcG9y
dCAqdXAgPQogCQljb250YWluZXJfb2YocG9ydCwgc3RydWN0IHVhcnRfc3Vuc2FiX3BvcnQsIHBv
cnQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL3N1bnN1LmMgYi9kcml2ZXJzL3R0
eS9zZXJpYWwvc3Vuc3UuYwppbmRleCA4NGQ1NDVlNWE4YzcuLjE2NTZlZmFiMzQzZSAxMDA2NDQK
LS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3N1bnN1LmMKKysrIGIvZHJpdmVycy90dHkvc2VyaWFs
L3N1bnN1LmMKQEAgLTg5Nyw3ICs4OTcsNyBAQCBzdW5zdV9jaGFuZ2Vfc3BlZWQoc3RydWN0IHVh
cnRfcG9ydCAqcG9ydCwgdW5zaWduZWQgaW50IGNmbGFnLAogCiBzdGF0aWMgdm9pZAogc3Vuc3Vf
c2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0ZXJt
aW9zLAotCQkgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkgIGNvbnN0IHN0cnVjdCBrdGVybWlv
cyAqb2xkKQogewogCXVuc2lnbmVkIGludCBiYXVkLCBxdW90OwogCmRpZmYgLS1naXQgYS9kcml2
ZXJzL3R0eS9zZXJpYWwvc3Vuemlsb2cuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC9zdW56aWxvZy5j
CmluZGV4IGMxNDI3NWQ4M2IwYi4uYTM4ZDIxM2NhN2FjIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0
eS9zZXJpYWwvc3Vuemlsb2cuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvc3Vuemlsb2cuYwpA
QCAtOTM4LDcgKzkzOCw3IEBAIHN1bnppbG9nX2NvbnZlcnRfdG9fenMoc3RydWN0IHVhcnRfc3Vu
emlsb2dfcG9ydCAqdXAsIHVuc2lnbmVkIGludCBjZmxhZywKIC8qIFRoZSBwb3J0IGxvY2sgaXMg
bm90IGhlbGQuICAqLwogc3RhdGljIHZvaWQKIHN1bnppbG9nX3NldF90ZXJtaW9zKHN0cnVjdCB1
YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywKLQkJICAgICBzdHJ1Y3Qg
a3Rlcm1pb3MgKm9sZCkKKwkJICAgICBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlz
dHJ1Y3QgdWFydF9zdW56aWxvZ19wb3J0ICp1cCA9CiAJCWNvbnRhaW5lcl9vZihwb3J0LCBzdHJ1
Y3QgdWFydF9zdW56aWxvZ19wb3J0LCBwb3J0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3Nl
cmlhbC90ZWdyYS10Y3UuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC90ZWdyYS10Y3UuYwppbmRleCA0
ODc3YzU0YzYxM2QuLjM2NmRjOTQxMThiYyAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFs
L3RlZ3JhLXRjdS5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC90ZWdyYS10Y3UuYwpAQCAtMTI2
LDcgKzEyNiw3IEBAIHN0YXRpYyB2b2lkIHRlZ3JhX3RjdV91YXJ0X3NodXRkb3duKHN0cnVjdCB1
YXJ0X3BvcnQgKnBvcnQpCiAKIHN0YXRpYyB2b2lkIHRlZ3JhX3RjdV91YXJ0X3NldF90ZXJtaW9z
KHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiAJCQkJICAgICAgIHN0cnVjdCBrdGVybWlvcyAqbmV3
LAotCQkJCSAgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkgICAgICAgY29uc3Qgc3Ry
dWN0IGt0ZXJtaW9zICpvbGQpCiB7CiB9CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3Nlcmlh
bC90aW1idWFydC5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3RpbWJ1YXJ0LmMKaW5kZXggMDg5NDFl
YWJlN2IxLi5iYjE5ZWQwMTJkZWYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC90aW1i
dWFydC5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC90aW1idWFydC5jCkBAIC0yNzUsOCArMjc1
LDggQEAgc3RhdGljIGludCBnZXRfYmluZGV4KGludCBiYXVkKQogfQogCiBzdGF0aWMgdm9pZCB0
aW1idWFydF9zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0LAotCXN0cnVjdCBrdGVy
bWlvcyAqdGVybWlvcywKLQlzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkgc3RydWN0IGt0ZXJt
aW9zICp0ZXJtaW9zLAorCQkJCSBjb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAl1bnNp
Z25lZCBpbnQgYmF1ZDsKIAlzaG9ydCBiaW5kZXg7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS9z
ZXJpYWwvdWFydGxpdGUuYyBiL2RyaXZlcnMvdHR5L3NlcmlhbC91YXJ0bGl0ZS5jCmluZGV4IDg4
MGUyYWZiYjk3Yi4uZWNhNDFhYzU0NzdjIDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9zZXJpYWwv
dWFydGxpdGUuYworKysgYi9kcml2ZXJzL3R0eS9zZXJpYWwvdWFydGxpdGUuYwpAQCAtMzE0LDgg
KzMxNCw5IEBAIHN0YXRpYyB2b2lkIHVsaXRlX3NodXRkb3duKHN0cnVjdCB1YXJ0X3BvcnQgKnBv
cnQpCiAJY2xrX2Rpc2FibGUocGRhdGEtPmNsayk7CiB9CiAKLXN0YXRpYyB2b2lkIHVsaXRlX3Nl
dF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIHN0cnVjdCBrdGVybWlvcyAqdGVybWlv
cywKLQkJCSAgICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorc3RhdGljIHZvaWQgdWxpdGVfc2V0
X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKKwkJCSAgICAgIHN0cnVjdCBrdGVybWlv
cyAqdGVybWlvcywKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXVu
c2lnbmVkIGxvbmcgZmxhZ3M7CiAJc3RydWN0IHVhcnRsaXRlX2RhdGEgKnBkYXRhID0gcG9ydC0+
cHJpdmF0ZV9kYXRhOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL3VjY191YXJ0LmMg
Yi9kcml2ZXJzL3R0eS9zZXJpYWwvdWNjX3VhcnQuYwppbmRleCAzY2M5ZWYwODQ1NWMuLjBjNzc2
OGI4ZTEzNiAxMDA2NDQKLS0tIGEvZHJpdmVycy90dHkvc2VyaWFsL3VjY191YXJ0LmMKKysrIGIv
ZHJpdmVycy90dHkvc2VyaWFsL3VjY191YXJ0LmMKQEAgLTg0Myw3ICs4NDMsOCBAQCBzdGF0aWMg
dm9pZCBxZV91YXJ0X3NodXRkb3duKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpCiAgKiBTZXQgdGhl
IHNlcmlhbCBwb3J0IHBhcmFtZXRlcnMuCiAgKi8KIHN0YXRpYyB2b2lkIHFlX3VhcnRfc2V0X3Rl
cm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKLQkJCQlzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1p
b3MsIHN0cnVjdCBrdGVybWlvcyAqb2xkKQorCQkJCXN0cnVjdCBrdGVybWlvcyAqdGVybWlvcywK
KwkJCQljb25zdCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKIHsKIAlzdHJ1Y3QgdWFydF9xZV9wb3J0
ICpxZV9wb3J0ID0KIAkJY29udGFpbmVyX29mKHBvcnQsIHN0cnVjdCB1YXJ0X3FlX3BvcnQsIHBv
cnQpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy90dHkvc2VyaWFsL3Z0ODUwMF9zZXJpYWwuYyBiL2Ry
aXZlcnMvdHR5L3NlcmlhbC92dDg1MDBfc2VyaWFsLmMKaW5kZXggNmYwODEzNmNlNzhhLi41MDhh
ZDdhZmE2ZGUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5L3NlcmlhbC92dDg1MDBfc2VyaWFsLmMK
KysrIGIvZHJpdmVycy90dHkvc2VyaWFsL3Z0ODUwMF9zZXJpYWwuYwpAQCAtMzU1LDcgKzM1NSw3
IEBAIHN0YXRpYyB2b2lkIHZ0ODUwMF9zaHV0ZG93bihzdHJ1Y3QgdWFydF9wb3J0ICpwb3J0KQog
CiBzdGF0aWMgdm9pZCB2dDg1MDBfc2V0X3Rlcm1pb3Moc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwK
IAkJCSAgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1pb3MsCi0JCQkgICAgICAgc3RydWN0IGt0
ZXJtaW9zICpvbGQpCisJCQkgICAgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJ
c3RydWN0IHZ0ODUwMF9wb3J0ICp2dDg1MDBfcG9ydCA9CiAJCQljb250YWluZXJfb2YocG9ydCwg
c3RydWN0IHZ0ODUwMF9wb3J0LCB1YXJ0KTsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdHR5L3Nlcmlh
bC94aWxpbnhfdWFydHBzLmMgYi9kcml2ZXJzL3R0eS9zZXJpYWwveGlsaW54X3VhcnRwcy5jCmlu
ZGV4IDllMDFmZTZjMGFiOC4uZDdjNzEzMWM3MjU4IDEwMDY0NAotLS0gYS9kcml2ZXJzL3R0eS9z
ZXJpYWwveGlsaW54X3VhcnRwcy5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC94aWxpbnhfdWFy
dHBzLmMKQEAgLTY3NSw3ICs2NzUsOCBAQCBzdGF0aWMgdm9pZCBjZG5zX3VhcnRfYnJlYWtfY3Rs
KHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsIGludCBjdGwpCiAgKiBAb2xkOiBWYWx1ZXMgb2YgdGhl
IHByZXZpb3VzbHkgc2F2ZWQgdGVybWlvcyBzdHJ1Y3R1cmUKICAqLwogc3RhdGljIHZvaWQgY2Ru
c191YXJ0X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0JCQkJc3RydWN0IGt0
ZXJtaW9zICp0ZXJtaW9zLCBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCkKKwkJCQkgIHN0cnVjdCBrdGVy
bWlvcyAqdGVybWlvcywKKwkJCQkgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKQogewogCXUz
MiBjdmFsID0gMDsKIAl1bnNpZ25lZCBpbnQgYmF1ZCwgbWluYmF1ZCwgbWF4YmF1ZDsKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvdHR5L3NlcmlhbC96cy5jIGIvZHJpdmVycy90dHkvc2VyaWFsL3pzLmMK
aW5kZXggNWJjNTg1OTE2NjVhLi42ODhkYjdkOGI3NDggMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdHR5
L3NlcmlhbC96cy5jCisrKyBiL2RyaXZlcnMvdHR5L3NlcmlhbC96cy5jCkBAIC04NDYsNyArODQ2
LDcgQEAgc3RhdGljIHZvaWQgenNfcmVzZXQoc3RydWN0IHpzX3BvcnQgKnpwb3J0KQogfQogCiBz
dGF0aWMgdm9pZCB6c19zZXRfdGVybWlvcyhzdHJ1Y3QgdWFydF9wb3J0ICp1cG9ydCwgc3RydWN0
IGt0ZXJtaW9zICp0ZXJtaW9zLAotCQkJICAgc3RydWN0IGt0ZXJtaW9zICpvbGRfdGVybWlvcykK
KwkJCSAgIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkX3Rlcm1pb3MpCiB7CiAJc3RydWN0IHpz
X3BvcnQgKnpwb3J0ID0gdG9fenBvcnQodXBvcnQpOwogCXN0cnVjdCB6c19zY2MgKnNjYyA9IHpw
b3J0LT5zY2M7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3R0eS90dHlfaW9jdGwuYyBiL2RyaXZlcnMv
dHR5L3R0eV9pb2N0bC5jCmluZGV4IGZjOTQ5ODhmMDI4My4uMzFkMTEyMzBlNzc4IDEwMDY0NAot
LS0gYS9kcml2ZXJzL3R0eS90dHlfaW9jdGwuYworKysgYi9kcml2ZXJzL3R0eS90dHlfaW9jdGwu
YwpAQCAtMjE5LDcgKzIxOSw3IEBAIEVYUE9SVF9TWU1CT0wodHR5X3dhaXRfdW50aWxfc2VudCk7
CiAgKgkJVGVybWlvcyBIZWxwZXIgTWV0aG9kcwogICovCiAKLXN0YXRpYyB2b2lkIHVuc2V0X2xv
Y2tlZF90ZXJtaW9zKHN0cnVjdCB0dHlfc3RydWN0ICp0dHksIHN0cnVjdCBrdGVybWlvcyAqb2xk
KQorc3RhdGljIHZvaWQgdW5zZXRfbG9ja2VkX3Rlcm1pb3Moc3RydWN0IHR0eV9zdHJ1Y3QgKnR0
eSwgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpCiB7CiAJc3RydWN0IGt0ZXJtaW9zICp0ZXJt
aW9zID0gJnR0eS0+dGVybWlvczsKIAlzdHJ1Y3Qga3Rlcm1pb3MgKmxvY2tlZCAgPSAmdHR5LT50
ZXJtaW9zX2xvY2tlZDsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvc2VyaWFsXzgyNTAuaCBi
L2luY2x1ZGUvbGludXgvc2VyaWFsXzgyNTAuaAppbmRleCA4YzdiNzkzYWE0ZDcuLjQzZWRkMTBl
OGM5NiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9zZXJpYWxfODI1MC5oCisrKyBiL2luY2x1
ZGUvbGludXgvc2VyaWFsXzgyNTAuaApAQCAtMzIsNyArMzIsNyBAQCBzdHJ1Y3QgcGxhdF9zZXJp
YWw4MjUwX3BvcnQgewogCXZvaWQJCSgqc2VyaWFsX291dCkoc3RydWN0IHVhcnRfcG9ydCAqLCBp
bnQsIGludCk7CiAJdm9pZAkJKCpzZXRfdGVybWlvcykoc3RydWN0IHVhcnRfcG9ydCAqLAogCQkJ
ICAgICAgICAgICAgICAgc3RydWN0IGt0ZXJtaW9zICpuZXcsCi0JCQkgICAgICAgICAgICAgICBz
dHJ1Y3Qga3Rlcm1pb3MgKm9sZCk7CisJCQkgICAgICAgICAgICAgICBjb25zdCBzdHJ1Y3Qga3Rl
cm1pb3MgKm9sZCk7CiAJdm9pZAkJKCpzZXRfbGRpc2MpKHN0cnVjdCB1YXJ0X3BvcnQgKiwKIAkJ
CQkgICAgIHN0cnVjdCBrdGVybWlvcyAqKTsKIAl1bnNpZ25lZCBpbnQJKCpnZXRfbWN0cmwpKHN0
cnVjdCB1YXJ0X3BvcnQgKik7CkBAIC0xNTcsNyArMTU3LDcgQEAgZXh0ZXJuIGludCBlYXJseV9z
ZXJpYWw4MjUwX3NldHVwKHN0cnVjdCBlYXJseWNvbl9kZXZpY2UgKmRldmljZSwKIGV4dGVybiB2
b2lkIHNlcmlhbDgyNTBfdXBkYXRlX3VhcnRjbGsoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwKIAkJ
CQkgICAgICB1bnNpZ25lZCBpbnQgdWFydGNsayk7CiBleHRlcm4gdm9pZCBzZXJpYWw4MjUwX2Rv
X3NldF90ZXJtaW9zKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCi0JCXN0cnVjdCBrdGVybWlvcyAq
dGVybWlvcywgc3RydWN0IGt0ZXJtaW9zICpvbGQpOworCQlzdHJ1Y3Qga3Rlcm1pb3MgKnRlcm1p
b3MsIGNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkKTsKIGV4dGVybiB2b2lkIHNlcmlhbDgyNTBf
ZG9fc2V0X2xkaXNjKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQsCiAJCQkJICAgIHN0cnVjdCBrdGVy
bWlvcyAqdGVybWlvcyk7CiBleHRlcm4gdW5zaWduZWQgaW50IHNlcmlhbDgyNTBfZG9fZ2V0X21j
dHJsKHN0cnVjdCB1YXJ0X3BvcnQgKnBvcnQpOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9z
ZXJpYWxfY29yZS5oIGIvaW5jbHVkZS9saW51eC9zZXJpYWxfY29yZS5oCmluZGV4IGFlZjMxNDVm
MjAzMi4uMGU5YmM5NDNiZmE4IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3NlcmlhbF9jb3Jl
LmgKKysrIGIvaW5jbHVkZS9saW51eC9zZXJpYWxfY29yZS5oCkBAIC0zNzksNyArMzc5LDcgQEAg
c3RydWN0IHVhcnRfb3BzIHsKIAl2b2lkCQkoKnNodXRkb3duKShzdHJ1Y3QgdWFydF9wb3J0ICop
OwogCXZvaWQJCSgqZmx1c2hfYnVmZmVyKShzdHJ1Y3QgdWFydF9wb3J0ICopOwogCXZvaWQJCSgq
c2V0X3Rlcm1pb3MpKHN0cnVjdCB1YXJ0X3BvcnQgKiwgc3RydWN0IGt0ZXJtaW9zICpuZXcsCi0J
CQkJICAgICAgIHN0cnVjdCBrdGVybWlvcyAqb2xkKTsKKwkJCQkgICAgICAgY29uc3Qgc3RydWN0
IGt0ZXJtaW9zICpvbGQpOwogCXZvaWQJCSgqc2V0X2xkaXNjKShzdHJ1Y3QgdWFydF9wb3J0ICos
IHN0cnVjdCBrdGVybWlvcyAqKTsKIAl2b2lkCQkoKnBtKShzdHJ1Y3QgdWFydF9wb3J0ICosIHVu
c2lnbmVkIGludCBzdGF0ZSwKIAkJCSAgICAgIHVuc2lnbmVkIGludCBvbGRzdGF0ZSk7CkBAIC00
MjUsNyArNDI1LDcgQEAgc3RydWN0IHVhcnRfcG9ydCB7CiAJdm9pZAkJCSgqc2VyaWFsX291dCko
c3RydWN0IHVhcnRfcG9ydCAqLCBpbnQsIGludCk7CiAJdm9pZAkJCSgqc2V0X3Rlcm1pb3MpKHN0
cnVjdCB1YXJ0X3BvcnQgKiwKIAkJCQkgICAgICAgICAgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm5l
dywKLQkJCQkgICAgICAgICAgICAgICBzdHJ1Y3Qga3Rlcm1pb3MgKm9sZCk7CisJCQkJICAgICAg
ICAgICAgICAgY29uc3Qgc3RydWN0IGt0ZXJtaW9zICpvbGQpOwogCXZvaWQJCQkoKnNldF9sZGlz
Yykoc3RydWN0IHVhcnRfcG9ydCAqLAogCQkJCQkgICAgIHN0cnVjdCBrdGVybWlvcyAqKTsKIAl1
bnNpZ25lZCBpbnQJCSgqZ2V0X21jdHJsKShzdHJ1Y3QgdWFydF9wb3J0ICopOwpAQCAtNjQ0LDcg
KzY0NCw3IEBAIHZvaWQgdWFydF93cml0ZV93YWtldXAoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCk7
CiB2b2lkIHVhcnRfdXBkYXRlX3RpbWVvdXQoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgdW5zaWdu
ZWQgaW50IGNmbGFnLAogCQkJIHVuc2lnbmVkIGludCBiYXVkKTsKIHVuc2lnbmVkIGludCB1YXJ0
X2dldF9iYXVkX3JhdGUoc3RydWN0IHVhcnRfcG9ydCAqcG9ydCwgc3RydWN0IGt0ZXJtaW9zICp0
ZXJtaW9zLAotCQkJCXN0cnVjdCBrdGVybWlvcyAqb2xkLCB1bnNpZ25lZCBpbnQgbWluLAorCQkJ
CWNvbnN0IHN0cnVjdCBrdGVybWlvcyAqb2xkLCB1bnNpZ25lZCBpbnQgbWluLAogCQkJCXVuc2ln
bmVkIGludCBtYXgpOwogdW5zaWduZWQgaW50IHVhcnRfZ2V0X2Rpdmlzb3Ioc3RydWN0IHVhcnRf
cG9ydCAqcG9ydCwgdW5zaWduZWQgaW50IGJhdWQpOwogCi0tIAoyLjMwLjIKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkxpbnV4LXN0bTMyIG1haWxpbmcg
bGlzdApMaW51eC1zdG0zMkBzdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tCmh0dHBzOi8vc3Qt
bWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbS9tYWlsbWFuL2xpc3RpbmZvL2xpbnV4LXN0bTMyCg==
