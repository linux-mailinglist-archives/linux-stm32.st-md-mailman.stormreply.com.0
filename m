Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id C4401A19E78
	for <lists+linux-stm32@lfdr.de>; Thu, 23 Jan 2025 07:28:46 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 51747C78F80;
	Thu, 23 Jan 2025 06:28:46 +0000 (UTC)
Received: from mx0b-0031df01.pphosted.com (mx0b-0031df01.pphosted.com
 [205.220.180.131])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 61A55C78031
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Thu, 23 Jan 2025 06:28:39 +0000 (UTC)
Received: from pps.filterd (m0279869.ppops.net [127.0.0.1])
 by mx0a-0031df01.pphosted.com (8.18.1.2/8.18.1.2) with ESMTP id 50N5c2u9028593;
 Thu, 23 Jan 2025 06:28:22 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=quicinc.com; h=
 cc:content-transfer-encoding:content-type:date:from:in-reply-to
 :message-id:mime-version:references:subject:to; s=qcppdkim1; bh=
 7WC21fMlTInqYiLcMSPo1ZtjpwFoaCwm6yGK3q19RVg=; b=HBovaO+HO/ZE2Ghc
 r/h691lmVPkbGKxC9O8EFAgCKdT5Ju1ek6+q7hAbvsCuYTxxouccb4weWBT7i2yl
 m/F1T8stg0LB7esOetfCQ66fVfmMqt89mTyM1v7oB062EtNdJZ54SccBz1XTREQC
 T9hPuMy7InHwUL2ZxQTtLd8vpkA8+eiCV3fCswO0tOKYkZhwPPq0RK9dP3J3t2Cq
 5b1LCjXXL0ChrRoGP87WPFGg8oH9pl3cZQcodgmNDpKwNwILTkq9jrSFjRs7Ord4
 6mIU7UsFndIgOvYTvvkiMGJUB4MM/e/gzps02khIDbAuE22VMl/+cgfYTOciM7XN
 yuPWFw==
Received: from nalasppmta02.qualcomm.com (Global_NAT1.qualcomm.com
 [129.46.96.20])
 by mx0a-0031df01.pphosted.com (PPS) with ESMTPS id 44bfss03ay-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Thu, 23 Jan 2025 06:28:22 +0000 (GMT)
Received: from nalasex01c.na.qualcomm.com (nalasex01c.na.qualcomm.com
 [10.47.97.35])
 by NALASPPMTA02.qualcomm.com (8.18.1.2/8.18.1.2) with ESMTPS id 50N6SLe2003026
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Thu, 23 Jan 2025 06:28:21 GMT
Received: from [10.64.68.153] (10.80.80.8) by nalasex01c.na.qualcomm.com
 (10.47.97.35) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.2.1544.9; Wed, 22 Jan
 2025 22:28:15 -0800
Message-ID: <d0c19d60-1043-4ac3-904f-c5b70ed32138@quicinc.com>
Date: Thu, 23 Jan 2025 14:28:13 +0800
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
To: James Clark <james.clark@linaro.org>
References: <20241226011022.1477160-1-quic_jiegan@quicinc.com>
 <20241226011022.1477160-3-quic_jiegan@quicinc.com>
 <64731493-4bd1-4707-9452-5ca86744875b@linaro.org>
Content-Language: en-US
From: Jie Gan <quic_jiegan@quicinc.com>
In-Reply-To: <64731493-4bd1-4707-9452-5ca86744875b@linaro.org>
X-Originating-IP: [10.80.80.8]
X-ClientProxiedBy: nasanex01b.na.qualcomm.com (10.46.141.250) To
 nalasex01c.na.qualcomm.com (10.47.97.35)
X-QCInternal: smtphost
X-Proofpoint-Virus-Version: vendor=nai engine=6200 definitions=5800
 signatures=585085
X-Proofpoint-GUID: mF1cm7sgOTkUrDjcdt8e9yxYEtNihDS3
X-Proofpoint-ORIG-GUID: mF1cm7sgOTkUrDjcdt8e9yxYEtNihDS3
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.293,Aquarius:18.0.1057,Hydra:6.0.680,FMLib:17.12.68.34
 definitions=2025-01-23_02,2025-01-22_02,2024-11-22_01
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 bulkscore=0 phishscore=0
 priorityscore=1501 suspectscore=0 clxscore=1015 malwarescore=0
 impostorscore=0 mlxscore=0 mlxlogscore=999 spamscore=0 lowpriorityscore=0
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.19.0-2411120000 definitions=main-2501230048
Cc: Rob Herring <robh@kernel.org>, devicetree@vger.kernel.org,
 Conor Dooley <conor+dt@kernel.org>, Suzuki K Poulose <suzuki.poulose@arm.com>,
 Alexander Shishkin <alexander.shishkin@linux.intel.com>,
 linux-arm-msm@vger.kernel.org, Jinlong Mao <quic_jinlmao@quicinc.com>,
 Bjorn Andersson <andersson@kernel.org>, linux-kernel@vger.kernel.org,
 linux-stm32@st-md-mailman.stormreply.com,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>, coresight@lists.linaro.org,
 Krzysztof Kozlowski <krzk+dt@kernel.org>,
 Konrad Dybcio <konradybcio@kernel.org>,
 Tingwei Zhang <quic_tingweiz@quicinc.com>,
 linux-arm-kernel@lists.infradead.org, Mike Leach <mike.leach@linaro.org>
Subject: Re: [Linux-stm32] [PATCH v8 2/5] Coresight: Add trace_id function
 to retrieving the trace ID
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

CgpPbiAxLzEzLzIwMjUgODowMiBQTSwgSmFtZXMgQ2xhcmsgd3JvdGU6Cj4gCj4gCj4gT24gMjYv
MTIvMjAyNCAxOjEwIGFtLCBKaWUgR2FuIHdyb3RlOgo+PiBBZGQgJ3RyYWNlX2lkJyBmdW5jdGlv
biBwb2ludGVyIGluIG9wcy4gSXQncyByZXNwb25zaWJsZSBmb3IKPj4gcmV0cmlldmluZyB0aGUg
ZGV2aWNlJ3MgdHJhY2UgSUQuCj4+Cj4+IEFkZCAnc3RydWN0IGNzX3NpbmtfZGF0YScgdG8gc3Rv
cmUgdGhlIGRhdGEgdGhhdCBpcyBuZWVkZWQgYnkKPj4gY29yZXNpZ2h0X2VuYWJsZV9wYXRoL2Nv
cmVzaWdodF9kaXNhYmxlX3BhdGguIFRoZSBzdHJ1Y3R1cmUKPj4gd2lsbCBiZSB0cmFuc21pdHRl
ZCB0byB0aGUgaGVscGVyIGFuZCBzaW5rIGRldmljZSB0byBlbmFibGUKPj4gcmVsYXRlZCBmdW5j
YXRpb25hbGl0aWVzLgo+Pgo+IAo+IFRoZSBuZXcgY3Nfc2lua19kYXRhIHN0cnVjdCBpcyBxdWl0
ZSBzcGVjaWZpYyB0byB0aGlzIGNoYW5nZS4gQ2FuIHdlIAo+IHN0YXJ0IHBhc3NpbmcgdGhlIHBh
dGggYXJvdW5kIHRvIGVuYWJsZS9kaXNhYmxlIGZ1bmN0aW9ucywgdGhhdCB3aWxsIAo+IGFsbG93
IGRldmljZXMgdG8gZ2F0aGVyIGFueXRoaW5nIHRoZXkgd2FudCBpbiB0aGUgZnV0dXJlLiBCZWNh
dXNlIHdlIAo+IGFscmVhZHkgaGF2ZSBjb3Jlc2lnaHRfZ2V0X3NpbmsocGF0aCksIGNvcmVzaWdo
dF9nZXRfc291cmNlKHBhdGgpIGV0Yy4KPiAKPiBBbmQgc2VlIGJlbG93LCBidXQgZm9yIHRoaXMg
Y2FzZSB3ZSBjYW4gYWxzbyBjaGFuZ2UgdGhlIHBhdGggc3RydWN0IHRvIAo+IGNvbnRhaW4gdGhl
IHRyYWNlIElELiBUaGVuIGFsbCB0aGUgbmV3IGZ1bmN0aW9ucywgYWxsb2NhdGlvbnMgYW5kIAo+
IHNlYXJjaGVzIGZvciB0aGUgdHJhY2UgSUQgYXJlIHVuZWNlc3NhcnkuIFRoZSBDVENVIHdpbGwg
aGF2ZSBhY2Nlc3MgdG8gCj4gdGhlIHBhdGgsIGFuZCBieSB0aGUgdGltZSBpdHMgZW5hYmxlIGZ1
bmN0aW9uIGlzIGNhbGxlZCB0aGUgdHJhY2UgSUQgaXMgCj4gYWxyZWFkeSBhc3NpZ25lZC4KPiAK
PiBJdCdzIGFsc28gZWFzaWVyIHRvIHVuZGVyc3RhbmQgYXQgd2hpY2ggcG9pbnQgYSB0cmFjZSBJ
RCBpcyBhbGxvY2F0ZWQsIAo+IHJhdGhlciB0aGFuIGFkZGluZyB0aGUgdHJhY2VfaWQoKSBjYWxs
YmFja3MgZnJvbSBldmVyeXdoZXJlIHdoaWNoIGNvdWxkIAo+IHBvdGVudGlhbGx5IGVpdGhlciBy
ZWFkIG9yIGFsbG9jYXRlLiBJIHN1cHBvc2UgdGhhdCdzICJzYWZlciIgYmVjYXVzZSAKPiBtYXli
ZSBpdCdzIG5vdCBhbGxvY2F0ZWQsIGJ1dCBJIGNhbid0IHNlZSB3aGF0IGNhc2UgaXQgd291bGQg
aGFwcGVuIGluIAo+IHJldmVyc2UuCj4gCj4+IFNpZ25lZC1vZmYtYnk6IEppZSBHYW4gPHF1aWNf
amllZ2FuQHF1aWNpbmMuY29tPgo+PiAtLS0KPj4gwqAgZHJpdmVycy9od3RyYWNpbmcvY29yZXNp
Z2h0L2NvcmVzaWdodC1jb3JlLmPCoCB8IDU5ICsrKysrKysrKysrKysrKy0tLS0KPj4gwqAgZHJp
dmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1ldGIxMC5jIHzCoCAzICstCj4+IMKg
IC4uLi9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1ldG0tcGVyZi5jwqAgfCAzNyArKysr
KysrKysrLS0KPj4gwqAgLi4uL2NvcmVzaWdodC9jb3Jlc2lnaHQtZXRtM3gtY29yZS5jwqDCoMKg
wqDCoMKgwqDCoMKgIHwgMzAgKysrKysrKysrKwo+PiDCoCAuLi4vY29yZXNpZ2h0L2NvcmVzaWdo
dC1ldG00eC1jb3JlLmPCoMKgwqDCoMKgwqDCoMKgwqAgfCAyOSArKysrKysrKysKPj4gwqAgZHJp
dmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1wcml2LmjCoCB8IDEzICsrKy0KPj4g
wqAgZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1zdG0uY8KgwqAgfCAyMiAr
KysrKysrCj4+IMKgIGRyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtc3lzZnMu
YyB8IDI0ICsrKysrKystCj4+IMKgIC4uLi9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC10
bWMtZXRmLmPCoMKgIHzCoCAzICstCj4+IMKgIC4uLi9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVz
aWdodC10bWMtZXRyLmPCoMKgIHzCoCA2ICstCj4+IMKgIGRyaXZlcnMvaHd0cmFjaW5nL2NvcmVz
aWdodC9jb3Jlc2lnaHQtdHBkYS5jwqAgfCAyMCArKysrKysrCj4+IMKgIGRyaXZlcnMvaHd0cmFj
aW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtdHJiZS5jwqAgfMKgIDQgKy0KPj4gwqAgZHJpdmVycy9o
d3RyYWNpbmcvY29yZXNpZ2h0L3VsdHJhc29jLXNtYi5jwqDCoMKgIHzCoCAzICstCj4+IMKgIGlu
Y2x1ZGUvbGludXgvY29yZXNpZ2h0LmjCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIHzCoCA2ICsrCj4+IMKgIDE0IGZpbGVzIGNoYW5nZWQsIDIzNCBpbnNlcnRpb25zKCsp
LCAyNSBkZWxldGlvbnMoLSkKPj4KPj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvaHd0cmFjaW5nL2Nv
cmVzaWdodC9jb3Jlc2lnaHQtY29yZS5jIGIvZHJpdmVycy8gCj4+IGh3dHJhY2luZy9jb3Jlc2ln
aHQvY29yZXNpZ2h0LWNvcmUuYwo+PiBpbmRleCAwYTkzODAzNTBmYjUuLjJlNTYwYjQyNWZkNCAx
MDA2NDQKPj4gLS0tIGEvZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1jb3Jl
LmMKPj4gKysrIGIvZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1jb3JlLmMK
Pj4gQEAgLTIzLDYgKzIzLDcgQEAKPj4gwqAgI2luY2x1ZGUgImNvcmVzaWdodC1ldG0tcGVyZi5o
Igo+PiDCoCAjaW5jbHVkZSAiY29yZXNpZ2h0LXByaXYuaCIKPj4gwqAgI2luY2x1ZGUgImNvcmVz
aWdodC1zeXNjZmcuaCIKPj4gKyNpbmNsdWRlICJjb3Jlc2lnaHQtdHJhY2UtaWQuaCIKPj4gwqAg
LyoKPj4gwqDCoCAqIE11dGV4IHVzZWQgdG8gbG9jayBhbGwgc3lzZnMgZW5hYmxlIGFuZCBkaXNh
YmxlIGFjdGlvbnMgYW5kIAo+PiBsb2FkaW5nIGFuZAo+PiBAQCAtMzMxLDEyICszMzIsMTIgQEAg
c3RhdGljIGludCBjb3Jlc2lnaHRfZW5hYmxlX2hlbHBlcihzdHJ1Y3QgCj4+IGNvcmVzaWdodF9k
ZXZpY2UgKmNzZGV2LAo+PiDCoMKgwqDCoMKgIHJldHVybiBoZWxwZXJfb3BzKGNzZGV2KS0+ZW5h
YmxlKGNzZGV2LCBtb2RlLCBkYXRhKTsKPj4gwqAgfQo+PiAtc3RhdGljIHZvaWQgY29yZXNpZ2h0
X2Rpc2FibGVfaGVscGVyKHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpjc2RldikKPj4gK3N0YXRp
YyB2b2lkIGNvcmVzaWdodF9kaXNhYmxlX2hlbHBlcihzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAq
Y3NkZXYsIAo+PiB2b2lkICpkYXRhKQo+PiDCoCB7Cj4+IC3CoMKgwqAgaGVscGVyX29wcyhjc2Rl
diktPmRpc2FibGUoY3NkZXYsIE5VTEwpOwo+PiArwqDCoMKgIGhlbHBlcl9vcHMoY3NkZXYpLT5k
aXNhYmxlKGNzZGV2LCBkYXRhKTsKPj4gwqAgfQo+PiAtc3RhdGljIHZvaWQgY29yZXNpZ2h0X2Rp
c2FibGVfaGVscGVycyhzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqY3NkZXYpCj4+ICtzdGF0aWMg
dm9pZCBjb3Jlc2lnaHRfZGlzYWJsZV9oZWxwZXJzKHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpj
c2RldiwgCj4+IHZvaWQgKmRhdGEpCj4+IMKgIHsKPj4gwqDCoMKgwqDCoCBpbnQgaTsKPj4gwqDC
oMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqaGVscGVyOwo+PiBAQCAtMzQ0LDcgKzM0
NSw3IEBAIHN0YXRpYyB2b2lkIGNvcmVzaWdodF9kaXNhYmxlX2hlbHBlcnMoc3RydWN0IAo+PiBj
b3Jlc2lnaHRfZGV2aWNlICpjc2RldikKPj4gwqDCoMKgwqDCoCBmb3IgKGkgPSAwOyBpIDwgY3Nk
ZXYtPnBkYXRhLT5ucl9vdXRjb25uczsgKytpKSB7Cj4+IMKgwqDCoMKgwqDCoMKgwqDCoCBoZWxw
ZXIgPSBjc2Rldi0+cGRhdGEtPm91dF9jb25uc1tpXS0+ZGVzdF9kZXY7Cj4+IMKgwqDCoMKgwqDC
oMKgwqDCoCBpZiAoaGVscGVyICYmIGNvcmVzaWdodF9pc19oZWxwZXIoaGVscGVyKSkKPj4gLcKg
wqDCoMKgwqDCoMKgwqDCoMKgwqAgY29yZXNpZ2h0X2Rpc2FibGVfaGVscGVyKGhlbHBlcik7Cj4+
ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGNvcmVzaWdodF9kaXNhYmxlX2hlbHBlcihoZWxwZXIs
IGRhdGEpOwo+PiDCoMKgwqDCoMKgIH0KPj4gwqAgfQo+PiBAQCAtMzYxLDcgKzM2Miw3IEBAIHN0
YXRpYyB2b2lkIGNvcmVzaWdodF9kaXNhYmxlX2hlbHBlcnMoc3RydWN0IAo+PiBjb3Jlc2lnaHRf
ZGV2aWNlICpjc2RldikKPj4gwqAgdm9pZCBjb3Jlc2lnaHRfZGlzYWJsZV9zb3VyY2Uoc3RydWN0
IGNvcmVzaWdodF9kZXZpY2UgKmNzZGV2LCB2b2lkIAo+PiAqZGF0YSkKPj4gwqAgewo+PiDCoMKg
wqDCoMKgIHNvdXJjZV9vcHMoY3NkZXYpLT5kaXNhYmxlKGNzZGV2LCBkYXRhKTsKPj4gLcKgwqDC
oCBjb3Jlc2lnaHRfZGlzYWJsZV9oZWxwZXJzKGNzZGV2KTsKPj4gK8KgwqDCoCBjb3Jlc2lnaHRf
ZGlzYWJsZV9oZWxwZXJzKGNzZGV2LCBOVUxMKTsKPj4gwqAgfQo+PiDCoCBFWFBPUlRfU1lNQk9M
X0dQTChjb3Jlc2lnaHRfZGlzYWJsZV9zb3VyY2UpOwo+PiBAQCAtMzcxLDcgKzM3Miw4IEBAIEVY
UE9SVF9TWU1CT0xfR1BMKGNvcmVzaWdodF9kaXNhYmxlX3NvdXJjZSk7Cj4+IMKgwqAgKiBkaXNh
YmxlZC4KPj4gwqDCoCAqLwo+PiDCoCBzdGF0aWMgdm9pZCBjb3Jlc2lnaHRfZGlzYWJsZV9wYXRo
X2Zyb20oc3RydWN0IGxpc3RfaGVhZCAqcGF0aCwKPj4gLcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIHN0cnVjdCBjb3Jlc2lnaHRfbm9kZSAqbmQpCj4+ICvCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X25vZGUgKm5kLAo+
PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgdm9pZCAqc2lua19kYXRh
KQo+PiDCoCB7Cj4+IMKgwqDCoMKgwqAgdTMyIHR5cGU7Cj4+IMKgwqDCoMKgwqAgc3RydWN0IGNv
cmVzaWdodF9kZXZpY2UgKmNzZGV2LCAqcGFyZW50LCAqY2hpbGQ7Cj4+IEBAIC00MTcsMTMgKzQx
OSwxMyBAQCBzdGF0aWMgdm9pZCBjb3Jlc2lnaHRfZGlzYWJsZV9wYXRoX2Zyb20oc3RydWN0IAo+
PiBsaXN0X2hlYWQgKnBhdGgsCj4+IMKgwqDCoMKgwqDCoMKgwqDCoCB9Cj4+IMKgwqDCoMKgwqDC
oMKgwqDCoCAvKiBEaXNhYmxlIGFsbCBoZWxwZXJzIGFkamFjZW50IGFsb25nIHRoZSBwYXRoIGxh
c3QgKi8KPj4gLcKgwqDCoMKgwqDCoMKgIGNvcmVzaWdodF9kaXNhYmxlX2hlbHBlcnMoY3NkZXYp
Owo+PiArwqDCoMKgwqDCoMKgwqAgY29yZXNpZ2h0X2Rpc2FibGVfaGVscGVycyhjc2Rldiwgc2lu
a19kYXRhKTsKPj4gwqDCoMKgwqDCoCB9Cj4+IMKgIH0KPj4gLXZvaWQgY29yZXNpZ2h0X2Rpc2Fi
bGVfcGF0aChzdHJ1Y3QgbGlzdF9oZWFkICpwYXRoKQo+PiArdm9pZCBjb3Jlc2lnaHRfZGlzYWJs
ZV9wYXRoKHN0cnVjdCBsaXN0X2hlYWQgKnBhdGgsIHZvaWQgKnNpbmtfZGF0YSkKPj4gwqAgewo+
PiAtwqDCoMKgIGNvcmVzaWdodF9kaXNhYmxlX3BhdGhfZnJvbShwYXRoLCBOVUxMKTsKPj4gK8Kg
wqDCoCBjb3Jlc2lnaHRfZGlzYWJsZV9wYXRoX2Zyb20ocGF0aCwgTlVMTCwgc2lua19kYXRhKTsK
Pj4gwqAgfQo+PiDCoCBFWFBPUlRfU1lNQk9MX0dQTChjb3Jlc2lnaHRfZGlzYWJsZV9wYXRoKTsK
Pj4gQEAgLTUwNSwxMCArNTA3LDQ3IEBAIGludCBjb3Jlc2lnaHRfZW5hYmxlX3BhdGgoc3RydWN0
IGxpc3RfaGVhZCAKPj4gKnBhdGgsIGVudW0gY3NfbW9kZSBtb2RlLAo+PiDCoCBvdXQ6Cj4+IMKg
wqDCoMKgwqAgcmV0dXJuIHJldDsKPj4gwqAgZXJyOgo+PiAtwqDCoMKgIGNvcmVzaWdodF9kaXNh
YmxlX3BhdGhfZnJvbShwYXRoLCBuZCk7Cj4+ICvCoMKgwqAgY29yZXNpZ2h0X2Rpc2FibGVfcGF0
aF9mcm9tKHBhdGgsIG5kLCBzaW5rX2RhdGEpOwo+PiDCoMKgwqDCoMKgIGdvdG8gb3V0Owo+PiDC
oCB9Cj4+ICtpbnQgY29yZXNpZ2h0X3JlYWRfdHJhY2VpZChzdHJ1Y3QgbGlzdF9oZWFkICpwYXRo
LCBlbnVtIGNzX21vZGUgbW9kZSwKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgc3Ry
dWN0IGNvcmVzaWdodF90cmFjZV9pZF9tYXAgKmlkX21hcCkKPj4gK3sKPj4gK8KgwqDCoCBpbnQg
dHJhY2VfaWQsIHR5cGU7Cj4+ICvCoMKgwqAgc3RydWN0IGNvcmVzaWdodF9kZXZpY2UgKmNzZGV2
Owo+PiArwqDCoMKgIHN0cnVjdCBjb3Jlc2lnaHRfbm9kZSAqbmQ7Cj4+ICsKPj4gK8KgwqDCoCBs
aXN0X2Zvcl9lYWNoX2VudHJ5KG5kLCBwYXRoLCBsaW5rKSB7Cj4gCj4gV2hhdCBkbyB5b3UgdGhp
bmsgYWJvdXQgYWxzbyBjaGFuZ2luZyB0aGUgcGF0aCB0byB0aGlzOgo+IAo+ICDCoHN0cnVjdCBj
b3Jlc2lnaHRfcGF0aCB7Cj4gIMKgwqAgc3RydWN0IGxpc3RfaGVhZCAqcGF0aCwKPiAgwqDCoCB1
OCB0cmFjZV9pZAo+ICDCoH07Cj4gCj4gVGhhdCB3b3VsZCBhdm9pZCBoYXZpbmcgdG8gdHJhdmVy
c2UgdGhlIHBhdGggb24gZXZlcnkgZW5hYmxlIGFuZCB3b3VsZCAKPiByZW1vdmUgdGhpcyBmdW5j
dGlvbi4gWW91IGNvdWxkIGFsc28gY2FjaGUgdGhlIHRyYWNlIElEIGluIHRoZSBDVENVIGZvciAK
PiBhIHNpbWlsYXIgYmVuZWZpdCwgYnV0IGl0IHdvdWxkbid0IHJlbW92ZSB0aGUgbmVlZCB0byBj
YWxsIHRoaXMgYXQgbGVhc3QgCj4gb25jZS4KPiAKPiBUaGUgZXhwZW5zaXZlIHBhcnQgc2hvdWxk
IGJlIHRoZSBjcmVhdGUgcGF0aCBwYXJ0LCBhZnRlciB0aGF0IGVuYWJsZSBhbmQgCj4gZGlzYWJs
ZSBzaG91bGQgYmUgY2hlYXAgYmVjYXVzZSB0aGV5IGhhcHBlbiBvbiBzY2hlZHVsZSBmb3IgUGVy
ZiBtb2RlLiAKPiBXZSBzaG91bGQgYmUgYXZvaWRpbmcgYWxsb2NhdGlvbnMgYW5kIHNlYXJjaGVz
Lgo+IAo+PiArwqDCoMKgwqDCoMKgwqAgY3NkZXYgPSBuZC0+Y3NkZXY7Cj4+ICvCoMKgwqDCoMKg
wqDCoCB0eXBlID0gY3NkZXYtPnR5cGU7Cj4+ICsKPj4gK8KgwqDCoMKgwqDCoMKgIHN3aXRjaCAo
dHlwZSkgewo+PiArwqDCoMKgwqDCoMKgwqAgY2FzZSBDT1JFU0lHSFRfREVWX1RZUEVfU09VUkNF
Ogo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBpZiAoc291cmNlX29wcyhjc2RldiktPnRyYWNl
X2lkICE9IE5VTEwpIHsKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCB0cmFjZV9p
ZCA9IHNvdXJjZV9vcHMoY3NkZXYpLT50cmFjZV9pZChjc2RldiwKPj4gK8KgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqAgbW9kZSwKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgaWRfbWFwKTsKPj4gK8KgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBpZiAoSVNfVkFMSURfQ1NfVFJBQ0VfSUQodHJhY2VfaWQp
KQo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgZ290byBvdXQ7Cj4+
ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIH0KPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqAgYnJl
YWs7Cj4+ICvCoMKgwqDCoMKgwqDCoCBjYXNlIENPUkVTSUdIVF9ERVZfVFlQRV9MSU5LOgo+PiAr
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBpZiAobGlua19vcHMoY3NkZXYpLT50cmFjZV9pZCAhPSBO
VUxMKSB7Cj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgdHJhY2VfaWQgPSBsaW5r
X29wcyhjc2RldiktPnRyYWNlX2lkKGNzZGV2KTsKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBpZiAoSVNfVkFMSURfQ1NfVFJBQ0VfSUQodHJhY2VfaWQpKQo+PiArwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgZ290byBvdXQ7Cj4+ICvCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgIH0KPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqAgYnJlYWs7Cj4+ICvCoMKgwqDC
oMKgwqDCoCBkZWZhdWx0Ogo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBicmVhazsKPj4gK8Kg
wqDCoMKgwqDCoMKgIH0KPj4gK8KgwqDCoCB9Cj4+ICvCoMKgwqAgcmV0dXJuIC1FSU5WQUw7Cj4+
ICtvdXQ6Cj4+ICvCoMKgwqAgcmV0dXJuIHRyYWNlX2lkOwo+PiArfQo+PiArCj4+IMKgIHN0cnVj
dCBjb3Jlc2lnaHRfZGV2aWNlICpjb3Jlc2lnaHRfZ2V0X3Npbmsoc3RydWN0IGxpc3RfaGVhZCAq
cGF0aCkKPj4gwqAgewo+PiDCoMKgwqDCoMKgIHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpjc2Rl
djsKPj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQt
ZXRiMTAuYyBiL2RyaXZlcnMvIAo+PiBod3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1ldGIx
MC5jCj4+IGluZGV4IGFlYTlhYzljNGJkMC4uOTA0YjU1MzFjMjU2IDEwMDY0NAo+PiAtLS0gYS9k
cml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LWV0YjEwLmMKPj4gKysrIGIvZHJp
dmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1ldGIxMC5jCj4+IEBAIC0xNzMsNyAr
MTczLDggQEAgc3RhdGljIGludCBldGJfZW5hYmxlX3BlcmYoc3RydWN0IGNvcmVzaWdodF9kZXZp
Y2UgCj4+ICpjc2Rldiwgdm9pZCAqZGF0YSkKPj4gwqDCoMKgwqDCoCBwaWRfdCBwaWQ7Cj4+IMKg
wqDCoMKgwqAgdW5zaWduZWQgbG9uZyBmbGFnczsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3QgZXRiX2Ry
dmRhdGEgKmRydmRhdGEgPSBkZXZfZ2V0X2RydmRhdGEoY3NkZXYtPmRldi5wYXJlbnQpOwo+PiAt
wqDCoMKgIHN0cnVjdCBwZXJmX291dHB1dF9oYW5kbGUgKmhhbmRsZSA9IGRhdGE7Cj4+ICvCoMKg
wqAgc3RydWN0IGNzX3NpbmtfZGF0YSAqc2lua19kYXRhID0gKHN0cnVjdCBjc19zaW5rX2RhdGEg
KilkYXRhOwo+PiArwqDCoMKgIHN0cnVjdCBwZXJmX291dHB1dF9oYW5kbGUgKmhhbmRsZSA9IHNp
bmtfZGF0YS0+aGFuZGxlOwo+PiDCoMKgwqDCoMKgIHN0cnVjdCBjc19idWZmZXJzICpidWYgPSBl
dG1fcGVyZl9zaW5rX2NvbmZpZyhoYW5kbGUpOwo+PiDCoMKgwqDCoMKgIHNwaW5fbG9ja19pcnFz
YXZlKCZkcnZkYXRhLT5zcGlubG9jaywgZmxhZ3MpOwo+PiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9o
d3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1ldG0tcGVyZi5jIGIvIAo+PiBkcml2ZXJzL2h3
dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LWV0bS1wZXJmLmMKPj4gaW5kZXggYWQ2YThmNGI3
MGI2Li5lNjc2ZWRkNDJkZGMgMTAwNjQ0Cj4+IC0tLSBhL2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVz
aWdodC9jb3Jlc2lnaHQtZXRtLXBlcmYuYwo+PiArKysgYi9kcml2ZXJzL2h3dHJhY2luZy9jb3Jl
c2lnaHQvY29yZXNpZ2h0LWV0bS1wZXJmLmMKPj4gQEAgLTQ1OSw2ICs0NTksNyBAQCBzdGF0aWMg
dm9pZCBldG1fZXZlbnRfc3RhcnQoc3RydWN0IHBlcmZfZXZlbnQgCj4+ICpldmVudCwgaW50IGZs
YWdzKQo+PiDCoMKgwqDCoMKgIHN0cnVjdCBwZXJmX291dHB1dF9oYW5kbGUgKmhhbmRsZSA9ICZj
dHh0LT5oYW5kbGU7Cj4+IMKgwqDCoMKgwqAgc3RydWN0IGNvcmVzaWdodF9kZXZpY2UgKnNpbmss
ICpjc2RldiA9IHBlcl9jcHUoY3NkZXZfc3JjLCBjcHUpOwo+PiDCoMKgwqDCoMKgIHN0cnVjdCBs
aXN0X2hlYWQgKnBhdGg7Cj4+ICvCoMKgwqAgc3RydWN0IGNzX3NpbmtfZGF0YSAqc2lua19kYXRh
ID0gTlVMTDsKPj4gwqDCoMKgwqDCoCB1NjQgaHdfaWQ7Cj4+IMKgwqDCoMKgwqAgdTggdHJhY2Vf
aWQ7Cj4+IEBAIC00OTgsOSArNDk5LDIwIEBAIHN0YXRpYyB2b2lkIGV0bV9ldmVudF9zdGFydChz
dHJ1Y3QgcGVyZl9ldmVudCAKPj4gKmV2ZW50LCBpbnQgZmxhZ3MpCj4+IMKgwqDCoMKgwqAgaWYg
KFdBUk5fT05fT05DRSghc2luaykpCj4+IMKgwqDCoMKgwqDCoMKgwqDCoCBnb3RvIGZhaWxfZW5k
X3N0b3A7Cj4+ICvCoMKgwqAgc2lua19kYXRhID0ga3phbGxvYyhzaXplb2YoKnNpbmtfZGF0YSks
IEdGUF9LRVJORUwpOwo+IAo+IGt6YWxsb2MgY2FuJ3QgYmUgY2FsbGVkIGZyb20gaGVyZS4gQ2hl
Y2sgZG1lc2cgZm9yIHRoZSB3YXJuaW5nLiBUaGF0J3MgCj4gYW5vdGhlciByZWFzb24gdG8gZG8g
dGhpcyBjaGFuZ2Ugb24gdGhlIHBhdGguIEJlY2F1c2UgdGhlIHBhdGggaXMgCj4gYWxsb2NhdGVk
IG9uIGV0bV9zZXR1cF9hdXgoKSB3aGVyZSBhbGxvY2F0aW9ucyBhcmUgYWxsb3dlZC4KPiAKSGks
IEphbWVzCkkganVzdCB0cmllZCB3aXRoIGZvbGxvd2luZyBjb21tYW5kIGFuZCBkaWQgbm90IG9i
c2VydmUgYW55IHdhcm5pbmcgaW5mbyAKZnJvbSBkbWVzZywgbWF5IEkgYXNrIHdoYXQncyB0aGUg
aXNzdWUgbWF5IHN1ZmZlcmVkIGhlcmU/Cgpyb290QHFlbXVhcm02NDovZGF0YSMgLi9wZXJmIHJl
Y29yZCAtZSBjc19ldG0vQHRtY19ldHIwLyAtLXBlci10aHJlYWQgbHMKY29uZmlncyAgICAgICAg
a2VybmVsLnR4dCAgICAgbG9ncyAgICAgICAgICAgbG9zdCtmb3VuZCAgICAgbWlzYyAKICAgcGVy
ZiAgICAgICAgICAgcGVyZi5kYXRhICAgICAgcGVyZi5kYXRhLm9sZCAgcm9vdCAgICAgICAgICAg
dGltZSAKICAgICAgdHpzdG9yYWdlICAgICAgd2VzdG9uClsgcGVyZiByZWNvcmQ6IFdva2VuIHVw
IDEgdGltZXMgdG8gd3JpdGUgZGF0YSBdClsgcGVyZiByZWNvcmQ6IENhcHR1cmVkIGFuZCB3cm90
ZSAwLjE0NSBNQiBwZXJmLmRhdGEgXQoKRm9yIHRoZSBuZXcgcGF0Y2ggdmVyc2lvbiwgSSBpbXBs
ZW1lbnRlZCBhbiA4LWJpdCBoYXNoIHRhYmxlIGluIHRoZSBDVENVIApkcml2ZXIgZGF0YSB0byBo
YW5kbGUgc2l0dWF0aW9ucyB3aGVyZSBtdWx0aXBsZSBUUERNcyBhcmUgY29ubmVjdGVkIHRvIAp0
aGUgc2FtZSBUUERBIGRldmljZSBoYXZlIGJlZW4gZW5hYmxlZC4gQXMgd2Uga25vdywgVFBETXMg
c2hhcmUgdGhlIAp0cmFjZV9pZCBvZiB0aGUgVFBEQSBkZXZpY2UgdGhleSBhcmUgY29ubmVjdGVk
IHRvLiBJZiB3ZSByZXNldCB0aGUgYml0IApiYXNlZCBvbiB0aGUgdHJhY2VfaWQgd2l0aG91dCBj
aGVja2luZyB0aGUgZW5hYmxlZCByZWZjb3VudCwgaXQgY2F1c2VzIAphbiBpc3N1ZSB3aGVyZSB0
cmFjZSBkYXRhIGZyb20gb3RoZXIgZW5hYmxlZCBUUERNIGRldmljZXMgKHNoYXJpbmcgdGhlIApz
YW1lIHRyYWNlX2lkKSBjYW5ub3QgZW50ZXIgdGhlIEVUUiBidWZmZXIsIGFzIGl0IGdldHMgZmls
dGVyZWQgb3V0IGJ5IAp0aGUgQ1RDVS4KCkkgbmVlZCBhbGxvY2F0ZSBtZW1vcnkgd2hlbiBpbXBs
ZW1lbnQgaGFzaCB0YWJsZShhZGQvcmVtb3ZlIGtleSBlbnRyeSkgCmluIGNvcmVzaWdodF9lbmFi
bGVfcGF0aCBmbG93LCBidXQgeW91IG1lbnRpb25lZCB3ZSBjYW5ub3QgY2FsbCBremFsbG9jIApm
cm9tIGhlcmUuCgpUaGFua3MsCkppZQoKPj4gK8KgwqDCoCBpZiAoIXNpbmtfZGF0YSkKPj4gK8Kg
wqDCoMKgwqDCoMKgIGdvdG8gZmFpbF9lbmRfc3RvcDsKPj4gKwo+PiArwqDCoMKgIHNpbmtfZGF0
YS0+c2luayA9IHNpbms7Cj4+ICvCoMKgwqAgc2lua19kYXRhLT50cmFjZWlkID0gY29yZXNpZ2h0
X3JlYWRfdHJhY2VpZChwYXRoLCBDU19NT0RFX1BFUkYsCj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgJnNpbmstPnBlcmZfc2lua19pZF9t
YXApOwo+PiArwqDCoMKgIHNpbmtfZGF0YS0+aGFuZGxlID0gaGFuZGxlOwo+PiArCj4+IMKgwqDC
oMKgwqAgLyogTm90aGluZyB3aWxsIGhhcHBlbiB3aXRob3V0IGEgcGF0aCAqLwo+PiAtwqDCoMKg
IGlmIChjb3Jlc2lnaHRfZW5hYmxlX3BhdGgocGF0aCwgQ1NfTU9ERV9QRVJGLCBoYW5kbGUpKQo+
PiArwqDCoMKgIGlmIChjb3Jlc2lnaHRfZW5hYmxlX3BhdGgocGF0aCwgQ1NfTU9ERV9QRVJGLCBz
aW5rX2RhdGEpKSB7Cj4+ICvCoMKgwqDCoMKgwqDCoCBrZnJlZShzaW5rX2RhdGEpOwo+PiDCoMKg
wqDCoMKgwqDCoMKgwqAgZ290byBmYWlsX2VuZF9zdG9wOwo+PiArwqDCoMKgIH0KPj4gwqDCoMKg
wqDCoCAvKiBGaW5hbGx5IGVuYWJsZSB0aGUgdHJhY2VyICovCj4+IMKgwqDCoMKgwqAgaWYgKHNv
dXJjZV9vcHMoY3NkZXYpLT5lbmFibGUoY3NkZXYsIGV2ZW50LCBDU19NT0RFX1BFUkYsCj4+IEBA
IC01MjYsNiArNTM4LDcgQEAgc3RhdGljIHZvaWQgZXRtX2V2ZW50X3N0YXJ0KHN0cnVjdCBwZXJm
X2V2ZW50IAo+PiAqZXZlbnQsIGludCBmbGFncykKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIHBlcmZf
cmVwb3J0X2F1eF9vdXRwdXRfaWQoZXZlbnQsIGh3X2lkKTsKPj4gwqDCoMKgwqDCoCB9Cj4+ICvC
oMKgwqAga2ZyZWUoc2lua19kYXRhKTsKPj4gwqAgb3V0Ogo+PiDCoMKgwqDCoMKgIC8qIFRlbGwg
dGhlIHBlcmYgY29yZSB0aGUgZXZlbnQgaXMgYWxpdmUgKi8KPj4gwqDCoMKgwqDCoCBldmVudC0+
aHcuc3RhdGUgPSAwOwo+PiBAQCAtNTM0LDcgKzU0Nyw4IEBAIHN0YXRpYyB2b2lkIGV0bV9ldmVu
dF9zdGFydChzdHJ1Y3QgcGVyZl9ldmVudCAKPj4gKmV2ZW50LCBpbnQgZmxhZ3MpCj4+IMKgwqDC
oMKgwqAgcmV0dXJuOwo+PiDCoCBmYWlsX2Rpc2FibGVfcGF0aDoKPj4gLcKgwqDCoCBjb3Jlc2ln
aHRfZGlzYWJsZV9wYXRoKHBhdGgpOwo+PiArwqDCoMKgIGNvcmVzaWdodF9kaXNhYmxlX3BhdGgo
cGF0aCwgc2lua19kYXRhKTsKPj4gK8KgwqDCoCBrZnJlZShzaW5rX2RhdGEpOwo+PiDCoCBmYWls
X2VuZF9zdG9wOgo+PiDCoMKgwqDCoMKgIC8qCj4+IMKgwqDCoMKgwqDCoCAqIENoZWNrIGlmIHRo
ZSBoYW5kbGUgaXMgc3RpbGwgYXNzb2NpYXRlZCB3aXRoIHRoZSBldmVudCwKPj4gQEAgLTU1OSw2
ICs1NzMsNyBAQCBzdGF0aWMgdm9pZCBldG1fZXZlbnRfc3RvcChzdHJ1Y3QgcGVyZl9ldmVudCAK
Pj4gKmV2ZW50LCBpbnQgbW9kZSkKPj4gwqDCoMKgwqDCoCBzdHJ1Y3QgcGVyZl9vdXRwdXRfaGFu
ZGxlICpoYW5kbGUgPSAmY3R4dC0+aGFuZGxlOwo+PiDCoMKgwqDCoMKgIHN0cnVjdCBldG1fZXZl
bnRfZGF0YSAqZXZlbnRfZGF0YTsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3QgbGlzdF9oZWFkICpwYXRo
Owo+PiArwqDCoMKgIHN0cnVjdCBjc19zaW5rX2RhdGEgKnNpbmtfZGF0YSA9IE5VTEw7Cj4+IMKg
wqDCoMKgwqAgLyoKPj4gwqDCoMKgwqDCoMKgICogSWYgd2Ugc3RpbGwgaGF2ZSBhY2Nlc3MgdG8g
dGhlIGV2ZW50X2RhdGEgdmlhIGhhbmRsZSwKPj4gQEAgLTYwMyw2ICs2MTgsMTAgQEAgc3RhdGlj
IHZvaWQgZXRtX2V2ZW50X3N0b3Aoc3RydWN0IHBlcmZfZXZlbnQgCj4+ICpldmVudCwgaW50IG1v
ZGUpCj4+IMKgwqDCoMKgwqAgaWYgKCFzaW5rKQo+PiDCoMKgwqDCoMKgwqDCoMKgwqAgcmV0dXJu
Owo+PiArwqDCoMKgIHNpbmtfZGF0YSA9IGt6YWxsb2Moc2l6ZW9mKCpzaW5rX2RhdGEpLCBHRlBf
S0VSTkVMKTsKPiAKPiBTYW1lIHByb2JsZW0gYXMgYWJvdmUuCj4gCj4+ICvCoMKgwqAgaWYgKCFz
aW5rX2RhdGEpCj4+ICvCoMKgwqDCoMKgwqDCoCByZXR1cm47Cj4+ICsKPj4gwqDCoMKgwqDCoCAv
KiBzdG9wIHRyYWNlciAqLwo+PiDCoMKgwqDCoMKgIGNvcmVzaWdodF9kaXNhYmxlX3NvdXJjZShj
c2RldiwgZXZlbnQpOwo+PiBAQCAtNjE2LDEyICs2MzUsMTYgQEAgc3RhdGljIHZvaWQgZXRtX2V2
ZW50X3N0b3Aoc3RydWN0IHBlcmZfZXZlbnQgCj4+ICpldmVudCwgaW50IG1vZGUpCj4+IMKgwqDC
oMKgwqDCoCAqIGhhdmUgdG8gZG8gYW55dGhpbmcgaGVyZS4KPj4gwqDCoMKgwqDCoMKgICovCj4+
IMKgwqDCoMKgwqAgaWYgKGhhbmRsZS0+ZXZlbnQgJiYgKG1vZGUgJiBQRVJGX0VGX1VQREFURSkp
IHsKPj4gLcKgwqDCoMKgwqDCoMKgIGlmIChXQVJOX09OX09OQ0UoaGFuZGxlLT5ldmVudCAhPSBl
dmVudCkpCj4+ICvCoMKgwqDCoMKgwqDCoCBpZiAoV0FSTl9PTl9PTkNFKGhhbmRsZS0+ZXZlbnQg
IT0gZXZlbnQpKSB7Cj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGtmcmVlKHNpbmtfZGF0YSk7
Cj4+IMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHJldHVybjsKPj4gK8KgwqDCoMKgwqDCoMKg
IH0KPj4gwqDCoMKgwqDCoMKgwqDCoMKgIC8qIHVwZGF0ZSB0cmFjZSBpbmZvcm1hdGlvbiAqLwo+
PiAtwqDCoMKgwqDCoMKgwqAgaWYgKCFzaW5rX29wcyhzaW5rKS0+dXBkYXRlX2J1ZmZlcikKPj4g
K8KgwqDCoMKgwqDCoMKgIGlmICghc2lua19vcHMoc2luayktPnVwZGF0ZV9idWZmZXIpIHsKPj4g
K8KgwqDCoMKgwqDCoMKgwqDCoMKgwqAga2ZyZWUoc2lua19kYXRhKTsKPj4gwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgcmV0dXJuOwo+PiArwqDCoMKgwqDCoMKgwqAgfQo+PiDCoMKgwqDCoMKg
wqDCoMKgwqAgc2l6ZSA9IHNpbmtfb3BzKHNpbmspLT51cGRhdGVfYnVmZmVyKHNpbmssIGhhbmRs
ZSwKPj4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgIGV2ZW50X2RhdGEtPnNua19jb25maWcpOwo+PiBAQCAtNjQyLDggKzY2NSwxMiBAQCBzdGF0
aWMgdm9pZCBldG1fZXZlbnRfc3RvcChzdHJ1Y3QgcGVyZl9ldmVudCAKPj4gKmV2ZW50LCBpbnQg
bW9kZSkKPj4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgV0FSTl9PTihzaXplKTsKPj4gwqDC
oMKgwqDCoCB9Cj4+ICvCoMKgwqAgc2lua19kYXRhLT5zaW5rID0gc2luazsKPj4gK8KgwqDCoCBz
aW5rX2RhdGEtPnRyYWNlaWQgPSBjb3Jlc2lnaHRfcmVhZF90cmFjZWlkKHBhdGgsIENTX01PREVf
UEVSRiwKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCAmc2luay0+cGVyZl9zaW5rX2lkX21hcCk7Cj4+IMKgwqDCoMKgwqAgLyogRGlzYWJs
aW5nIHRoZSBwYXRoIG1ha2UgaXRzIGVsZW1lbnRzIGF2YWlsYWJsZSB0byBvdGhlciAKPj4gc2Vz
c2lvbnMgKi8KPj4gLcKgwqDCoCBjb3Jlc2lnaHRfZGlzYWJsZV9wYXRoKHBhdGgpOwo+PiArwqDC
oMKgIGNvcmVzaWdodF9kaXNhYmxlX3BhdGgocGF0aCwgc2lua19kYXRhKTsKPj4gK8KgwqDCoCBr
ZnJlZShzaW5rX2RhdGEpOwo+PiDCoCB9Cj4+IMKgIHN0YXRpYyBpbnQgZXRtX2V2ZW50X2FkZChz
dHJ1Y3QgcGVyZl9ldmVudCAqZXZlbnQsIGludCBtb2RlKQo+PiBkaWZmIC0tZ2l0IGEvZHJpdmVy
cy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1ldG0zeC1jb3JlLmMgYi8gCj4+IGRyaXZl
cnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtZXRtM3gtY29yZS5jCj4+IGluZGV4IGMx
MDNmNGM3MGY1ZC4uMGYwOTVmYWI3ZTBhIDEwMDY0NAo+PiAtLS0gYS9kcml2ZXJzL2h3dHJhY2lu
Zy9jb3Jlc2lnaHQvY29yZXNpZ2h0LWV0bTN4LWNvcmUuYwo+PiArKysgYi9kcml2ZXJzL2h3dHJh
Y2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LWV0bTN4LWNvcmUuYwo+PiBAQCAtNjk3LDEwICs2OTcs
NDAgQEAgc3RhdGljIHZvaWQgZXRtX2Rpc2FibGUoc3RydWN0IGNvcmVzaWdodF9kZXZpY2UgCj4+
ICpjc2RldiwKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIGNvcmVzaWdodF9zZXRfbW9kZShjc2Rldiwg
Q1NfTU9ERV9ESVNBQkxFRCk7Cj4+IMKgIH0KPj4gK3N0YXRpYyBpbnQgZXRtX3RyYWNlX2lkKHN0
cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpjc2RldiwKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
ZW51bSBjc19tb2RlIG1vZGUsCj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHN0cnVjdCBjb3Jl
c2lnaHRfdHJhY2VfaWRfbWFwICppZF9tYXApCj4+ICt7Cj4+ICvCoMKgwqAgaW50IHRyYWNlX2lk
Owo+PiArwqDCoMKgIHN0cnVjdCBldG1fZHJ2ZGF0YSAqZHJ2ZGF0YTsKPj4gKwo+PiArwqDCoMKg
IGlmIChjc2RldiA9PSBOVUxMKQo+PiArwqDCoMKgwqDCoMKgwqAgcmV0dXJuIC1FSU5WQUw7Cj4+
ICsKPj4gK8KgwqDCoCBkcnZkYXRhID0gZGV2X2dldF9kcnZkYXRhKGNzZGV2LT5kZXYucGFyZW50
KTsKPj4gK8KgwqDCoCBzd2l0Y2ggKG1vZGUpIHsKPj4gK8KgwqDCoCBjYXNlIENTX01PREVfU1lT
RlM6Cj4+ICvCoMKgwqDCoMKgwqDCoCB0cmFjZV9pZCA9IGV0bV9yZWFkX2FsbG9jX3RyYWNlX2lk
KGRydmRhdGEpOwo+PiArwqDCoMKgwqDCoMKgwqAgYnJlYWs7Cj4+ICvCoMKgwqAgY2FzZSBDU19N
T0RFX1BFUkY6Cj4+ICvCoMKgwqDCoMKgwqDCoCB0cmFjZV9pZCA9IGNvcmVzaWdodF90cmFjZV9p
ZF9yZWFkX2NwdV9pZF9tYXAoZHJ2ZGF0YS0+Y3B1LCAKPj4gaWRfbWFwKTsKPj4gK8KgwqDCoMKg
wqDCoMKgIGlmIChJU19WQUxJRF9DU19UUkFDRV9JRCh0cmFjZV9pZCkpCj4+ICvCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgIGRydmRhdGEtPnRyYWNlaWQgPSAodTgpdHJhY2VfaWQ7Cj4+ICvCoMKgwqDC
oMKgwqDCoCBicmVhazsKPj4gK8KgwqDCoCBkZWZhdWx0Ogo+PiArwqDCoMKgwqDCoMKgwqAgdHJh
Y2VfaWQgPSAtRUlOVkFMOwo+PiArwqDCoMKgwqDCoMKgwqAgYnJlYWs7Cj4+ICvCoMKgwqAgfQo+
PiArCj4+ICvCoMKgwqAgcmV0dXJuIHRyYWNlX2lkOwo+PiArfQo+PiArCj4+ICsKPj4gwqAgc3Rh
dGljIGNvbnN0IHN0cnVjdCBjb3Jlc2lnaHRfb3BzX3NvdXJjZSBldG1fc291cmNlX29wcyA9IHsK
Pj4gwqDCoMKgwqDCoCAuY3B1X2lkwqDCoMKgwqDCoMKgwqAgPSBldG1fY3B1X2lkLAo+PiDCoMKg
wqDCoMKgIC5lbmFibGXCoMKgwqDCoMKgwqDCoCA9IGV0bV9lbmFibGUsCj4+IMKgwqDCoMKgwqAg
LmRpc2FibGXCoMKgwqAgPSBldG1fZGlzYWJsZSwKPj4gK8KgwqDCoCAudHJhY2VfaWTCoMKgwqAg
PSBldG1fdHJhY2VfaWQsCj4+IMKgIH07Cj4+IMKgIHN0YXRpYyBjb25zdCBzdHJ1Y3QgY29yZXNp
Z2h0X29wcyBldG1fY3Nfb3BzID0gewo+PiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9od3RyYWNpbmcv
Y29yZXNpZ2h0L2NvcmVzaWdodC1ldG00eC1jb3JlLmMgYi8gCj4+IGRyaXZlcnMvaHd0cmFjaW5n
L2NvcmVzaWdodC9jb3Jlc2lnaHQtZXRtNHgtY29yZS5jCj4+IGluZGV4IGRkOGM3NGY4OTNkYi4u
YmFjOWVhMzcxNjg4IDEwMDY0NAo+PiAtLS0gYS9kcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQv
Y29yZXNpZ2h0LWV0bTR4LWNvcmUuYwo+PiArKysgYi9kcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2ln
aHQvY29yZXNpZ2h0LWV0bTR4LWNvcmUuYwo+PiBAQCAtMTAyNSwxMCArMTAyNSwzOSBAQCBzdGF0
aWMgdm9pZCBldG00X2Rpc2FibGUoc3RydWN0IAo+PiBjb3Jlc2lnaHRfZGV2aWNlICpjc2RldiwK
Pj4gwqDCoMKgwqDCoMKgwqDCoMKgIGNvcmVzaWdodF9zZXRfbW9kZShjc2RldiwgQ1NfTU9ERV9E
SVNBQkxFRCk7Cj4+IMKgIH0KPj4gK3N0YXRpYyBpbnQgZXRtNF90cmFjZV9pZChzdHJ1Y3QgY29y
ZXNpZ2h0X2RldmljZSAqY3NkZXYsCj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgZW51bSBj
c19tb2RlIG1vZGUsCj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgc3RydWN0IGNvcmVzaWdo
dF90cmFjZV9pZF9tYXAgKmlkX21hcCkKPj4gK3sKPj4gK8KgwqDCoCBpbnQgdHJhY2VfaWQ7Cj4+
ICvCoMKgwqAgc3RydWN0IGV0bXY0X2RydmRhdGEgKmRydmRhdGE7Cj4+ICsKPj4gK8KgwqDCoCBp
ZiAoY3NkZXYgPT0gTlVMTCkKPj4gK8KgwqDCoMKgwqDCoMKgIHJldHVybiAtRUlOVkFMOwo+PiAr
Cj4+ICvCoMKgwqAgZHJ2ZGF0YSA9IGRldl9nZXRfZHJ2ZGF0YShjc2Rldi0+ZGV2LnBhcmVudCk7
Cj4+ICvCoMKgwqAgc3dpdGNoIChtb2RlKSB7Cj4+ICvCoMKgwqAgY2FzZSBDU19NT0RFX1NZU0ZT
Ogo+PiArwqDCoMKgwqDCoMKgwqAgdHJhY2VfaWQgPSBldG00X3JlYWRfYWxsb2NfdHJhY2VfaWQo
ZHJ2ZGF0YSk7Cj4+ICvCoMKgwqDCoMKgwqDCoCBicmVhazsKPj4gK8KgwqDCoCBjYXNlIENTX01P
REVfUEVSRjoKPj4gK8KgwqDCoMKgwqDCoMKgIHRyYWNlX2lkID0gY29yZXNpZ2h0X3RyYWNlX2lk
X3JlYWRfY3B1X2lkX21hcChkcnZkYXRhLT5jcHUsIAo+PiBpZF9tYXApOwo+PiArwqDCoMKgwqDC
oMKgwqAgaWYgKElTX1ZBTElEX0NTX1RSQUNFX0lEKHRyYWNlX2lkKSkKPj4gK8KgwqDCoMKgwqDC
oMKgwqDCoMKgwqAgZHJ2ZGF0YS0+dHJjaWQgPSAodTgpdHJhY2VfaWQ7Cj4+ICvCoMKgwqDCoMKg
wqDCoCBicmVhazsKPj4gK8KgwqDCoCBkZWZhdWx0Ogo+PiArwqDCoMKgwqDCoMKgwqAgdHJhY2Vf
aWQgPSAtRUlOVkFMOwo+PiArwqDCoMKgwqDCoMKgwqAgYnJlYWs7Cj4+ICvCoMKgwqAgfQo+PiAr
Cj4+ICvCoMKgwqAgcmV0dXJuIHRyYWNlX2lkOwo+PiArfQo+PiArCj4+IMKgIHN0YXRpYyBjb25z
dCBzdHJ1Y3QgY29yZXNpZ2h0X29wc19zb3VyY2UgZXRtNF9zb3VyY2Vfb3BzID0gewo+PiDCoMKg
wqDCoMKgIC5jcHVfaWTCoMKgwqDCoMKgwqDCoCA9IGV0bTRfY3B1X2lkLAo+PiDCoMKgwqDCoMKg
IC5lbmFibGXCoMKgwqDCoMKgwqDCoCA9IGV0bTRfZW5hYmxlLAo+PiDCoMKgwqDCoMKgIC5kaXNh
YmxlwqDCoMKgID0gZXRtNF9kaXNhYmxlLAo+PiArwqDCoMKgIC50cmFjZV9pZMKgwqDCoCA9IGV0
bTRfdHJhY2VfaWQsCj4+IMKgIH07Cj4+IMKgIHN0YXRpYyBjb25zdCBzdHJ1Y3QgY29yZXNpZ2h0
X29wcyBldG00X2NzX29wcyA9IHsKPj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvaHd0cmFjaW5nL2Nv
cmVzaWdodC9jb3Jlc2lnaHQtcHJpdi5oIGIvZHJpdmVycy8gCj4+IGh3dHJhY2luZy9jb3Jlc2ln
aHQvY29yZXNpZ2h0LXByaXYuaAo+PiBpbmRleCAwNWY4OTFjYTZiNWMuLjZhOTVhM2JhOTMzOSAx
MDA2NDQKPj4gLS0tIGEvZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1wcml2
LmgKPj4gKysrIGIvZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1wcml2LmgK
Pj4gQEAgLTEwNSw2ICsxMDUsMTUgQEAgc3RydWN0IGNzX2J1ZmZlcnMgewo+PiDCoMKgwqDCoMKg
IHZvaWTCoMKgwqDCoMKgwqDCoMKgwqDCoMKgICoqZGF0YV9wYWdlczsKPj4gwqAgfTsKPj4gKy8q
Kgo+PiArICogc3RydWN0IGNzX3NpbmtfZGF0YSAtIGRhdGEgdXNlZCBieSBjb3Jlc2lnaHRfZW5h
YmxlX3BhdGgvIAo+PiBjb3Jlc2lnaHRfZGlzYWJsZV9wYXRoCj4+ICsgKi8KPj4gK3N0cnVjdCBj
c19zaW5rX2RhdGEgewo+PiArwqDCoMKgIHN0cnVjdCBwZXJmX291dHB1dF9oYW5kbGXCoMKgwqAg
KmhhbmRsZTsKPj4gK8KgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZcKgwqDCoMKgwqDCoMKg
ICpzaW5rOwo+PiArwqDCoMKgIHU4wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHRyYWNl
aWQ7Cj4+ICt9Owo+PiArCj4+IMKgIHN0YXRpYyBpbmxpbmUgdm9pZCBjb3Jlc2lnaHRfaW5zZXJ0
X2JhcnJpZXJfcGFja2V0KHZvaWQgKmJ1ZikKPj4gwqAgewo+PiDCoMKgwqDCoMKgIGlmIChidWYp
Cj4+IEBAIC0xMjksOSArMTM4LDExIEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBDU19VTkxPQ0sodm9p
ZCBfX2lvbWVtICphZGRyKQo+PiDCoMKgwqDCoMKgIH0gd2hpbGUgKDApOwo+PiDCoCB9Cj4+IC12
b2lkIGNvcmVzaWdodF9kaXNhYmxlX3BhdGgoc3RydWN0IGxpc3RfaGVhZCAqcGF0aCk7Cj4+ICt2
b2lkIGNvcmVzaWdodF9kaXNhYmxlX3BhdGgoc3RydWN0IGxpc3RfaGVhZCAqcGF0aCwgdm9pZCAq
c2lua19kYXRhKTsKPj4gwqAgaW50IGNvcmVzaWdodF9lbmFibGVfcGF0aChzdHJ1Y3QgbGlzdF9o
ZWFkICpwYXRoLCBlbnVtIGNzX21vZGUgbW9kZSwKPj4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIHZvaWQgKnNpbmtfZGF0YSk7Cj4+ICtpbnQgY29yZXNpZ2h0X3JlYWRfdHJhY2VpZChz
dHJ1Y3QgbGlzdF9oZWFkICpwYXRoLCBlbnVtIGNzX21vZGUgbW9kZSwKPj4gK8KgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqAgc3RydWN0IGNvcmVzaWdodF90cmFjZV9pZF9tYXAgKmlkX21hcCk7
Cj4+IMKgIHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpjb3Jlc2lnaHRfZ2V0X3Npbmsoc3RydWN0
IGxpc3RfaGVhZCAqcGF0aCk7Cj4+IMKgIHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpjb3Jlc2ln
aHRfZ2V0X3NpbmtfYnlfaWQodTMyIGlkKTsKPj4gwqAgc3RydWN0IGNvcmVzaWdodF9kZXZpY2Ug
Kgo+PiBkaWZmIC0tZ2l0IGEvZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1z
dG0uYyBiL2RyaXZlcnMvIAo+PiBod3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1zdG0uYwo+
PiBpbmRleCBiNTgxYTMwYTFjZDkuLjU3MDllZGE3N2Q5YiAxMDA2NDQKPj4gLS0tIGEvZHJpdmVy
cy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1zdG0uYwo+PiArKysgYi9kcml2ZXJzL2h3
dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LXN0bS5jCj4+IEBAIC0yODEsOSArMjgxLDMxIEBA
IHN0YXRpYyB2b2lkIHN0bV9kaXNhYmxlKHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlIAo+PiAqY3Nk
ZXYsCj4+IMKgwqDCoMKgwqAgfQo+PiDCoCB9Cj4+ICtzdGF0aWMgaW50IHN0bV90cmFjZV9pZChz
dHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqY3NkZXYsCj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
IGVudW0gY3NfbW9kZSBtb2RlLAo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBzdHJ1Y3QgY29y
ZXNpZ2h0X3RyYWNlX2lkX21hcCAqaWRfbWFwKQo+PiArewo+PiArwqDCoMKgIGludCB0cmFjZV9p
ZDsKPj4gK8KgwqDCoCBzdHJ1Y3Qgc3RtX2RydmRhdGEgKmRydmRhdGE7Cj4+ICsKPj4gK8KgwqDC
oCBpZiAoY3NkZXYgPT0gTlVMTCkKPj4gK8KgwqDCoMKgwqDCoMKgIHJldHVybiAtRUlOVkFMOwo+
PiArCj4+ICvCoMKgwqAgZHJ2ZGF0YSA9IGRldl9nZXRfZHJ2ZGF0YShjc2Rldi0+ZGV2LnBhcmVu
dCk7Cj4+ICvCoMKgwqAgdHJhY2VfaWQgPSBkcnZkYXRhLT50cmFjZWlkOwo+PiArwqDCoMKgIGlm
ICghSVNfVkFMSURfQ1NfVFJBQ0VfSUQodHJhY2VfaWQpKSB7Cj4gCj4gVHJhY2UgSUQgaXMgc3Rh
dGljIGFuZCBhbHdheXMgc2V0IGZvciBTVE0gc28gdGhpcyBpc24ndCBuZWNlc3NhcnksIGp1c3Qg
Cj4gcmV0dXJuIGRydmRhdGEtPnRyYWNlaWQgd2hpY2ggd291bGQgYWxyZWFkeSBiZSB2YWxpZCBv
dGhlcndpc2UgdGhlIAo+IGRldmljZSB3b3VsZG4ndCBiZSByZWdpc3RlcmVkLgo+IAo+PiArwqDC
oMKgwqDCoMKgwqAgdHJhY2VfaWQgPSBjb3Jlc2lnaHRfdHJhY2VfaWRfZ2V0X3N5c3RlbV9pZCgp
Owo+PiArwqDCoMKgwqDCoMKgwqAgaWYgKElTX1ZBTElEX0NTX1RSQUNFX0lEKHRyYWNlX2lkKSkK
Pj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqAgZHJ2ZGF0YS0+dHJhY2VpZCA9ICh1OCl0cmFjZV9p
ZDsKPj4gK8KgwqDCoCB9Cj4+ICsKPj4gK8KgwqDCoCByZXR1cm4gdHJhY2VfaWQ7Cj4+ICt9Cj4+
ICsKPj4gwqAgc3RhdGljIGNvbnN0IHN0cnVjdCBjb3Jlc2lnaHRfb3BzX3NvdXJjZSBzdG1fc291
cmNlX29wcyA9IHsKPj4gwqDCoMKgwqDCoCAuZW5hYmxlwqDCoMKgwqDCoMKgwqAgPSBzdG1fZW5h
YmxlLAo+PiDCoMKgwqDCoMKgIC5kaXNhYmxlwqDCoMKgID0gc3RtX2Rpc2FibGUsCj4+ICvCoMKg
wqAgLnRyYWNlX2lkwqDCoMKgID0gc3RtX3RyYWNlX2lkLAo+PiDCoCB9Owo+PiDCoCBzdGF0aWMg
Y29uc3Qgc3RydWN0IGNvcmVzaWdodF9vcHMgc3RtX2NzX29wcyA9IHsKPj4gZGlmZiAtLWdpdCBh
L2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtc3lzZnMuYyBiL2RyaXZlcnMv
IAo+PiBod3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC1zeXNmcy5jCj4+IGluZGV4IGEwMWM5
ZTU0ZTJlZC4uODgxNmJjY2JhMzc0IDEwMDY0NAo+PiAtLS0gYS9kcml2ZXJzL2h3dHJhY2luZy9j
b3Jlc2lnaHQvY29yZXNpZ2h0LXN5c2ZzLmMKPj4gKysrIGIvZHJpdmVycy9od3RyYWNpbmcvY29y
ZXNpZ2h0L2NvcmVzaWdodC1zeXNmcy5jCj4+IEBAIC0xNjgsNiArMTY4LDcgQEAgaW50IGNvcmVz
aWdodF9lbmFibGVfc3lzZnMoc3RydWN0IGNvcmVzaWdodF9kZXZpY2UgCj4+ICpjc2RldikKPj4g
wqDCoMKgwqDCoCBpbnQgY3B1LCByZXQgPSAwOwo+PiDCoMKgwqDCoMKgIHN0cnVjdCBjb3Jlc2ln
aHRfZGV2aWNlICpzaW5rOwo+PiDCoMKgwqDCoMKgIHN0cnVjdCBsaXN0X2hlYWQgKnBhdGg7Cj4+
ICvCoMKgwqAgc3RydWN0IGNzX3NpbmtfZGF0YSAqc2lua19kYXRhOwo+PiDCoMKgwqDCoMKgIGVu
dW0gY29yZXNpZ2h0X2Rldl9zdWJ0eXBlX3NvdXJjZSBzdWJ0eXBlOwo+PiDCoMKgwqDCoMKgIHUz
MiBoYXNoOwo+PiBAQCAtMjA5LDcgKzIxMCwxNCBAQCBpbnQgY29yZXNpZ2h0X2VuYWJsZV9zeXNm
cyhzdHJ1Y3QgCj4+IGNvcmVzaWdodF9kZXZpY2UgKmNzZGV2KQo+PiDCoMKgwqDCoMKgwqDCoMKg
wqAgZ290byBvdXQ7Cj4+IMKgwqDCoMKgwqAgfQo+PiAtwqDCoMKgIHJldCA9IGNvcmVzaWdodF9l
bmFibGVfcGF0aChwYXRoLCBDU19NT0RFX1NZU0ZTLCBOVUxMKTsKPj4gK8KgwqDCoCBzaW5rX2Rh
dGEgPSBremFsbG9jKHNpemVvZigqc2lua19kYXRhKSwgR0ZQX0tFUk5FTCk7Cj4+ICvCoMKgwqAg
aWYgKCFzaW5rX2RhdGEpIHsKPj4gK8KgwqDCoMKgwqDCoMKgIHJldCA9IC1FTk9NRU07Cj4+ICvC
oMKgwqDCoMKgwqDCoCBnb3RvIG91dDsKPj4gK8KgwqDCoCB9Cj4+ICvCoMKgwqAgc2lua19kYXRh
LT50cmFjZWlkID0gY29yZXNpZ2h0X3JlYWRfdHJhY2VpZChwYXRoLCBDU19NT0RFX1NZU0ZTLCAK
Pj4gTlVMTCk7Cj4+ICvCoMKgwqAgc2lua19kYXRhLT5zaW5rID0gc2luazsKPj4gK8KgwqDCoCBy
ZXQgPSBjb3Jlc2lnaHRfZW5hYmxlX3BhdGgocGF0aCwgQ1NfTU9ERV9TWVNGUywgc2lua19kYXRh
KTsKPj4gwqDCoMKgwqDCoCBpZiAocmV0KQo+PiDCoMKgwqDCoMKgwqDCoMKgwqAgZ290byBlcnJf
cGF0aDsKPj4gQEAgLTI0NiwxNSArMjU0LDE3IEBAIGludCBjb3Jlc2lnaHRfZW5hYmxlX3N5c2Zz
KHN0cnVjdCAKPj4gY29yZXNpZ2h0X2RldmljZSAqY3NkZXYpCj4+IMKgwqDCoMKgwqDCoMKgwqDC
oCBicmVhazsKPj4gwqDCoMKgwqDCoCB9Cj4+ICvCoMKgwqAga2ZyZWUoc2lua19kYXRhKTsKPj4g
wqAgb3V0Ogo+PiDCoMKgwqDCoMKgIG11dGV4X3VubG9jaygmY29yZXNpZ2h0X211dGV4KTsKPj4g
wqDCoMKgwqDCoCByZXR1cm4gcmV0Owo+PiDCoCBlcnJfc291cmNlOgo+PiAtwqDCoMKgIGNvcmVz
aWdodF9kaXNhYmxlX3BhdGgocGF0aCk7Cj4+ICvCoMKgwqAgY29yZXNpZ2h0X2Rpc2FibGVfcGF0
aChwYXRoLCBzaW5rX2RhdGEpOwo+PiDCoCBlcnJfcGF0aDoKPj4gwqDCoMKgwqDCoCBjb3Jlc2ln
aHRfcmVsZWFzZV9wYXRoKHBhdGgpOwo+PiArwqDCoMKgIGtmcmVlKHNpbmtfZGF0YSk7Cj4+IMKg
wqDCoMKgwqAgZ290byBvdXQ7Cj4+IMKgIH0KPj4gwqAgRVhQT1JUX1NZTUJPTF9HUEwoY29yZXNp
Z2h0X2VuYWJsZV9zeXNmcyk7Cj4+IEBAIC0yNjMsNiArMjczLDcgQEAgdm9pZCBjb3Jlc2lnaHRf
ZGlzYWJsZV9zeXNmcyhzdHJ1Y3QgCj4+IGNvcmVzaWdodF9kZXZpY2UgKmNzZGV2KQo+PiDCoCB7
Cj4+IMKgwqDCoMKgwqAgaW50IGNwdSwgcmV0Owo+PiDCoMKgwqDCoMKgIHN0cnVjdCBsaXN0X2hl
YWQgKnBhdGggPSBOVUxMOwo+PiArwqDCoMKgIHN0cnVjdCBjc19zaW5rX2RhdGEgKnNpbmtfZGF0
YSA9IE5VTEw7Cj4+IMKgwqDCoMKgwqAgdTMyIGhhc2g7Cj4+IMKgwqDCoMKgwqAgbXV0ZXhfbG9j
aygmY29yZXNpZ2h0X211dGV4KTsKPj4gQEAgLTI3NCw2ICsyODUsMTAgQEAgdm9pZCBjb3Jlc2ln
aHRfZGlzYWJsZV9zeXNmcyhzdHJ1Y3QgCj4+IGNvcmVzaWdodF9kZXZpY2UgKmNzZGV2KQo+PiDC
oMKgwqDCoMKgIGlmICghY29yZXNpZ2h0X2Rpc2FibGVfc291cmNlX3N5c2ZzKGNzZGV2LCBOVUxM
KSkKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIGdvdG8gb3V0Owo+PiArwqDCoMKgIHNpbmtfZGF0YSA9
IGt6YWxsb2Moc2l6ZW9mKCpzaW5rX2RhdGEpLCBHRlBfS0VSTkVMKTsKPj4gK8KgwqDCoCBpZiAo
IXNpbmtfZGF0YSkKPj4gK8KgwqDCoMKgwqDCoMKgIGdvdG8gb3V0Owo+PiArCj4+IMKgwqDCoMKg
wqAgc3dpdGNoIChjc2Rldi0+c3VidHlwZS5zb3VyY2Vfc3VidHlwZSkgewo+PiDCoMKgwqDCoMKg
IGNhc2UgQ09SRVNJR0hUX0RFVl9TVUJUWVBFX1NPVVJDRV9QUk9DOgo+PiDCoMKgwqDCoMKgwqDC
oMKgwqAgY3B1ID0gc291cmNlX29wcyhjc2RldiktPmNwdV9pZChjc2Rldik7Cj4+IEBAIC0yOTcs
OCArMzEyLDExIEBAIHZvaWQgY29yZXNpZ2h0X2Rpc2FibGVfc3lzZnMoc3RydWN0IAo+PiBjb3Jl
c2lnaHRfZGV2aWNlICpjc2RldikKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIGJyZWFrOwo+PiDCoMKg
wqDCoMKgIH0KPj4gLcKgwqDCoCBjb3Jlc2lnaHRfZGlzYWJsZV9wYXRoKHBhdGgpOwo+PiArwqDC
oMKgIHNpbmtfZGF0YS0+c2luayA9IGNvcmVzaWdodF9maW5kX2FjdGl2YXRlZF9zeXNmc19zaW5r
KGNzZGV2KTsKPj4gK8KgwqDCoCBzaW5rX2RhdGEtPnRyYWNlaWQgPSBjb3Jlc2lnaHRfcmVhZF90
cmFjZWlkKHBhdGgsIENTX01PREVfU1lTRlMsIAo+PiBOVUxMKTsKPj4gK8KgwqDCoCBjb3Jlc2ln
aHRfZGlzYWJsZV9wYXRoKHBhdGgsIHNpbmtfZGF0YSk7Cj4+IMKgwqDCoMKgwqAgY29yZXNpZ2h0
X3JlbGVhc2VfcGF0aChwYXRoKTsKPj4gK8KgwqDCoCBrZnJlZShzaW5rX2RhdGEpOwo+PiDCoCBv
dXQ6Cj4+IMKgwqDCoMKgwqAgbXV0ZXhfdW5sb2NrKCZjb3Jlc2lnaHRfbXV0ZXgpOwo+PiBkaWZm
IC0tZ2l0IGEvZHJpdmVycy9od3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC10bWMtZXRmLmMg
Yi8gCj4+IGRyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtdG1jLWV0Zi5jCj4+
IGluZGV4IGQ0ZjY0MWNkOWRlNi4uN2RjNTM2ZWJhM2UyIDEwMDY0NAo+PiAtLS0gYS9kcml2ZXJz
L2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LXRtYy1ldGYuYwo+PiArKysgYi9kcml2ZXJz
L2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LXRtYy1ldGYuYwo+PiBAQCAtMjUwLDcgKzI1
MCw4IEBAIHN0YXRpYyBpbnQgdG1jX2VuYWJsZV9ldGZfc2lua19wZXJmKHN0cnVjdCAKPj4gY29y
ZXNpZ2h0X2RldmljZSAqY3NkZXYsIHZvaWQgKmRhdGEpCj4+IMKgwqDCoMKgwqAgcGlkX3QgcGlk
Owo+PiDCoMKgwqDCoMKgIHVuc2lnbmVkIGxvbmcgZmxhZ3M7Cj4+IMKgwqDCoMKgwqAgc3RydWN0
IHRtY19kcnZkYXRhICpkcnZkYXRhID0gZGV2X2dldF9kcnZkYXRhKGNzZGV2LT5kZXYucGFyZW50
KTsKPj4gLcKgwqDCoCBzdHJ1Y3QgcGVyZl9vdXRwdXRfaGFuZGxlICpoYW5kbGUgPSBkYXRhOwo+
PiArwqDCoMKgIHN0cnVjdCBjc19zaW5rX2RhdGEgKnNpbmtfZGF0YSA9IChzdHJ1Y3QgY3Nfc2lu
a19kYXRhICopZGF0YTsKPj4gK8KgwqDCoCBzdHJ1Y3QgcGVyZl9vdXRwdXRfaGFuZGxlICpoYW5k
bGUgPSBzaW5rX2RhdGEtPmhhbmRsZTsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3QgY3NfYnVmZmVycyAq
YnVmID0gZXRtX3BlcmZfc2lua19jb25maWcoaGFuZGxlKTsKPj4gwqDCoMKgwqDCoCBzcGluX2xv
Y2tfaXJxc2F2ZSgmZHJ2ZGF0YS0+c3BpbmxvY2ssIGZsYWdzKTsKPj4gZGlmZiAtLWdpdCBhL2Ry
aXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtdG1jLWV0ci5jIGIvIAo+PiBkcml2
ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LXRtYy1ldHIuYwo+PiBpbmRleCBhNDhi
Yjg1ZDBlN2YuLjkwYTQwNThjOTk1OSAxMDA2NDQKPj4gLS0tIGEvZHJpdmVycy9od3RyYWNpbmcv
Y29yZXNpZ2h0L2NvcmVzaWdodC10bWMtZXRyLmMKPj4gKysrIGIvZHJpdmVycy9od3RyYWNpbmcv
Y29yZXNpZ2h0L2NvcmVzaWdodC10bWMtZXRyLmMKPj4gQEAgLTEyNTQsNyArMTI1NCw4IEBAIHN0
YXRpYyBpbnQgdG1jX2VuYWJsZV9ldHJfc2lua19zeXNmcyhzdHJ1Y3QgCj4+IGNvcmVzaWdodF9k
ZXZpY2UgKmNzZGV2KQo+PiDCoCBzdHJ1Y3QgZXRyX2J1ZiAqdG1jX2V0cl9nZXRfYnVmZmVyKHN0
cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpjc2RldiwKPj4gwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCBlbnVtIGNzX21vZGUgbW9kZSwgdm9pZCAqZGF0YSkKPj4gwqAgewo+
PiAtwqDCoMKgIHN0cnVjdCBwZXJmX291dHB1dF9oYW5kbGUgKmhhbmRsZSA9IGRhdGE7Cj4+ICvC
oMKgwqAgc3RydWN0IGNzX3NpbmtfZGF0YSAqc2lua19kYXRhID0gKHN0cnVjdCBjc19zaW5rX2Rh
dGEgKilkYXRhOwo+PiArwqDCoMKgIHN0cnVjdCBwZXJmX291dHB1dF9oYW5kbGUgKmhhbmRsZSA9
IHNpbmtfZGF0YS0+aGFuZGxlOwo+PiDCoMKgwqDCoMKgIHN0cnVjdCBldHJfcGVyZl9idWZmZXIg
KmV0cl9wZXJmOwo+PiDCoMKgwqDCoMKgIHN3aXRjaCAobW9kZSkgewo+PiBAQCAtMTY0OCw3ICsx
NjQ5LDggQEAgc3RhdGljIGludCB0bWNfZW5hYmxlX2V0cl9zaW5rX3BlcmYoc3RydWN0IAo+PiBj
b3Jlc2lnaHRfZGV2aWNlICpjc2Rldiwgdm9pZCAqZGF0YSkKPj4gwqDCoMKgwqDCoCBwaWRfdCBw
aWQ7Cj4+IMKgwqDCoMKgwqAgdW5zaWduZWQgbG9uZyBmbGFnczsKPj4gwqDCoMKgwqDCoCBzdHJ1
Y3QgdG1jX2RydmRhdGEgKmRydmRhdGEgPSBkZXZfZ2V0X2RydmRhdGEoY3NkZXYtPmRldi5wYXJl
bnQpOwo+PiAtwqDCoMKgIHN0cnVjdCBwZXJmX291dHB1dF9oYW5kbGUgKmhhbmRsZSA9IGRhdGE7
Cj4+ICvCoMKgwqAgc3RydWN0IGNzX3NpbmtfZGF0YSAqc2lua19kYXRhID0gKHN0cnVjdCBjc19z
aW5rX2RhdGEgKilkYXRhOwo+PiArwqDCoMKgIHN0cnVjdCBwZXJmX291dHB1dF9oYW5kbGUgKmhh
bmRsZSA9IHNpbmtfZGF0YS0+aGFuZGxlOwo+PiDCoMKgwqDCoMKgIHN0cnVjdCBldHJfcGVyZl9i
dWZmZXIgKmV0cl9wZXJmID0gZXRtX3BlcmZfc2lua19jb25maWcoaGFuZGxlKTsKPj4gwqDCoMKg
wqDCoCBzcGluX2xvY2tfaXJxc2F2ZSgmZHJ2ZGF0YS0+c3BpbmxvY2ssIGZsYWdzKTsKPj4gZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtdHBkYS5jIGIv
ZHJpdmVycy8gCj4+IGh3dHJhY2luZy9jb3Jlc2lnaHQvY29yZXNpZ2h0LXRwZGEuYwo+PiBpbmRl
eCAxODlhNGFiYzI1NjEuLjA1NjIyMzMzZjJkMiAxMDA2NDQKPj4gLS0tIGEvZHJpdmVycy9od3Ry
YWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdodC10cGRhLmMKPj4gKysrIGIvZHJpdmVycy9od3RyYWNp
bmcvY29yZXNpZ2h0L2NvcmVzaWdodC10cGRhLmMKPj4gQEAgLTI0MSw5ICsyNDEsMjkgQEAgc3Rh
dGljIHZvaWQgdHBkYV9kaXNhYmxlKHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlIAo+PiAqY3NkZXYs
Cj4+IMKgwqDCoMKgwqAgZGV2X2RiZyhkcnZkYXRhLT5kZXYsICJUUERBIGlucG9ydCAlZCBkaXNh
YmxlZFxuIiwgaW4tPmRlc3RfcG9ydCk7Cj4+IMKgIH0KPj4gK3N0YXRpYyBpbnQgdHBkYV90cmFj
ZV9pZChzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAqY3NkZXYpCj4+ICt7Cj4+ICvCoMKgwqAgaW50
IHRyYWNlX2lkOwo+PiArwqDCoMKgIHN0cnVjdCB0cGRhX2RydmRhdGEgKmRydmRhdGE7Cj4+ICsK
Pj4gK8KgwqDCoCBpZiAoY3NkZXYgPT0gTlVMTCkKPj4gK8KgwqDCoMKgwqDCoMKgIHJldHVybiAt
RUlOVkFMOwo+PiArCj4+ICvCoMKgwqAgZHJ2ZGF0YSA9IGRldl9nZXRfZHJ2ZGF0YShjc2Rldi0+
ZGV2LnBhcmVudCk7Cj4+ICvCoMKgwqAgdHJhY2VfaWQgPSBkcnZkYXRhLT5hdGlkOwo+PiArwqDC
oMKgIGlmICghSVNfVkFMSURfQ1NfVFJBQ0VfSUQodHJhY2VfaWQpKSB7Cj4gCj4gU2FtZSBjb21t
ZW50IGFzIFNUTS4gVGhpcyBpcyBhbHdheXMgc2V0IHNvIG5vIG5lZCB0byB0cnkgdG8gYXNzaWdu
IAo+IGFub3RoZXIgb25lLgo+IAo+PiArwqDCoMKgwqDCoMKgwqAgdHJhY2VfaWQgPSBjb3Jlc2ln
aHRfdHJhY2VfaWRfZ2V0X3N5c3RlbV9pZCgpOwo+PiArwqDCoMKgwqDCoMKgwqAgaWYgKElTX1ZB
TElEX0NTX1RSQUNFX0lEKHRyYWNlX2lkKSkKPj4gK8KgwqDCoMKgwqDCoMKgwqDCoMKgwqAgZHJ2
ZGF0YS0+YXRpZCA9ICh1OCl0cmFjZV9pZDsKPj4gK8KgwqDCoCB9Cj4+ICsKPj4gK8KgwqDCoCBy
ZXR1cm4gdHJhY2VfaWQ7Cj4+ICt9Cj4+ICsKPj4gwqAgc3RhdGljIGNvbnN0IHN0cnVjdCBjb3Jl
c2lnaHRfb3BzX2xpbmsgdHBkYV9saW5rX29wcyA9IHsKPj4gwqDCoMKgwqDCoCAuZW5hYmxlwqDC
oMKgwqDCoMKgwqAgPSB0cGRhX2VuYWJsZSwKPj4gwqDCoMKgwqDCoCAuZGlzYWJsZcKgwqDCoCA9
IHRwZGFfZGlzYWJsZSwKPj4gK8KgwqDCoCAudHJhY2VfaWTCoMKgwqAgPSB0cGRhX3RyYWNlX2lk
LAo+PiDCoCB9Owo+PiDCoCBzdGF0aWMgY29uc3Qgc3RydWN0IGNvcmVzaWdodF9vcHMgdHBkYV9j
c19vcHMgPSB7Cj4+IGRpZmYgLS1naXQgYS9kcml2ZXJzL2h3dHJhY2luZy9jb3Jlc2lnaHQvY29y
ZXNpZ2h0LXRyYmUuYyBiL2RyaXZlcnMvIAo+PiBod3RyYWNpbmcvY29yZXNpZ2h0L2NvcmVzaWdo
dC10cmJlLmMKPj4gaW5kZXggOTE5ODA0YjEyYTY3Li42NjgwZDNjNjk5MDYgMTAwNjQ0Cj4+IC0t
LSBhL2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtdHJiZS5jCj4+ICsrKyBi
L2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC9jb3Jlc2lnaHQtdHJiZS5jCj4+IEBAIC0yMSw2
ICsyMSw3IEBACj4+IMKgICNpbmNsdWRlICJjb3Jlc2lnaHQtc2VsZi1ob3N0ZWQtdHJhY2UuaCIK
Pj4gwqAgI2luY2x1ZGUgImNvcmVzaWdodC10cmJlLmgiCj4+ICsjaW5jbHVkZSAiY29yZXNpZ2h0
LXByaXYuaCIKPj4gwqAgI2RlZmluZSBQRVJGX0lEWDJPRkYoaWR4LCBidWYpICgoaWR4KSAlICgo
YnVmKS0+bnJfcGFnZXMgPDwgCj4+IFBBR0VfU0hJRlQpKQo+PiBAQCAtMTAxMiw3ICsxMDEzLDgg
QEAgc3RhdGljIGludCBhcm1fdHJiZV9lbmFibGUoc3RydWN0IAo+PiBjb3Jlc2lnaHRfZGV2aWNl
ICpjc2RldiwgZW51bSBjc19tb2RlIG1vZGUsCj4+IMKgIHsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3Qg
dHJiZV9kcnZkYXRhICpkcnZkYXRhID0gZGV2X2dldF9kcnZkYXRhKGNzZGV2LT5kZXYucGFyZW50
KTsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3QgdHJiZV9jcHVkYXRhICpjcHVkYXRhID0gZGV2X2dldF9k
cnZkYXRhKCZjc2Rldi0+ZGV2KTsKPj4gLcKgwqDCoCBzdHJ1Y3QgcGVyZl9vdXRwdXRfaGFuZGxl
ICpoYW5kbGUgPSBkYXRhOwo+PiArwqDCoMKgIHN0cnVjdCBjc19zaW5rX2RhdGEgKnNpbmtfZGF0
YSA9IChzdHJ1Y3QgY3Nfc2lua19kYXRhICopZGF0YTsKPj4gK8KgwqDCoCBzdHJ1Y3QgcGVyZl9v
dXRwdXRfaGFuZGxlICpoYW5kbGUgPSBzaW5rX2RhdGEtPmhhbmRsZTsKPj4gwqDCoMKgwqDCoCBz
dHJ1Y3QgdHJiZV9idWYgKmJ1ZiA9IGV0bV9wZXJmX3NpbmtfY29uZmlnKGhhbmRsZSk7Cj4+IMKg
wqDCoMKgwqAgV0FSTl9PTihjcHVkYXRhLT5jcHUgIT0gc21wX3Byb2Nlc3Nvcl9pZCgpKTsKPj4g
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvaHd0cmFjaW5nL2NvcmVzaWdodC91bHRyYXNvYy1zbWIuYyBi
L2RyaXZlcnMvIAo+PiBod3RyYWNpbmcvY29yZXNpZ2h0L3VsdHJhc29jLXNtYi5jCj4+IGluZGV4
IGRjM2M5NTA0ZGQ3Yy4uOTllMGViMzNjMDFmIDEwMDY0NAo+PiAtLS0gYS9kcml2ZXJzL2h3dHJh
Y2luZy9jb3Jlc2lnaHQvdWx0cmFzb2Mtc21iLmMKPj4gKysrIGIvZHJpdmVycy9od3RyYWNpbmcv
Y29yZXNpZ2h0L3VsdHJhc29jLXNtYi5jCj4+IEBAIC0yMTYsNyArMjE2LDggQEAgc3RhdGljIHZv
aWQgc21iX2VuYWJsZV9zeXNmcyhzdHJ1Y3QgCj4+IGNvcmVzaWdodF9kZXZpY2UgKmNzZGV2KQo+
PiDCoCBzdGF0aWMgaW50IHNtYl9lbmFibGVfcGVyZihzdHJ1Y3QgY29yZXNpZ2h0X2RldmljZSAq
Y3NkZXYsIHZvaWQgKmRhdGEpCj4+IMKgIHsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3Qgc21iX2Rydl9k
YXRhICpkcnZkYXRhID0gZGV2X2dldF9kcnZkYXRhKGNzZGV2LT5kZXYucGFyZW50KTsKPj4gLcKg
wqDCoCBzdHJ1Y3QgcGVyZl9vdXRwdXRfaGFuZGxlICpoYW5kbGUgPSBkYXRhOwo+PiArwqDCoMKg
IHN0cnVjdCBjc19zaW5rX2RhdGEgKnNpbmtfZGF0YSA9IChzdHJ1Y3QgY3Nfc2lua19kYXRhICop
ZGF0YTsKPj4gK8KgwqDCoCBzdHJ1Y3QgcGVyZl9vdXRwdXRfaGFuZGxlICpoYW5kbGUgPSBzaW5r
X2RhdGEtPmhhbmRsZTsKPj4gwqDCoMKgwqDCoCBzdHJ1Y3QgY3NfYnVmZmVycyAqYnVmID0gZXRt
X3BlcmZfc2lua19jb25maWcoaGFuZGxlKTsKPj4gwqDCoMKgwqDCoCBwaWRfdCBwaWQ7Cj4+IGRp
ZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2NvcmVzaWdodC5oIGIvaW5jbHVkZS9saW51eC9jb3Jl
c2lnaHQuaAo+PiBpbmRleCAxNTdjNGJkMDA5YTEuLjE5MjlmMDA4OGMwZiAxMDA2NDQKPj4gLS0t
IGEvaW5jbHVkZS9saW51eC9jb3Jlc2lnaHQuaAo+PiArKysgYi9pbmNsdWRlL2xpbnV4L2NvcmVz
aWdodC5oCj4+IEBAIC0zNjgsNiArMzY4LDcgQEAgc3RydWN0IGNvcmVzaWdodF9vcHNfc2luayB7
Cj4+IMKgwqAgKiBPcGVyYXRpb25zIGF2YWlsYWJsZSBmb3IgbGlua3MuCj4+IMKgwqAgKiBAZW5h
YmxlOsKgwqDCoCBlbmFibGVzIGZsb3cgYmV0d2VlbiBpcG9ydCBhbmQgb3BvcnQuCj4+IMKgwqAg
KiBAZGlzYWJsZTrCoMKgwqAgZGlzYWJsZXMgZmxvdyBiZXR3ZWVuIGlwb3J0IGFuZCBvcG9ydC4K
Pj4gKyAqIEB0cmFjZV9pZDrCoMKgwqAgQ29sbGVjdCB0aGUgdHJhY2VpZC4KPj4gwqDCoCAqLwo+
PiDCoCBzdHJ1Y3QgY29yZXNpZ2h0X29wc19saW5rIHsKPj4gwqDCoMKgwqDCoCBpbnQgKCplbmFi
bGUpKHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpjc2RldiwKPj4gQEAgLTM3Niw2ICszNzcsNyBA
QCBzdHJ1Y3QgY29yZXNpZ2h0X29wc19saW5rIHsKPj4gwqDCoMKgwqDCoCB2b2lkICgqZGlzYWJs
ZSkoc3RydWN0IGNvcmVzaWdodF9kZXZpY2UgKmNzZGV2LAo+PiDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X2Nvbm5lY3Rpb24gKmluLAo+PiDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X2Nvbm5lY3Rpb24gKm91dCk7Cj4+ICvCoMKg
wqAgaW50ICgqdHJhY2VfaWQpKHN0cnVjdCBjb3Jlc2lnaHRfZGV2aWNlICpjc2Rldik7Cj4+IMKg
IH07Cj4+IMKgIC8qKgo+PiBAQCAtMzg1LDYgKzM4Nyw3IEBAIHN0cnVjdCBjb3Jlc2lnaHRfb3Bz
X2xpbmsgewo+PiDCoMKgICrCoMKgwqDCoMKgwqDCoCBpcyBhc3NvY2lhdGVkIHRvLgo+PiDCoMKg
ICogQGVuYWJsZTrCoMKgwqAgZW5hYmxlcyB0cmFjaW5nIGZvciBhIHNvdXJjZS4KPj4gwqDCoCAq
IEBkaXNhYmxlOsKgwqDCoCBkaXNhYmxlcyB0cmFjaW5nIGZvciBhIHNvdXJjZS4KPj4gKyAqIEB0
cmFjZV9pZDrCoMKgwqAgY29sbGVjdCB0aGUgdHJhY2VpZC4KPj4gwqDCoCAqLwo+PiDCoCBzdHJ1
Y3QgY29yZXNpZ2h0X29wc19zb3VyY2Ugewo+PiDCoMKgwqDCoMKgIGludCAoKmNwdV9pZCkoc3Ry
dWN0IGNvcmVzaWdodF9kZXZpY2UgKmNzZGV2KTsKPj4gQEAgLTM5Miw2ICszOTUsOSBAQCBzdHJ1
Y3QgY29yZXNpZ2h0X29wc19zb3VyY2Ugewo+PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqAgZW51bSBjc19tb2RlIG1vZGUsIHN0cnVjdCBjb3Jlc2lnaHRfdHJhY2VfaWRfbWFwIAo+PiAq
aWRfbWFwKTsKPj4gwqDCoMKgwqDCoCB2b2lkICgqZGlzYWJsZSkoc3RydWN0IGNvcmVzaWdodF9k
ZXZpY2UgKmNzZGV2LAo+PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBzdHJ1Y3QgcGVyZl9l
dmVudCAqZXZlbnQpOwo+PiArwqDCoMKgIGludCAoKnRyYWNlX2lkKShzdHJ1Y3QgY29yZXNpZ2h0
X2RldmljZSAqY3NkZXYsCj4+ICvCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGVudW0gY3NfbW9kZSBt
b2RlLAo+PiArwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBzdHJ1Y3QgY29yZXNpZ2h0X3RyYWNlX2lk
X21hcCAqaWRfbWFwKTsKPj4gwqAgfTsKPj4gwqAgLyoqCj4gCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpMaW51eC1zdG0zMiBtYWlsaW5nIGxpc3QKTGlu
dXgtc3RtMzJAc3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbQpodHRwczovL3N0LW1kLW1haWxt
YW4uc3Rvcm1yZXBseS5jb20vbWFpbG1hbi9saXN0aW5mby9saW51eC1zdG0zMgo=
