Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 65DAE9D3CDF
	for <lists+linux-stm32@lfdr.de>; Wed, 20 Nov 2024 14:57:59 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 1A48CC78028;
	Wed, 20 Nov 2024 13:57:59 +0000 (UTC)
Received: from bali.collaboradmins.com (bali.collaboradmins.com
 [148.251.105.195])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 01A78C71292
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Wed, 20 Nov 2024 13:57:51 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=collabora.com;
 s=mail; t=1732111071;
 bh=JioEN8RRj6ihvI/G0TuyhLDjOR5w9SeO0oWhpyVfsN4=;
 h=Subject:From:To:Cc:Date:In-Reply-To:References:From;
 b=mWzz4+AQWzYPfWrUc4XobsCU3dmQC+00wxfM4tkh8+/K9sAUiRUkmGu96kE4LmAav
 upt9ohgvF3+bcZ/kv5jYivgXO5WaPAKo5RJb9hvtCbsXsTRLKH4ojclmnKWbg309K+
 uqV0+TqAYKTtmYP1M3ZEPJdI6X7jrA1pkuA3y+dizUrokpp8CWjpz/R5dcLnErR6t2
 ptsD+xcvpkL2WeL5UqWEewXxNA53H+n9Qk//s9l4tnJD5TPsGls0haHJWYuTLpf7BE
 tGPiyAAh7nUnfDXfxVu7GQwklJI35iugt6p6NP4pYDSK4RYSY5mSWtMvJ2vwT211jY
 QxirMHL5TZLWg==
Received: from nicolas-tpx395.localdomain (unknown
 [IPv6:2606:6d00:15:862e::580])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits) server-digest SHA256)
 (No client certificate requested) (Authenticated sender: nicolas)
 by bali.collaboradmins.com (Postfix) with ESMTPSA id 9539917E35E3;
 Wed, 20 Nov 2024 14:57:49 +0100 (CET)
Message-ID: <00c0405112b808929f6a7b8e8375b4182c26086e.camel@collabora.com>
From: Nicolas Dufresne <nicolas.dufresne@collabora.com>
To: Link Mauve <linkmauve@linkmauve.fr>, Hugues Fruchet
 <hugues.fruchet@foss.st.com>
Date: Wed, 20 Nov 2024 08:57:48 -0500
In-Reply-To: <Zz3nK9FvSpxgVzmo@desktop>
References: <20241120110105.244413-1-hugues.fruchet@foss.st.com>
 <20241120110105.244413-2-hugues.fruchet@foss.st.com>
 <Zz3nK9FvSpxgVzmo@desktop>
Organization: Collabora
User-Agent: Evolution 3.54.1 (3.54.1-1.fc41) 
MIME-Version: 1.0
Cc: Benjamin Gaignard <benjamin.gaignard@collabora.com>,
 Sebastian Fricke <sebastian.fricke@collabora.com>,
 linux-rockchip@lists.infradead.org,
 Daniel Almeida <daniel.almeida@collabora.com>, linux-kernel@vger.kernel.org,
 Andrzej Pietrasiewicz <andrzej.p@collabora.com>,
 Fritz Koenig <frkoenig@chromium.org>,
 Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>,
 Philipp Zabel <p.zabel@pengutronix.de>,
 Hans Verkuil <hverkuil-cisco@xs4all.nl>,
 Mauro Carvalho Chehab <mchehab@kernel.org>,
 linux-stm32@st-md-mailman.stormreply.com, linux-media@vger.kernel.org
Subject: Re: [Linux-stm32] [PATCH v2 1/3] media: uapi: add WebP uAPI
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

SGksCgpMZSBtZXJjcmVkaSAyMCBub3ZlbWJyZSAyMDI0IMOgIDE0OjQyICswMTAwLCBMaW5rIE1h
dXZlIGEgw6ljcml0wqA6Cj4gSGksCj4gCj4gT24gV2VkLCBOb3YgMjAsIDIwMjQgYXQgMTI6MDE6
MDNQTSArMDEwMCwgSHVndWVzIEZydWNoZXQgd3JvdGU6Cj4gPiBUaGlzIHBhdGNoIGFkZHMgdGhl
IFdlYlAgcGljdHVyZSBkZWNvZGluZyBrZXJuZWwgdUFQSS4KPiA+IAo+ID4gVGhpcyBkZXNpZ24g
aXMgYmFzZWQgb24gY3VycmVudGx5IGF2YWlsYWJsZSBWUDggQVBJIGltcGxlbWVudGF0aW9uIGFu
ZAo+ID4gYWltcyB0byBzdXBwb3J0IHRoZSBkZXZlbG9wbWVudCBvZiBXZWJQIHN0YXRlbGVzcyB2
aWRlbyBjb2RlY3MKPiA+IG9uIExpbnV4Lgo+IAo+IFdoeSBkbyB5b3UgbmVlZCB0aGlzIG5ldyB1
QVBJIGV4YWN0bHk/ICBUaGUgV2ViUCBmb3JtYXQgaXMgbW9yZSBjb21wbGV4Cj4gdGhhbiB0aGUg
c2ltcGxlICdWUDggJyBmb3JtYXQsIHRoZSAnVlA4WCcgZm91cmNjIGZvciBpbnN0YW5jZSBpcyBh
bgo+IGFuaW1hdGVkIGZvcm1hdCB3aGljaCBtYXkgY29udGFpbiBtdWx0aXBsZSBWUDgga2V5ZnJh
bWVzLCBvciBhbiBhbHBoYQo+IHNpZGUgY2hhbm5lbCwgYW5kIGp1c3QgbGlrZSBhbnkgb3RoZXIg
dmlkZW8gY29udGFpbmVyIHdlIHF1ZXVlIGVhY2gKPiBWUDggZnJhbWUgc2VwYXJhdGVseSBpbiBW
NEwyIGZvciBkZWNvZGluZywgbm90IHRoZSB3aG9sZSBmaWxlLgoKVGhpcyBpcyBhIHYyLCB5b3Ug
c2hvdWxkIGhhdmUgcmVhZCB2MSB0aHJlYWQgYmVmb3JlIGNvbW1lbnRpbmcgdGhpcyBpbiBteQpv
cGluaW9uLiBMZXQgbWUgcmVzdW1lIGl0OiBXaGlsZSBhIFZQOCBIVyBkZWNvZGVyIGlzIGNvbXBh
dGlibGUgd2l0aCBXZWJQIChsb3NzeQpvbmx5KSwgYSBXZWJQIChsb3NzeSkgZGVjb2RlcnMgYXJl
IG5vdCBhbHdheXMgY29tcGF0aWJsZSB3aXQgVlA4LiBUaGUgcmVhc29uIGlzCnRoYXQgc29tZSBk
ZXNpZ24gbWF5IHNhY3JpZmljZSBzdXBwb3J0IGZvciByZWZlcmVuY2VzIGluIG9yZGVyIHRvIGFs
bG93IGxhcmdlcgpyZXNvbHV0aW9ucy4KClRoaXMgaXMgcHJvdmVuIGJ5IEhhbnRybyBpbXBsZW1l
bnRhdGlvbiwgd2hpY2ggaXMgdGhlIG1haW4gaW1wbGVtZW50YXRpb24gb3V0CnRoZXJlIHNpbmNl
IGJhY2sgd2hlbiBHb29nbGUgb3duZWQgaXQgdGhpcyBoYXJkd2FyZSBkZXNpZ24gd2FzIGdpdmVu
IGF3YXkgZm9yCmZyZWUgdG8gYW55b25lIHdhbnRpbmcgdG8gc3VwcG9ydCBWUDggaW4gSFcuCgo+
IAo+IEluIE9uaXhbMV0gSSBwYXJzZSB0aGUgV2ViUCBoZWFkZXIgYW5kIHBhc3MgdGhlIHJhdyBW
UDggZnJhbWUgdG8gVjRMMgo+IHdpdGhvdXQgdGhlIFJJRkYgYXJvdW5kIGl0Lgo+IAo+IFNvIEni
gJlkIHJhdGhlciBOQUNLIHRoaXMgcGF0Y2gsIEkgZG9u4oCZdCB0aGluayBpdOKAmXMgYSBnb29k
IGlkZWEgdG8KPiBoYXJkY29kZSB0aGUgc2ltcGxlc3QgdmVyc2lvbiBvZiB0aGUgV2ViUCBjb250
YWluZXIgaW4gdGhlIHVBUEksIHRvIHRoZQo+IGRldHJpbWVudCBvZiBhbGwgb3RoZXIgcG9zc2li
bGUgV2ViUCBmaWxlcy4KCkkgZG9uJ3QgZXhwZWN0IHRoZSBSSUZGIHRvIGJlIHBhc3NlZCB0byB0
aGUgc3RhdGVsZXNzIGRlY29kZXIsIHRoaXMgaXMgYQpzdGF0ZWxlc3MgaW50ZXJmYWNlIHRoYXQg
aXMgcHJvcG9zZWQgaGVyZS4gVGhvdWdoLCB5b3UgbmVlZCB0aGUgUklGRiB0byBkZXRlcm1pbgpp
ZiB0aGUgc3RyZWFtIGlzIExvc3N5IFdlYlAgKGtleWZyYW1lIG9ubHkpLCBzbyBpZiBzb21lb25l
IGNvbWVzIHVwIHdpdGggYQpzdGF0ZWZ1bCBIVyBkZXNpZ24sIGl0IHdpbGwgZmFjZSB0aGUgc2Ft
ZSBjaGFsbGVuZ2UuIEFzIHNhaWQsIHdoYXQgeW91IGRvIGluCk9uaXggaXMgdmFsaWQsIGJ1dCBs
aW1pdGluZy4gCgpMZXQncyBmaXJzdCBoYXZlIGEgbG9vayBhdCB0aGUgY29kZSBiZWZvcmUgdGFr
aW5nIG91dCBiaWcgZ3VucywgYWxzbyBtYWtlIHN1cmUKeW91IGhhdmUgdGhlIGZ1bGwgY29udGV4
dCBiZWZvcmUgcHJvcG9zaW5nIHRvIG5hY2sgc29tZXRoaW5nLgoKcmVnYXJkcywKTmljb2xhcwoK
PiAKPiBbMV0gZ2l0IGNsb25lIGh0dHBzOi8vZ2l0LmxpbmttYXV2ZS5mci9vbml4LmdpdC8KPiAK
PiA+IAo+ID4gU2lnbmVkLW9mZi1ieTogSHVndWVzIEZydWNoZXQgPGh1Z3Vlcy5mcnVjaGV0QGZv
c3Muc3QuY29tPgo+ID4gLS0tCj4gPiAgRG9jdW1lbnRhdGlvbi91c2Vyc3BhY2UtYXBpL21lZGlh
L3Y0bC9iaWJsaW8ucnN0ICB8ICA5ICsrKysrKysrKwo+ID4gIC4uLi91c2Vyc3BhY2UtYXBpL21l
ZGlhL3Y0bC9waXhmbXQtY29tcHJlc3NlZC5yc3QgfCAxNSArKysrKysrKysrKysrKysKPiA+ICBk
cml2ZXJzL21lZGlhL3Y0bDItY29yZS92NGwyLWlvY3RsLmMgICAgICAgICAgICAgIHwgIDEgKwo+
ID4gIGluY2x1ZGUvdWFwaS9saW51eC92aWRlb2RldjIuaCAgICAgICAgICAgICAgICAgICAgfCAg
MSArCj4gPiAgNCBmaWxlcyBjaGFuZ2VkLCAyNiBpbnNlcnRpb25zKCspCj4gPiAKPiA+IGRpZmYg
LS1naXQgYS9Eb2N1bWVudGF0aW9uL3VzZXJzcGFjZS1hcGkvbWVkaWEvdjRsL2JpYmxpby5yc3Qg
Yi9Eb2N1bWVudGF0aW9uL3VzZXJzcGFjZS1hcGkvbWVkaWEvdjRsL2JpYmxpby5yc3QKPiA+IGlu
ZGV4IDM1Njc0ZWVhZTIwZC4uZGYzZTk2M2ZjNTRmIDEwMDY0NAo+ID4gLS0tIGEvRG9jdW1lbnRh
dGlvbi91c2Vyc3BhY2UtYXBpL21lZGlhL3Y0bC9iaWJsaW8ucnN0Cj4gPiArKysgYi9Eb2N1bWVu
dGF0aW9uL3VzZXJzcGFjZS1hcGkvbWVkaWEvdjRsL2JpYmxpby5yc3QKPiA+IEBAIC00NDcsMyAr
NDQ3LDEyIEBAIEFWMQo+ID4gIDp0aXRsZTogICAgIEFWMSBCaXRzdHJlYW0gJiBEZWNvZGluZyBQ
cm9jZXNzIFNwZWNpZmljYXRpb24KPiA+ICAKPiA+ICA6YXV0aG9yOiAgICBQZXRlciBkZSBSaXZh
eiwgQXJnb24gRGVzaWduIEx0ZCwgSmFjayBIYXVnaHRvbiwgQXJnb24gRGVzaWduIEx0ZAo+ID4g
Kwo+ID4gKy4uIF93ZWJwOgo+ID4gKwo+ID4gK1dFQlAKPiA+ICs9PT09Cj4gPiArCj4gPiArOnRp
dGxlOiAgICAgV0VCUCBwaWN0dXJlIEJpdHN0cmVhbSAmIERlY29kaW5nIFByb2Nlc3MgU3BlY2lm
aWNhdGlvbgo+ID4gKwo+ID4gKzphdXRob3I6ICAgIEdvb2dsZSAoaHR0cHM6Ly9kZXZlbG9wZXJz
Lmdvb2dsZS5jb20vc3BlZWQvd2VicCkKPiA+IGRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL3Vz
ZXJzcGFjZS1hcGkvbWVkaWEvdjRsL3BpeGZtdC1jb21wcmVzc2VkLnJzdCBiL0RvY3VtZW50YXRp
b24vdXNlcnNwYWNlLWFwaS9tZWRpYS92NGwvcGl4Zm10LWNvbXByZXNzZWQucnN0Cj4gPiBpbmRl
eCA4MDZlZDczYWM0NzQuLmU2NjRlNzBiMDYxOSAxMDA2NDQKPiA+IC0tLSBhL0RvY3VtZW50YXRp
b24vdXNlcnNwYWNlLWFwaS9tZWRpYS92NGwvcGl4Zm10LWNvbXByZXNzZWQucnN0Cj4gPiArKysg
Yi9Eb2N1bWVudGF0aW9uL3VzZXJzcGFjZS1hcGkvbWVkaWEvdjRsL3BpeGZtdC1jb21wcmVzc2Vk
LnJzdAo+ID4gQEAgLTE2OSw2ICsxNjksMjEgQEAgQ29tcHJlc3NlZCBGb3JtYXRzCj4gPiAgCXRo
aXMgcGl4ZWwgZm9ybWF0LiBUaGUgb3V0cHV0IGJ1ZmZlciBtdXN0IGNvbnRhaW4gdGhlIGFwcHJv
cHJpYXRlIG51bWJlcgo+ID4gIAlvZiBtYWNyb2Jsb2NrcyB0byBkZWNvZGUgYSBmdWxsIGNvcnJl
c3BvbmRpbmcgZnJhbWUgdG8gdGhlIG1hdGNoaW5nCj4gPiAgCWNhcHR1cmUgYnVmZmVyLgo+ID4g
KyAgICAqIC4uIF9WNEwyLVBJWC1GTVQtV0VCUC1GUkFNRToKPiA+ICsKPiA+ICsgICAgICAtIGBg
VjRMMl9QSVhfRk1UX1dFQlBfRlJBTUVgYAo+ID4gKyAgICAgIC0gJ1dFQlAnCj4gPiArICAgICAg
LSBXRUJQIFZQOCBwYXJzZWQgZnJhbWUsIGV4Y2x1ZGluZyBXRUJQIFJJRkYgaGVhZGVyLCBrZWVw
aW5nIG9ubHkgdGhlIFZQOAo+ID4gKwliaXN0cmVhbSBpbmNsdWRpbmcgdGhlIGZyYW1lIGhlYWRl
ciwgYXMgZXh0cmFjdGVkIGZyb20gdGhlIGNvbnRhaW5lci4KPiA+ICsJVGhpcyBmb3JtYXQgaXMg
YWRhcHRlZCBmb3Igc3RhdGVsZXNzIHZpZGVvIGRlY29kZXJzIHRoYXQgaW1wbGVtZW50IGEKPiA+
ICsJV0VCUCBwaXBlbGluZSB3aXRoIHRoZSA6cmVmOmBzdGF0ZWxlc3NfZGVjb2RlcmAuCj4gPiAr
CU1ldGFkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgZnJhbWUgdG8gZGVjb2RlIGlzIHJlcXVpcmVk
IHRvIGJlIHBhc3NlZAo+ID4gKwl0aHJvdWdoIHRoZSBgYFY0TDJfQ0lEX1NUQVRFTEVTU19WUDhf
RlJBTUVgYCBjb250cm9sLgo+ID4gKwlTZWUgdGhlIDpyZWY6YGFzc29jaWF0ZWQgQ29kZWMgQ29u
dHJvbCBJRHMgPHY0bDItY29kZWMtc3RhdGVsZXNzLXZwOD5gLgo+ID4gKwlFeGFjdGx5IG9uZSBv
dXRwdXQgYW5kIG9uZSBjYXB0dXJlIGJ1ZmZlciBtdXN0IGJlIHByb3ZpZGVkIGZvciB1c2Ugd2l0
aAo+ID4gKwl0aGlzIHBpeGVsIGZvcm1hdC4gVGhlIG91dHB1dCBidWZmZXIgbXVzdCBjb250YWlu
IHRoZSBhcHByb3ByaWF0ZSBudW1iZXIKPiA+ICsJb2YgbWFjcm9ibG9ja3MgdG8gZGVjb2RlIGEg
ZnVsbCBjb3JyZXNwb25kaW5nIGZyYW1lIHRvIHRoZSBtYXRjaGluZwo+ID4gKwljYXB0dXJlIGJ1
ZmZlci4KPiA+ICAKPiA+ICAgICAgKiAuLiBfVjRMMi1QSVgtRk1ULVZQOToKPiA+ICAKPiA+IGRp
ZmYgLS1naXQgYS9kcml2ZXJzL21lZGlhL3Y0bDItY29yZS92NGwyLWlvY3RsLmMgYi9kcml2ZXJz
L21lZGlhL3Y0bDItY29yZS92NGwyLWlvY3RsLmMKPiA+IGluZGV4IDAzMDRkYWE4NDcxZC4uZTJm
ZjAzZDBkNzczIDEwMDY0NAo+ID4gLS0tIGEvZHJpdmVycy9tZWRpYS92NGwyLWNvcmUvdjRsMi1p
b2N0bC5jCj4gPiArKysgYi9kcml2ZXJzL21lZGlhL3Y0bDItY29yZS92NGwyLWlvY3RsLmMKPiA+
IEBAIC0xNTAxLDYgKzE1MDEsNyBAQCBzdGF0aWMgdm9pZCB2NGxfZmlsbF9mbXRkZXNjKHN0cnVj
dCB2NGwyX2ZtdGRlc2MgKmZtdCkKPiA+ICAJCWNhc2UgVjRMMl9QSVhfRk1UX1ZDMV9BTk5FWF9M
OglkZXNjciA9ICJWQy0xIChTTVBURSA0MTJNIEFubmV4IEwpIjsgYnJlYWs7Cj4gPiAgCQljYXNl
IFY0TDJfUElYX0ZNVF9WUDg6CQlkZXNjciA9ICJWUDgiOyBicmVhazsKPiA+ICAJCWNhc2UgVjRM
Ml9QSVhfRk1UX1ZQOF9GUkFNRTogICAgZGVzY3IgPSAiVlA4IEZyYW1lIjsgYnJlYWs7Cj4gPiAr
CQljYXNlIFY0TDJfUElYX0ZNVF9XRUJQX0ZSQU1FOiAgICBkZXNjciA9ICJXRUJQIFZQOCBGcmFt
ZSI7IGJyZWFrOwo+ID4gIAkJY2FzZSBWNEwyX1BJWF9GTVRfVlA5OgkJZGVzY3IgPSAiVlA5Ijsg
YnJlYWs7Cj4gPiAgCQljYXNlIFY0TDJfUElYX0ZNVF9WUDlfRlJBTUU6ICAgIGRlc2NyID0gIlZQ
OSBGcmFtZSI7IGJyZWFrOwo+ID4gIAkJY2FzZSBWNEwyX1BJWF9GTVRfSEVWQzoJCWRlc2NyID0g
IkhFVkMiOyBicmVhazsgLyogYWthIEguMjY1ICovCj4gPiBkaWZmIC0tZ2l0IGEvaW5jbHVkZS91
YXBpL2xpbnV4L3ZpZGVvZGV2Mi5oIGIvaW5jbHVkZS91YXBpL2xpbnV4L3ZpZGVvZGV2Mi5oCj4g
PiBpbmRleCBlN2M0ZGNlMzkwMDcuLjA5ZmZmMjY5ZTg1MiAxMDA2NDQKPiA+IC0tLSBhL2luY2x1
ZGUvdWFwaS9saW51eC92aWRlb2RldjIuaAo+ID4gKysrIGIvaW5jbHVkZS91YXBpL2xpbnV4L3Zp
ZGVvZGV2Mi5oCj4gPiBAQCAtNzU3LDYgKzc1Nyw3IEBAIHN0cnVjdCB2NGwyX3BpeF9mb3JtYXQg
ewo+ID4gICNkZWZpbmUgVjRMMl9QSVhfRk1UX1ZDMV9BTk5FWF9MIHY0bDJfZm91cmNjKCdWJywg
J0MnLCAnMScsICdMJykgLyogU01QVEUgNDIxTSBBbm5leCBMIGNvbXBsaWFudCBzdHJlYW0gKi8K
PiA+ICAjZGVmaW5lIFY0TDJfUElYX0ZNVF9WUDggICAgICB2NGwyX2ZvdXJjYygnVicsICdQJywg
JzgnLCAnMCcpIC8qIFZQOCAqLwo+ID4gICNkZWZpbmUgVjRMMl9QSVhfRk1UX1ZQOF9GUkFNRSB2
NGwyX2ZvdXJjYygnVicsICdQJywgJzgnLCAnRicpIC8qIFZQOCBwYXJzZWQgZnJhbWUgKi8KPiA+
ICsjZGVmaW5lIFY0TDJfUElYX0ZNVF9XRUJQX0ZSQU1FIHY0bDJfZm91cmNjKCdXJywgJ0InLCAn
UCcsICdGJykgLyogV0VCUCBWUDggcGFyc2VkIGZyYW1lICovCj4gPiAgI2RlZmluZSBWNEwyX1BJ
WF9GTVRfVlA5ICAgICAgdjRsMl9mb3VyY2MoJ1YnLCAnUCcsICc5JywgJzAnKSAvKiBWUDkgKi8K
PiA+ICAjZGVmaW5lIFY0TDJfUElYX0ZNVF9WUDlfRlJBTUUgdjRsMl9mb3VyY2MoJ1YnLCAnUCcs
ICc5JywgJ0YnKSAvKiBWUDkgcGFyc2VkIGZyYW1lICovCj4gPiAgI2RlZmluZSBWNEwyX1BJWF9G
TVRfSEVWQyAgICAgdjRsMl9mb3VyY2MoJ0gnLCAnRScsICdWJywgJ0MnKSAvKiBIRVZDIGFrYSBI
LjI2NSAqLwo+ID4gLS0gCj4gPiAyLjI1LjEKPiA+IAo+ID4gCj4gPiBfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwo+ID4gTGludXgtcm9ja2NoaXAgbWFpbGlu
ZyBsaXN0Cj4gPiBMaW51eC1yb2NrY2hpcEBsaXN0cy5pbmZyYWRlYWQub3JnCj4gPiBodHRwOi8v
bGlzdHMuaW5mcmFkZWFkLm9yZy9tYWlsbWFuL2xpc3RpbmZvL2xpbnV4LXJvY2tjaGlwCj4gCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpMaW51eC1zdG0z
MiBtYWlsaW5nIGxpc3QKTGludXgtc3RtMzJAc3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbQpo
dHRwczovL3N0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20vbWFpbG1hbi9saXN0aW5mby9saW51
eC1zdG0zMgo=
