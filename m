Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id B8FB1AC37E1
	for <lists+linux-stm32@lfdr.de>; Mon, 26 May 2025 04:10:10 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id EBD2BC78F6F;
	Mon, 26 May 2025 02:10:06 +0000 (UTC)
Received: from out-188.mta0.migadu.com (out-188.mta0.migadu.com
 [91.218.175.188])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 92DE0C01E99
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Mon, 26 May 2025 02:10:05 +0000 (UTC)
Message-ID: <e0552940-9fbe-4375-a9a9-e26cd425591a@linux.dev>
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linux.dev; s=key1;
 t=1748225404;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=BfaAdI9zTMYbkWR9hpAtSFrILp9opsBXSmOMXnFJNzA=;
 b=FYEmr/E+GLbI9k1DJULJpVLB+Vkmmpn2kp2zpWL1xiEx/Zee+na0++FAge+A7Sqjn5E3b8
 xRd8x1rwcJuz7bbrZ42XKFEOpgoIT0c2RKhftzUIltvk57uLHsZrox6zt70c6sx49nlVl8
 s4hM5DkxEXnAewg+j0E/pOjofmFWSXw=
Date: Mon, 26 May 2025 10:09:57 +0800
MIME-Version: 1.0
To: Nikunj Kela <nikunj.kela@sima.ai>, andrew+netdev@lunn.ch,
 davem@davemloft.net, edumazet@google.com, kuba@kernel.org,
 pabeni@redhat.com, mcoquelin.stm32@gmail.com, alexandre.torgue@foss.st.com
References: <20250523221938.2980773-1-nikunj.kela@sima.ai>
Content-Language: en-US
X-Report-Abuse: Please report any abuse attempt to abuse@migadu.com and
 include these headers.
From: Yanteng Si <si.yanteng@linux.dev>
In-Reply-To: <20250523221938.2980773-1-nikunj.kela@sima.ai>
X-Migadu-Flow: FLOW_OUT
Cc: netdev@vger.kernel.org, linux-kernel@vger.kernel.org, 0x1207@gmail.com,
 rmk+kernel@armlinux.org.uk, linux-stm32@st-md-mailman.stormreply.com,
 linux-arm-kernel@lists.infradead.org
Subject: Re: [Linux-stm32] [PATCH] net: stmmac: set multicast filter to zero
 if feature is unsupported
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

5ZyoIDUvMjQvMjUgNjoxOSBBTSwgTmlrdW5qIEtlbGEg5YaZ6YGTOgo+IEhhc2ggYmFzZWQgbXVs
dGljYXN0IGZpbHRlcmluZyBpcyBhbiBvcHRpb25hbCBmZWF0dXJlLiBDdXJyZW50bHksCj4gZHJp
dmVyIG92ZXJyaWRlcyB0aGUgdmFsdWUgb2YgbXVsdGljYXN0X2ZpbHRlcl9iaW5zIGJhc2VkIG9u
IHRoZSBoYXNoCj4gdGFibGUgc2l6ZS4gSWYgdGhlIGZlYXR1cmUgaXMgbm90IHN1cHBvcnRlZCwg
aGFzaCB0YWJsZSBzaXplIHJlYWRzIDAKPiBob3dldmVyIHRoZSB2YWx1ZSBvZiBtdWx0aWNhc3Rf
ZmlsdGVyX2JpbnMgcmVtYWlucyBzZXQgdG8gZGVmYXVsdAo+IEhBU0hfVEFCTEVfU0laRSB3aGlj
aCBpcyBpbmNvcnJlY3QuIExldCdzIG92ZXJyaWRlIGl0IHRvIDAgaWYgdGhlCj4gZmVhdHVyZSBp
cyB1bnN1cHBvcnRlZC4KPiAKPiBTaWduZWQtb2ZmLWJ5OiBOaWt1bmogS2VsYSA8bmlrdW5qLmtl
bGFAc2ltYS5haT4KPiAtLS0KPiAgIGRyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFj
L3N0bW1hY19tYWluLmMgfCAzICsrKwo+ICAgMSBmaWxlIGNoYW5nZWQsIDMgaW5zZXJ0aW9ucygr
KQo+IAo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9z
dG1tYWNfbWFpbi5jIGIvZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFj
X21haW4uYwo+IGluZGV4IDA4NWMwOTAzOWFmNC4uY2NlYTlmODExYTA1IDEwMDY0NAo+IC0tLSBh
L2RyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL3N0bW1hY19tYWluLmMKPiArKysg
Yi9kcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9zdG1tYWNfbWFpbi5jCj4gQEAg
LTcyNDEsNiArNzI0MSw5IEBAIHN0YXRpYyBpbnQgc3RtbWFjX2h3X2luaXQoc3RydWN0IHN0bW1h
Y19wcml2ICpwcml2KQo+ICAgCQkJCQkoQklUKHByaXYtPmRtYV9jYXAuaGFzaF90Yl9zeikgPDwg
NSk7Cj4gICAJCQlwcml2LT5ody0+bWNhc3RfYml0c19sb2cyID0KPiAgIAkJCQkJaWxvZzIocHJp
di0+aHctPm11bHRpY2FzdF9maWx0ZXJfYmlucyk7Cj4gKwkJfSBlbHNlIHsKPiArCQkJcHJpdi0+
aHctPm11bHRpY2FzdF9maWx0ZXJfYmlucyA9IDA7Cj4gKwkJCXByaXYtPmh3LT5tY2FzdF9iaXRz
X2xvZzIgPSAwOwo+ICAgCQl9CgpJIGRpZG4ndCByZWFkIHRoZSBjb2RlIGNhcmVmdWxseSwganVz
dCBkaWQgYSBzaW1wbGUgc2VhcmNo77yaCgrina8gZ3JlcCAtcm4gbXVsdGljYXN0X2ZpbHRlcl9i
aW5zIGRyaXZlcnMvbmV0Lwpkcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9jb21t
b24uaDo2MTE6CXVuc2lnbmVkIGludCAKbXVsdGljYXN0X2ZpbHRlcl9iaW5zOwpkcml2ZXJzL25l
dC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9kd21hYy1zb3BoZ28uYzoyNjogCnBsYXRfZGF0LT5t
dWx0aWNhc3RfZmlsdGVyX2JpbnMgPSAwOwoqKioKZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNy
by9zdG1tYWMvc3RtbWFjX3BsYXRmb3JtLmM6NTEyOiAKcGxhdC0+bXVsdGljYXN0X2ZpbHRlcl9i
aW5zID0gSEFTSF9UQUJMRV9TSVpFOwoqKioKZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9z
dG1tYWMvc3RtbWFjX3BsYXRmb3JtLmM6NTM2OgkJCQkgCiZwbGF0LT5tdWx0aWNhc3RfZmlsdGVy
X2JpbnMpOwpkcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9zdG1tYWNfcGxhdGZv
cm0uYzo1NDE6CSAKcGxhdC0+bXVsdGljYXN0X2ZpbHRlcl9iaW5zID0gZHdtYWMxMDAwX3ZhbGlk
YXRlX21jYXN0X2JpbnMoCmRyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL3N0bW1h
Y19wbGF0Zm9ybS5jOjU0MjoJCQkgCiZwZGV2LT5kZXYsIHBsYXQtPm11bHRpY2FzdF9maWx0ZXJf
Ymlucyk7CmRyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL2R3bWFjMTAwMF9jb3Jl
LmM6NTIzOiAKbWFjLT5tdWx0aWNhc3RfZmlsdGVyX2JpbnMgPSBwcml2LT5wbGF0LT5tdWx0aWNh
c3RfZmlsdGVyX2JpbnM7CmRyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL2R3bWFj
MTAwMF9jb3JlLmM6NTI3OglpZiAKKG1hYy0+bXVsdGljYXN0X2ZpbHRlcl9iaW5zKQpkcml2ZXJz
L25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9kd21hYzEwMDBfY29yZS5jOjUyODoJIAptYWMt
Pm1jYXN0X2JpdHNfbG9nMiA9IGlsb2cyKG1hYy0+bXVsdGljYXN0X2ZpbHRlcl9iaW5zKTsKZHJp
dmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvZHd4Z21hYzJfY29yZS5jOjUxNjoJCSAK
KG5ldGRldl9tY19jb3VudChkZXYpID4gaHctPm11bHRpY2FzdF9maWx0ZXJfYmlucykpIHsKZHJp
dmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvZHd4Z21hYzJfY29yZS5jOjE1Mjc6IApt
YWMtPm11bHRpY2FzdF9maWx0ZXJfYmlucyA9IHByaXYtPnBsYXQtPm11bHRpY2FzdF9maWx0ZXJf
YmluczsKZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvZHd4Z21hYzJfY29yZS5j
OjE1MzE6CWlmIAoobWFjLT5tdWx0aWNhc3RfZmlsdGVyX2JpbnMpCmRyaXZlcnMvbmV0L2V0aGVy
bmV0L3N0bWljcm8vc3RtbWFjL2R3eGdtYWMyX2NvcmUuYzoxNTMyOgkgCm1hYy0+bWNhc3RfYml0
c19sb2cyID0gaWxvZzIobWFjLT5tdWx0aWNhc3RfZmlsdGVyX2JpbnMpOwpkcml2ZXJzL25ldC9l
dGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9kd3hnbWFjMl9jb3JlLmM6MTU2ODogCm1hYy0+bXVsdGlj
YXN0X2ZpbHRlcl9iaW5zID0gcHJpdi0+cGxhdC0+bXVsdGljYXN0X2ZpbHRlcl9iaW5zOwpkcml2
ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9kd3hnbWFjMl9jb3JlLmM6MTU3MjoJaWYg
CihtYWMtPm11bHRpY2FzdF9maWx0ZXJfYmlucykKZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNy
by9zdG1tYWMvZHd4Z21hYzJfY29yZS5jOjE1NzM6CSAKbWFjLT5tY2FzdF9iaXRzX2xvZzIgPSBp
bG9nMihtYWMtPm11bHRpY2FzdF9maWx0ZXJfYmlucyk7CmRyaXZlcnMvbmV0L2V0aGVybmV0L3N0
bWljcm8vc3RtbWFjL3N0bW1hY19zZWxmdGVzdHMuYzo1NDM6CWlmIAoobmV0ZGV2X21jX2NvdW50
KHByaXYtPmRldikgPj0gcHJpdi0+aHctPm11bHRpY2FzdF9maWx0ZXJfYmlucykKZHJpdmVycy9u
ZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFjX3NlbGZ0ZXN0cy5jOjYzMzoJaWYgCihu
ZXRkZXZfbWNfY291bnQocHJpdi0+ZGV2KSA+PSBwcml2LT5ody0+bXVsdGljYXN0X2ZpbHRlcl9i
aW5zKQpkcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9zdG1tYWNfc2VsZnRlc3Rz
LmM6Njc5OglpZiAKKG5ldGRldl9tY19jb3VudChwcml2LT5kZXYpID49IHByaXYtPmh3LT5tdWx0
aWNhc3RfZmlsdGVyX2JpbnMpCmRyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL3N0
bW1hY19wY2kuYzozMTogCnBsYXQtPm11bHRpY2FzdF9maWx0ZXJfYmlucyA9IEhBU0hfVEFCTEVf
U0laRTsKZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvc3RtbWFjX3BjaS5jOjg0
OiAKcGxhdC0+bXVsdGljYXN0X2ZpbHRlcl9iaW5zID0gSEFTSF9UQUJMRV9TSVpFOwpkcml2ZXJz
L25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9kd21hYy1sb29uZ3Nvbi5jOjk4OiAKcGxhdC0+
bXVsdGljYXN0X2ZpbHRlcl9iaW5zID0gMjU2Owpkcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3Jv
L3N0bW1hYy9kd21hYy1sb29uZ3Nvbi5jOjM2NTogCm1hYy0+bXVsdGljYXN0X2ZpbHRlcl9iaW5z
ID0gcHJpdi0+cGxhdC0+bXVsdGljYXN0X2ZpbHRlcl9iaW5zOwpkcml2ZXJzL25ldC9ldGhlcm5l
dC9zdG1pY3JvL3N0bW1hYy9kd21hYy1sb29uZ3Nvbi5jOjM2OToJaWYgCihtYWMtPm11bHRpY2Fz
dF9maWx0ZXJfYmlucykKZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvZHdtYWMt
bG9vbmdzb24uYzozNzA6CSAKbWFjLT5tY2FzdF9iaXRzX2xvZzIgPSBpbG9nMihtYWMtPm11bHRp
Y2FzdF9maWx0ZXJfYmlucyk7CmRyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL3N0
bW1hY19tYWluLmM6NzI0MDoJCSAKcHJpdi0+aHctPm11bHRpY2FzdF9maWx0ZXJfYmlucyA9CmRy
aXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL3N0bW1hY19tYWluLmM6NzI0MzoJCQkJ
IAppbG9nMihwcml2LT5ody0+bXVsdGljYXN0X2ZpbHRlcl9iaW5zKTsKZHJpdmVycy9uZXQvZXRo
ZXJuZXQvc3RtaWNyby9zdG1tYWMvZHdtYWMtaW50ZWwuYzo1NzA6IApwbGF0LT5tdWx0aWNhc3Rf
ZmlsdGVyX2JpbnMgPSBIQVNIX1RBQkxFX1NJWkU7CmRyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWlj
cm8vc3RtbWFjL2R3bWFjLWludGVsLmM6NzA3OiAKcGxhdC0+bXVsdGljYXN0X2ZpbHRlcl9iaW5z
ID0gSEFTSF9UQUJMRV9TSVpFOwpkcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9k
d21hYy1pcHE4MDZ4LmM6NDc5OiAKcGxhdF9kYXQtPm11bHRpY2FzdF9maWx0ZXJfYmlucyA9IDA7
CmRyaXZlcnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL2R3bWFjNF9jb3JlLmM6NDU2Oglp
bnQgbnVtaGFzaHJlZ3MgPSAKKGh3LT5tdWx0aWNhc3RfZmlsdGVyX2JpbnMgPj4gNSk7CmRyaXZl
cnMvbmV0L2V0aGVybmV0L3N0bWljcm8vc3RtbWFjL2R3bWFjNF9jb3JlLmM6NDg1OgkJIAoobmV0
ZGV2X21jX2NvdW50KGRldikgPiBody0+bXVsdGljYXN0X2ZpbHRlcl9iaW5zKSkgewpkcml2ZXJz
L25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9kd21hYzRfY29yZS5jOjEwNTc6IAptYWMtPm11
bHRpY2FzdF9maWx0ZXJfYmlucyA9IHByaXYtPnBsYXQtPm11bHRpY2FzdF9maWx0ZXJfYmluczsK
ZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvZHdtYWM0X2NvcmUuYzoxMDYxOglp
ZiAKKG1hYy0+bXVsdGljYXN0X2ZpbHRlcl9iaW5zKQpkcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1p
Y3JvL3N0bW1hYy9kd21hYzRfY29yZS5jOjEwNjI6CSAKbWFjLT5tY2FzdF9iaXRzX2xvZzIgPSBp
bG9nMihtYWMtPm11bHRpY2FzdF9maWx0ZXJfYmlucyk7CmRyaXZlcnMvbmV0L2V0aGVybmV0L3N0
bWljcm8vc3RtbWFjL2R3bWFjLWdlbmVyaWMuYzo0MzoJIApwbGF0X2RhdC0+bXVsdGljYXN0X2Zp
bHRlcl9iaW5zID0gSEFTSF9UQUJMRV9TSVpFOwoKYW5kCgpkcml2ZXJzL25ldC9ldGhlcm5ldC9z
dG1pY3JvL3N0bW1hYy9jb21tb24uaDoyNjU6I2RlZmluZSBIQVNIX1RBQkxFX1NJWkUgNjQKCgog
RnJvbSB0aGUgc2VhcmNoIHJlc3VsdHMsIHRoZSBkZWZhdWx0IHZhbHVlIG9mIG11bHRpY2FzdF9m
aWx0ZXJfYmlucwptYXkgYmUgbWVhbmluZ2Z1bC4gQW5kIEkgdGhpbmsgdGhhdCBldmVuIGlmIHNv
bWUgaGFyZHdhcmUgZG9lcyBub3QKc3VwcG9ydCB0aGlzIGZlYXR1cmUsIGl0IHNob3VsZCBzdGls
bCBiZSBvdmVycmlkZGVuIGluIGl0cyBvd24gZGlyZWN0b3J5LgoKClRoYW5rcywKWWFudGVuZwoK
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGludXgtc3Rt
MzIgbWFpbGluZyBsaXN0CkxpbnV4LXN0bTMyQHN0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20K
aHR0cHM6Ly9zdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tL21haWxtYW4vbGlzdGluZm8vbGlu
dXgtc3RtMzIK
