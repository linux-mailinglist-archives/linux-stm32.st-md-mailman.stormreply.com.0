Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 6D943ADABB6
	for <lists+linux-stm32@lfdr.de>; Mon, 16 Jun 2025 11:23:10 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 04514C36B2C;
	Mon, 16 Jun 2025 09:23:10 +0000 (UTC)
Received: from mx08-00178001.pphosted.com (mx08-00178001.pphosted.com
 [91.207.212.93])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id D47D1C36B17
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Mon, 16 Jun 2025 09:23:08 +0000 (UTC)
Received: from pps.filterd (m0369457.ppops.net [127.0.0.1])
 by mx07-00178001.pphosted.com (8.18.1.2/8.18.1.2) with ESMTP id 55G9J2ua011700;
 Mon, 16 Jun 2025 11:22:53 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=foss.st.com; h=
 cc:content-transfer-encoding:content-type:date:from:in-reply-to
 :message-id:mime-version:references:subject:to; s=selector1; bh=
 A8c3iT0KfddidMrwAbOAq013mcyEvxOJGy/NzlCDttM=; b=7X66uCXHb0M4QGLu
 wltqQjf+JVMDnOUS8ilmUsafq/Tdf3F78ouR6785034W9SZ96zdVSmmqwpWcl4L2
 YPZ9C5Bx+RUVvJtwuH5Q9AIIXF0rSRKnhkSs/7TMQaczAYvQ8gZ/Am2Lm5cK/f/x
 2B2QXf3tucWPQH3L4fs7Bsj3aKY3RFAh0gtjQ2gwAUnsyGKxgapIinkAfdothPFz
 KudjAy+wWA7cYgexZpsx4sR1GeZFUKcFocMs0apzw049607b9VXJXq3wUJGPOctP
 Sf16eSUJj3p/fuJa+32gX9U6MX2SVqjrYjHlTUhxWXWFcUS8uZ8paEqa+Yu1JM7D
 lN9Frw==
Received: from beta.dmz-ap.st.com (beta.dmz-ap.st.com [138.198.100.35])
 by mx07-00178001.pphosted.com (PPS) with ESMTPS id 479m1nvay3-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Mon, 16 Jun 2025 11:22:52 +0200 (MEST)
Received: from euls16034.sgp.st.com (euls16034.sgp.st.com [10.75.44.20])
 by beta.dmz-ap.st.com (STMicroelectronics) with ESMTP id F0BEC40049;
 Mon, 16 Jun 2025 11:21:33 +0200 (CEST)
Received: from Webmail-eu.st.com (shfdag1node2.st.com [10.75.129.70])
 by euls16034.sgp.st.com (STMicroelectronics) with ESMTP id 8A98A6CEC9E;
 Mon, 16 Jun 2025 11:21:10 +0200 (CEST)
Received: from localhost (10.252.14.42) by SHFDAG1NODE2.st.com (10.75.129.70)
 with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 16 Jun
 2025 11:21:09 +0200
From: =?utf-8?q?Cl=C3=A9ment_Le_Goffic?= <clement.legoffic@foss.st.com>
Date: Mon, 16 Jun 2025 11:21:05 +0200
MIME-Version: 1.0
Message-ID: <20250616-spi-upstream-v1-4-7e8593f3f75d@foss.st.com>
References: <20250616-spi-upstream-v1-0-7e8593f3f75d@foss.st.com>
In-Reply-To: <20250616-spi-upstream-v1-0-7e8593f3f75d@foss.st.com>
To: Alain Volmat <alain.volmat@foss.st.com>, Mark Brown <broonie@kernel.org>, 
 Maxime Coquelin <mcoquelin.stm32@gmail.com>, Alexandre Torgue
 <alexandre.torgue@foss.st.com>,
 Valentin Caron <valentin.caron@foss.st.com>, Rob Herring <robh@kernel.org>,
 Krzysztof Kozlowski <krzk+dt@kernel.org>,
 Conor Dooley <conor+dt@kernel.org>, Erwan Leray <erwan.leray@foss.st.com>,
 Fabrice Gasnier <fabrice.gasnier@foss.st.com>, Sumit Semwal
 <sumit.semwal@linaro.org>, =?utf-8?q?Christian_K=C3=B6nig?=
 <christian.koenig@amd.com>
X-Mailer: b4 0.15-dev-c25d1
X-Originating-IP: [10.252.14.42]
X-ClientProxiedBy: SHFCAS1NODE2.st.com (10.75.129.73) To SHFDAG1NODE2.st.com
 (10.75.129.70)
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.293,Aquarius:18.0.1099,Hydra:6.0.736,FMLib:17.12.80.40
 definitions=2025-06-16_04,2025-06-13_01,2025-03-28_01
Cc: devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
 dri-devel@lists.freedesktop.org, linux-spi@vger.kernel.org,
 linaro-mm-sig@lists.linaro.org, linux-stm32@st-md-mailman.stormreply.com,
 linux-arm-kernel@lists.infradead.org, linux-media@vger.kernel.org
Subject: [Linux-stm32] [PATCH 4/6] spi: stm32: use STM32 DMA with STM32 MDMA
 to enhance DDR use
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

VGhlIFNUTTMyIERNQSBkb2Vzbid0IGhhdmUgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY29udmVu
aWVudCBidXJzdAp0cmFuc2ZlciBvbiB0aGUgRERSLCBlbnN1cmluZyB0aGUgYmVzdCBsb2FkIG9m
IHRoZSBBWEkgJiBERFIuClRvIGF2b2lkIHRoaXMgYmFkIGxvYWQgb2YgdGhlIEFYSSAmIEREUiwg
U1RNMzIgTURNQSBjYW4gYmUgdXNlZCB0byB0cmFuc2ZlcgpkYXRhIHRvIHRoZSBERFIsIGJlaW5n
IHRyaWdnZXJlZCBieSBTVE0zMiBETUEgY2hhbm5lbCB0cmFuc2Zlcgpjb21wbGV0aW9uLgpBbiBT
UkFNIGJ1ZmZlciBpcyB1c2VkIGJldHdlZW4gRE1BIGFuZCBNRE1BLiBTbyB0aGUgTURNQSBhbHdh
eXMgZG9lcwpNRU1fVE9fTUVNIHRyYW5zZmVycyAoZnJvbS90byBTUkFNIHRvL2Zyb20gRERSKSwg
YW5kIHRoZSBETUEgdXNlcyBTUkFNCmluc3RlYWQgb2YgRERSIHdpdGggREVWX1RPX01FTSB0cmFu
c2ZlcnMuClNQSSBSWCBETUEgKERFVl9UT19NRU0pIGJlY29tZXM6ClNQSSBSWCBGSUZPID09RE1B
PT0+IFNSQU0gPT1NRE1BPT0+IEREUgoKSW4gUlggKERFVl9UT19NRU0pLCBFT1QgaW50ZXJydXB0
IGlzIHVzZWQgdG8gcGF1c2UgdGhlIERNQSBjaGFubmVsICh3aGljaAp3aWxsIHJhaXNlIGEgdHJh
bnNmZXIgY29tcGxldGUpIHRvIHRyaWdnZXIgdGhlIE1ETUEgdG8gZmx1c2ggdGhlIFNSQU0gKHdo
ZW4KdHJhbnNmZXIgbGVuZ3RoIGlzIG5vdCBhbGlnbmVkIG9uIFNSQU0gcGVyaW9kKS4KVFggcmVt
YWlucyBvbiB0aGUgZm9ybWVyIGltcGxlbWVudGF0aW9uLgoKU2lnbmVkLW9mZi1ieTogQ2zDqW1l
bnQgTGUgR29mZmljIDxjbGVtZW50LmxlZ29mZmljQGZvc3Muc3QuY29tPgotLS0KIGRyaXZlcnMv
c3BpL3NwaS1zdG0zMi5jIHwgMjUxICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKystLS0tLQogMSBmaWxlIGNoYW5nZWQsIDIyOCBpbnNlcnRpb25zKCspLCAyMyBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL3NwaS9zcGktc3RtMzIuYyBiL2RyaXZlcnMv
c3BpL3NwaS1zdG0zMi5jCmluZGV4IDhiNjFjYWY3NzBhMi4uODU4MWYyNGMxMTFmIDEwMDY0NAot
LS0gYS9kcml2ZXJzL3NwaS9zcGktc3RtMzIuYworKysgYi9kcml2ZXJzL3NwaS9zcGktc3RtMzIu
YwpAQCAtOSw3ICs5LDkgQEAKICNpbmNsdWRlIDxsaW51eC9kZWJ1Z2ZzLmg+CiAjaW5jbHVkZSA8
bGludXgvY2xrLmg+CiAjaW5jbHVkZSA8bGludXgvZGVsYXkuaD4KKyNpbmNsdWRlIDxsaW51eC9k
bWEtbWFwcGluZy5oPgogI2luY2x1ZGUgPGxpbnV4L2RtYWVuZ2luZS5oPgorI2luY2x1ZGUgPGxp
bnV4L2dlbmFsbG9jLmg+CiAjaW5jbHVkZSA8bGludXgvaW50ZXJydXB0Lmg+CiAjaW5jbHVkZSA8
bGludXgvaW9wb2xsLmg+CiAjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CkBAIC0zMjgsNiArMzMw
LDExIEBAIHN0cnVjdCBzdG0zMl9zcGlfY2ZnIHsKICAqIEBkbWFfcng6IGRtYSBjaGFubmVsIGZv
ciBSWCB0cmFuc2ZlcgogICogQHBoeXNfYWRkcjogU1BJIHJlZ2lzdGVycyBwaHlzaWNhbCBiYXNl
IGFkZHJlc3MKICAqIEBkZXZpY2VfbW9kZTogdGhlIGNvbnRyb2xsZXIgaXMgY29uZmlndXJlZCBh
cyBTUEkgZGV2aWNlCisgKiBAc3JhbV9wb29sOiBTUkFNIHBvb2wgZm9yIERNQSB0cmFuc2ZlcnMK
KyAqIEBzcmFtX3J4X2J1Zl9zaXplOiBzaXplIG9mIFNSQU0gYnVmZmVyIGZvciBSWCB0cmFuc2Zl
cgorICogQHNyYW1fcnhfYnVmOiBTUkFNIGJ1ZmZlciBmb3IgUlggdHJhbnNmZXIKKyAqIEBzcmFt
X2RtYV9yeF9idWY6IFNSQU0gYnVmZmVyIHBoeXNpY2FsIGFkZHJlc3MgZm9yIFJYIHRyYW5zZmVy
CisgKiBAbWRtYV9yeDogTURNQSBjaGFubmVsIGZvciBSWCB0cmFuc2ZlcgogICovCiBzdHJ1Y3Qg
c3RtMzJfc3BpIHsKIAlzdHJ1Y3QgZGV2aWNlICpkZXY7CkBAIC0zNjIsNiArMzY5LDEyIEBAIHN0
cnVjdCBzdG0zMl9zcGkgewogCWRtYV9hZGRyX3QgcGh5c19hZGRyOwogCiAJYm9vbCBkZXZpY2Vf
bW9kZTsKKworCXN0cnVjdCBnZW5fcG9vbCAqc3JhbV9wb29sOworCXNpemVfdCBzcmFtX3J4X2J1
Zl9zaXplOworCXZvaWQgKnNyYW1fcnhfYnVmOworCWRtYV9hZGRyX3Qgc3JhbV9kbWFfcnhfYnVm
OworCXN0cnVjdCBkbWFfY2hhbiAqbWRtYV9yeDsKIH07CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3Qg
c3RtMzJfc3BpX3JlZ3NwZWMgc3RtMzJmeF9zcGlfcmVnc3BlYyA9IHsKQEAgLTg4NSw4ICs4OTgs
MTEgQEAgc3RhdGljIHZvaWQgc3RtMzJoN19zcGlfZGlzYWJsZShzdHJ1Y3Qgc3RtMzJfc3BpICpz
cGkpCiAKIAlpZiAoc3BpLT5jdXJfdXNlZG1hICYmIHNwaS0+ZG1hX3R4KQogCQlkbWFlbmdpbmVf
dGVybWluYXRlX2FzeW5jKHNwaS0+ZG1hX3R4KTsKLQlpZiAoc3BpLT5jdXJfdXNlZG1hICYmIHNw
aS0+ZG1hX3J4KQorCWlmIChzcGktPmN1cl91c2VkbWEgJiYgc3BpLT5kbWFfcngpIHsKIAkJZG1h
ZW5naW5lX3Rlcm1pbmF0ZV9hc3luYyhzcGktPmRtYV9yeCk7CisJCWlmIChzcGktPm1kbWFfcngp
CisJCQlkbWFlbmdpbmVfdGVybWluYXRlX2FzeW5jKHNwaS0+bWRtYV9yeCk7CisJfQogCiAJc3Rt
MzJfc3BpX2Nscl9iaXRzKHNwaSwgU1RNMzJIN19TUElfQ1IxLCBTVE0zMkg3X1NQSV9DUjFfU1BF
KTsKIApAQCAtMTA5OCwxMCArMTExNCwxMyBAQCBzdGF0aWMgaXJxcmV0dXJuX3Qgc3RtMzJoN19z
cGlfaXJxX3RocmVhZChpbnQgaXJxLCB2b2lkICpkZXZfaWQpCiAJfQogCiAJaWYgKHNyICYgU1RN
MzJIN19TUElfU1JfRU9UKSB7CisJCWRldl9kYmcoc3BpLT5kZXYsICJFbmQgb2YgdHJhbnNmZXJc
biIpOwogCQlpZiAoIXNwaS0+Y3VyX3VzZWRtYSAmJiAoc3BpLT5yeF9idWYgJiYgKHNwaS0+cnhf
bGVuID4gMCkpKQogCQkJc3RtMzJoN19zcGlfcmVhZF9yeGZpZm8oc3BpKTsKIAkJaWYgKCFzcGkt
PmN1cl91c2VkbWEgfHwKLQkJICAgIChzcGktPmN1cl9jb21tID09IFNQSV9TSU1QTEVYX1RYIHx8
IHNwaS0+Y3VyX2NvbW0gPT0gU1BJXzNXSVJFX1RYKSkKKwkJICAgIChzcGktPmN1cl9jb21tID09
IFNQSV9TSU1QTEVYX1RYIHx8IHNwaS0+Y3VyX2NvbW0gPT0gU1BJXzNXSVJFX1RYKSB8fAorCQkg
ICAgKHNwaS0+bWRtYV9yeCAmJiAoc3BpLT5jdXJfY29tbSA9PSBTUElfU0lNUExFWF9SWCB8fAor
CQkgICAgIHNwaS0+Y3VyX2NvbW0gPT0gU1BJX0ZVTExfRFVQTEVYKSkpCiAJCQllbmQgPSB0cnVl
OwogCX0KIApAQCAtMTExOCw2ICsxMTM3LDExIEBAIHN0YXRpYyBpcnFyZXR1cm5fdCBzdG0zMmg3
X3NwaV9pcnFfdGhyZWFkKGludCBpcnEsIHZvaWQgKmRldl9pZCkKIAlzcGluX3VubG9ja19pcnFy
ZXN0b3JlKCZzcGktPmxvY2ssIGZsYWdzKTsKIAogCWlmIChlbmQpIHsKKwkJaWYgKHNwaS0+Y3Vy
X3VzZWRtYSAmJiBzcGktPm1kbWFfcngpIHsKKwkJCWRtYWVuZ2luZV9wYXVzZShzcGktPmRtYV9y
eCk7CisJCQkvKiBXYWl0IGZvciBjYWxsYmFjayAqLworCQkJcmV0dXJuIElSUV9IQU5ETEVEOwor
CQl9CiAJCXN0bTMyaDdfc3BpX2Rpc2FibGUoc3BpKTsKIAkJc3BpX2ZpbmFsaXplX2N1cnJlbnRf
dHJhbnNmZXIoY3RybCk7CiAJfQpAQCAtMTQyMyw2ICsxNDQ3LDggQEAgc3RhdGljIHZvaWQgc3Rt
MzJoN19zcGlfdHJhbnNmZXJfb25lX2RtYV9zdGFydChzdHJ1Y3Qgc3RtMzJfc3BpICpzcGkpCiAJ
LyogRW5hYmxlIHRoZSBpbnRlcnJ1cHRzICovCiAJaWYgKHNwaS0+Y3VyX2NvbW0gPT0gU1BJX1NJ
TVBMRVhfVFggfHwgc3BpLT5jdXJfY29tbSA9PSBTUElfM1dJUkVfVFgpCiAJCWllciB8PSBTVE0z
Mkg3X1NQSV9JRVJfRU9USUUgfCBTVE0zMkg3X1NQSV9JRVJfVFhURklFOworCWlmIChzcGktPm1k
bWFfcnggJiYgKHNwaS0+Y3VyX2NvbW0gPT0gU1BJX1NJTVBMRVhfUlggfHwgc3BpLT5jdXJfY29t
bSA9PSBTUElfRlVMTF9EVVBMRVgpKQorCQlpZXIgfD0gU1RNMzJIN19TUElfSUVSX0VPVElFOwog
CiAJc3RtMzJfc3BpX3NldF9iaXRzKHNwaSwgU1RNMzJIN19TUElfSUVSLCBpZXIpOwogCkBAIC0x
NDMyLDYgKzE0NTgsMTE5IEBAIHN0YXRpYyB2b2lkIHN0bTMyaDdfc3BpX3RyYW5zZmVyX29uZV9k
bWFfc3RhcnQoc3RydWN0IHN0bTMyX3NwaSAqc3BpKQogCQlzdG0zMl9zcGlfc2V0X2JpdHMoc3Bp
LCBTVE0zMkg3X1NQSV9DUjEsIFNUTTMySDdfU1BJX0NSMV9DU1RBUlQpOwogfQogCisvKioKKyAq
IHN0bTMyX3NwaV9wcmVwYXJlX3J4X2RtYV9tZG1hX2NoYWluaW5nIC0gUHJlcGFyZSBSWCBETUEg
YW5kIE1ETUEgY2hhaW5pbmcKKyAqIEBzcGk6IHBvaW50ZXIgdG8gdGhlIHNwaSBjb250cm9sbGVy
IGRhdGEgc3RydWN0dXJlCisgKiBAeGZlcjogcG9pbnRlciB0byB0aGUgc3BpIHRyYW5zZmVyCisg
KiBAcnhfZG1hX2NvbmY6IHBvaW50ZXIgdG8gdGhlIERNQSBjb25maWd1cmF0aW9uIGZvciBSWCBj
aGFubmVsCisgKiBAcnhfZG1hX2Rlc2M6IHBvaW50ZXIgdG8gdGhlIFJYIERNQSBkZXNjcmlwdG9y
CisgKiBAcnhfbWRtYV9kZXNjOiBwb2ludGVyIHRvIHRoZSBSWCBNRE1BIGRlc2NyaXB0b3IKKyAq
CisgKiBJdCBtdXN0IHJldHVybiAwIGlmIHRoZSBjaGFpbmluZyBpcyBwb3NzaWJsZSBvciBhbiBl
cnJvciBjb2RlIGlmIG5vdC4KKyAqLworc3RhdGljIGludCBzdG0zMl9zcGlfcHJlcGFyZV9yeF9k
bWFfbWRtYV9jaGFpbmluZyhzdHJ1Y3Qgc3RtMzJfc3BpICpzcGksCisJCQkJCQkgIHN0cnVjdCBz
cGlfdHJhbnNmZXIgKnhmZXIsCisJCQkJCQkgIHN0cnVjdCBkbWFfc2xhdmVfY29uZmlnICpyeF9k
bWFfY29uZiwKKwkJCQkJCSAgc3RydWN0IGRtYV9hc3luY190eF9kZXNjcmlwdG9yICoqcnhfZG1h
X2Rlc2MsCisJCQkJCQkgIHN0cnVjdCBkbWFfYXN5bmNfdHhfZGVzY3JpcHRvciAqKnJ4X21kbWFf
ZGVzYykKK3sKKwlzdHJ1Y3QgZG1hX3NsYXZlX2NvbmZpZyByeF9tZG1hX2NvbmYgPSB7MH07CisJ
dTMyIHNyYW1fcGVyaW9kLCBuZW50cyA9IDAsIHNwaV9zX2xlbjsKKwlzdHJ1Y3Qgc2dfdGFibGUg
ZG1hX3NndCwgbWRtYV9zZ3Q7CisJc3RydWN0IHNjYXR0ZXJsaXN0ICpzcGlfcywgKnM7CisJZG1h
X2FkZHJfdCBkbWFfYnVmOworCWludCBpLCByZXQ7CisKKwlzcmFtX3BlcmlvZCA9IHNwaS0+c3Jh
bV9yeF9idWZfc2l6ZSAvIDI7CisKKwkvKiBDb25maWd1cmUgTURNQSBSWCBjaGFubmVsICovCisJ
cnhfbWRtYV9jb25mLmRpcmVjdGlvbiA9IHJ4X2RtYV9jb25mLT5kaXJlY3Rpb247CisJcnhfbWRt
YV9jb25mLnNyY19hZGRyID0gc3BpLT5zcmFtX2RtYV9yeF9idWY7CisJcnhfbWRtYV9jb25mLnBl
cmlwaGVyYWxfY29uZmlnID0gcnhfZG1hX2NvbmYtPnBlcmlwaGVyYWxfY29uZmlnOworCXJ4X21k
bWFfY29uZi5wZXJpcGhlcmFsX3NpemUgPSByeF9kbWFfY29uZi0+cGVyaXBoZXJhbF9zaXplOwor
CWRtYWVuZ2luZV9zbGF2ZV9jb25maWcoc3BpLT5tZG1hX3J4LCAmcnhfbWRtYV9jb25mKTsKKwor
CS8qIENvdW50IHRoZSBudW1iZXIgb2YgZW50cmllcyBuZWVkZWQgKi8KKwlmb3JfZWFjaF9zZyh4
ZmVyLT5yeF9zZy5zZ2wsIHNwaV9zLCB4ZmVyLT5yeF9zZy5uZW50cywgaSkKKwkJaWYgKHNnX2Rt
YV9sZW4oc3BpX3MpID4gc3JhbV9wZXJpb2QpCisJCQluZW50cyArPSBESVZfUk9VTkRfVVAoc2df
ZG1hX2xlbihzcGlfcyksIHNyYW1fcGVyaW9kKTsKKwkJZWxzZQorCQkJbmVudHMrKzsKKworCS8q
IFByZXBhcmUgRE1BIHNsYXZlX3NnIERCTSB0cmFuc2ZlciBERVZfVE9fTUVNIChSWD5NRU09U1JB
TSkgKi8KKwlyZXQgPSBzZ19hbGxvY190YWJsZSgmZG1hX3NndCwgbmVudHMsIEdGUF9BVE9NSUMp
OworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwlzcGlfcyA9IHhmZXItPnJ4X3NnLnNnbDsK
KwlzcGlfc19sZW4gPSBzZ19kbWFfbGVuKHNwaV9zKTsKKwlkbWFfYnVmID0gc3BpLT5zcmFtX2Rt
YV9yeF9idWY7CisJZm9yX2VhY2hfc2coZG1hX3NndC5zZ2wsIHMsIGRtYV9zZ3QubmVudHMsIGkp
IHsKKwkJc2l6ZV90IGJ5dGVzID0gbWluX3Qoc2l6ZV90LCBzcGlfc19sZW4sIHNyYW1fcGVyaW9k
KTsKKworCQlzZ19kbWFfbGVuKHMpID0gYnl0ZXM7CisJCXNnX2RtYV9hZGRyZXNzKHMpID0gZG1h
X2J1ZjsKKwkJc3BpX3NfbGVuIC09IGJ5dGVzOworCisJCWlmICghc3BpX3NfbGVuICYmIHNnX25l
eHQoc3BpX3MpKSB7CisJCQlzcGlfcyA9IHNnX25leHQoc3BpX3MpOworCQkJc3BpX3NfbGVuID0g
c2dfZG1hX2xlbihzcGlfcyk7CisJCQlkbWFfYnVmID0gc3BpLT5zcmFtX2RtYV9yeF9idWY7CisJ
CX0gZWxzZSB7IC8qIERNQSBjb25maWd1cmVkIGluIERCTTogaXQgd2lsbCBzd2FwIGJldHdlZW4g
dGhlIFNSQU0gcGVyaW9kcyAqLworCQkJaWYgKGkgJiAxKQorCQkJCWRtYV9idWYgKz0gc3JhbV9w
ZXJpb2Q7CisJCQllbHNlCisJCQkJZG1hX2J1ZiA9IHNwaS0+c3JhbV9kbWFfcnhfYnVmOworCQl9
CisJfQorCisJKnJ4X2RtYV9kZXNjID0gZG1hZW5naW5lX3ByZXBfc2xhdmVfc2coc3BpLT5kbWFf
cngsIGRtYV9zZ3Quc2dsLAorCQkJCQkgICAgICAgZG1hX3NndC5uZW50cywgcnhfZG1hX2NvbmYt
PmRpcmVjdGlvbiwKKwkJCQkJICAgICAgIERNQV9QUkVQX0lOVEVSUlVQVCk7CisJc2dfZnJlZV90
YWJsZSgmZG1hX3NndCk7CisKKwlpZiAoIXJ4X2RtYV9kZXNjKQorCQlyZXR1cm4gLUVJTlZBTDsK
KworCS8qIFByZXBhcmUgTURNQSBzbGF2ZV9zZyB0cmFuc2ZlciBNRU1fVE9fTUVNIChTUkFNPkRE
UikgKi8KKwlyZXQgPSBzZ19hbGxvY190YWJsZSgmbWRtYV9zZ3QsIG5lbnRzLCBHRlBfQVRPTUlD
KTsKKwlpZiAocmV0KSB7CisJCXJ4X2RtYV9kZXNjID0gTlVMTDsKKwkJcmV0dXJuIHJldDsKKwl9
CisKKwlzcGlfcyA9IHhmZXItPnJ4X3NnLnNnbDsKKwlzcGlfc19sZW4gPSBzZ19kbWFfbGVuKHNw
aV9zKTsKKwlkbWFfYnVmID0gc2dfZG1hX2FkZHJlc3Moc3BpX3MpOworCWZvcl9lYWNoX3NnKG1k
bWFfc2d0LnNnbCwgcywgbWRtYV9zZ3QubmVudHMsIGkpIHsKKwkJc2l6ZV90IGJ5dGVzID0gbWlu
X3Qoc2l6ZV90LCBzcGlfc19sZW4sIHNyYW1fcGVyaW9kKTsKKworCQlzZ19kbWFfbGVuKHMpID0g
Ynl0ZXM7CisJCXNnX2RtYV9hZGRyZXNzKHMpID0gZG1hX2J1ZjsKKwkJc3BpX3NfbGVuIC09IGJ5
dGVzOworCisJCWlmICghc3BpX3NfbGVuICYmIHNnX25leHQoc3BpX3MpKSB7CisJCQlzcGlfcyA9
IHNnX25leHQoc3BpX3MpOworCQkJc3BpX3NfbGVuID0gc2dfZG1hX2xlbihzcGlfcyk7CisJCQlk
bWFfYnVmID0gc2dfZG1hX2FkZHJlc3Moc3BpX3MpOworCQl9IGVsc2UgeworCQkJZG1hX2J1ZiAr
PSBieXRlczsKKwkJfQorCX0KKworCSpyeF9tZG1hX2Rlc2MgPSBkbWFlbmdpbmVfcHJlcF9zbGF2
ZV9zZyhzcGktPm1kbWFfcngsIG1kbWFfc2d0LnNnbCwKKwkJCQkJCW1kbWFfc2d0Lm5lbnRzLCBy
eF9tZG1hX2NvbmYuZGlyZWN0aW9uLAorCQkJCQkJRE1BX1BSRVBfSU5URVJSVVBUKTsKKwlzZ19m
cmVlX3RhYmxlKCZtZG1hX3NndCk7CisKKwlpZiAoIXJ4X21kbWFfZGVzYykgeworCQlyeF9kbWFf
ZGVzYyA9IE5VTEw7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCXJldHVybiAwOworfQorCiAv
KioKICAqIHN0bTMyX3NwaV90cmFuc2Zlcl9vbmVfZG1hIC0gdHJhbnNmZXIgYSBzaW5nbGUgc3Bp
X3RyYW5zZmVyIHVzaW5nIERNQQogICogQHNwaTogcG9pbnRlciB0byB0aGUgc3BpIGNvbnRyb2xs
ZXIgZGF0YSBzdHJ1Y3R1cmUKQEAgLTE0NDMsMzggKzE1ODIsNDMgQEAgc3RhdGljIHZvaWQgc3Rt
MzJoN19zcGlfdHJhbnNmZXJfb25lX2RtYV9zdGFydChzdHJ1Y3Qgc3RtMzJfc3BpICpzcGkpCiBz
dGF0aWMgaW50IHN0bTMyX3NwaV90cmFuc2Zlcl9vbmVfZG1hKHN0cnVjdCBzdG0zMl9zcGkgKnNw
aSwKIAkJCQkgICAgICBzdHJ1Y3Qgc3BpX3RyYW5zZmVyICp4ZmVyKQogeworCXN0cnVjdCBkbWFf
YXN5bmNfdHhfZGVzY3JpcHRvciAqcnhfbWRtYV9kZXNjID0gTlVMTCwgKnJ4X2RtYV9kZXNjID0g
TlVMTDsKKwlzdHJ1Y3QgZG1hX2FzeW5jX3R4X2Rlc2NyaXB0b3IgKnR4X2RtYV9kZXNjID0gTlVM
TDsKIAlzdHJ1Y3QgZG1hX3NsYXZlX2NvbmZpZyB0eF9kbWFfY29uZiwgcnhfZG1hX2NvbmY7Ci0J
c3RydWN0IGRtYV9hc3luY190eF9kZXNjcmlwdG9yICp0eF9kbWFfZGVzYywgKnJ4X2RtYV9kZXNj
OwogCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJaW50IHJldCA9IDA7CiAKIAlzcGluX2xvY2tfaXJx
c2F2ZSgmc3BpLT5sb2NrLCBmbGFncyk7CiAKLQlyeF9kbWFfZGVzYyA9IE5VTEw7CiAJaWYgKHNw
aS0+cnhfYnVmICYmIHNwaS0+ZG1hX3J4KSB7CiAJCXN0bTMyX3NwaV9kbWFfY29uZmlnKHNwaSwg
c3BpLT5kbWFfcngsICZyeF9kbWFfY29uZiwgRE1BX0RFVl9UT19NRU0pOwotCQlkbWFlbmdpbmVf
c2xhdmVfY29uZmlnKHNwaS0+ZG1hX3J4LCAmcnhfZG1hX2NvbmYpOworCQlpZiAoc3BpLT5tZG1h
X3J4KSB7CisJCQlyeF9kbWFfY29uZi5wZXJpcGhlcmFsX3NpemUgPSAxOworCQkJZG1hZW5naW5l
X3NsYXZlX2NvbmZpZyhzcGktPmRtYV9yeCwgJnJ4X2RtYV9jb25mKTsKIAotCQkvKiBFbmFibGUg
UnggRE1BIHJlcXVlc3QgKi8KLQkJc3RtMzJfc3BpX3NldF9iaXRzKHNwaSwgc3BpLT5jZmctPnJl
Z3MtPmRtYV9yeF9lbi5yZWcsCi0JCQkJICAgc3BpLT5jZmctPnJlZ3MtPmRtYV9yeF9lbi5tYXNr
KTsKLQotCQlyeF9kbWFfZGVzYyA9IGRtYWVuZ2luZV9wcmVwX3NsYXZlX3NnKAotCQkJCQlzcGkt
PmRtYV9yeCwgeGZlci0+cnhfc2cuc2dsLAotCQkJCQl4ZmVyLT5yeF9zZy5uZW50cywKLQkJCQkJ
cnhfZG1hX2NvbmYuZGlyZWN0aW9uLAotCQkJCQlETUFfUFJFUF9JTlRFUlJVUFQpOworCQkJcmV0
ID0gc3RtMzJfc3BpX3ByZXBhcmVfcnhfZG1hX21kbWFfY2hhaW5pbmcoc3BpLCB4ZmVyLCAmcnhf
ZG1hX2NvbmYsCisJCQkJCQkJCSAgICAgJnJ4X2RtYV9kZXNjLCAmcnhfbWRtYV9kZXNjKTsKKwkJ
CWlmIChyZXQpIHsgLyogUlggRE1BIE1ETUEgY2hhaW5pbmcgbm90IHBvc3NpYmxlLCBmYWxsYmFj
ayB0byBETUEgb25seSAqLworCQkJCXJ4X2RtYV9jb25mLnBlcmlwaGVyYWxfY29uZmlnID0gMDsK
KwkJCQlyeF9kbWFfZGVzYyA9IE5VTEw7CisJCQl9CisJCX0KKwkJaWYgKCFyeF9kbWFfZGVzYykg
eworCQkJZG1hZW5naW5lX3NsYXZlX2NvbmZpZyhzcGktPmRtYV9yeCwgJnJ4X2RtYV9jb25mKTsK
KwkJCXJ4X2RtYV9kZXNjID0gZG1hZW5naW5lX3ByZXBfc2xhdmVfc2coc3BpLT5kbWFfcngsIHhm
ZXItPnJ4X3NnLnNnbCwKKwkJCQkJCQkgICAgICB4ZmVyLT5yeF9zZy5uZW50cywKKwkJCQkJCQkg
ICAgICByeF9kbWFfY29uZi5kaXJlY3Rpb24sCisJCQkJCQkJICAgICAgRE1BX1BSRVBfSU5URVJS
VVBUKTsKKwkJfQogCX0KIAotCXR4X2RtYV9kZXNjID0gTlVMTDsKIAlpZiAoc3BpLT50eF9idWYg
JiYgc3BpLT5kbWFfdHgpIHsKIAkJc3RtMzJfc3BpX2RtYV9jb25maWcoc3BpLCBzcGktPmRtYV90
eCwgJnR4X2RtYV9jb25mLCBETUFfTUVNX1RPX0RFVik7CiAJCWRtYWVuZ2luZV9zbGF2ZV9jb25m
aWcoc3BpLT5kbWFfdHgsICZ0eF9kbWFfY29uZik7Ci0KLQkJdHhfZG1hX2Rlc2MgPSBkbWFlbmdp
bmVfcHJlcF9zbGF2ZV9zZygKLQkJCQkJc3BpLT5kbWFfdHgsIHhmZXItPnR4X3NnLnNnbCwKLQkJ
CQkJeGZlci0+dHhfc2cubmVudHMsCi0JCQkJCXR4X2RtYV9jb25mLmRpcmVjdGlvbiwKLQkJCQkJ
RE1BX1BSRVBfSU5URVJSVVBUKTsKKwkJdHhfZG1hX2Rlc2MgPSBkbWFlbmdpbmVfcHJlcF9zbGF2
ZV9zZyhzcGktPmRtYV90eCwgeGZlci0+dHhfc2cuc2dsLAorCQkJCQkJICAgICAgeGZlci0+dHhf
c2cubmVudHMsCisJCQkJCQkgICAgICB0eF9kbWFfY29uZi5kaXJlY3Rpb24sCisJCQkJCQkgICAg
ICBETUFfUFJFUF9JTlRFUlJVUFQpOwogCX0KIAogCWlmICgoc3BpLT50eF9idWYgJiYgc3BpLT5k
bWFfdHggJiYgIXR4X2RtYV9kZXNjKSB8fApAQCAtMTQ4NSw5ICsxNjI5LDI1IEBAIHN0YXRpYyBp
bnQgc3RtMzJfc3BpX3RyYW5zZmVyX29uZV9kbWEoc3RydWN0IHN0bTMyX3NwaSAqc3BpLAogCQln
b3RvIGRtYV9kZXNjX2Vycm9yOwogCiAJaWYgKHJ4X2RtYV9kZXNjKSB7Ci0JCXJ4X2RtYV9kZXNj
LT5jYWxsYmFjayA9IHNwaS0+Y2ZnLT5kbWFfcnhfY2I7Ci0JCXJ4X2RtYV9kZXNjLT5jYWxsYmFj
a19wYXJhbSA9IHNwaTsKKwkJaWYgKHJ4X21kbWFfZGVzYykgeworCQkJcnhfbWRtYV9kZXNjLT5j
YWxsYmFjayA9IHNwaS0+Y2ZnLT5kbWFfcnhfY2I7CisJCQlyeF9tZG1hX2Rlc2MtPmNhbGxiYWNr
X3BhcmFtID0gc3BpOworCQl9IGVsc2UgeworCQkJcnhfZG1hX2Rlc2MtPmNhbGxiYWNrID0gc3Bp
LT5jZmctPmRtYV9yeF9jYjsKKwkJCXJ4X2RtYV9kZXNjLT5jYWxsYmFja19wYXJhbSA9IHNwaTsK
KwkJfQogCisJCS8qIEVuYWJsZSBSeCBETUEgcmVxdWVzdCAqLworCQlzdG0zMl9zcGlfc2V0X2Jp
dHMoc3BpLCBzcGktPmNmZy0+cmVncy0+ZG1hX3J4X2VuLnJlZywKKwkJCQkgICBzcGktPmNmZy0+
cmVncy0+ZG1hX3J4X2VuLm1hc2spOworCQlpZiAocnhfbWRtYV9kZXNjKSB7CisJCQlpZiAoZG1h
X3N1Ym1pdF9lcnJvcihkbWFlbmdpbmVfc3VibWl0KHJ4X21kbWFfZGVzYykpKSB7CisJCQkJZGV2
X2VycihzcGktPmRldiwgIlJ4IE1ETUEgc3VibWl0IGZhaWxlZFxuIik7CisJCQkJZ290byBkbWFf
ZGVzY19lcnJvcjsKKwkJCX0KKwkJCS8qIEVuYWJsZSBSeCBNRE1BIGNoYW5uZWwgKi8KKwkJCWRt
YV9hc3luY19pc3N1ZV9wZW5kaW5nKHNwaS0+bWRtYV9yeCk7CisJCX0KIAkJaWYgKGRtYV9zdWJt
aXRfZXJyb3IoZG1hZW5naW5lX3N1Ym1pdChyeF9kbWFfZGVzYykpKSB7CiAJCQlkZXZfZXJyKHNw
aS0+ZGV2LCAiUnggRE1BIHN1Ym1pdCBmYWlsZWRcbiIpOwogCQkJZ290byBkbWFfZGVzY19lcnJv
cjsKQEAgLTE1MjIsNiArMTY4Miw4IEBAIHN0YXRpYyBpbnQgc3RtMzJfc3BpX3RyYW5zZmVyX29u
ZV9kbWEoc3RydWN0IHN0bTMyX3NwaSAqc3BpLAogCXJldHVybiAxOwogCiBkbWFfc3VibWl0X2Vy
cm9yOgorCWlmIChzcGktPm1kbWFfcngpCisJCWRtYWVuZ2luZV90ZXJtaW5hdGVfc3luYyhzcGkt
Pm1kbWFfcngpOwogCWlmIChzcGktPmRtYV9yeCkKIAkJZG1hZW5naW5lX3Rlcm1pbmF0ZV9zeW5j
KHNwaS0+ZG1hX3J4KTsKIApAQCAtMTUzMyw2ICsxNjk1LDkgQEAgc3RhdGljIGludCBzdG0zMl9z
cGlfdHJhbnNmZXJfb25lX2RtYShzdHJ1Y3Qgc3RtMzJfc3BpICpzcGksCiAKIAlkZXZfaW5mbyhz
cGktPmRldiwgIkRNQSBpc3N1ZTogZmFsbCBiYWNrIHRvIGlycSB0cmFuc2ZlclxuIik7CiAKKwlp
ZiAoc3BpLT5zcmFtX3J4X2J1ZikKKwkJbWVtc2V0KHNwaS0+c3JhbV9yeF9idWYsIDAsIHNwaS0+
c3JhbV9yeF9idWZfc2l6ZSk7CisKIAlzcGktPmN1cl91c2VkbWEgPSBmYWxzZTsKIAlyZXR1cm4g
c3BpLT5jZmctPnRyYW5zZmVyX29uZV9pcnEoc3BpKTsKIH0KQEAgLTE4OTEsNiArMjA1Niw5IEBA
IHN0YXRpYyBpbnQgc3RtMzJfc3BpX3VucHJlcGFyZV9tc2coc3RydWN0IHNwaV9jb250cm9sbGVy
ICpjdHJsLAogCiAJc3BpLT5jZmctPmRpc2FibGUoc3BpKTsKIAorCWlmIChzcGktPnNyYW1fcnhf
YnVmKQorCQltZW1zZXQoc3BpLT5zcmFtX3J4X2J1ZiwgMCwgc3BpLT5zcmFtX3J4X2J1Zl9zaXpl
KTsKKwogCXJldHVybiAwOwogfQogCkBAIC0yMjQ1LDYgKzI0MTMsMzMgQEAgc3RhdGljIGludCBz
dG0zMl9zcGlfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAlpZiAoc3BpLT5k
bWFfdHggfHwgc3BpLT5kbWFfcngpCiAJCWN0cmwtPmNhbl9kbWEgPSBzdG0zMl9zcGlfY2FuX2Rt
YTsKIAorCXNwaS0+c3JhbV9wb29sID0gb2ZfZ2VuX3Bvb2xfZ2V0KHBkZXYtPmRldi5vZl9ub2Rl
LCAic3JhbSIsIDApOworCWlmIChzcGktPnNyYW1fcG9vbCkgeworCQlzcGktPnNyYW1fcnhfYnVm
X3NpemUgPSBnZW5fcG9vbF9zaXplKHNwaS0+c3JhbV9wb29sKTsKKwkJZGV2X2luZm8oJnBkZXYt
PmRldiwgIlNSQU0gcG9vbDogJXp1IEtpQiBmb3IgUlggRE1BL01ETUEgY2hhaW5pbmdcbiIsCisJ
CQkgc3BpLT5zcmFtX3J4X2J1Zl9zaXplIC8gMTAyNCk7CisJCXNwaS0+c3JhbV9yeF9idWYgPSBn
ZW5fcG9vbF9kbWFfemFsbG9jKHNwaS0+c3JhbV9wb29sLCBzcGktPnNyYW1fcnhfYnVmX3NpemUs
CisJCQkJCQkgICAgICAgJnNwaS0+c3JhbV9kbWFfcnhfYnVmKTsKKwkJaWYgKCFzcGktPnNyYW1f
cnhfYnVmKSB7CisJCQlkZXZfZXJyKCZwZGV2LT5kZXYsICJmYWlsZWQgdG8gYWxsb2NhdGUgU1JB
TSBidWZmZXJcbiIpOworCQl9IGVsc2UgeworCQkJc3BpLT5tZG1hX3J4ID0gZG1hX3JlcXVlc3Rf
Y2hhbihzcGktPmRldiwgInJ4bTJtIik7CisJCQlpZiAoSVNfRVJSKHNwaS0+bWRtYV9yeCkpIHsK
KwkJCQlyZXQgPSBQVFJfRVJSKHNwaS0+bWRtYV9yeCk7CisJCQkJc3BpLT5tZG1hX3J4ID0gTlVM
TDsKKwkJCQlpZiAocmV0ID09IC1FUFJPQkVfREVGRVIpIHsKKwkJCQkJZ290byBlcnJfcG9vbF9m
cmVlOworCQkJCX0gZWxzZSB7CisJCQkJCWdlbl9wb29sX2ZyZWUoc3BpLT5zcmFtX3Bvb2wsCisJ
CQkJCQkgICAgICAodW5zaWduZWQgbG9uZylzcGktPnNyYW1fcnhfYnVmLAorCQkJCQkJICAgICAg
c3BpLT5zcmFtX3J4X2J1Zl9zaXplKTsKKwkJCQkJZGV2X3dhcm4oJnBkZXYtPmRldiwKKwkJCQkJ
CSAiZmFpbGVkIHRvIHJlcXVlc3QgcnggbWRtYSBjaGFubmVsLCBETUEgb25seVxuIik7CisJCQkJ
fQorCQkJfQorCQl9CisJfQorCiAJcG1fcnVudGltZV9zZXRfYXV0b3N1c3BlbmRfZGVsYXkoJnBk
ZXYtPmRldiwKIAkJCQkJIFNUTTMyX1NQSV9BVVRPU1VTUEVORF9ERUxBWSk7CiAJcG1fcnVudGlt
ZV91c2VfYXV0b3N1c3BlbmQoJnBkZXYtPmRldik7CkBAIC0yMjcyLDYgKzI0NjcsMTEgQEAgc3Rh
dGljIGludCBzdG0zMl9zcGlfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAlw
bV9ydW50aW1lX3B1dF9ub2lkbGUoJnBkZXYtPmRldik7CiAJcG1fcnVudGltZV9zZXRfc3VzcGVu
ZGVkKCZwZGV2LT5kZXYpOwogCXBtX3J1bnRpbWVfZG9udF91c2VfYXV0b3N1c3BlbmQoJnBkZXYt
PmRldik7CisKKwlpZiAoc3BpLT5tZG1hX3J4KQorCQlkbWFfcmVsZWFzZV9jaGFubmVsKHNwaS0+
bWRtYV9yeCk7CitlcnJfcG9vbF9mcmVlOgorCWdlbl9wb29sX2ZyZWUoc3BpLT5zcmFtX3Bvb2ws
ICh1bnNpZ25lZCBsb25nKXNwaS0+c3JhbV9yeF9idWYsIHNwaS0+c3JhbV9yeF9idWZfc2l6ZSk7
CiBlcnJfZG1hX3JlbGVhc2U6CiAJaWYgKHNwaS0+ZG1hX3R4KQogCQlkbWFfcmVsZWFzZV9jaGFu
bmVsKHNwaS0+ZG1hX3R4KTsKQEAgLTIzMDIsNiArMjUwMiwxMSBAQCBzdGF0aWMgdm9pZCBzdG0z
Ml9zcGlfcmVtb3ZlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJCWRtYV9yZWxlYXNl
X2NoYW5uZWwoY3RybC0+ZG1hX3R4KTsKIAlpZiAoY3RybC0+ZG1hX3J4KQogCQlkbWFfcmVsZWFz
ZV9jaGFubmVsKGN0cmwtPmRtYV9yeCk7CisJaWYgKHNwaS0+bWRtYV9yeCkKKwkJZG1hX3JlbGVh
c2VfY2hhbm5lbChzcGktPm1kbWFfcngpOworCWlmIChzcGktPnNyYW1fcnhfYnVmKQorCQlnZW5f
cG9vbF9mcmVlKHNwaS0+c3JhbV9wb29sLCAodW5zaWduZWQgbG9uZylzcGktPnNyYW1fcnhfYnVm
LAorCQkJICAgICAgc3BpLT5zcmFtX3J4X2J1Zl9zaXplKTsKIAogCWNsa19kaXNhYmxlX3VucHJl
cGFyZShzcGktPmNsayk7CiAKCi0tIAoyLjQzLjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fCkxpbnV4LXN0bTMyIG1haWxpbmcgbGlzdApMaW51eC1zdG0z
MkBzdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tCmh0dHBzOi8vc3QtbWQtbWFpbG1hbi5zdG9y
bXJlcGx5LmNvbS9tYWlsbWFuL2xpc3RpbmZvL2xpbnV4LXN0bTMyCg==
