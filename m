Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 0B49A392B64
	for <lists+linux-stm32@lfdr.de>; Thu, 27 May 2021 12:04:42 +0200 (CEST)
Received: from ip-172-31-3-76.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id B8138C57B5B;
	Thu, 27 May 2021 10:04:41 +0000 (UTC)
Received: from relay6-d.mail.gandi.net (relay6-d.mail.gandi.net
 [217.70.183.198])
 (using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id E2DB5C57182
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Thu, 27 May 2021 10:04:38 +0000 (UTC)
Received: (Authenticated sender: miquel.raynal@bootlin.com)
 by relay6-d.mail.gandi.net (Postfix) with ESMTPSA id 21B77C0008;
 Thu, 27 May 2021 10:04:30 +0000 (UTC)
Date: Thu, 27 May 2021 12:04:23 +0200
From: Miquel Raynal <miquel.raynal@bootlin.com>
To: Pratyush Yadav <p.yadav@ti.com>
Message-ID: <20210527120423.7bf18966@xps13>
In-Reply-To: <20210527100015.abxcroi23zyvcyzk@ti.com>
References: <20210526153016.32653-1-patrice.chotard@foss.st.com>
 <20210527100015.abxcroi23zyvcyzk@ti.com>
Organization: Bootlin
X-Mailer: Claws Mail 3.17.7 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Cc: Vignesh Raghavendra <vigneshr@ti.com>, linux-kernel@vger.kernel.org,
 linux-stm32@st-md-mailman.stormreply.com,
 Alexandre Torgue <alexandre.torgue@foss.st.com>, linux-spi@vger.kernel.org,
 Mark Brown <broonie@kernel.org>, linux-mtd@lists.infradead.org,
 Boris Brezillon <boris.brezillon@collabora.com>,
 linux-arm-kernel@lists.infradead.org
Subject: Re: [Linux-stm32] mtd: spinand: add spi nand mtd resume handler
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

SGkgUHJhdHl1c2gsCgpQcmF0eXVzaCBZYWRhdiA8cC55YWRhdkB0aS5jb20+IHdyb3RlIG9uIFRo
dSwgMjcgTWF5IDIwMjEgMTU6MzA6MTcKKzA1MzA6Cgo+IE9uIDI2LzA1LzIxIDA1OjMwUE0sIHBh
dHJpY2UuY2hvdGFyZEBmb3NzLnN0LmNvbSB3cm90ZToKPiA+IEZyb206IENocmlzdG9waGUgS2Vy
ZWxsbyA8Y2hyaXN0b3BoZS5rZXJlbGxvQGZvc3Muc3QuY29tPgo+ID4gCj4gPiBBZnRlciBwb3dl
ciB1cCwgYWxsIFNQSSBOQU5EJ3MgYmxvY2tzIGFyZSBsb2NrZWQuIE9ubHkgcmVhZCBvcGVyYXRp
b25zCj4gPiBhcmUgYWxsb3dlZCwgd3JpdGUgYW5kIGVyYXNlIG9wZXJhdGlvbnMgYXJlIGZvcmJp
ZGRlbi4KPiA+IFRoZSBTUEkgTkFORCBmcmFtZXdvcmsgdW5sb2NrcyBhbGwgdGhlIGJsb2NrcyBk
dXJpbmcgaXRzIGluaXRpYWxpemF0aW9uLgo+ID4gCj4gPiBEdXJpbmcgYSBzdGFuZGJ5IGxvdyBw
b3dlciwgdGhlIG1lbW9yeSBpcyBwb3dlcmVkIGRvd24sIGxvc2luZyBpdHMKPiA+IGNvbmZpZ3Vy
YXRpb24uCj4gPiBEdXJpbmcgdGhlIHJlc3VtZSwgdGhlIFFTUEkgZHJpdmVyIHN0YXRlIGlzIHJl
c3RvcmVkIGJ1dCB0aGUgU1BJIE5BTkQKPiA+IGZyYW1ld29yayBkb2VzIG5vdCByZWNvbmZpZ3Vy
ZWQgdGhlIG1lbW9yeS4KPiA+IAo+ID4gVGhpcyBwYXRjaCBhZGRzIHNwaSBuYW5kIG10ZCBQTSBo
YW5kbGVycyBmb3IgcmVzdW1lIG9wcy4KPiA+IFNQSSBOQU5EIHJlc3VtZSBvcCByZS1pbml0aWFs
aXplcyBTUEkgTkFORCBmbGFzaCB0byBpdHMgcHJvYmVkIHN0YXRlLgo+ID4gCj4gPiBTaWduZWQt
b2ZmLWJ5OiBDaHJpc3RvcGhlIEtlcmVsbG8gPGNocmlzdG9waGUua2VyZWxsb0Bmb3NzLnN0LmNv
bT4KPiA+IFNpZ25lZC1vZmYtYnk6IFBhdHJpY2UgQ2hvdGFyZCA8cGF0cmljZS5jaG90YXJkQGZv
c3Muc3QuY29tPgo+ID4gLS0tCj4gPiAgZHJpdmVycy9tdGQvbmFuZC9zcGkvY29yZS5jIHwgNTYg
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwo+ID4gIDEgZmlsZSBjaGFuZ2Vk
LCA1NiBpbnNlcnRpb25zKCspCj4gPiAKPiA+IGRpZmYgLS1naXQgYS9kcml2ZXJzL210ZC9uYW5k
L3NwaS9jb3JlLmMgYi9kcml2ZXJzL210ZC9uYW5kL3NwaS9jb3JlLmMKPiA+IGluZGV4IDE3ZjYz
Zjk1ZjRhMi4uNmFiYWY4NzRlYjNmIDEwMDY0NAo+ID4gLS0tIGEvZHJpdmVycy9tdGQvbmFuZC9z
cGkvY29yZS5jCj4gPiArKysgYi9kcml2ZXJzL210ZC9uYW5kL3NwaS9jb3JlLmMKPiA+IEBAIC0x
MDc0LDYgKzEwNzQsNjEgQEAgc3RhdGljIGludCBzcGluYW5kX2RldGVjdChzdHJ1Y3Qgc3BpbmFu
ZF9kZXZpY2UgKnNwaW5hbmQpCj4gPiAgCXJldHVybiAwOwo+ID4gIH0KPiA+ICAKPiA+ICtzdGF0
aWMgdm9pZCBzcGluYW5kX210ZF9yZXN1bWUoc3RydWN0IG10ZF9pbmZvICptdGQpCj4gPiArewo+
ID4gKwlzdHJ1Y3Qgc3BpbmFuZF9kZXZpY2UgKnNwaW5hbmQgPSBtdGRfdG9fc3BpbmFuZChtdGQp
Owo+ID4gKwlzdHJ1Y3QgbmFuZF9kZXZpY2UgKm5hbmQgPSBtdGRfdG9fbmFuZGRldihtdGQpOwo+
ID4gKwlzdHJ1Y3QgZGV2aWNlICpkZXYgPSAmc3BpbmFuZC0+c3BpbWVtLT5zcGktPmRldjsKPiA+
ICsJaW50IHJldCwgaTsKPiA+ICsKPiA+ICsJcmV0ID0gc3BpbmFuZF9yZXNldF9vcChzcGluYW5k
KTsKPiA+ICsJaWYgKHJldCkKPiA+ICsJCXJldHVybjsKPiA+ICsKPiA+ICsJcmV0ID0gc3BpbmFu
ZF9pbml0X3F1YWRfZW5hYmxlKHNwaW5hbmQpOwo+ID4gKwlpZiAocmV0KSB7Cj4gPiArCQlkZXZf
ZXJyKGRldiwKPiA+ICsJCQkiRmFpbGVkIHRvIGluaXRpYWxpemUgdGhlIHF1YWQgcGFydCAoZXJy
ID0gJWQpXG4iLAo+ID4gKwkJCXJldCk7Cj4gPiArCQlyZXR1cm47Cj4gPiArCX0KPiA+ICsKPiA+
ICsJcmV0ID0gc3BpbmFuZF91cGRfY2ZnKHNwaW5hbmQsIENGR19PVFBfRU5BQkxFLCAwKTsKPiA+
ICsJaWYgKHJldCkgewo+ID4gKwkJZGV2X2VycihkZXYsCj4gPiArCQkJIkZhaWxlZCB0byB1cGR0
YWUgdGhlIE9UUCAoZXJyID0gJWQpXG4iLAo+ID4gKwkJCXJldCk7Cj4gPiArCQlyZXR1cm47Cj4g
PiArCX0gIAo+IAo+IFNpbmNlIHlvdSBoYXZlIHJlc2V0IHRoZSBmbGFzaCwgdGhpcyBjYWNoZSBp
cyBpbnZhbGlkLiBZb3Ugc2hvdWxkIHJlc2V0IAo+IHRoZSBjYWNoZSBhbmQgcmUtcG9wdWxhdGUg
aXQgYmVmb3JlIHVzaW5nIGl0IGluIGFueSB3YXkuCj4gCj4gPiArCj4gPiArCXJldCA9IHNwaW5h
bmRfbWFudWZhY3R1cmVyX2luaXQoc3BpbmFuZCk7Cj4gPiArCWlmIChyZXQpIHsKPiA+ICsJCWRl
dl9lcnIoZGV2LAo+ID4gKwkJCSJGYWlsZWQgdG8gaW5pdGlhbGl6ZSB0aGUgU1BJIE5BTkQgY2hp
cCAoZXJyID0gJWQpXG4iLAo+ID4gKwkJCXJldCk7Cj4gPiArCQlyZXR1cm47Cj4gPiArCX0KPiA+
ICsKPiA+ICsJLyogQWZ0ZXIgcG93ZXIgdXAsIGFsbCBibG9ja3MgYXJlIGxvY2tlZCwgc28gdW5s
b2NrIHRoZW0gaGVyZS4gKi8KPiA+ICsJZm9yIChpID0gMDsgaSA8IG5hbmQtPm1lbW9yZy5udGFy
Z2V0czsgaSsrKSB7Cj4gPiArCQlyZXQgPSBzcGluYW5kX3NlbGVjdF90YXJnZXQoc3BpbmFuZCwg
aSk7Cj4gPiArCQlpZiAocmV0KSB7Cj4gPiArCQkJZGV2X2VycihkZXYsCj4gPiArCQkJCSJGYWls
ZWQgdG8gc2VsZWN0IHRoZSB0YXJnZXQgKGVyciA9ICVkKVxuIiwKPiA+ICsJCQkJcmV0KTsKPiA+
ICsJCQlyZXR1cm47Cj4gPiArCQl9Cj4gPiArCj4gPiArCQlyZXQgPSBzcGluYW5kX2xvY2tfYmxv
Y2soc3BpbmFuZCwgQkxfQUxMX1VOTE9DS0VEKTsKPiA+ICsJCWlmIChyZXQpIHsKPiA+ICsJCQlk
ZXZfZXJyKGRldiwKPiA+ICsJCQkJIkZhaWxlZCB0byB1bmxvY2sgYmxvY2sgKGVyciA9ICVkKVxu
IiwKPiA+ICsJCQkJcmV0KTsKPiA+ICsJCQlyZXR1cm47Cj4gPiArCQl9Cj4gPiArCX0KPiA+ICt9
Cj4gPiArICAKPiAKPiBNb3N0IG9mIHRoZXNlIHNlZW0gdG8gYmUgY29waWVkIGZyb20gc3BpbmFu
ZF9pbml0KCkuIEkgdGhpbmsgaXQgaXMgCj4gYmV0dGVyIHRvIGNyZWF0ZSBhIGNvbW1vbiBmdW5j
dGlvbiB0aGF0IGNhbiBiZSBjYWxsZWQgZnJvbSBib3RoIAo+IHNwaW5hbmRfaW5pdCgpIGFuZCBz
cGluYW5kX210ZF9yZXN1bWUoKS4gVGhpcyB3YXkgd2hlbiBzb21lb25lIGFkZHMgCj4gc29tZXRo
aW5nIG5ldyB0byB0aGUgaW5pdCBwcm9jZWR1cmUsIGxpa2Ugc3VwcG9ydCBmb3Igc29tZSBvdGhl
ciBtb2RlcywgCj4gdGhleSB3b24ndCBoYXZlIHRvIHJlbWVtYmVyIHRvIHVwZGF0ZSBpdCBpbiB0
d28gcGxhY2VzLgoKQWdyZWVkLCBsZXQncyB3cml0ZSBhIGNvbW1vbiBoZWxwZXIgZm9yIG1vcmUg
dGhhbiBqdXN0IHRoZSB1bmxvY2tpbmcKc2VxdWVuY2UgKHN0aWxsIGluIGEgc2VwYXJhdGUgcGF0
Y2gpLgoKPiAKPiA+ICBzdGF0aWMgaW50IHNwaW5hbmRfaW5pdChzdHJ1Y3Qgc3BpbmFuZF9kZXZp
Y2UgKnNwaW5hbmQpCj4gPiAgewo+ID4gIAlzdHJ1Y3QgZGV2aWNlICpkZXYgPSAmc3BpbmFuZC0+
c3BpbWVtLT5zcGktPmRldjsKPiA+IEBAIC0xMTY3LDYgKzEyMjIsNyBAQCBzdGF0aWMgaW50IHNw
aW5hbmRfaW5pdChzdHJ1Y3Qgc3BpbmFuZF9kZXZpY2UgKnNwaW5hbmQpCj4gPiAgCW10ZC0+X2Js
b2NrX2lzcmVzZXJ2ZWQgPSBzcGluYW5kX210ZF9ibG9ja19pc3Jlc2VydmVkOwo+ID4gIAltdGQt
Pl9lcmFzZSA9IHNwaW5hbmRfbXRkX2VyYXNlOwo+ID4gIAltdGQtPl9tYXhfYmFkX2Jsb2NrcyA9
IG5hbmRkZXZfbXRkX21heF9iYWRfYmxvY2tzOwo+ID4gKwltdGQtPl9yZXN1bWUgPSBzcGluYW5k
X210ZF9yZXN1bWU7ICAKPiAKPiBJcyBpdCBwb3NzaWJsZSB0aGF0IHRoZSB1c2Vyc3BhY2UgY2Fu
IHVzZSB0aGlzIG10ZCBkZXZpY2UgYmVmb3JlIHRoZSAKPiByZXN1bWUgaXMgZmluaXNoZWQ/IElz
IHRoZXJlIGEgd2F5IHRvIHRlbXBvcmFyaWx5ICJwYXVzZSIgb3IgdW5yZWdpc3RlciAKPiBhbiBt
dGQgZGV2aWNlPwoKSSBkb24ndCBleHBlY3QgdGhpcyB0byBoYXBwZW4sIEkgd291bGQgZXhwZWN0
IHRoZSBrZXJuZWwgdG8gcmVzdW1lCmVudGlyZWx5IGJlZm9yZSBnaXZpbmcgdGhlIGhhbmQgdG8g
dXNlcnNwYWNlLCBidXQgSSBhbSBub3QgMTAwJSBzdXJlIG9mCnRoYXQgbmVpdGhlci4KCj4gCj4g
PiAgCj4gPiAgCWlmIChuYW5kLT5lY2MuZW5naW5lKSB7Cj4gPiAgCQlyZXQgPSBtdGRfb29ibGF5
b3V0X2NvdW50X2ZyZWVieXRlcyhtdGQpOyAgCj4gCgpUaGFua3MsCk1pcXXDqGwKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGludXgtc3RtMzIgbWFpbGlu
ZyBsaXN0CkxpbnV4LXN0bTMyQHN0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20KaHR0cHM6Ly9z
dC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tL21haWxtYW4vbGlzdGluZm8vbGludXgtc3RtMzIK
