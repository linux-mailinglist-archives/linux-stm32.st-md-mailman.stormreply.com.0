Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id E00E45761A9
	for <lists+linux-stm32@lfdr.de>; Fri, 15 Jul 2022 14:31:11 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id A3CFEC640F1;
	Fri, 15 Jul 2022 12:31:11 +0000 (UTC)
Received: from mx0a-00128a01.pphosted.com (mx0a-00128a01.pphosted.com
 [148.163.135.77])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id EC180C640EF
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Fri, 15 Jul 2022 12:31:09 +0000 (UTC)
Received: from pps.filterd (m0167088.ppops.net [127.0.0.1])
 by mx0a-00128a01.pphosted.com (8.17.1.5/8.17.1.5) with ESMTP id 26F9j6TZ011689;
 Fri, 15 Jul 2022 08:30:14 -0400
Received: from nwd2mta4.analog.com ([137.71.173.58])
 by mx0a-00128a01.pphosted.com (PPS) with ESMTPS id 3h73h7c6t5-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Fri, 15 Jul 2022 08:30:13 -0400
Received: from ASHBMBX8.ad.analog.com (ASHBMBX8.ad.analog.com [10.64.17.5])
 by nwd2mta4.analog.com (8.14.7/8.14.7) with ESMTP id 26FCUCVq062196
 (version=TLSv1/SSLv3 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=FAIL); 
 Fri, 15 Jul 2022 08:30:12 -0400
Received: from ASHBCASHYB5.ad.analog.com (10.64.17.133) by
 ASHBMBX8.ad.analog.com (10.64.17.5) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.2.986.14; Fri, 15 Jul 2022 08:30:11 -0400
Received: from ASHBMBX8.ad.analog.com (10.64.17.5) by
 ASHBCASHYB5.ad.analog.com (10.64.17.133) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.2.986.14; Fri, 15 Jul 2022 08:30:11 -0400
Received: from zeus.spd.analog.com (10.66.68.11) by ashbmbx8.ad.analog.com
 (10.64.17.5) with Microsoft SMTP Server id 15.2.986.14 via Frontend
 Transport; Fri, 15 Jul 2022 08:30:11 -0400
Received: from nsa.ad.analog.com ([10.44.3.55])
 by zeus.spd.analog.com (8.15.1/8.15.1) with ESMTP id 26FCRxO9001007;
 Fri, 15 Jul 2022 08:30:00 -0400
From: =?UTF-8?q?Nuno=20S=C3=A1?= <nuno.sa@analog.com>
To: <openbmc@lists.ozlabs.org>, <linux-imx@nxp.com>,
 <linux-stm32@st-md-mailman.stormreply.com>,
 <linux-iio@vger.kernel.org>, <linux-mips@vger.kernel.org>,
 <linux-renesas-soc@vger.kernel.org>, <linux-mediatek@lists.infradead.org>,
 <chrome-platform@lists.linux.dev>, <linux-arm-kernel@lists.infradead.org>,
 Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>,
 <linux-arm-msm@vger.kernel.org>
Date: Fri, 15 Jul 2022 14:29:01 +0200
Message-ID: <20220715122903.332535-14-nuno.sa@analog.com>
X-Mailer: git-send-email 2.37.1
In-Reply-To: <20220715122903.332535-1-nuno.sa@analog.com>
References: <20220715122903.332535-1-nuno.sa@analog.com>
MIME-Version: 1.0
X-ADIRuleOP-NewSCL: Rule Triggered
X-Proofpoint-GUID: aIFsjyNkoA6L7ukwTCPEaVIZMvy70ZG_
X-Proofpoint-ORIG-GUID: aIFsjyNkoA6L7ukwTCPEaVIZMvy70ZG_
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.205,Aquarius:18.0.883,Hydra:6.0.517,FMLib:17.11.122.1
 definitions=2022-07-15_05,2022-07-15_01,2022-06-22_01
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 malwarescore=0 bulkscore=0
 mlxlogscore=999 lowpriorityscore=0 phishscore=0 mlxscore=0 suspectscore=0
 impostorscore=0 adultscore=0 priorityscore=1501 clxscore=1015 spamscore=0
 classifier=spam adjust=0 reason=mlx scancount=1 engine=8.12.0-2206140000
 definitions=main-2207150054
Cc: Gwendal Grignou <gwendal@chromium.org>,
 Jishnu Prakash <quic_jprakash@quicinc.com>, Tomer Maimon <tmaimon77@gmail.com>,
 Alexandre Belloni <alexandre.belloni@bootlin.com>,
 "Rafael J. Wysocki" <rafael@kernel.org>,
 Linus Walleij <linus.walleij@linaro.org>, Amit Kucheria <amitk@kernel.org>,
 Tali Perry <tali.perry1@gmail.com>, Paul Cercueil <paul@crapouillou.net>,
 Miquel Raynal <miquel.raynal@bootlin.com>, Guenter Roeck <groeck@chromium.org>,
 Fabio Estevam <festevam@gmail.com>,
 Michael Hennerich <Michael.Hennerich@analog.com>,
 Lars-Peter Clausen <lars@metafoo.de>, Benjamin Fair <benjaminfair@google.com>,
 Daniel Lezcano <daniel.lezcano@linaro.org>, Haibo
 Chen <haibo.chen@nxp.com>, Christophe Branchereau <cbranchereau@gmail.com>,
 Nancy Yuen <yuenn@google.com>, Andy
 Shevchenko <andy.shevchenko@gmail.com>, Andy Gross <agross@kernel.org>,
 Zhang Rui <rui.zhang@intel.com>, Lorenzo Bianconi <lorenzo@kernel.org>,
 Saravanan Sekar <sravanhome@gmail.com>, Arnd Bergmann <arnd@arndb.de>,
 Sascha Hauer <s.hauer@pengutronix.de>, Cai Huoqing <cai.huoqing@linux.dev>,
 Matthias Brugger <matthias.bgg@gmail.com>,
 Bjorn Andersson <bjorn.andersson@linaro.org>,
 Benson Leung <bleung@chromium.org>,
 Pengutronix Kernel Team <kernel@pengutronix.de>,
 Avi Fishman <avifishman70@gmail.com>, Patrick Venture <venture@google.com>,
 Nicolas Ferre <nicolas.ferre@microchip.com>,
 Thara Gopinath <thara.gopinath@linaro.org>,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Eugen Hristev <eugen.hristev@microchip.com>, Shawn Guo <shawnguo@kernel.org>,
 Claudiu Beznea <claudiu.beznea@microchip.com>,
 Jonathan Cameron <jic23@kernel.org>
Subject: [Linux-stm32] [PATCH v3 13/15] iio: adc: stm32-adc: convert to
	device properties
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

TWFrZSB0aGUgY29udmVyc2lvbiB0byBmaXJtd2FyZSBhZ25vc3RpYyBkZXZpY2UgcHJvcGVydGll
cy4gQXMgcGFydCBvZgp0aGUgY29udmVyc2lvbiB0aGUgSUlPIGlua2VybiBpbnRlcmZhY2UgJ29m
X3hsYXRlKCknIGlzIGFsc28gY29udmVydGVkIHRvCidmd25vZGVfeGxhdGUoKScuIFRoZSBnb2Fs
IGlzIHRvIGNvbXBsZXRlbHkgZHJvcCAnb2ZfeGxhdGUnIGFuZCBoZW5jZSBPRgpkZXBlbmRlbmNp
ZXMgZnJvbSBJSU8uCgpTaWduZWQtb2ZmLWJ5OiBOdW5vIFPDoSA8bnVuby5zYUBhbmFsb2cuY29t
PgpSZXZpZXdlZC1ieTogQW5keSBTaGV2Y2hlbmtvIDxhbmR5LnNoZXZjaGVua29AZ21haWwuY29t
PgotLS0KIGRyaXZlcnMvaWlvL2FkYy9zdG0zMi1hZGMuYyB8IDEyNSArKysrKysrKysrKysrKysr
KysrKy0tLS0tLS0tLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCA3MCBpbnNlcnRpb25zKCspLCA1
NSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL2lpby9hZGMvc3RtMzItYWRjLmMg
Yi9kcml2ZXJzL2lpby9hZGMvc3RtMzItYWRjLmMKaW5kZXggMzk4NWZlOTcyODkyLi4yNDI0OGYx
ZGUxZDAgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvaWlvL2FkYy9zdG0zMi1hZGMuYworKysgYi9kcml2
ZXJzL2lpby9hZGMvc3RtMzItYWRjLmMKQEAgLTIxLDExICsyMSwxMSBAQAogI2luY2x1ZGUgPGxp
bnV4L2lvLmg+CiAjaW5jbHVkZSA8bGludXgvaW9wb2xsLmg+CiAjaW5jbHVkZSA8bGludXgvbW9k
dWxlLmg+CisjaW5jbHVkZSA8bGludXgvbW9kX2RldmljZXRhYmxlLmg+CiAjaW5jbHVkZSA8bGlu
dXgvbnZtZW0tY29uc3VtZXIuaD4KICNpbmNsdWRlIDxsaW51eC9wbGF0Zm9ybV9kZXZpY2UuaD4K
ICNpbmNsdWRlIDxsaW51eC9wbV9ydW50aW1lLmg+Ci0jaW5jbHVkZSA8bGludXgvb2YuaD4KLSNp
bmNsdWRlIDxsaW51eC9vZl9kZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51eC9wcm9wZXJ0eS5oPgog
CiAjaW5jbHVkZSAic3RtMzItYWRjLWNvcmUuaCIKIApAQCAtMjQxLDYgKzI0MSw3IEBAIHN0cnVj
dCBzdG0zMl9hZGNfY2ZnIHsKICAqIEBjaGFuX25hbWU6CQljaGFubmVsIG5hbWUgYXJyYXkKICAq
IEBudW1fZGlmZjoJCW51bWJlciBvZiBkaWZmZXJlbnRpYWwgY2hhbm5lbHMKICAqIEBpbnRfY2g6
CQlpbnRlcm5hbCBjaGFubmVsIGluZGV4ZXMgYXJyYXkKKyAqIEBuc21wczoJCW51bWJlciBvZiBj
aGFubmVscyB3aXRoIG9wdGlvbmFsIHNhbXBsZSB0aW1lCiAgKi8KIHN0cnVjdCBzdG0zMl9hZGMg
ewogCXN0cnVjdCBzdG0zMl9hZGNfY29tbW9uCSpjb21tb247CkBAIC0yNjcsNiArMjY4LDcgQEAg
c3RydWN0IHN0bTMyX2FkYyB7CiAJY2hhcgkJCWNoYW5fbmFtZVtTVE0zMl9BRENfQ0hfTUFYXVtT
VE0zMl9BRENfQ0hfU1pdOwogCXUzMgkJCW51bV9kaWZmOwogCWludAkJCWludF9jaFtTVE0zMl9B
RENfSU5UX0NIX05CXTsKKwlpbnQJCQluc21wczsKIH07CiAKIHN0cnVjdCBzdG0zMl9hZGNfZGlm
Zl9jaGFubmVsIHsKQEAgLTE1MzAsOCArMTUzMiw4IEBAIHN0YXRpYyBpbnQgc3RtMzJfYWRjX3Vw
ZGF0ZV9zY2FuX21vZGUoc3RydWN0IGlpb19kZXYgKmluZGlvX2RldiwKIAlyZXR1cm4gcmV0Owog
fQogCi1zdGF0aWMgaW50IHN0bTMyX2FkY19vZl94bGF0ZShzdHJ1Y3QgaWlvX2RldiAqaW5kaW9f
ZGV2LAotCQkJICAgICAgY29uc3Qgc3RydWN0IG9mX3BoYW5kbGVfYXJncyAqaWlvc3BlYykKK3N0
YXRpYyBpbnQgc3RtMzJfYWRjX2Z3bm9kZV94bGF0ZShzdHJ1Y3QgaWlvX2RldiAqaW5kaW9fZGV2
LAorCQkJCSAgY29uc3Qgc3RydWN0IGZ3bm9kZV9yZWZlcmVuY2VfYXJncyAqaWlvc3BlYykKIHsK
IAlpbnQgaTsKIApAQCAtMTU4NSw3ICsxNTg3LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBpaW9f
aW5mbyBzdG0zMl9hZGNfaWlvX2luZm8gPSB7CiAJLmh3Zmlmb19zZXRfd2F0ZXJtYXJrID0gc3Rt
MzJfYWRjX3NldF93YXRlcm1hcmssCiAJLnVwZGF0ZV9zY2FuX21vZGUgPSBzdG0zMl9hZGNfdXBk
YXRlX3NjYW5fbW9kZSwKIAkuZGVidWdmc19yZWdfYWNjZXNzID0gc3RtMzJfYWRjX2RlYnVnZnNf
cmVnX2FjY2VzcywKLQkub2ZfeGxhdGUgPSBzdG0zMl9hZGNfb2ZfeGxhdGUsCisJLmZ3bm9kZV94
bGF0ZSA9IHN0bTMyX2FkY19md25vZGVfeGxhdGUsCiB9OwogCiBzdGF0aWMgdW5zaWduZWQgaW50
IHN0bTMyX2FkY19kbWFfcmVzaWR1ZShzdHJ1Y3Qgc3RtMzJfYWRjICphZGMpCkBAIC0xNzgyLDE0
ICsxNzg0LDE0IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3QgaWlvX2NoYW5fc3BlY19leHRfaW5mbyBz
dG0zMl9hZGNfZXh0X2luZm9bXSA9IHsKIAl7fSwKIH07CiAKLXN0YXRpYyBpbnQgc3RtMzJfYWRj
X29mX2dldF9yZXNvbHV0aW9uKHN0cnVjdCBpaW9fZGV2ICppbmRpb19kZXYpCitzdGF0aWMgaW50
IHN0bTMyX2FkY19md19nZXRfcmVzb2x1dGlvbihzdHJ1Y3QgaWlvX2RldiAqaW5kaW9fZGV2KQog
ewotCXN0cnVjdCBkZXZpY2Vfbm9kZSAqbm9kZSA9IGluZGlvX2Rldi0+ZGV2Lm9mX25vZGU7CisJ
c3RydWN0IGRldmljZSAqZGV2ID0gJmluZGlvX2Rldi0+ZGV2OwogCXN0cnVjdCBzdG0zMl9hZGMg
KmFkYyA9IGlpb19wcml2KGluZGlvX2Rldik7CiAJdW5zaWduZWQgaW50IGk7CiAJdTMyIHJlczsK
IAotCWlmIChvZl9wcm9wZXJ0eV9yZWFkX3UzMihub2RlLCAiYXNzaWduZWQtcmVzb2x1dGlvbi1i
aXRzIiwgJnJlcykpCisJaWYgKGRldmljZV9wcm9wZXJ0eV9yZWFkX3UzMihkZXYsICJhc3NpZ25l
ZC1yZXNvbHV0aW9uLWJpdHMiLCAmcmVzKSkKIAkJcmVzID0gYWRjLT5jZmctPmFkY19pbmZvLT5y
ZXNvbHV0aW9uc1swXTsKIAogCWZvciAoaSA9IDA7IGkgPCBhZGMtPmNmZy0+YWRjX2luZm8tPm51
bV9yZXM7IGkrKykKQEAgLTE4NzMsMTEgKzE4NzUsMTEgQEAgc3RhdGljIHZvaWQgc3RtMzJfYWRj
X2NoYW5faW5pdF9vbmUoc3RydWN0IGlpb19kZXYgKmluZGlvX2RldiwKIAogc3RhdGljIGludCBz
dG0zMl9hZGNfZ2V0X2xlZ2FjeV9jaGFuX2NvdW50KHN0cnVjdCBpaW9fZGV2ICppbmRpb19kZXYs
IHN0cnVjdCBzdG0zMl9hZGMgKmFkYykKIHsKLQlzdHJ1Y3QgZGV2aWNlX25vZGUgKm5vZGUgPSBp
bmRpb19kZXYtPmRldi5vZl9ub2RlOworCXN0cnVjdCBkZXZpY2UgKmRldiA9ICZpbmRpb19kZXYt
PmRldjsKIAljb25zdCBzdHJ1Y3Qgc3RtMzJfYWRjX2luZm8gKmFkY19pbmZvID0gYWRjLT5jZmct
PmFkY19pbmZvOwogCWludCBudW1fY2hhbm5lbHMgPSAwLCByZXQ7CiAKLQlyZXQgPSBvZl9wcm9w
ZXJ0eV9jb3VudF91MzJfZWxlbXMobm9kZSwgInN0LGFkYy1jaGFubmVscyIpOworCXJldCA9IGRl
dmljZV9wcm9wZXJ0eV9jb3VudF91MzIoZGV2LCAic3QsYWRjLWNoYW5uZWxzIik7CiAJaWYgKHJl
dCA+IGFkY19pbmZvLT5tYXhfY2hhbm5lbHMpIHsKIAkJZGV2X2VycigmaW5kaW9fZGV2LT5kZXYs
ICJCYWQgc3QsYWRjLWNoYW5uZWxzP1xuIik7CiAJCXJldHVybiAtRUlOVkFMOwpAQCAtMTg4NSw4
ICsxODg3LDEyIEBAIHN0YXRpYyBpbnQgc3RtMzJfYWRjX2dldF9sZWdhY3lfY2hhbl9jb3VudChz
dHJ1Y3QgaWlvX2RldiAqaW5kaW9fZGV2LCBzdHJ1Y3Qgc3RtCiAJCW51bV9jaGFubmVscyArPSBy
ZXQ7CiAJfQogCi0JcmV0ID0gb2ZfcHJvcGVydHlfY291bnRfZWxlbXNfb2Zfc2l6ZShub2RlLCAi
c3QsYWRjLWRpZmYtY2hhbm5lbHMiLAotCQkJCQkgICAgICBzaXplb2Yoc3RydWN0IHN0bTMyX2Fk
Y19kaWZmX2NoYW5uZWwpKTsKKwkvKgorCSAqIGVhY2ggc3QsYWRjLWRpZmYtY2hhbm5lbHMgaXMg
YSBncm91cCBvZiAyIHUzMiBzbyB3ZSBkaXZpZGUgQHJldAorCSAqIHRvIGdldCB0aGUgKnJlYWwq
IG51bWJlciBvZiBjaGFubmVscy4KKwkgKi8KKwlyZXQgPSBkZXZpY2VfcHJvcGVydHlfY291bnRf
dTMyKGRldiwgInN0LGFkYy1kaWZmLWNoYW5uZWxzIik7CisJcmV0IC89IChpbnQpKHNpemVvZihz
dHJ1Y3Qgc3RtMzJfYWRjX2RpZmZfY2hhbm5lbCkgLyBzaXplb2YodTMyKSk7CiAJaWYgKHJldCA+
IGFkY19pbmZvLT5tYXhfY2hhbm5lbHMpIHsKIAkJZGV2X2VycigmaW5kaW9fZGV2LT5kZXYsICJC
YWQgc3QsYWRjLWRpZmYtY2hhbm5lbHM/XG4iKTsKIAkJcmV0dXJuIC1FSU5WQUw7CkBAIC0xODk2
LDggKzE5MDIsOCBAQCBzdGF0aWMgaW50IHN0bTMyX2FkY19nZXRfbGVnYWN5X2NoYW5fY291bnQo
c3RydWN0IGlpb19kZXYgKmluZGlvX2Rldiwgc3RydWN0IHN0bQogCX0KIAogCS8qIE9wdGlvbmFs
IHNhbXBsZSB0aW1lIGlzIHByb3ZpZGVkIGVpdGhlciBmb3IgZWFjaCwgb3IgYWxsIGNoYW5uZWxz
ICovCi0JcmV0ID0gb2ZfcHJvcGVydHlfY291bnRfdTMyX2VsZW1zKG5vZGUsICJzdCxtaW4tc2Ft
cGxlLXRpbWUtbnNlY3MiKTsKLQlpZiAocmV0ID4gMSAmJiByZXQgIT0gbnVtX2NoYW5uZWxzKSB7
CisJYWRjLT5uc21wcyA9IGRldmljZV9wcm9wZXJ0eV9jb3VudF91MzIoZGV2LCAic3QsbWluLXNh
bXBsZS10aW1lLW5zZWNzIik7CisJaWYgKGFkYy0+bnNtcHMgPiAxICYmIGFkYy0+bnNtcHMgIT0g
bnVtX2NoYW5uZWxzKSB7CiAJCWRldl9lcnIoJmluZGlvX2Rldi0+ZGV2LCAiSW52YWxpZCBzdCxt
aW4tc2FtcGxlLXRpbWUtbnNlY3NcbiIpOwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CkBAIC0xOTA3
LDIxICsxOTEzLDIwIEBAIHN0YXRpYyBpbnQgc3RtMzJfYWRjX2dldF9sZWdhY3lfY2hhbl9jb3Vu
dChzdHJ1Y3QgaWlvX2RldiAqaW5kaW9fZGV2LCBzdHJ1Y3Qgc3RtCiAKIHN0YXRpYyBpbnQgc3Rt
MzJfYWRjX2xlZ2FjeV9jaGFuX2luaXQoc3RydWN0IGlpb19kZXYgKmluZGlvX2RldiwKIAkJCQkg
ICAgICBzdHJ1Y3Qgc3RtMzJfYWRjICphZGMsCi0JCQkJICAgICAgc3RydWN0IGlpb19jaGFuX3Nw
ZWMgKmNoYW5uZWxzKQorCQkJCSAgICAgIHN0cnVjdCBpaW9fY2hhbl9zcGVjICpjaGFubmVscywK
KwkJCQkgICAgICBpbnQgbmNoYW5zKQogewotCXN0cnVjdCBkZXZpY2Vfbm9kZSAqbm9kZSA9IGlu
ZGlvX2Rldi0+ZGV2Lm9mX25vZGU7CiAJY29uc3Qgc3RydWN0IHN0bTMyX2FkY19pbmZvICphZGNf
aW5mbyA9IGFkYy0+Y2ZnLT5hZGNfaW5mbzsKIAlzdHJ1Y3Qgc3RtMzJfYWRjX2RpZmZfY2hhbm5l
bCBkaWZmW1NUTTMyX0FEQ19DSF9NQVhdOworCXN0cnVjdCBkZXZpY2UgKmRldiA9ICZpbmRpb19k
ZXYtPmRldjsKIAl1MzIgbnVtX2RpZmYgPSBhZGMtPm51bV9kaWZmOwogCWludCBzaXplID0gbnVt
X2RpZmYgKiBzaXplb2YoKmRpZmYpIC8gc2l6ZW9mKHUzMik7Ci0JaW50IHNjYW5faW5kZXggPSAw
LCB2YWwsIHJldCwgaTsKLQlzdHJ1Y3QgcHJvcGVydHkgKnByb3A7Ci0JY29uc3QgX19iZTMyICpj
dXI7Ci0JdTMyIHNtcCA9IDA7CisJaW50IHNjYW5faW5kZXggPSAwLCByZXQsIGksIGM7CisJdTMy
IHNtcCA9IDAsIHNtcHNbU1RNMzJfQURDX0NIX01BWF0sIGNoYW5zW1NUTTMyX0FEQ19DSF9NQVhd
OwogCiAJaWYgKG51bV9kaWZmKSB7Ci0JCXJldCA9IG9mX3Byb3BlcnR5X3JlYWRfdTMyX2FycmF5
KG5vZGUsICJzdCxhZGMtZGlmZi1jaGFubmVscyIsCi0JCQkJCQkgKHUzMiAqKWRpZmYsIHNpemUp
OworCQlyZXQgPSBkZXZpY2VfcHJvcGVydHlfcmVhZF91MzJfYXJyYXkoZGV2LCAic3QsYWRjLWRp
ZmYtY2hhbm5lbHMiLAorCQkJCQkJICAgICAodTMyICopZGlmZiwgc2l6ZSk7CiAJCWlmIChyZXQp
IHsKIAkJCWRldl9lcnIoJmluZGlvX2Rldi0+ZGV2LCAiRmFpbGVkIHRvIGdldCBkaWZmIGNoYW5u
ZWxzICVkXG4iLCByZXQpOwogCQkJcmV0dXJuIHJldDsKQEAgLTE5NDIsMzIgKzE5NDcsNDcgQEAg
c3RhdGljIGludCBzdG0zMl9hZGNfbGVnYWN5X2NoYW5faW5pdChzdHJ1Y3QgaWlvX2RldiAqaW5k
aW9fZGV2LAogCQl9CiAJfQogCi0Jb2ZfcHJvcGVydHlfZm9yX2VhY2hfdTMyKG5vZGUsICJzdCxh
ZGMtY2hhbm5lbHMiLCBwcm9wLCBjdXIsIHZhbCkgewotCQlpZiAodmFsID49IGFkY19pbmZvLT5t
YXhfY2hhbm5lbHMpIHsKLQkJCWRldl9lcnIoJmluZGlvX2Rldi0+ZGV2LCAiSW52YWxpZCBjaGFu
bmVsICVkXG4iLCB2YWwpOworCXJldCA9IGRldmljZV9wcm9wZXJ0eV9yZWFkX3UzMl9hcnJheShk
ZXYsICJzdCxhZGMtY2hhbm5lbHMiLCBjaGFucywKKwkJCQkJICAgICBuY2hhbnMpOworCWlmIChy
ZXQpCisJCXJldHVybiByZXQ7CisKKwlmb3IgKGMgPSAwOyBjIDwgbmNoYW5zOyBjKyspIHsKKwkJ
aWYgKGNoYW5zW2NdID49IGFkY19pbmZvLT5tYXhfY2hhbm5lbHMpIHsKKwkJCWRldl9lcnIoJmlu
ZGlvX2Rldi0+ZGV2LCAiSW52YWxpZCBjaGFubmVsICVkXG4iLAorCQkJCWNoYW5zW2NdKTsKIAkJ
CXJldHVybiAtRUlOVkFMOwogCQl9CiAKIAkJLyogQ2hhbm5lbCBjYW4ndCBiZSBjb25maWd1cmVk
IGJvdGggYXMgc2luZ2xlLWVuZGVkICYgZGlmZiAqLwogCQlmb3IgKGkgPSAwOyBpIDwgbnVtX2Rp
ZmY7IGkrKykgewotCQkJaWYgKHZhbCA9PSBkaWZmW2ldLnZpbnApIHsKLQkJCQlkZXZfZXJyKCZp
bmRpb19kZXYtPmRldiwgImNoYW5uZWwgJWQgbWlzY29uZmlndXJlZFxuIiwJdmFsKTsKKwkJCWlm
IChjaGFuc1tjXSA9PSBkaWZmW2ldLnZpbnApIHsKKwkJCQlkZXZfZXJyKCZpbmRpb19kZXYtPmRl
diwgImNoYW5uZWwgJWQgbWlzY29uZmlndXJlZFxuIiwJY2hhbnNbY10pOwogCQkJCXJldHVybiAt
RUlOVkFMOwogCQkJfQogCQl9Ci0JCXN0bTMyX2FkY19jaGFuX2luaXRfb25lKGluZGlvX2Rldiwg
JmNoYW5uZWxzW3NjYW5faW5kZXhdLCB2YWwsCi0JCQkJCTAsIHNjYW5faW5kZXgsIGZhbHNlKTsK
KwkJc3RtMzJfYWRjX2NoYW5faW5pdF9vbmUoaW5kaW9fZGV2LCAmY2hhbm5lbHNbc2Nhbl9pbmRl
eF0sCisJCQkJCWNoYW5zW2NdLCAwLCBzY2FuX2luZGV4LCBmYWxzZSk7CiAJCXNjYW5faW5kZXgr
KzsKIAl9CiAKKwlpZiAoYWRjLT5uc21wcyA+IDApIHsKKwkJcmV0ID0gZGV2aWNlX3Byb3BlcnR5
X3JlYWRfdTMyX2FycmF5KGRldiwgInN0LG1pbi1zYW1wbGUtdGltZS1uc2VjcyIsCisJCQkJCQkg
ICAgIHNtcHMsIGFkYy0+bnNtcHMpOworCQlpZiAocmV0KQorCQkJcmV0dXJuIHJldDsKKwl9CisK
IAlmb3IgKGkgPSAwOyBpIDwgc2Nhbl9pbmRleDsgaSsrKSB7CiAJCS8qCi0JCSAqIFVzaW5nIG9m
X3Byb3BlcnR5X3JlYWRfdTMyX2luZGV4KCksIHNtcCB2YWx1ZSB3aWxsIG9ubHkgYmUKLQkJICog
bW9kaWZpZWQgaWYgdmFsaWQgdTMyIHZhbHVlIGNhbiBiZSBkZWNvZGVkLiBUaGlzIGFsbG93cyB0
bwotCQkgKiBnZXQgZWl0aGVyIG5vIHZhbHVlLCAxIHNoYXJlZCB2YWx1ZSBmb3IgYWxsIGluZGV4
ZXMsIG9yIG9uZQotCQkgKiB2YWx1ZSBwZXIgY2hhbm5lbC4KKwkJICogVGhpcyBjaGVjayBpcyB1
c2VkIHdpdGggdGhlIGFib3ZlIGxvZ2ljIHNvIHRoYXQgc21wIHZhbHVlCisJCSAqIHdpbGwgb25s
eSBiZSBtb2RpZmllZCBpZiB2YWxpZCB1MzIgdmFsdWUgY2FuIGJlIGRlY29kZWQuIFRoaXMKKwkJ
ICogYWxsb3dzIHRvIGdldCBlaXRoZXIgbm8gdmFsdWUsIDEgc2hhcmVkIHZhbHVlIGZvciBhbGwg
aW5kZXhlcywKKwkJICogb3Igb25lIHZhbHVlIHBlciBjaGFubmVsLiBUaGUgcG9pbnQgaXMgdG8g
aGF2ZSB0aGUgc2FtZQorCQkgKiBiZWhhdmlvciBhcyAnb2ZfcHJvcGVydHlfcmVhZF91MzJfaW5k
ZXgoKScuCiAJCSAqLwotCQlvZl9wcm9wZXJ0eV9yZWFkX3UzMl9pbmRleChub2RlLCAic3QsbWlu
LXNhbXBsZS10aW1lLW5zZWNzIiwgaSwgJnNtcCk7CisJCWlmIChpIDwgYWRjLT5uc21wcykKKwkJ
CXNtcCA9IHNtcHNbaV07CiAKIAkJLyogUHJlcGFyZSBzYW1wbGluZyB0aW1lIHNldHRpbmdzICov
CiAJCXN0bTMyX2FkY19zbXByX2luaXQoYWRjLCBjaGFubmVsc1tpXS5jaGFubmVsLCBzbXApOwpA
QCAtMjAxMCwyMiArMjAzMCwyMSBAQCBzdGF0aWMgaW50IHN0bTMyX2FkY19nZW5lcmljX2NoYW5f
aW5pdChzdHJ1Y3QgaWlvX2RldiAqaW5kaW9fZGV2LAogCQkJCSAgICAgICBzdHJ1Y3Qgc3RtMzJf
YWRjICphZGMsCiAJCQkJICAgICAgIHN0cnVjdCBpaW9fY2hhbl9zcGVjICpjaGFubmVscykKIHsK
LQlzdHJ1Y3QgZGV2aWNlX25vZGUgKm5vZGUgPSBpbmRpb19kZXYtPmRldi5vZl9ub2RlOwogCWNv
bnN0IHN0cnVjdCBzdG0zMl9hZGNfaW5mbyAqYWRjX2luZm8gPSBhZGMtPmNmZy0+YWRjX2luZm87
Ci0Jc3RydWN0IGRldmljZV9ub2RlICpjaGlsZDsKKwlzdHJ1Y3QgZndub2RlX2hhbmRsZSAqY2hp
bGQ7CiAJY29uc3QgY2hhciAqbmFtZTsKIAlpbnQgdmFsLCBzY2FuX2luZGV4ID0gMCwgcmV0Owog
CWJvb2wgZGlmZmVyZW50aWFsOwogCXUzMiB2aW5bMl07CiAKLQlmb3JfZWFjaF9hdmFpbGFibGVf
Y2hpbGRfb2Zfbm9kZShub2RlLCBjaGlsZCkgewotCQlyZXQgPSBvZl9wcm9wZXJ0eV9yZWFkX3Uz
MihjaGlsZCwgInJlZyIsICZ2YWwpOworCWRldmljZV9mb3JfZWFjaF9jaGlsZF9ub2RlKCZpbmRp
b19kZXYtPmRldiwgY2hpbGQpIHsKKwkJcmV0ID0gZndub2RlX3Byb3BlcnR5X3JlYWRfdTMyKGNo
aWxkLCAicmVnIiwgJnZhbCk7CiAJCWlmIChyZXQpIHsKIAkJCWRldl9lcnIoJmluZGlvX2Rldi0+
ZGV2LCAiTWlzc2luZyBjaGFubmVsIGluZGV4ICVkXG4iLCByZXQpOwogCQkJZ290byBlcnI7CiAJ
CX0KIAotCQlyZXQgPSBvZl9wcm9wZXJ0eV9yZWFkX3N0cmluZyhjaGlsZCwgImxhYmVsIiwgJm5h
bWUpOworCQlyZXQgPSBmd25vZGVfcHJvcGVydHlfcmVhZF9zdHJpbmcoY2hpbGQsICJsYWJlbCIs
ICZuYW1lKTsKIAkJLyogbGFiZWwgaXMgb3B0aW9uYWwgKi8KIAkJaWYgKCFyZXQpIHsKIAkJCWlm
IChzdHJsZW4obmFtZSkgPj0gU1RNMzJfQURDX0NIX1NaKSB7CkBAIC0yMDUwLDcgKzIwNjksNyBA
QCBzdGF0aWMgaW50IHN0bTMyX2FkY19nZW5lcmljX2NoYW5faW5pdChzdHJ1Y3QgaWlvX2RldiAq
aW5kaW9fZGV2LAogCQl9CiAKIAkJZGlmZmVyZW50aWFsID0gZmFsc2U7Ci0JCXJldCA9IG9mX3By
b3BlcnR5X3JlYWRfdTMyX2FycmF5KGNoaWxkLCAiZGlmZi1jaGFubmVscyIsIHZpbiwgMik7CisJ
CXJldCA9IGZ3bm9kZV9wcm9wZXJ0eV9yZWFkX3UzMl9hcnJheShjaGlsZCwgImRpZmYtY2hhbm5l
bHMiLCB2aW4sIDIpOwogCQkvKiBkaWZmLWNoYW5uZWxzIGlzIG9wdGlvbmFsICovCiAJCWlmICgh
cmV0KSB7CiAJCQlkaWZmZXJlbnRpYWwgPSB0cnVlOwpAQCAtMjA2Nyw3ICsyMDg2LDcgQEAgc3Rh
dGljIGludCBzdG0zMl9hZGNfZ2VuZXJpY19jaGFuX2luaXQoc3RydWN0IGlpb19kZXYgKmluZGlv
X2RldiwKIAkJc3RtMzJfYWRjX2NoYW5faW5pdF9vbmUoaW5kaW9fZGV2LCAmY2hhbm5lbHNbc2Nh
bl9pbmRleF0sIHZhbCwKIAkJCQkJdmluWzFdLCBzY2FuX2luZGV4LCBkaWZmZXJlbnRpYWwpOwog
Ci0JCXJldCA9IG9mX3Byb3BlcnR5X3JlYWRfdTMyKGNoaWxkLCAic3QsbWluLXNhbXBsZS10aW1l
LW5zIiwgJnZhbCk7CisJCXJldCA9IGZ3bm9kZV9wcm9wZXJ0eV9yZWFkX3UzMihjaGlsZCwgInN0
LG1pbi1zYW1wbGUtdGltZS1ucyIsICZ2YWwpOwogCQkvKiBzdCxtaW4tc2FtcGxlLXRpbWUtbnMg
aXMgb3B0aW9uYWwgKi8KIAkJaWYgKCFyZXQpIHsKIAkJCXN0bTMyX2FkY19zbXByX2luaXQoYWRj
LCBjaGFubmVsc1tzY2FuX2luZGV4XS5jaGFubmVsLCB2YWwpOwpAQCAtMjA4NSwxNCArMjEwNCwx
MyBAQCBzdGF0aWMgaW50IHN0bTMyX2FkY19nZW5lcmljX2NoYW5faW5pdChzdHJ1Y3QgaWlvX2Rl
diAqaW5kaW9fZGV2LAogCXJldHVybiBzY2FuX2luZGV4OwogCiBlcnI6Ci0Jb2Zfbm9kZV9wdXQo
Y2hpbGQpOworCWZ3bm9kZV9oYW5kbGVfcHV0KGNoaWxkKTsKIAogCXJldHVybiByZXQ7CiB9CiAK
LXN0YXRpYyBpbnQgc3RtMzJfYWRjX2NoYW5fb2ZfaW5pdChzdHJ1Y3QgaWlvX2RldiAqaW5kaW9f
ZGV2LCBib29sIHRpbWVzdGFtcGluZykKK3N0YXRpYyBpbnQgc3RtMzJfYWRjX2NoYW5fZndfaW5p
dChzdHJ1Y3QgaWlvX2RldiAqaW5kaW9fZGV2LCBib29sIHRpbWVzdGFtcGluZykKIHsKLQlzdHJ1
Y3QgZGV2aWNlX25vZGUgKm5vZGUgPSBpbmRpb19kZXYtPmRldi5vZl9ub2RlOwogCXN0cnVjdCBz
dG0zMl9hZGMgKmFkYyA9IGlpb19wcml2KGluZGlvX2Rldik7CiAJY29uc3Qgc3RydWN0IHN0bTMy
X2FkY19pbmZvICphZGNfaW5mbyA9IGFkYy0+Y2ZnLT5hZGNfaW5mbzsKIAlzdHJ1Y3QgaWlvX2No
YW5fc3BlYyAqY2hhbm5lbHM7CkBAIC0yMTAyLDcgKzIxMjAsNyBAQCBzdGF0aWMgaW50IHN0bTMy
X2FkY19jaGFuX29mX2luaXQoc3RydWN0IGlpb19kZXYgKmluZGlvX2RldiwgYm9vbCB0aW1lc3Rh
bXBpbmcpCiAJZm9yIChpID0gMDsgaSA8IFNUTTMyX0FEQ19JTlRfQ0hfTkI7IGkrKykKIAkJYWRj
LT5pbnRfY2hbaV0gPSBTVE0zMl9BRENfSU5UX0NIX05PTkU7CiAKLQludW1fY2hhbm5lbHMgPSBv
Zl9nZXRfYXZhaWxhYmxlX2NoaWxkX2NvdW50KG5vZGUpOworCW51bV9jaGFubmVscyA9IGRldmlj
ZV9nZXRfY2hpbGRfbm9kZV9jb3VudCgmaW5kaW9fZGV2LT5kZXYpOwogCS8qIElmIG5vIGNoYW5u
ZWxzIGhhdmUgYmVlbiBmb3VuZCwgZmFsbGJhY2sgdG8gY2hhbm5lbHMgbGVnYWN5IHByb3BlcnRp
ZXMuICovCiAJaWYgKCFudW1fY2hhbm5lbHMpIHsKIAkJbGVnYWN5ID0gdHJ1ZTsKQEAgLTIxMzMs
NyArMjE1MSw4IEBAIHN0YXRpYyBpbnQgc3RtMzJfYWRjX2NoYW5fb2ZfaW5pdChzdHJ1Y3QgaWlv
X2RldiAqaW5kaW9fZGV2LCBib29sIHRpbWVzdGFtcGluZykKIAkJcmV0dXJuIC1FTk9NRU07CiAK
IAlpZiAobGVnYWN5KQotCQlyZXQgPSBzdG0zMl9hZGNfbGVnYWN5X2NoYW5faW5pdChpbmRpb19k
ZXYsIGFkYywgY2hhbm5lbHMpOworCQlyZXQgPSBzdG0zMl9hZGNfbGVnYWN5X2NoYW5faW5pdChp
bmRpb19kZXYsIGFkYywgY2hhbm5lbHMsCisJCQkJCQkgbnVtX2NoYW5uZWxzKTsKIAllbHNlCiAJ
CXJldCA9IHN0bTMyX2FkY19nZW5lcmljX2NoYW5faW5pdChpbmRpb19kZXYsIGFkYywgY2hhbm5l
bHMpOwogCWlmIChyZXQgPCAwKQpAQCAtMjIxNSw5ICsyMjM0LDYgQEAgc3RhdGljIGludCBzdG0z
Ml9hZGNfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAlib29sIHRpbWVzdGFt
cGluZyA9IGZhbHNlOwogCWludCByZXQ7CiAKLQlpZiAoIXBkZXYtPmRldi5vZl9ub2RlKQotCQly
ZXR1cm4gLUVOT0RFVjsKLQogCWluZGlvX2RldiA9IGRldm1faWlvX2RldmljZV9hbGxvYygmcGRl
di0+ZGV2LCBzaXplb2YoKmFkYykpOwogCWlmICghaW5kaW9fZGV2KQogCQlyZXR1cm4gLUVOT01F
TTsKQEAgLTIyMjYsMTcgKzIyNDIsMTYgQEAgc3RhdGljIGludCBzdG0zMl9hZGNfcHJvYmUoc3Ry
dWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAlhZGMtPmNvbW1vbiA9IGRldl9nZXRfZHJ2ZGF0
YShwZGV2LT5kZXYucGFyZW50KTsKIAlzcGluX2xvY2tfaW5pdCgmYWRjLT5sb2NrKTsKIAlpbml0
X2NvbXBsZXRpb24oJmFkYy0+Y29tcGxldGlvbik7Ci0JYWRjLT5jZmcgPSAoY29uc3Qgc3RydWN0
IHN0bTMyX2FkY19jZmcgKikKLQkJb2ZfbWF0Y2hfZGV2aWNlKGRldi0+ZHJpdmVyLT5vZl9tYXRj
aF90YWJsZSwgZGV2KS0+ZGF0YTsKKwlhZGMtPmNmZyA9IGRldmljZV9nZXRfbWF0Y2hfZGF0YShk
ZXYpOwogCiAJaW5kaW9fZGV2LT5uYW1lID0gZGV2X25hbWUoJnBkZXYtPmRldik7Ci0JaW5kaW9f
ZGV2LT5kZXYub2Zfbm9kZSA9IHBkZXYtPmRldi5vZl9ub2RlOworCWRldmljZV9zZXRfbm9kZSgm
aW5kaW9fZGV2LT5kZXYsIGRldl9md25vZGUoJnBkZXYtPmRldikpOwogCWluZGlvX2Rldi0+aW5m
byA9ICZzdG0zMl9hZGNfaWlvX2luZm87CiAJaW5kaW9fZGV2LT5tb2RlcyA9IElORElPX0RJUkVD
VF9NT0RFIHwgSU5ESU9fSEFSRFdBUkVfVFJJR0dFUkVEOwogCiAJcGxhdGZvcm1fc2V0X2RydmRh
dGEocGRldiwgaW5kaW9fZGV2KTsKIAotCXJldCA9IG9mX3Byb3BlcnR5X3JlYWRfdTMyKHBkZXYt
PmRldi5vZl9ub2RlLCAicmVnIiwgJmFkYy0+b2Zmc2V0KTsKKwlyZXQgPSBkZXZpY2VfcHJvcGVy
dHlfcmVhZF91MzIoZGV2LCAicmVnIiwgJmFkYy0+b2Zmc2V0KTsKIAlpZiAocmV0ICE9IDApIHsK
IAkJZGV2X2VycigmcGRldi0+ZGV2LCAibWlzc2luZyByZWcgcHJvcGVydHlcbiIpOwogCQlyZXR1
cm4gLUVJTlZBTDsKQEAgLTIyNjUsNyArMjI4MCw3IEBAIHN0YXRpYyBpbnQgc3RtMzJfYWRjX3By
b2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJCX0KIAl9CiAKLQlyZXQgPSBzdG0z
Ml9hZGNfb2ZfZ2V0X3Jlc29sdXRpb24oaW5kaW9fZGV2KTsKKwlyZXQgPSBzdG0zMl9hZGNfZndf
Z2V0X3Jlc29sdXRpb24oaW5kaW9fZGV2KTsKIAlpZiAocmV0IDwgMCkKIAkJcmV0dXJuIHJldDsK
IApAQCAtMjI4Miw3ICsyMjk3LDcgQEAgc3RhdGljIGludCBzdG0zMl9hZGNfcHJvYmUoc3RydWN0
IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAkJdGltZXN0YW1waW5nID0gdHJ1ZTsKIAl9CiAKLQly
ZXQgPSBzdG0zMl9hZGNfY2hhbl9vZl9pbml0KGluZGlvX2RldiwgdGltZXN0YW1waW5nKTsKKwly
ZXQgPSBzdG0zMl9hZGNfY2hhbl9md19pbml0KGluZGlvX2RldiwgdGltZXN0YW1waW5nKTsKIAlp
ZiAocmV0IDwgMCkKIAkJZ290byBlcnJfZG1hX2Rpc2FibGU7CiAKLS0gCjIuMzcuMQoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGludXgtc3RtMzIgbWFp
bGluZyBsaXN0CkxpbnV4LXN0bTMyQHN0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20KaHR0cHM6
Ly9zdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tL21haWxtYW4vbGlzdGluZm8vbGludXgtc3Rt
MzIK
