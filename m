Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 42B134D86A7
	for <lists+linux-stm32@lfdr.de>; Mon, 14 Mar 2022 15:17:40 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id EEFEEC60467;
	Mon, 14 Mar 2022 14:17:39 +0000 (UTC)
Received: from metis.ext.pengutronix.de (metis.ext.pengutronix.de
 [85.220.165.71])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 1440CC5F1EB
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Mon, 14 Mar 2022 14:17:39 +0000 (UTC)
Received: from drehscheibe.grey.stw.pengutronix.de ([2a0a:edc0:0:c01:1d::a2])
 by metis.ext.pengutronix.de with esmtps
 (TLS1.3:ECDHE_RSA_AES_256_GCM_SHA384:256) (Exim 4.92)
 (envelope-from <ukl@pengutronix.de>)
 id 1nTlVQ-00050t-Iu; Mon, 14 Mar 2022 15:17:04 +0100
Received: from [2a0a:edc0:0:900:1d::77] (helo=ptz.office.stw.pengutronix.de)
 by drehscheibe.grey.stw.pengutronix.de with esmtp (Exim 4.94.2)
 (envelope-from <ukl@pengutronix.de>)
 id 1nTlVN-000f3O-FH; Mon, 14 Mar 2022 15:17:00 +0100
Received: from ukl by ptz.office.stw.pengutronix.de with local (Exim 4.94.2)
 (envelope-from <ukl@pengutronix.de>)
 id 1nTlVL-0097bD-6i; Mon, 14 Mar 2022 15:16:59 +0100
From: =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig?= <u.kleine-koenig@pengutronix.de>
To: Michael Turquette <mturquette@baylibre.com>,
 Stephen Boyd <sboyd@kernel.org>, Russell King <linux@armlinux.org.uk>,
 Wim Van Sebroeck <wim@linux-watchdog.org>,
 Guenter Roeck <linux@roeck-us.net>
Date: Mon, 14 Mar 2022 15:16:38 +0100
Message-Id: <20220314141643.22184-12-u.kleine-koenig@pengutronix.de>
X-Mailer: git-send-email 2.35.1
In-Reply-To: <20220314141643.22184-1-u.kleine-koenig@pengutronix.de>
References: <20220314141643.22184-1-u.kleine-koenig@pengutronix.de>
MIME-Version: 1.0
X-Developer-Signature: v=1; a=openpgp-sha256; l=23797; i=uwe@kleine-koenig.org;
 h=from:subject; bh=z57t7hxiRb0NTIAkiUMcqO0E2/a/jQQAqPgx8u7xqp0=;
 b=owEBbQGS/pANAwAKAcH8FHityuwJAcsmYgBiL04OjJ1FYttOI7EmFq+M+HzPZrVVsUCPl4DrTTRp
 LASeDoCJATMEAAEKAB0WIQR+cioWkBis/z50pAvB/BR4rcrsCQUCYi9ODgAKCRDB/BR4rcrsCVb5B/
 oCGFESVzd5j1J6vbnXf8xVUoGYb6wv7mg2MmYMQpOfZOBE+HC6QiVcPTE8UrrpQrMZ7Q3kyzwgKhFD
 VFr0JrkdljITIRjQbGiP1/nhZ9HxvZylfahRcUn3RkjI7UGpqY3numSTZD2K/+SOWXygT2r/v38aXW
 y4gtNsNOMki+77Z1AZ33n73l3r+4Ijwvh5Trbyaphb197zfnp43MUyQ2HxvBWtyeepS/2Qd6jfLwxP
 64U0fzNNhCMfAihV+UWK1ORTzh1Zrp7WRDUiiOnd2p0XFjw+Q0QR2lk6iNtsPnE2XDvO24vkd5WwHe
 E6+1UtteAyud51zR+4hhlBhgDqHYVa
X-Developer-Key: i=uwe@kleine-koenig.org; a=openpgp;
 fpr=0D2511F322BFAB1C1580266BE2DCDD9132669BD6
X-SA-Exim-Connect-IP: 2a0a:edc0:0:c01:1d::a2
X-SA-Exim-Mail-From: ukl@pengutronix.de
X-SA-Exim-Scanned: No (on metis.ext.pengutronix.de);
 SAEximRunCond expanded to false
X-PTX-Original-Recipient: linux-stm32@st-md-mailman.stormreply.com
Cc: Neil Armstrong <narmstrong@baylibre.com>,
 Alexandre Torgue <alexandre.torgue@foss.st.com>,
 Bjorn Andersson <bjorn.andersson@linaro.org>,
 Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>,
 Fabio Estevam <festevam@gmail.com>, linux-clk@vger.kernel.org,
 Jerome Brunet <jbrunet@baylibre.com>, Kevin Hilman <khilman@baylibre.com>,
 Michal Simek <michal.simek@xilinx.com>,
 linux-stm32@st-md-mailman.stormreply.com, Andy Gross <agross@kernel.org>,
 NXP Linux Team <linux-imx@nxp.com>, Keguang Zhang <keguang.zhang@gmail.com>,
 linux-watchdog@vger.kernel.org,
 Martin Blumenstingl <martin.blumenstingl@googlemail.com>,
 linux-arm-msm@vger.kernel.org, Vladimir Zapolskiy <vz@mleia.com>,
 linux-amlogic@lists.infradead.org, kernel@pengutronix.de,
 linux-arm-kernel@lists.infradead.org, linux-mips@vger.kernel.org,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>, Shawn Guo <shawnguo@kernel.org>
Subject: [Linux-stm32] [PATCH v8 11/16] watchdog: Make use of
	devm_clk_get_enabled()
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

U2V2ZXJhbCBkcml2ZXJzIG1hbnVhbGx5IHJlZ2lzdGVyIGEgZGV2bSBoYW5kbGVyIHRvIGRpc2Fi
bGUgdGhlaXIgY2xrLgpDb252ZXJ0IHRoZW0gdG8gZGV2bV9jbGtfZ2V0X2VuYWJsZWQoKS4KClNp
Z25lZC1vZmYtYnk6IFV3ZSBLbGVpbmUtS8O2bmlnIDx1LmtsZWluZS1rb2VuaWdAcGVuZ3V0cm9u
aXguZGU+Ci0tLQogZHJpdmVycy93YXRjaGRvZy9jYWRlbmNlX3dkdC5jICAgIHwgMTcgKy0tLS0t
LS0tLS0tLS0tLS0KIGRyaXZlcnMvd2F0Y2hkb2cvZGF2aW5jaV93ZHQuYyAgICB8IDE4ICstLS0t
LS0tLS0tLS0tLS0tLQogZHJpdmVycy93YXRjaGRvZy9pbWdwZGNfd2R0LmMgICAgIHwgMzEgKysr
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogZHJpdmVycy93YXRjaGRvZy9pbXgyX3dkdC5j
ICAgICAgIHwgMTUgKy0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL3dhdGNoZG9nL2lteDd1bHBfd2R0
LmMgICAgfCAxNSArLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvd2F0Y2hkb2cvbG9vbmdzb24xX3dk
dC5jICB8IDE3ICstLS0tLS0tLS0tLS0tLS0tCiBkcml2ZXJzL3dhdGNoZG9nL2xwYzE4eHhfd2R0
LmMgICAgfCAzMCArKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvd2F0Y2hk
b2cvbWVzb25fZ3hiYl93ZHQuYyB8IDE2ICstLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvd2F0Y2hk
b2cvb2ZfeGlsaW54X3dkdC5jICB8IDE2ICstLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvd2F0Y2hk
b2cvcGljMzItZG10LmMgICAgICB8IDE1ICstLS0tLS0tLS0tLS0tLQogZHJpdmVycy93YXRjaGRv
Zy9waWMzMi13ZHQuYyAgICAgIHwgMTcgKy0tLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvd2F0Y2hk
b2cvcG54NDAwOF93ZHQuYyAgICB8IDE1ICstLS0tLS0tLS0tLS0tLQogZHJpdmVycy93YXRjaGRv
Zy9xY29tLXdkdC5jICAgICAgIHwgMTYgKy0tLS0tLS0tLS0tLS0tLQogZHJpdmVycy93YXRjaGRv
Zy9ydGQxMTl4X3dkdC5jICAgIHwgMTYgKy0tLS0tLS0tLS0tLS0tLQogZHJpdmVycy93YXRjaGRv
Zy9zdF9scGNfd2R0LmMgICAgIHwgMTYgKy0tLS0tLS0tLS0tLS0tLQogZHJpdmVycy93YXRjaGRv
Zy9zdG0zMl9pd2RnLmMgICAgIHwgMzEgKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQog
ZHJpdmVycy93YXRjaGRvZy92aXNjb250aV93ZHQuYyAgIHwgMTggKy0tLS0tLS0tLS0tLS0tLS0t
CiAxNyBmaWxlcyBjaGFuZ2VkLCAyMSBpbnNlcnRpb25zKCspLCAyOTggZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvZHJpdmVycy93YXRjaGRvZy9jYWRlbmNlX3dkdC5jIGIvZHJpdmVycy93YXRj
aGRvZy9jYWRlbmNlX3dkdC5jCmluZGV4IGJjOTllOTE2NDkzMC4uMjNkNDEwNDM4NjNmIDEwMDY0
NAotLS0gYS9kcml2ZXJzL3dhdGNoZG9nL2NhZGVuY2Vfd2R0LmMKKysrIGIvZHJpdmVycy93YXRj
aGRvZy9jYWRlbmNlX3dkdC5jCkBAIC0yNzQsMTEgKzI3NCw2IEBAIHN0YXRpYyBjb25zdCBzdHJ1
Y3Qgd2F0Y2hkb2dfb3BzIGNkbnNfd2R0X29wcyA9IHsKIAkuc2V0X3RpbWVvdXQgPSBjZG5zX3dk
dF9zZXR0aW1lb3V0LAogfTsKIAotc3RhdGljIHZvaWQgY2Ruc19jbGtfZGlzYWJsZV91bnByZXBh
cmUodm9pZCAqZGF0YSkKLXsKLQljbGtfZGlzYWJsZV91bnByZXBhcmUoZGF0YSk7Ci19Ci0KIC8q
KioqKioqKioqKioqKioqKioqKioqKipQbGF0Zm9ybSBPcGVyYXRpb25zKioqKioqKioqKioqKioq
KioqKioqKioqKioqKiovCiAvKioKICAqIGNkbnNfd2R0X3Byb2JlIC0gUHJvYmUgY2FsbCBmb3Ig
dGhlIGRldmljZS4KQEAgLTMzMywyMSArMzI4LDExIEBAIHN0YXRpYyBpbnQgY2Ruc193ZHRfcHJv
YmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAl3YXRjaGRvZ19zdG9wX29uX3JlYm9v
dChjZG5zX3dkdF9kZXZpY2UpOwogCXdhdGNoZG9nX3NldF9kcnZkYXRhKGNkbnNfd2R0X2Rldmlj
ZSwgd2R0KTsKIAotCXdkdC0+Y2xrID0gZGV2bV9jbGtfZ2V0KGRldiwgTlVMTCk7CisJd2R0LT5j
bGsgPSBkZXZtX2Nsa19nZXRfZW5hYmxlZChkZXYsIE5VTEwpOwogCWlmIChJU19FUlIod2R0LT5j
bGspKQogCQlyZXR1cm4gZGV2X2Vycl9wcm9iZShkZXYsIFBUUl9FUlIod2R0LT5jbGspLAogCQkJ
CSAgICAgImlucHV0IGNsb2NrIG5vdCBmb3VuZFxuIik7CiAKLQlyZXQgPSBjbGtfcHJlcGFyZV9l
bmFibGUod2R0LT5jbGspOwotCWlmIChyZXQpIHsKLQkJZGV2X2VycihkZXYsICJ1bmFibGUgdG8g
ZW5hYmxlIGNsb2NrXG4iKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0JcmV0ID0gZGV2bV9hZGRfYWN0
aW9uX29yX3Jlc2V0KGRldiwgY2Ruc19jbGtfZGlzYWJsZV91bnByZXBhcmUsCi0JCQkJICAgICAg
IHdkdC0+Y2xrKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCiAJY2xvY2tfZiA9IGNsa19n
ZXRfcmF0ZSh3ZHQtPmNsayk7CiAJaWYgKGNsb2NrX2YgPD0gQ0ROU19XRFRfQ0xLXzc1TUhaKSB7
CiAJCXdkdC0+cHJlc2NhbGVyID0gQ0ROU19XRFRfUFJFU0NBTEVfNTEyOwpkaWZmIC0tZ2l0IGEv
ZHJpdmVycy93YXRjaGRvZy9kYXZpbmNpX3dkdC5jIGIvZHJpdmVycy93YXRjaGRvZy9kYXZpbmNp
X3dkdC5jCmluZGV4IDU4NGE1Njg5M2I4MS4uNWYyMTg0YmRhN2IyIDEwMDY0NAotLS0gYS9kcml2
ZXJzL3dhdGNoZG9nL2RhdmluY2lfd2R0LmMKKysrIGIvZHJpdmVycy93YXRjaGRvZy9kYXZpbmNp
X3dkdC5jCkBAIC0xODksMTQgKzE4OSw4IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgd2F0Y2hkb2df
b3BzIGRhdmluY2lfd2R0X29wcyA9IHsKIAkucmVzdGFydAk9IGRhdmluY2lfd2R0X3Jlc3RhcnQs
CiB9OwogCi1zdGF0aWMgdm9pZCBkYXZpbmNpX2Nsa19kaXNhYmxlX3VucHJlcGFyZSh2b2lkICpk
YXRhKQotewotCWNsa19kaXNhYmxlX3VucHJlcGFyZShkYXRhKTsKLX0KLQogc3RhdGljIGludCBk
YXZpbmNpX3dkdF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogewotCWludCBy
ZXQgPSAwOwogCXN0cnVjdCBkZXZpY2UgKmRldiA9ICZwZGV2LT5kZXY7CiAJc3RydWN0IHdhdGNo
ZG9nX2RldmljZSAqd2RkOwogCXN0cnVjdCBkYXZpbmNpX3dkdF9kZXZpY2UgKmRhdmluY2lfd2R0
OwpAQCAtMjA1LDIxICsxOTksMTEgQEAgc3RhdGljIGludCBkYXZpbmNpX3dkdF9wcm9iZShzdHJ1
Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCWlmICghZGF2aW5jaV93ZHQpCiAJCXJldHVybiAt
RU5PTUVNOwogCi0JZGF2aW5jaV93ZHQtPmNsayA9IGRldm1fY2xrX2dldChkZXYsIE5VTEwpOwor
CWRhdmluY2lfd2R0LT5jbGsgPSBkZXZtX2Nsa19nZXRfZW5hYmxlZChkZXYsIE5VTEwpOwogCWlm
IChJU19FUlIoZGF2aW5jaV93ZHQtPmNsaykpCiAJCXJldHVybiBkZXZfZXJyX3Byb2JlKGRldiwg
UFRSX0VSUihkYXZpbmNpX3dkdC0+Y2xrKSwKIAkJCQkgICAgICJmYWlsZWQgdG8gZ2V0IGNsb2Nr
IG5vZGVcbiIpOwogCi0JcmV0ID0gY2xrX3ByZXBhcmVfZW5hYmxlKGRhdmluY2lfd2R0LT5jbGsp
OwotCWlmIChyZXQpIHsKLQkJZGV2X2VycihkZXYsICJmYWlsZWQgdG8gcHJlcGFyZSBjbG9ja1xu
Iik7Ci0JCXJldHVybiByZXQ7Ci0JfQotCXJldCA9IGRldm1fYWRkX2FjdGlvbl9vcl9yZXNldChk
ZXYsIGRhdmluY2lfY2xrX2Rpc2FibGVfdW5wcmVwYXJlLAotCQkJCSAgICAgICBkYXZpbmNpX3dk
dC0+Y2xrKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCiAJcGxhdGZvcm1fc2V0X2RydmRh
dGEocGRldiwgZGF2aW5jaV93ZHQpOwogCiAJd2RkCQkJPSAmZGF2aW5jaV93ZHQtPndkZDsKZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvd2F0Y2hkb2cvaW1ncGRjX3dkdC5jIGIvZHJpdmVycy93YXRjaGRv
Zy9pbWdwZGNfd2R0LmMKaW5kZXggYjU3ZmYzNzg3MDUyLi5hNTVmODAxODk1ZDQgMTAwNjQ0Ci0t
LSBhL2RyaXZlcnMvd2F0Y2hkb2cvaW1ncGRjX3dkdC5jCisrKyBiL2RyaXZlcnMvd2F0Y2hkb2cv
aW1ncGRjX3dkdC5jCkBAIC0xNzUsMTYgKzE3NSwxMSBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IHdh
dGNoZG9nX29wcyBwZGNfd2R0X29wcyA9IHsKIAkucmVzdGFydCAgICAgICAgPSBwZGNfd2R0X3Jl
c3RhcnQsCiB9OwogCi1zdGF0aWMgdm9pZCBwZGNfY2xrX2Rpc2FibGVfdW5wcmVwYXJlKHZvaWQg
KmRhdGEpCi17Ci0JY2xrX2Rpc2FibGVfdW5wcmVwYXJlKGRhdGEpOwotfQotCiBzdGF0aWMgaW50
IHBkY193ZHRfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIHsKIAlzdHJ1Y3Qg
ZGV2aWNlICpkZXYgPSAmcGRldi0+ZGV2OwogCXU2NCBkaXY7Ci0JaW50IHJldCwgdmFsOworCWlu
dCB2YWw7CiAJdW5zaWduZWQgbG9uZyBjbGtfcmF0ZTsKIAlzdHJ1Y3QgcGRjX3dkdF9kZXYgKnBk
Y193ZHQ7CiAKQEAgLTE5NiwzOCArMTkxLDE4IEBAIHN0YXRpYyBpbnQgcGRjX3dkdF9wcm9iZShz
dHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCWlmIChJU19FUlIocGRjX3dkdC0+YmFzZSkp
CiAJCXJldHVybiBQVFJfRVJSKHBkY193ZHQtPmJhc2UpOwogCi0JcGRjX3dkdC0+c3lzX2NsayA9
IGRldm1fY2xrX2dldChkZXYsICJzeXMiKTsKKwlwZGNfd2R0LT5zeXNfY2xrID0gZGV2bV9jbGtf
Z2V0X2VuYWJsZWQoZGV2LCAic3lzIik7CiAJaWYgKElTX0VSUihwZGNfd2R0LT5zeXNfY2xrKSkg
ewogCQlkZXZfZXJyKGRldiwgImZhaWxlZCB0byBnZXQgdGhlIHN5cyBjbG9ja1xuIik7CiAJCXJl
dHVybiBQVFJfRVJSKHBkY193ZHQtPnN5c19jbGspOwogCX0KIAotCXBkY193ZHQtPndkdF9jbGsg
PSBkZXZtX2Nsa19nZXQoZGV2LCAid2R0Iik7CisJcGRjX3dkdC0+d2R0X2NsayA9IGRldm1fY2xr
X2dldF9lbmFibGVkKGRldiwgIndkdCIpOwogCWlmIChJU19FUlIocGRjX3dkdC0+d2R0X2Nsaykp
IHsKIAkJZGV2X2VycihkZXYsICJmYWlsZWQgdG8gZ2V0IHRoZSB3ZHQgY2xvY2tcbiIpOwogCQly
ZXR1cm4gUFRSX0VSUihwZGNfd2R0LT53ZHRfY2xrKTsKIAl9CiAKLQlyZXQgPSBjbGtfcHJlcGFy
ZV9lbmFibGUocGRjX3dkdC0+c3lzX2Nsayk7Ci0JaWYgKHJldCkgewotCQlkZXZfZXJyKGRldiwg
ImNvdWxkIG5vdCBwcmVwYXJlIG9yIGVuYWJsZSBzeXMgY2xvY2tcbiIpOwotCQlyZXR1cm4gcmV0
OwotCX0KLQlyZXQgPSBkZXZtX2FkZF9hY3Rpb25fb3JfcmVzZXQoZGV2LCBwZGNfY2xrX2Rpc2Fi
bGVfdW5wcmVwYXJlLAotCQkJCSAgICAgICBwZGNfd2R0LT5zeXNfY2xrKTsKLQlpZiAocmV0KQot
CQlyZXR1cm4gcmV0OwotCi0JcmV0ID0gY2xrX3ByZXBhcmVfZW5hYmxlKHBkY193ZHQtPndkdF9j
bGspOwotCWlmIChyZXQpIHsKLQkJZGV2X2VycihkZXYsICJjb3VsZCBub3QgcHJlcGFyZSBvciBl
bmFibGUgd2R0IGNsb2NrXG4iKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0JcmV0ID0gZGV2bV9hZGRf
YWN0aW9uX29yX3Jlc2V0KGRldiwgcGRjX2Nsa19kaXNhYmxlX3VucHJlcGFyZSwKLQkJCQkgICAg
ICAgcGRjX3dkdC0+d2R0X2Nsayk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQogCS8qIFdl
IHVzZSB0aGUgY2xvY2sgcmF0ZSB0byBjYWxjdWxhdGUgdGhlIG1heCB0aW1lb3V0ICovCiAJY2xr
X3JhdGUgPSBjbGtfZ2V0X3JhdGUocGRjX3dkdC0+d2R0X2Nsayk7CiAJaWYgKGNsa19yYXRlID09
IDApIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvd2F0Y2hkb2cvaW14Ml93ZHQuYyBiL2RyaXZlcnMv
d2F0Y2hkb2cvaW14Ml93ZHQuYwppbmRleCA1MWJmYjc5Njg5OGIuLjI3M2Q3MjA1ODhiZiAxMDA2
NDQKLS0tIGEvZHJpdmVycy93YXRjaGRvZy9pbXgyX3dkdC5jCisrKyBiL2RyaXZlcnMvd2F0Y2hk
b2cvaW14Ml93ZHQuYwpAQCAtMjQ4LDExICsyNDgsNiBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IHJl
Z21hcF9jb25maWcgaW14Ml93ZHRfcmVnbWFwX2NvbmZpZyA9IHsKIAkubWF4X3JlZ2lzdGVyID0g
MHg4LAogfTsKIAotc3RhdGljIHZvaWQgaW14Ml93ZHRfYWN0aW9uKHZvaWQgKmRhdGEpCi17Ci0J
Y2xrX2Rpc2FibGVfdW5wcmVwYXJlKGRhdGEpOwotfQotCiBzdGF0aWMgaW50IF9faW5pdCBpbXgy
X3dkdF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogewogCXN0cnVjdCBkZXZp
Y2UgKmRldiA9ICZwZGV2LT5kZXY7CkBAIC0yNzcsNyArMjcyLDcgQEAgc3RhdGljIGludCBfX2lu
aXQgaW14Ml93ZHRfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAkJcmV0dXJu
IFBUUl9FUlIod2Rldi0+cmVnbWFwKTsKIAl9CiAKLQl3ZGV2LT5jbGsgPSBkZXZtX2Nsa19nZXQo
ZGV2LCBOVUxMKTsKKwl3ZGV2LT5jbGsgPSBkZXZtX2Nsa19nZXRfZW5hYmxlZChkZXYsIE5VTEwp
OwogCWlmIChJU19FUlIod2Rldi0+Y2xrKSkgewogCQlkZXZfZXJyKGRldiwgImNhbid0IGdldCBX
YXRjaGRvZyBjbG9ja1xuIik7CiAJCXJldHVybiBQVFJfRVJSKHdkZXYtPmNsayk7CkBAIC0yOTcs
MTQgKzI5Miw2IEBAIHN0YXRpYyBpbnQgX19pbml0IGlteDJfd2R0X3Byb2JlKHN0cnVjdCBwbGF0
Zm9ybV9kZXZpY2UgKnBkZXYpCiAJCQkJICAgICAgZGV2X25hbWUoZGV2KSwgd2RvZykpCiAJCQl3
ZG9nLT5pbmZvID0gJmlteDJfd2R0X3ByZXRpbWVvdXRfaW5mbzsKIAotCXJldCA9IGNsa19wcmVw
YXJlX2VuYWJsZSh3ZGV2LT5jbGspOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0KLQlyZXQg
PSBkZXZtX2FkZF9hY3Rpb25fb3JfcmVzZXQoZGV2LCBpbXgyX3dkdF9hY3Rpb24sIHdkZXYtPmNs
ayk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQogCXdkZXYtPmNsa19pc19vbiA9IHRydWU7
CiAKIAlyZWdtYXBfcmVhZCh3ZGV2LT5yZWdtYXAsIElNWDJfV0RUX1dSU1IsICZ2YWwpOwpkaWZm
IC0tZ2l0IGEvZHJpdmVycy93YXRjaGRvZy9pbXg3dWxwX3dkdC5jIGIvZHJpdmVycy93YXRjaGRv
Zy9pbXg3dWxwX3dkdC5jCmluZGV4IDkyMmI2MDM3NDI5NS4uNjE1MTdhYmYyZGJhIDEwMDY0NAot
LS0gYS9kcml2ZXJzL3dhdGNoZG9nL2lteDd1bHBfd2R0LmMKKysrIGIvZHJpdmVycy93YXRjaGRv
Zy9pbXg3dWxwX3dkdC5jCkBAIC0yMDAsMTEgKzIwMCw2IEBAIHN0YXRpYyBpbnQgaW14N3VscF93
ZHRfaW5pdCh2b2lkIF9faW9tZW0gKmJhc2UsIHVuc2lnbmVkIGludCB0aW1lb3V0KQogCXJldHVy
biByZXQ7CiB9CiAKLXN0YXRpYyB2b2lkIGlteDd1bHBfd2R0X2FjdGlvbih2b2lkICpkYXRhKQot
ewotCWNsa19kaXNhYmxlX3VucHJlcGFyZShkYXRhKTsKLX0KLQogc3RhdGljIGludCBpbXg3dWxw
X3dkdF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogewogCXN0cnVjdCBpbXg3
dWxwX3dkdF9kZXZpY2UgKmlteDd1bHBfd2R0OwpAQCAtMjIyLDIwICsyMTcsMTIgQEAgc3RhdGlj
IGludCBpbXg3dWxwX3dkdF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCWlm
IChJU19FUlIoaW14N3VscF93ZHQtPmJhc2UpKQogCQlyZXR1cm4gUFRSX0VSUihpbXg3dWxwX3dk
dC0+YmFzZSk7CiAKLQlpbXg3dWxwX3dkdC0+Y2xrID0gZGV2bV9jbGtfZ2V0KGRldiwgTlVMTCk7
CisJaW14N3VscF93ZHQtPmNsayA9IGRldm1fY2xrX2dldF9lbmFibGVkKGRldiwgTlVMTCk7CiAJ
aWYgKElTX0VSUihpbXg3dWxwX3dkdC0+Y2xrKSkgewogCQlkZXZfZXJyKGRldiwgIkZhaWxlZCB0
byBnZXQgd2F0Y2hkb2cgY2xvY2tcbiIpOwogCQlyZXR1cm4gUFRSX0VSUihpbXg3dWxwX3dkdC0+
Y2xrKTsKIAl9CiAKLQlyZXQgPSBjbGtfcHJlcGFyZV9lbmFibGUoaW14N3VscF93ZHQtPmNsayk7
Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQotCXJldCA9IGRldm1fYWRkX2FjdGlvbl9vcl9y
ZXNldChkZXYsIGlteDd1bHBfd2R0X2FjdGlvbiwgaW14N3VscF93ZHQtPmNsayk7Ci0JaWYgKHJl
dCkKLQkJcmV0dXJuIHJldDsKLQogCXdkb2cgPSAmaW14N3VscF93ZHQtPndkZDsKIAl3ZG9nLT5p
bmZvID0gJmlteDd1bHBfd2R0X2luZm87CiAJd2RvZy0+b3BzID0gJmlteDd1bHBfd2R0X29wczsK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvd2F0Y2hkb2cvbG9vbmdzb24xX3dkdC5jIGIvZHJpdmVycy93
YXRjaGRvZy9sb29uZ3NvbjFfd2R0LmMKaW5kZXggYmIzZDA3NWMwNjMzLi5jNTU2NTZjZmI0MDMg
MTAwNjQ0Ci0tLSBhL2RyaXZlcnMvd2F0Y2hkb2cvbG9vbmdzb24xX3dkdC5jCisrKyBiL2RyaXZl
cnMvd2F0Y2hkb2cvbG9vbmdzb24xX3dkdC5jCkBAIC03OSwxMSArNzksNiBAQCBzdGF0aWMgY29u
c3Qgc3RydWN0IHdhdGNoZG9nX29wcyBsczF4X3dkdF9vcHMgPSB7CiAJLnNldF90aW1lb3V0ID0g
bHMxeF93ZHRfc2V0X3RpbWVvdXQsCiB9OwogCi1zdGF0aWMgdm9pZCBsczF4X2Nsa19kaXNhYmxl
X3VucHJlcGFyZSh2b2lkICpkYXRhKQotewotCWNsa19kaXNhYmxlX3VucHJlcGFyZShkYXRhKTsK
LX0KLQogc3RhdGljIGludCBsczF4X3dkdF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpw
ZGV2KQogewogCXN0cnVjdCBkZXZpY2UgKmRldiA9ICZwZGV2LT5kZXY7CkBAIC0xMDAsMjAgKzk1
LDEwIEBAIHN0YXRpYyBpbnQgbHMxeF93ZHRfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAq
cGRldikKIAlpZiAoSVNfRVJSKGRydmRhdGEtPmJhc2UpKQogCQlyZXR1cm4gUFRSX0VSUihkcnZk
YXRhLT5iYXNlKTsKIAotCWRydmRhdGEtPmNsayA9IGRldm1fY2xrX2dldChkZXYsIHBkZXYtPm5h
bWUpOworCWRydmRhdGEtPmNsayA9IGRldm1fY2xrX2dldF9lbmFibGVkKGRldiwgcGRldi0+bmFt
ZSk7CiAJaWYgKElTX0VSUihkcnZkYXRhLT5jbGspKQogCQlyZXR1cm4gUFRSX0VSUihkcnZkYXRh
LT5jbGspOwogCi0JZXJyID0gY2xrX3ByZXBhcmVfZW5hYmxlKGRydmRhdGEtPmNsayk7Ci0JaWYg
KGVycikgewotCQlkZXZfZXJyKGRldiwgImNsayBlbmFibGUgZmFpbGVkXG4iKTsKLQkJcmV0dXJu
IGVycjsKLQl9Ci0JZXJyID0gZGV2bV9hZGRfYWN0aW9uX29yX3Jlc2V0KGRldiwgbHMxeF9jbGtf
ZGlzYWJsZV91bnByZXBhcmUsCi0JCQkJICAgICAgIGRydmRhdGEtPmNsayk7Ci0JaWYgKGVycikK
LQkJcmV0dXJuIGVycjsKLQogCWNsa19yYXRlID0gY2xrX2dldF9yYXRlKGRydmRhdGEtPmNsayk7
CiAJaWYgKCFjbGtfcmF0ZSkKIAkJcmV0dXJuIC1FSU5WQUw7CmRpZmYgLS1naXQgYS9kcml2ZXJz
L3dhdGNoZG9nL2xwYzE4eHhfd2R0LmMgYi9kcml2ZXJzL3dhdGNoZG9nL2xwYzE4eHhfd2R0LmMK
aW5kZXggNjBiNmQ3NGYyNjdkLi4xYjliNWYyMWEwZGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvd2F0
Y2hkb2cvbHBjMTh4eF93ZHQuYworKysgYi9kcml2ZXJzL3dhdGNoZG9nL2xwYzE4eHhfd2R0LmMK
QEAgLTE5NywxNiArMTk3LDEwIEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgd2F0Y2hkb2dfb3BzIGxw
YzE4eHhfd2R0X29wcyA9IHsKIAkucmVzdGFydCAgICAgICAgPSBscGMxOHh4X3dkdF9yZXN0YXJ0
LAogfTsKIAotc3RhdGljIHZvaWQgbHBjMTh4eF9jbGtfZGlzYWJsZV91bnByZXBhcmUodm9pZCAq
ZGF0YSkKLXsKLQljbGtfZGlzYWJsZV91bnByZXBhcmUoZGF0YSk7Ci19Ci0KIHN0YXRpYyBpbnQg
bHBjMTh4eF93ZHRfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIHsKIAlzdHJ1
Y3QgbHBjMTh4eF93ZHRfZGV2ICpscGMxOHh4X3dkdDsKIAlzdHJ1Y3QgZGV2aWNlICpkZXYgPSAm
cGRldi0+ZGV2OwotCWludCByZXQ7CiAKIAlscGMxOHh4X3dkdCA9IGRldm1fa3phbGxvYyhkZXYs
IHNpemVvZigqbHBjMTh4eF93ZHQpLCBHRlBfS0VSTkVMKTsKIAlpZiAoIWxwYzE4eHhfd2R0KQpA
QCAtMjE2LDM4ICsyMTAsMTggQEAgc3RhdGljIGludCBscGMxOHh4X3dkdF9wcm9iZShzdHJ1Y3Qg
cGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCWlmIChJU19FUlIobHBjMTh4eF93ZHQtPmJhc2UpKQog
CQlyZXR1cm4gUFRSX0VSUihscGMxOHh4X3dkdC0+YmFzZSk7CiAKLQlscGMxOHh4X3dkdC0+cmVn
X2NsayA9IGRldm1fY2xrX2dldChkZXYsICJyZWciKTsKKwlscGMxOHh4X3dkdC0+cmVnX2NsayA9
IGRldm1fY2xrX2dldF9lbmFibGVkKGRldiwgInJlZyIpOwogCWlmIChJU19FUlIobHBjMTh4eF93
ZHQtPnJlZ19jbGspKSB7CiAJCWRldl9lcnIoZGV2LCAiZmFpbGVkIHRvIGdldCB0aGUgcmVnIGNs
b2NrXG4iKTsKIAkJcmV0dXJuIFBUUl9FUlIobHBjMTh4eF93ZHQtPnJlZ19jbGspOwogCX0KIAot
CWxwYzE4eHhfd2R0LT53ZHRfY2xrID0gZGV2bV9jbGtfZ2V0KGRldiwgIndkdGNsayIpOworCWxw
YzE4eHhfd2R0LT53ZHRfY2xrID0gZGV2bV9jbGtfZ2V0X2VuYWJsZWQoZGV2LCAid2R0Y2xrIik7
CiAJaWYgKElTX0VSUihscGMxOHh4X3dkdC0+d2R0X2NsaykpIHsKIAkJZGV2X2VycihkZXYsICJm
YWlsZWQgdG8gZ2V0IHRoZSB3ZHQgY2xvY2tcbiIpOwogCQlyZXR1cm4gUFRSX0VSUihscGMxOHh4
X3dkdC0+d2R0X2Nsayk7CiAJfQogCi0JcmV0ID0gY2xrX3ByZXBhcmVfZW5hYmxlKGxwYzE4eHhf
d2R0LT5yZWdfY2xrKTsKLQlpZiAocmV0KSB7Ci0JCWRldl9lcnIoZGV2LCAiY291bGQgbm90IHBy
ZXBhcmUgb3IgZW5hYmxlIHN5cyBjbG9ja1xuIik7Ci0JCXJldHVybiByZXQ7Ci0JfQotCXJldCA9
IGRldm1fYWRkX2FjdGlvbl9vcl9yZXNldChkZXYsIGxwYzE4eHhfY2xrX2Rpc2FibGVfdW5wcmVw
YXJlLAotCQkJCSAgICAgICBscGMxOHh4X3dkdC0+cmVnX2Nsayk7Ci0JaWYgKHJldCkKLQkJcmV0
dXJuIHJldDsKLQotCXJldCA9IGNsa19wcmVwYXJlX2VuYWJsZShscGMxOHh4X3dkdC0+d2R0X2Ns
ayk7Ci0JaWYgKHJldCkgewotCQlkZXZfZXJyKGRldiwgImNvdWxkIG5vdCBwcmVwYXJlIG9yIGVu
YWJsZSB3ZHQgY2xvY2tcbiIpOwotCQlyZXR1cm4gcmV0OwotCX0KLQlyZXQgPSBkZXZtX2FkZF9h
Y3Rpb25fb3JfcmVzZXQoZGV2LCBscGMxOHh4X2Nsa19kaXNhYmxlX3VucHJlcGFyZSwKLQkJCQkg
ICAgICAgbHBjMTh4eF93ZHQtPndkdF9jbGspOwotCWlmIChyZXQpCi0JCXJldHVybiByZXQ7Ci0K
IAkvKiBXZSB1c2UgdGhlIGNsb2NrIHJhdGUgdG8gY2FsY3VsYXRlIHRpbWVvdXRzICovCiAJbHBj
MTh4eF93ZHQtPmNsa19yYXRlID0gY2xrX2dldF9yYXRlKGxwYzE4eHhfd2R0LT53ZHRfY2xrKTsK
IAlpZiAobHBjMTh4eF93ZHQtPmNsa19yYXRlID09IDApIHsKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
d2F0Y2hkb2cvbWVzb25fZ3hiYl93ZHQuYyBiL2RyaXZlcnMvd2F0Y2hkb2cvbWVzb25fZ3hiYl93
ZHQuYwppbmRleCBkM2M5ZTJmNmU2M2IuLmNmNjVkMDk2ZjNjMCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy93YXRjaGRvZy9tZXNvbl9neGJiX3dkdC5jCisrKyBiL2RyaXZlcnMvd2F0Y2hkb2cvbWVzb25f
Z3hiYl93ZHQuYwpAQCAtMTQ2LDE2ICsxNDYsMTAgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBvZl9k
ZXZpY2VfaWQgbWVzb25fZ3hiYl93ZHRfZHRfaWRzW10gPSB7CiB9OwogTU9EVUxFX0RFVklDRV9U
QUJMRShvZiwgbWVzb25fZ3hiYl93ZHRfZHRfaWRzKTsKIAotc3RhdGljIHZvaWQgbWVzb25fY2xr
X2Rpc2FibGVfdW5wcmVwYXJlKHZvaWQgKmRhdGEpCi17Ci0JY2xrX2Rpc2FibGVfdW5wcmVwYXJl
KGRhdGEpOwotfQotCiBzdGF0aWMgaW50IG1lc29uX2d4YmJfd2R0X3Byb2JlKHN0cnVjdCBwbGF0
Zm9ybV9kZXZpY2UgKnBkZXYpCiB7CiAJc3RydWN0IGRldmljZSAqZGV2ID0gJnBkZXYtPmRldjsK
IAlzdHJ1Y3QgbWVzb25fZ3hiYl93ZHQgKmRhdGE7Ci0JaW50IHJldDsKIAogCWRhdGEgPSBkZXZt
X2t6YWxsb2MoZGV2LCBzaXplb2YoKmRhdGEpLCBHRlBfS0VSTkVMKTsKIAlpZiAoIWRhdGEpCkBA
IC0xNjUsMTggKzE1OSwxMCBAQCBzdGF0aWMgaW50IG1lc29uX2d4YmJfd2R0X3Byb2JlKHN0cnVj
dCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJaWYgKElTX0VSUihkYXRhLT5yZWdfYmFzZSkpCiAJ
CXJldHVybiBQVFJfRVJSKGRhdGEtPnJlZ19iYXNlKTsKIAotCWRhdGEtPmNsayA9IGRldm1fY2xr
X2dldChkZXYsIE5VTEwpOworCWRhdGEtPmNsayA9IGRldm1fY2xrX2dldF9lbmFibGVkKGRldiwg
TlVMTCk7CiAJaWYgKElTX0VSUihkYXRhLT5jbGspKQogCQlyZXR1cm4gUFRSX0VSUihkYXRhLT5j
bGspOwogCi0JcmV0ID0gY2xrX3ByZXBhcmVfZW5hYmxlKGRhdGEtPmNsayk7Ci0JaWYgKHJldCkK
LQkJcmV0dXJuIHJldDsKLQlyZXQgPSBkZXZtX2FkZF9hY3Rpb25fb3JfcmVzZXQoZGV2LCBtZXNv
bl9jbGtfZGlzYWJsZV91bnByZXBhcmUsCi0JCQkJICAgICAgIGRhdGEtPmNsayk7Ci0JaWYgKHJl
dCkKLQkJcmV0dXJuIHJldDsKLQogCXBsYXRmb3JtX3NldF9kcnZkYXRhKHBkZXYsIGRhdGEpOwog
CiAJZGF0YS0+d2R0X2Rldi5wYXJlbnQgPSBkZXY7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3dhdGNo
ZG9nL29mX3hpbGlueF93ZHQuYyBiL2RyaXZlcnMvd2F0Y2hkb2cvb2ZfeGlsaW54X3dkdC5jCmlu
ZGV4IDMzMTg1NDQzNjZiOC4uMmEwNzljYTA0YWEzIDEwMDY0NAotLS0gYS9kcml2ZXJzL3dhdGNo
ZG9nL29mX3hpbGlueF93ZHQuYworKysgYi9kcml2ZXJzL3dhdGNoZG9nL29mX3hpbGlueF93ZHQu
YwpAQCAtMTU0LDExICsxNTQsNiBAQCBzdGF0aWMgdTMyIHh3ZHRfc2VsZnRlc3Qoc3RydWN0IHh3
ZHRfZGV2aWNlICp4ZGV2KQogCQlyZXR1cm4gWFdUX1RJTUVSX0ZBSUxFRDsKIH0KIAotc3RhdGlj
IHZvaWQgeHdkdF9jbGtfZGlzYWJsZV91bnByZXBhcmUodm9pZCAqZGF0YSkKLXsKLQljbGtfZGlz
YWJsZV91bnByZXBhcmUoZGF0YSk7Ci19Ci0KIHN0YXRpYyBpbnQgeHdkdF9wcm9iZShzdHJ1Y3Qg
cGxhdGZvcm1fZGV2aWNlICpwZGV2KQogewogCXN0cnVjdCBkZXZpY2UgKmRldiA9ICZwZGV2LT5k
ZXY7CkBAIC0xOTMsNyArMTg4LDcgQEAgc3RhdGljIGludCB4d2R0X3Byb2JlKHN0cnVjdCBwbGF0
Zm9ybV9kZXZpY2UgKnBkZXYpCiAKIAl3YXRjaGRvZ19zZXRfbm93YXlvdXQoeGlsaW54X3dkdF93
ZGQsIGVuYWJsZV9vbmNlKTsKIAotCXhkZXYtPmNsayA9IGRldm1fY2xrX2dldChkZXYsIE5VTEwp
OworCXhkZXYtPmNsayA9IGRldm1fY2xrX2dldF9lbmFibGVkKGRldiwgTlVMTCk7CiAJaWYgKElT
X0VSUih4ZGV2LT5jbGspKSB7CiAJCWlmIChQVFJfRVJSKHhkZXYtPmNsaykgIT0gLUVOT0VOVCkK
IAkJCXJldHVybiBQVFJfRVJSKHhkZXYtPmNsayk7CkBAIC0yMTEsMTUgKzIwNiw2IEBAIHN0YXRp
YyBpbnQgeHdkdF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCQkJCSAiVGhl
IHdhdGNoZG9nIGNsb2NrIGZyZXEgY2Fubm90IGJlIG9idGFpbmVkXG4iKTsKIAl9IGVsc2Ugewog
CQlwZnJlcSA9IGNsa19nZXRfcmF0ZSh4ZGV2LT5jbGspOwotCQlyYyA9IGNsa19wcmVwYXJlX2Vu
YWJsZSh4ZGV2LT5jbGspOwotCQlpZiAocmMpIHsKLQkJCWRldl9lcnIoZGV2LCAidW5hYmxlIHRv
IGVuYWJsZSBjbG9ja1xuIik7Ci0JCQlyZXR1cm4gcmM7Ci0JCX0KLQkJcmMgPSBkZXZtX2FkZF9h
Y3Rpb25fb3JfcmVzZXQoZGV2LCB4d2R0X2Nsa19kaXNhYmxlX3VucHJlcGFyZSwKLQkJCQkJICAg
ICAgeGRldi0+Y2xrKTsKLQkJaWYgKHJjKQotCQkJcmV0dXJuIHJjOwogCX0KIAogCS8qCmRpZmYg
LS1naXQgYS9kcml2ZXJzL3dhdGNoZG9nL3BpYzMyLWRtdC5jIGIvZHJpdmVycy93YXRjaGRvZy9w
aWMzMi1kbXQuYwppbmRleCBmNDMwNjJiM2M0YzguLmJjNGNjZGRjNzVhMyAxMDA2NDQKLS0tIGEv
ZHJpdmVycy93YXRjaGRvZy9waWMzMi1kbXQuYworKysgYi9kcml2ZXJzL3dhdGNoZG9nL3BpYzMy
LWRtdC5jCkBAIC0xNjQsMTEgKzE2NCw2IEBAIHN0YXRpYyBzdHJ1Y3Qgd2F0Y2hkb2dfZGV2aWNl
IHBpYzMyX2RtdF93ZGQgPSB7CiAJLm9wcwkJPSAmcGljMzJfZG10X2ZvcHMsCiB9OwogCi1zdGF0
aWMgdm9pZCBwaWMzMl9jbGtfZGlzYWJsZV91bnByZXBhcmUodm9pZCAqZGF0YSkKLXsKLQljbGtf
ZGlzYWJsZV91bnByZXBhcmUoZGF0YSk7Ci19Ci0KIHN0YXRpYyBpbnQgcGljMzJfZG10X3Byb2Jl
KHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiB7CiAJc3RydWN0IGRldmljZSAqZGV2ID0g
JnBkZXYtPmRldjsKQEAgLTE4NCwyMCArMTc5LDEyIEBAIHN0YXRpYyBpbnQgcGljMzJfZG10X3By
b2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJaWYgKElTX0VSUihkbXQtPnJlZ3Mp
KQogCQlyZXR1cm4gUFRSX0VSUihkbXQtPnJlZ3MpOwogCi0JZG10LT5jbGsgPSBkZXZtX2Nsa19n
ZXQoZGV2LCBOVUxMKTsKKwlkbXQtPmNsayA9IGRldm1fY2xrX2dldF9lbmFibGVkKGRldiwgTlVM
TCk7CiAJaWYgKElTX0VSUihkbXQtPmNsaykpIHsKIAkJZGV2X2VycihkZXYsICJjbGsgbm90IGZv
dW5kXG4iKTsKIAkJcmV0dXJuIFBUUl9FUlIoZG10LT5jbGspOwogCX0KIAotCXJldCA9IGNsa19w
cmVwYXJlX2VuYWJsZShkbXQtPmNsayk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQlyZXQg
PSBkZXZtX2FkZF9hY3Rpb25fb3JfcmVzZXQoZGV2LCBwaWMzMl9jbGtfZGlzYWJsZV91bnByZXBh
cmUsCi0JCQkJICAgICAgIGRtdC0+Y2xrKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCiAJ
d2RkLT50aW1lb3V0ID0gcGljMzJfZG10X2dldF90aW1lb3V0X3NlY3MoZG10KTsKIAlpZiAoIXdk
ZC0+dGltZW91dCkgewogCQlkZXZfZXJyKGRldiwgImZhaWxlZCB0byByZWFkIHdhdGNoZG9nIHJl
Z2lzdGVyIHRpbWVvdXRcbiIpOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy93YXRjaGRvZy9waWMzMi13
ZHQuYyBiL2RyaXZlcnMvd2F0Y2hkb2cvcGljMzItd2R0LmMKaW5kZXggNDE3MTVkNjhkOWU5Li42
ZDFhMDAyMjI5OTEgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvd2F0Y2hkb2cvcGljMzItd2R0LmMKKysr
IGIvZHJpdmVycy93YXRjaGRvZy9waWMzMi13ZHQuYwpAQCAtMTYyLDExICsxNjIsNiBAQCBzdGF0
aWMgY29uc3Qgc3RydWN0IG9mX2RldmljZV9pZCBwaWMzMl93ZHRfZHRfaWRzW10gPSB7CiB9Owog
TU9EVUxFX0RFVklDRV9UQUJMRShvZiwgcGljMzJfd2R0X2R0X2lkcyk7CiAKLXN0YXRpYyB2b2lk
IHBpYzMyX2Nsa19kaXNhYmxlX3VucHJlcGFyZSh2b2lkICpkYXRhKQotewotCWNsa19kaXNhYmxl
X3VucHJlcGFyZShkYXRhKTsKLX0KLQogc3RhdGljIGludCBwaWMzMl93ZHRfZHJ2X3Byb2JlKHN0
cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiB7CiAJc3RydWN0IGRldmljZSAqZGV2ID0gJnBk
ZXYtPmRldjsKQEAgLTE4NiwyMiArMTgxLDEyIEBAIHN0YXRpYyBpbnQgcGljMzJfd2R0X2Rydl9w
cm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogCWlmICghd2R0LT5yc3RfYmFzZSkK
IAkJcmV0dXJuIC1FTk9NRU07CiAKLQl3ZHQtPmNsayA9IGRldm1fY2xrX2dldChkZXYsIE5VTEwp
OworCXdkdC0+Y2xrID0gZGV2bV9jbGtfZ2V0X2VuYWJsZWQoZGV2LCBOVUxMKTsKIAlpZiAoSVNf
RVJSKHdkdC0+Y2xrKSkgewogCQlkZXZfZXJyKGRldiwgImNsayBub3QgZm91bmRcbiIpOwogCQly
ZXR1cm4gUFRSX0VSUih3ZHQtPmNsayk7CiAJfQogCi0JcmV0ID0gY2xrX3ByZXBhcmVfZW5hYmxl
KHdkdC0+Y2xrKTsKLQlpZiAocmV0KSB7Ci0JCWRldl9lcnIoZGV2LCAiY2xrIGVuYWJsZSBmYWls
ZWRcbiIpOwotCQlyZXR1cm4gcmV0OwotCX0KLQlyZXQgPSBkZXZtX2FkZF9hY3Rpb25fb3JfcmVz
ZXQoZGV2LCBwaWMzMl9jbGtfZGlzYWJsZV91bnByZXBhcmUsCi0JCQkJICAgICAgIHdkdC0+Y2xr
KTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCiAJaWYgKHBpYzMyX3dkdF9pc193aW5fZW5h
YmxlZCh3ZHQpKSB7CiAJCWRldl9lcnIoZGV2LCAid2luZG93ZWQtY2xlYXIgbW9kZSBpcyBub3Qg
c3VwcG9ydGVkLlxuIik7CiAJCXJldHVybiAtRU5PREVWOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy93
YXRjaGRvZy9wbng0MDA4X3dkdC5jIGIvZHJpdmVycy93YXRjaGRvZy9wbng0MDA4X3dkdC5jCmlu
ZGV4IGUwZWExMzNjMTY5MC4uODdhNDRhNTY3NWExIDEwMDY0NAotLS0gYS9kcml2ZXJzL3dhdGNo
ZG9nL3BueDQwMDhfd2R0LmMKKysrIGIvZHJpdmVycy93YXRjaGRvZy9wbng0MDA4X3dkdC5jCkBA
IC0xNzksMTEgKzE3OSw2IEBAIHN0YXRpYyBzdHJ1Y3Qgd2F0Y2hkb2dfZGV2aWNlIHBueDQwMDhf
d2RkID0gewogCS5tYXhfdGltZW91dCA9IE1BWF9IRUFSVEJFQVQsCiB9OwogCi1zdGF0aWMgdm9p
ZCBwbng0MDA4X2Nsa19kaXNhYmxlX3VucHJlcGFyZSh2b2lkICpkYXRhKQotewotCWNsa19kaXNh
YmxlX3VucHJlcGFyZShkYXRhKTsKLX0KLQogc3RhdGljIGludCBwbng0MDA4X3dkdF9wcm9iZShz
dHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2KQogewogCXN0cnVjdCBkZXZpY2UgKmRldiA9ICZw
ZGV2LT5kZXY7CkBAIC0xOTUsMTggKzE5MCwxMCBAQCBzdGF0aWMgaW50IHBueDQwMDhfd2R0X3By
b2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJaWYgKElTX0VSUih3ZHRfYmFzZSkp
CiAJCXJldHVybiBQVFJfRVJSKHdkdF9iYXNlKTsKIAotCXdkdF9jbGsgPSBkZXZtX2Nsa19nZXQo
ZGV2LCBOVUxMKTsKKwl3ZHRfY2xrID0gZGV2bV9jbGtfZ2V0X2VuYWJsZWQoZGV2LCBOVUxMKTsK
IAlpZiAoSVNfRVJSKHdkdF9jbGspKQogCQlyZXR1cm4gUFRSX0VSUih3ZHRfY2xrKTsKIAotCXJl
dCA9IGNsa19wcmVwYXJlX2VuYWJsZSh3ZHRfY2xrKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0
OwotCXJldCA9IGRldm1fYWRkX2FjdGlvbl9vcl9yZXNldChkZXYsIHBueDQwMDhfY2xrX2Rpc2Fi
bGVfdW5wcmVwYXJlLAotCQkJCSAgICAgICB3ZHRfY2xrKTsKLQlpZiAocmV0KQotCQlyZXR1cm4g
cmV0OwotCiAJcG54NDAwOF93ZGQuYm9vdHN0YXR1cyA9IChyZWFkbChXRFRJTV9SRVMod2R0X2Jh
c2UpKSAmIFdET0dfUkVTRVQpID8KIAkJCVdESU9GX0NBUkRSRVNFVCA6IDA7CiAJcG54NDAwOF93
ZGQucGFyZW50ID0gZGV2OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy93YXRjaGRvZy9xY29tLXdkdC5j
IGIvZHJpdmVycy93YXRjaGRvZy9xY29tLXdkdC5jCmluZGV4IDBkMjIwOWM1ZWFjYS4uZDc3NjQ3
NGRjZGYzIDEwMDY0NAotLS0gYS9kcml2ZXJzL3dhdGNoZG9nL3Fjb20td2R0LmMKKysrIGIvZHJp
dmVycy93YXRjaGRvZy9xY29tLXdkdC5jCkBAIC0xNzUsMTEgKzE3NSw2IEBAIHN0YXRpYyBjb25z
dCBzdHJ1Y3Qgd2F0Y2hkb2dfaW5mbyBxY29tX3dkdF9wdF9pbmZvID0gewogCS5pZGVudGl0eQk9
IEtCVUlMRF9NT0ROQU1FLAogfTsKIAotc3RhdGljIHZvaWQgcWNvbV9jbGtfZGlzYWJsZV91bnBy
ZXBhcmUodm9pZCAqZGF0YSkKLXsKLQljbGtfZGlzYWJsZV91bnByZXBhcmUoZGF0YSk7Ci19Ci0K
IHN0YXRpYyBjb25zdCBzdHJ1Y3QgcWNvbV93ZHRfbWF0Y2hfZGF0YSBtYXRjaF9kYXRhX2FwY3Nf
dG1yID0gewogCS5vZmZzZXQgPSByZWdfb2Zmc2V0X2RhdGFfYXBjc190bXIsCiAJLnByZXRpbWVv
dXQgPSBmYWxzZSwKQEAgLTIyNiwyMSArMjIxLDEyIEBAIHN0YXRpYyBpbnQgcWNvbV93ZHRfcHJv
YmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAlpZiAoSVNfRVJSKHdkdC0+YmFzZSkp
CiAJCXJldHVybiBQVFJfRVJSKHdkdC0+YmFzZSk7CiAKLQljbGsgPSBkZXZtX2Nsa19nZXQoZGV2
LCBOVUxMKTsKKwljbGsgPSBkZXZtX2Nsa19nZXRfZW5hYmxlZChkZXYsIE5VTEwpOwogCWlmIChJ
U19FUlIoY2xrKSkgewogCQlkZXZfZXJyKGRldiwgImZhaWxlZCB0byBnZXQgaW5wdXQgY2xvY2tc
biIpOwogCQlyZXR1cm4gUFRSX0VSUihjbGspOwogCX0KIAotCXJldCA9IGNsa19wcmVwYXJlX2Vu
YWJsZShjbGspOwotCWlmIChyZXQpIHsKLQkJZGV2X2VycihkZXYsICJmYWlsZWQgdG8gc2V0dXAg
Y2xvY2tcbiIpOwotCQlyZXR1cm4gcmV0OwotCX0KLQlyZXQgPSBkZXZtX2FkZF9hY3Rpb25fb3Jf
cmVzZXQoZGV2LCBxY29tX2Nsa19kaXNhYmxlX3VucHJlcGFyZSwgY2xrKTsKLQlpZiAocmV0KQot
CQlyZXR1cm4gcmV0OwotCiAJLyoKIAkgKiBXZSB1c2UgdGhlIGNsb2NrIHJhdGUgdG8gY2FsY3Vs
YXRlIHRoZSBtYXggdGltZW91dCwgc28gZW5zdXJlIGl0J3MKIAkgKiBub3QgemVybyB0byBhdm9p
ZCBhIGRpdmlkZS1ieS16ZXJvIGV4Y2VwdGlvbi4KZGlmZiAtLWdpdCBhL2RyaXZlcnMvd2F0Y2hk
b2cvcnRkMTE5eF93ZHQuYyBiL2RyaXZlcnMvd2F0Y2hkb2cvcnRkMTE5eF93ZHQuYwppbmRleCA4
MzRiOTRmZjNmOTAuLjk1YzhkN2FiY2U0MiAxMDA2NDQKLS0tIGEvZHJpdmVycy93YXRjaGRvZy9y
dGQxMTl4X3dkdC5jCisrKyBiL2RyaXZlcnMvd2F0Y2hkb2cvcnRkMTE5eF93ZHQuYwpAQCAtOTQs
MTYgKzk0LDEwIEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgb2ZfZGV2aWNlX2lkIHJ0ZDExOXhfd2R0
X2R0X2lkc1tdID0gewogCSB7IH0KIH07CiAKLXN0YXRpYyB2b2lkIHJ0ZDExOXhfY2xrX2Rpc2Fi
bGVfdW5wcmVwYXJlKHZvaWQgKmRhdGEpCi17Ci0JY2xrX2Rpc2FibGVfdW5wcmVwYXJlKGRhdGEp
OwotfQotCiBzdGF0aWMgaW50IHJ0ZDExOXhfd2R0X3Byb2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZp
Y2UgKnBkZXYpCiB7CiAJc3RydWN0IGRldmljZSAqZGV2ID0gJnBkZXYtPmRldjsKIAlzdHJ1Y3Qg
cnRkMTE5eF93YXRjaGRvZ19kZXZpY2UgKmRhdGE7Ci0JaW50IHJldDsKIAogCWRhdGEgPSBkZXZt
X2t6YWxsb2MoZGV2LCBzaXplb2YoKmRhdGEpLCBHRlBfS0VSTkVMKTsKIAlpZiAoIWRhdGEpCkBA
IC0xMTMsMTggKzEwNywxMCBAQCBzdGF0aWMgaW50IHJ0ZDExOXhfd2R0X3Byb2JlKHN0cnVjdCBw
bGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJaWYgKElTX0VSUihkYXRhLT5iYXNlKSkKIAkJcmV0dXJu
IFBUUl9FUlIoZGF0YS0+YmFzZSk7CiAKLQlkYXRhLT5jbGsgPSBkZXZtX2Nsa19nZXQoZGV2LCBO
VUxMKTsKKwlkYXRhLT5jbGsgPSBkZXZtX2Nsa19nZXRfZW5hYmxlZChkZXYsIE5VTEwpOwogCWlm
IChJU19FUlIoZGF0YS0+Y2xrKSkKIAkJcmV0dXJuIFBUUl9FUlIoZGF0YS0+Y2xrKTsKIAotCXJl
dCA9IGNsa19wcmVwYXJlX2VuYWJsZShkYXRhLT5jbGspOwotCWlmIChyZXQpCi0JCXJldHVybiBy
ZXQ7Ci0JcmV0ID0gZGV2bV9hZGRfYWN0aW9uX29yX3Jlc2V0KGRldiwgcnRkMTE5eF9jbGtfZGlz
YWJsZV91bnByZXBhcmUsCi0JCQkJICAgICAgIGRhdGEtPmNsayk7Ci0JaWYgKHJldCkKLQkJcmV0
dXJuIHJldDsKLQogCWRhdGEtPndkdF9kZXYuaW5mbyA9ICZydGQxMTl4X3dkdF9pbmZvOwogCWRh
dGEtPndkdF9kZXYub3BzID0gJnJ0ZDExOXhfd2R0X29wczsKIAlkYXRhLT53ZHRfZGV2LnRpbWVv
dXQgPSAxMjA7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3dhdGNoZG9nL3N0X2xwY193ZHQuYyBiL2Ry
aXZlcnMvd2F0Y2hkb2cvc3RfbHBjX3dkdC5jCmluZGV4IDE0YWI2NTU5Yzc0OC4uZDc5ODIzZTFi
MDdlIDEwMDY0NAotLS0gYS9kcml2ZXJzL3dhdGNoZG9nL3N0X2xwY193ZHQuYworKysgYi9kcml2
ZXJzL3dhdGNoZG9nL3N0X2xwY193ZHQuYwpAQCAtMTQyLDExICsxNDIsNiBAQCBzdGF0aWMgc3Ry
dWN0IHdhdGNoZG9nX2RldmljZSBzdF93ZG9nX2RldiA9IHsKIAkub3BzCQk9ICZzdF93ZG9nX29w
cywKIH07CiAKLXN0YXRpYyB2b2lkIHN0X2Nsa19kaXNhYmxlX3VucHJlcGFyZSh2b2lkICpkYXRh
KQotewotCWNsa19kaXNhYmxlX3VucHJlcGFyZShkYXRhKTsKLX0KLQogc3RhdGljIGludCBzdF93
ZG9nX3Byb2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiB7CiAJc3RydWN0IGRldmlj
ZSAqZGV2ID0gJnBkZXYtPmRldjsKQEAgLTE5MCw3ICsxODUsNyBAQCBzdGF0aWMgaW50IHN0X3dk
b2dfcHJvYmUoc3RydWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKIAkJcmV0dXJuIFBUUl9FUlIo
cmVnbWFwKTsKIAl9CiAKLQljbGsgPSBkZXZtX2Nsa19nZXQoZGV2LCBOVUxMKTsKKwljbGsgPSBk
ZXZtX2Nsa19nZXRfZW5hYmxlZChkZXYsIE5VTEwpOwogCWlmIChJU19FUlIoY2xrKSkgewogCQlk
ZXZfZXJyKGRldiwgIlVuYWJsZSB0byByZXF1ZXN0IGNsb2NrXG4iKTsKIAkJcmV0dXJuIFBUUl9F
UlIoY2xrKTsKQEAgLTIxMCwxNSArMjA1LDYgQEAgc3RhdGljIGludCBzdF93ZG9nX3Byb2JlKHN0
cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBkZXYpCiAJc3Rfd2RvZ19kZXYubWF4X3RpbWVvdXQgPSAw
eEZGRkZGRkZGIC8gc3Rfd2RvZy0+Y2xrcmF0ZTsKIAlzdF93ZG9nX2Rldi5wYXJlbnQgPSBkZXY7
CiAKLQlyZXQgPSBjbGtfcHJlcGFyZV9lbmFibGUoY2xrKTsKLQlpZiAocmV0KSB7Ci0JCWRldl9l
cnIoZGV2LCAiVW5hYmxlIHRvIGVuYWJsZSBjbG9ja1xuIik7Ci0JCXJldHVybiByZXQ7Ci0JfQot
CXJldCA9IGRldm1fYWRkX2FjdGlvbl9vcl9yZXNldChkZXYsIHN0X2Nsa19kaXNhYmxlX3VucHJl
cGFyZSwgY2xrKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotCiAJd2F0Y2hkb2dfc2V0X2Ry
dmRhdGEoJnN0X3dkb2dfZGV2LCBzdF93ZG9nKTsKIAl3YXRjaGRvZ19zZXRfbm93YXlvdXQoJnN0
X3dkb2dfZGV2LCBXQVRDSERPR19OT1dBWU9VVCk7CiAKZGlmZiAtLWdpdCBhL2RyaXZlcnMvd2F0
Y2hkb2cvc3RtMzJfaXdkZy5jIGIvZHJpdmVycy93YXRjaGRvZy9zdG0zMl9pd2RnLmMKaW5kZXgg
NTcwYTcxNTA5ZDJhLi4wMTg0OTcyMDMxMGQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvd2F0Y2hkb2cv
c3RtMzJfaXdkZy5jCisrKyBiL2RyaXZlcnMvd2F0Y2hkb2cvc3RtMzJfaXdkZy5jCkBAIC0xNTAs
NTAgKzE1MCwyMyBAQCBzdGF0aWMgaW50IHN0bTMyX2l3ZGdfc2V0X3RpbWVvdXQoc3RydWN0IHdh
dGNoZG9nX2RldmljZSAqd2RkLAogCXJldHVybiAwOwogfQogCi1zdGF0aWMgdm9pZCBzdG0zMl9j
bGtfZGlzYWJsZV91bnByZXBhcmUodm9pZCAqZGF0YSkKLXsKLQljbGtfZGlzYWJsZV91bnByZXBh
cmUoZGF0YSk7Ci19Ci0KIHN0YXRpYyBpbnQgc3RtMzJfaXdkZ19jbGtfaW5pdChzdHJ1Y3QgcGxh
dGZvcm1fZGV2aWNlICpwZGV2LAogCQkJICAgICAgIHN0cnVjdCBzdG0zMl9pd2RnICp3ZHQpCiB7
CiAJc3RydWN0IGRldmljZSAqZGV2ID0gJnBkZXYtPmRldjsKLQl1MzIgcmV0OwogCi0Jd2R0LT5j
bGtfbHNpID0gZGV2bV9jbGtfZ2V0KGRldiwgImxzaSIpOworCXdkdC0+Y2xrX2xzaSA9IGRldm1f
Y2xrX2dldF9lbmFibGVkKGRldiwgImxzaSIpOwogCWlmIChJU19FUlIod2R0LT5jbGtfbHNpKSkK
IAkJcmV0dXJuIGRldl9lcnJfcHJvYmUoZGV2LCBQVFJfRVJSKHdkdC0+Y2xrX2xzaSksICJVbmFi
bGUgdG8gZ2V0IGxzaSBjbG9ja1xuIik7CiAKIAkvKiBvcHRpb25hbCBwZXJpcGhlcmFsIGNsb2Nr
ICovCiAJaWYgKHdkdC0+ZGF0YS0+aGFzX3BjbGspIHsKLQkJd2R0LT5jbGtfcGNsayA9IGRldm1f
Y2xrX2dldChkZXYsICJwY2xrIik7CisJCXdkdC0+Y2xrX3BjbGsgPSBkZXZtX2Nsa19nZXRfZW5h
YmxlZChkZXYsICJwY2xrIik7CiAJCWlmIChJU19FUlIod2R0LT5jbGtfcGNsaykpCiAJCQlyZXR1
cm4gZGV2X2Vycl9wcm9iZShkZXYsIFBUUl9FUlIod2R0LT5jbGtfcGNsayksCiAJCQkJCSAgICAg
IlVuYWJsZSB0byBnZXQgcGNsayBjbG9ja1xuIik7Ci0KLQkJcmV0ID0gY2xrX3ByZXBhcmVfZW5h
YmxlKHdkdC0+Y2xrX3BjbGspOwotCQlpZiAocmV0KSB7Ci0JCQlkZXZfZXJyKGRldiwgIlVuYWJs
ZSB0byBwcmVwYXJlIHBjbGsgY2xvY2tcbiIpOwotCQkJcmV0dXJuIHJldDsKLQkJfQotCQlyZXQg
PSBkZXZtX2FkZF9hY3Rpb25fb3JfcmVzZXQoZGV2LAotCQkJCQkgICAgICAgc3RtMzJfY2xrX2Rp
c2FibGVfdW5wcmVwYXJlLAotCQkJCQkgICAgICAgd2R0LT5jbGtfcGNsayk7Ci0JCWlmIChyZXQp
Ci0JCQlyZXR1cm4gcmV0OwogCX0KIAotCXJldCA9IGNsa19wcmVwYXJlX2VuYWJsZSh3ZHQtPmNs
a19sc2kpOwotCWlmIChyZXQpIHsKLQkJZGV2X2VycihkZXYsICJVbmFibGUgdG8gcHJlcGFyZSBs
c2kgY2xvY2tcbiIpOwotCQlyZXR1cm4gcmV0OwotCX0KLQlyZXQgPSBkZXZtX2FkZF9hY3Rpb25f
b3JfcmVzZXQoZGV2LCBzdG0zMl9jbGtfZGlzYWJsZV91bnByZXBhcmUsCi0JCQkJICAgICAgIHdk
dC0+Y2xrX2xzaSk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQogCXdkdC0+cmF0ZSA9IGNs
a19nZXRfcmF0ZSh3ZHQtPmNsa19sc2kpOwogCiAJcmV0dXJuIDA7CmRpZmYgLS1naXQgYS9kcml2
ZXJzL3dhdGNoZG9nL3Zpc2NvbnRpX3dkdC5jIGIvZHJpdmVycy93YXRjaGRvZy92aXNjb250aV93
ZHQuYwppbmRleCA4M2VmNTVlNjZjYTguLjExMjdlNDI3MzRmNCAxMDA2NDQKLS0tIGEvZHJpdmVy
cy93YXRjaGRvZy92aXNjb250aV93ZHQuYworKysgYi9kcml2ZXJzL3dhdGNoZG9nL3Zpc2NvbnRp
X3dkdC5jCkBAIC0xMTIsMTEgKzExMiw2IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgd2F0Y2hkb2df
b3BzIHZpc2NvbnRpX3dkdF9vcHMgPSB7CiAJLnNldF90aW1lb3V0CT0gdmlzY29udGlfd2R0X3Nl
dF90aW1lb3V0LAogfTsKIAotc3RhdGljIHZvaWQgdmlzY29udGlfY2xrX2Rpc2FibGVfdW5wcmVw
YXJlKHZvaWQgKmRhdGEpCi17Ci0JY2xrX2Rpc2FibGVfdW5wcmVwYXJlKGRhdGEpOwotfQotCiBz
dGF0aWMgaW50IHZpc2NvbnRpX3dkdF9wcm9iZShzdHJ1Y3QgcGxhdGZvcm1fZGV2aWNlICpwZGV2
KQogewogCXN0cnVjdCB3YXRjaGRvZ19kZXZpY2UgKndkZXY7CkBAIC0xMzQsMjAgKzEyOSw5IEBA
IHN0YXRpYyBpbnQgdmlzY29udGlfd2R0X3Byb2JlKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgKnBk
ZXYpCiAJaWYgKElTX0VSUihwcml2LT5iYXNlKSkKIAkJcmV0dXJuIFBUUl9FUlIocHJpdi0+YmFz
ZSk7CiAKLQljbGsgPSBkZXZtX2Nsa19nZXQoZGV2LCBOVUxMKTsKKwljbGsgPSBkZXZtX2Nsa19n
ZXRfZW5hYmxlZChkZXYsIE5VTEwpOwogCWlmIChJU19FUlIoY2xrKSkKIAkJcmV0dXJuIGRldl9l
cnJfcHJvYmUoZGV2LCBQVFJfRVJSKGNsayksICJDb3VsZCBub3QgZ2V0IGNsb2NrXG4iKTsKLQot
CXJldCA9IGNsa19wcmVwYXJlX2VuYWJsZShjbGspOwotCWlmIChyZXQpIHsKLQkJZGV2X2Vycihk
ZXYsICJDb3VsZCBub3QgZW5hYmxlIGNsb2NrXG4iKTsKLQkJcmV0dXJuIHJldDsKLQl9Ci0KLQly
ZXQgPSBkZXZtX2FkZF9hY3Rpb25fb3JfcmVzZXQoZGV2LCB2aXNjb250aV9jbGtfZGlzYWJsZV91
bnByZXBhcmUsIGNsayk7Ci0JaWYgKHJldCkKLQkJcmV0dXJuIHJldDsKLQogCWNsa19mcmVxID0g
Y2xrX2dldF9yYXRlKGNsayk7CiAJaWYgKCFjbGtfZnJlcSkKIAkJcmV0dXJuIC1FSU5WQUw7Ci0t
IAoyLjM1LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
CkxpbnV4LXN0bTMyIG1haWxpbmcgbGlzdApMaW51eC1zdG0zMkBzdC1tZC1tYWlsbWFuLnN0b3Jt
cmVwbHkuY29tCmh0dHBzOi8vc3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbS9tYWlsbWFuL2xp
c3RpbmZvL2xpbnV4LXN0bTMyCg==
