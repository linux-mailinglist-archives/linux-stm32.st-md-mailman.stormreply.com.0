Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 2E96DA4BC0B
	for <lists+linux-stm32@lfdr.de>; Mon,  3 Mar 2025 11:27:35 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id D20C7C78F62;
	Mon,  3 Mar 2025 10:27:34 +0000 (UTC)
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.9])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 23835C78F60
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Mon,  3 Mar 2025 10:27:32 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
 d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
 t=1740997653; x=1772533653;
 h=from:to:subject:date:message-id:mime-version:
 content-transfer-encoding;
 bh=FDz6ptuo+7Aft80tGDKuObfSvghbYDAnsgP6ShdB+h8=;
 b=mWhW/vlzJrrBtMt50U3AunzSfRIX1nMZNF+ruZZF4YEsSDOETQu2hq4f
 249tzjdFgRAUYG9NKGjFqyLQ0d2nkMDppB8Jw0q8Xkwqb0Q5C5vq1YB+t
 eugSu7ILkB/c2L1Vwdu1XfGNBaeys9L7ncraKc451nFWAKuCjpoqqG1XB
 oR2lYAwrmhS/wzWT/hICbvagT6kwF/HG2eU48i3kksCIb+fQbfE/lasv8
 NHETOPpMDLncMKOGWFL3MKmDRdBt8f/hXJeE8YoAs6ikMfqmbWpwZjYq+
 Ioc5RW2MOJi8EWB8EkgbO40IwfGOsSZFa6rZ5oTbYfxKryEy308WyTGha A==;
X-CSE-ConnectionGUID: evNU9YUgQe6WF5Lf5bdKAg==
X-CSE-MsgGUID: TLIbMZ8xTBejFysDSMDDTg==
X-IronPort-AV: E=McAfee;i="6700,10204,11361"; a="64310042"
X-IronPort-AV: E=Sophos;i="6.13,329,1732608000"; d="scan'208";a="64310042"
Received: from fmviesa005.fm.intel.com ([10.60.135.145])
 by orvoesa101.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 03 Mar 2025 02:27:31 -0800
X-CSE-ConnectionGUID: hMmtywriTWO7zIp6xwLCmg==
X-CSE-MsgGUID: 3pHgk5o+Sj624jh43tBMjQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.13,329,1732608000"; d="scan'208";a="122569850"
Received: from mohdfai2-ilbpg12-1.png.intel.com ([10.88.227.73])
 by fmviesa005.fm.intel.com with ESMTP; 03 Mar 2025 02:27:22 -0800
From: Faizal Rahim <faizal.abdul.rahim@linux.intel.com>
To: Tony Nguyen <anthony.l.nguyen@intel.com>,
 Przemek Kitszel <przemyslaw.kitszel@intel.com>,
 Andrew Lunn <andrew+netdev@lunn.ch>,
 "David S . Miller" <davem@davemloft.net>,
 Eric Dumazet <edumazet@google.com>, Jakub Kicinski <kuba@kernel.org>,
 Paolo Abeni <pabeni@redhat.com>,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Alexandre Torgue <alexandre.torgue@foss.st.com>,
 Simon Horman <horms@kernel.org>, Russell King <linux@armlinux.org.uk>,
 Alexei Starovoitov <ast@kernel.org>,
 Daniel Borkmann <daniel@iogearbox.net>,
 Jesper Dangaard Brouer <hawk@kernel.org>,
 John Fastabend <john.fastabend@gmail.com>, Furong Xu <0x1207@gmail.com>,
 Russell King <rmk+kernel@armlinux.org.uk>,
 Vladimir Oltean <vladimir.oltean@nxp.com>,
 Serge Semin <fancer.lancer@gmail.com>,
 Xiaolei Wang <xiaolei.wang@windriver.com>,
 Suraj Jaiswal <quic_jsuraj@quicinc.com>,
 Kory Maincent <kory.maincent@bootlin.com>, Gal Pressman <gal@nvidia.com>,
 Jesper Nilsson <jesper.nilsson@axis.com>,
 Andrew Halaney <ahalaney@redhat.com>,
 Choong Yong Liang <yong.liang.choong@linux.intel.com>,
 Faizal Rahim <faizal.abdul.rahim@linux.intel.com>,
 Kunihiko Hayashi <hayashi.kunihiko@socionext.com>,
 Vinicius Costa Gomes <vinicius.gomes@intel.com>,
 intel-wired-lan@lists.osuosl.org, netdev@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-stm32@st-md-mailman.stormreply.com,
 linux-arm-kernel@lists.infradead.org, bpf@vger.kernel.org
Date: Mon,  3 Mar 2025 05:26:49 -0500
Message-Id: <20250303102658.3580232-1-faizal.abdul.rahim@linux.intel.com>
X-Mailer: git-send-email 2.34.1
MIME-Version: 1.0
Subject: [Linux-stm32] [PATCH iwl-next v7 0/9] igc: Add support for Frame
	Preemption feature in IGC
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

SW50cm9kdWNlcyBzdXBwb3J0IGZvciB0aGUgRlBFIGZlYXR1cmUgaW4gdGhlIElHQyBkcml2ZXIu
CgpUaGUgcGF0Y2hlcyBhbGlnbnMgd2l0aCB0aGUgdXBzdHJlYW0gRlBFIEFQSToKaHR0cHM6Ly9w
YXRjaHdvcmsua2VybmVsLm9yZy9wcm9qZWN0L25ldGRldmJwZi9jb3Zlci8yMDIzMDIyMDEyMjM0
My4xMTU2NjE0LTEtdmxhZGltaXIub2x0ZWFuQG54cC5jb20vCmh0dHBzOi8vcGF0Y2h3b3JrLmtl
cm5lbC5vcmcvcHJvamVjdC9uZXRkZXZicGYvY292ZXIvMjAyMzAxMTkxMjI3MDUuNzMwNTQtMS12
bGFkaW1pci5vbHRlYW5AbnhwLmNvbS8KCkl0IGJ1aWxkcyB1cG9uIGVhcmxpZXIgd29yazoKaHR0
cHM6Ly9wYXRjaHdvcmsua2VybmVsLm9yZy9wcm9qZWN0L25ldGRldmJwZi9jb3Zlci8yMDIyMDUy
MDAxMTUzOC4xMDk4ODg4LTEtdmluaWNpdXMuZ29tZXNAaW50ZWwuY29tLwoKVGhlIHBhdGNoIHNl
cmllcyBhZGRzIHRoZSBmb2xsb3dpbmcgZnVuY3Rpb25hbGl0aWVzIHRvIHRoZSBJR0MgZHJpdmVy
OgphKSBDb25maWd1cmUgRlBFIHVzaW5nIGBldGh0b29sIC0tc2V0LW1tYC4KYikgRGlzcGxheSBG
UEUgc2V0dGluZ3MgdmlhIGBldGh0b29sIC0tc2hvdy1tbWAuCmMpIFZpZXcgRlBFIHN0YXRpc3Rp
Y3MgdXNpbmcgYGV0aHRvb2wgLS1pbmNsdWRlLXN0YXRpc3RpY3MgLS1zaG93LW1tJy4KZSkgQmxv
Y2sgc2V0dGluZyBwcmVlbXB0aWJsZSB0YyBpbiB0YXByaW8gc2luY2UgaXQgaXMgbm90IHN1cHBv
cnRlZCB5ZXQuCiAgIEV4aXN0aW5nIGNvZGUgYWxyZWFkeSBibG9ja3MgaXQgaW4gbXFwcmlvLgoK
VGVzdGVkOgpFbmFibGVkIENPTkZJR19QUk9WRV9MT0NLSU5HLCBDT05GSUdfREVCVUdfQVRPTUlD
X1NMRUVQLCBDT05GSUdfRE1BX0FQSV9ERUJVRywgYW5kIENPTkZJR19LQVNBTgoxKSBzZWxmdGVz
dHMKMikgbmV0ZGV2IGRvd24vdXAgY3ljbGVzCjMpIHN1c3BlbmQvcmVzdW1lIGN5Y2xlcwo0KSBm
cGUgdmVyaWZpY2F0aW9uCgpObyBidWdzIG9yIHVudXN1YWwgZG1lc2cgbG9ncyB3ZXJlIG9ic2Vy
dmVkLgpSYW4gMSksIDIpIGFuZCAzKSB3aXRoIGFuZCB3aXRob3V0IHRoZSBwYXRjaCBzZXJpZXMs
IGNvbXBhcmVkIGRtZXNnIGFuZCBzZWxmdGVzdCBsb2dzIOKAlCBubyBkaWZmZXJlbmNlcyBmb3Vu
ZC4KCkNoYW5nZSBMb2c6CnY2IC0+IHY3OgotIFNxdWFzaCB0aGUgY3B1IHBhcmFtIHRvIHRoZSBw
cmV2IGxpbmUgKFByemVtZWsgS2l0c3plbCkKLSBVc2UgaWdjXyBwcmVmaXggZm9yIGZwZV90IChQ
cnplbWVrIEtpdHN6ZWwpCi0gTW92ZSBuZXcgb3BzIHRvIGRpZmZlcmVudCBsaW5lIGluIGlnY19l
dGh0b29sX29wcyAoUHJ6ZW1layBLaXRzemVsKQotIERvY3VtZW50YXRpb24gZm9yIGlnY19lbmFi
bGVfZW1wdHlfYWRkcl9yZWN2ICgpOiByeCAtPiBSeCAoUHJ6ZW1layBLaXRzemVsKQotIERvY3Vt
ZW50YXRpb24gZm9yIGlnY19lbmFibGVfZW1wdHlfYWRkcl9yZWN2ICgpOiBzL0lHQy90aGUgZHJp
dmVyLyAoUHJ6ZW1layBLaXRzemVsKQotIENoYW5nZSBwcmVmZXJyZWQgc3R5bGUgb2YgaW5pdCwg
ZnJvbSB7IH0sIHRvIHt9IChQcnplbWVrIEtpdHN6ZWwpCi0gUmVtb3ZlIGluY2x1c2lvbiBvZiB1
bWJyZWxsYSBoZWFkZXIgPGxpbnV4L2tlcm5lbC5oPiBpbiBpZ2NfdHNuLmMgKFByemVtZWsgS2l0
c3plbCkKLSBFbmQgZW51bSB3aXRoICIsIiBpbiBpZ2NfdHhkX3BvcHRzX3R5cGUgKFByemVtZWsg
S2l0c3plbCkKLSBSZW1vdmUgdW5uZWNlc3NhcnkgYnJhY2VzIGluIGlnY19mcGVfaXNfdmVyaWZ5
X29yX3Jlc3BvbnNlKCkgKFByemVtZWsgS2l0c3plbCkKCnY1IC0+IHY2OgotIEFkZGVkIFRlc3Rl
ZC1ieTogRnVyb25nIFh1IGZvciBwYXRjaCAxLzkgKFZsYWRpbWlyLCBGdXJvbmcgWHUpCi0gVXBk
YXRlZCBsb2dpYyBpbiBldGh0b29sX21tc3ZfbGlua19zdGF0ZV9oYW5kbGUoKSAoVmxhZGltaXIs
IEZ1cm9uZyBYdSkKLSBTd2FwIHNlcXVlbmNlIG9mIGZ1bmN0aW9uIGNhbGwgaW4gc3RtbWFjX3Nl
dF9tbSgpIChGdXJvbmcgWHUpCi0gTG9nIGFuIGVycm9yIGlmIGlnY19lbmFibGVfZW1wdHlfYWRk
cl9yZWN2KCkgZmFpbHMgKFZsYWRpbWlyKQotIE1vdmUgdGhlIHBhdGNoICIuLiBCbG9jayBzZXR0
aW5nIHByZWVtcHRpYmxlIHRyYWZmaWMgLi4iIGJlZm9yZSAiLi4gQWRkIHN1cHBvcnQgdG8gZ2V0
IE1BQyBNZXJnZSBkYXRhIC4uIiAoVmxhZGltaXIpCi0gTW92ZSBtbXN2IGZ1bmN0aW9uIGtlcm5l
bC1kb2MgZnJvbSAuaCB0byAuYyBmaWxlIChWbGFkaW1pcikKCnY0IC0+IHY1OgotIFJlbW92ZSAi
aWdjOiBBZGQgc3VwcG9ydCBmb3IgcHJlZW1wdGlibGUgdHJhZmZpYyBjbGFzcyBpbiB0YXByaW8i
IHBhdGNoIChWbGFkaW1pcikKLSBBZGQgYSBuZXcgcGF0Y2ggImlnYzogQmxvY2sgc2V0dGluZyBw
cmVlbXB0aWJsZSB0cmFmZmljIGNsYXNzZXMgaW4gdGFwcmlvIiAoVmxhZGltaXIpCi0gQWRkIGtl
cm5lbC1kb2MgZm9yIG1tc3YgYXBpIChWbGFkaW1pcikKLSBvbGluaW5mb19zdGF0dXMgdG8gdXNl
IGhvc3QgYnl0ZSBvcmRlciAoU2ltb24pCi0gc3RhdHVzX2Vycm9yIHNob3VsZCBob3N0IGJ5dGUg
dHlwZSAoU2ltb24pCi0gU29tZSBjb2RlIHdhcyBtaXNwbGFjZWQgaW4gdGhlIHdyb25nIHBhdGNo
IChWbGFkaW1pcikKLSBNaXggb2YgdGFicyBhbmQgc3BhY2VzIGluIHBhdGNoIGRlc2NyaXB0aW9u
IChWbGFkaW1pcikKLSBDcmVhdGVkIGlnY19pc19wbWFjX2VuYWJsZWQoKSB0byByZWR1Y2UgY29k
ZSByZXBldGl0aW9uIChWbGFkaW1pcikKCnYzIC0+IHY0OgotIEZpeCBjb21waWxhdGlvbiB3YXJu
aW5ncyBpbnRyb2R1Y2VkIGJ5IHRoaXMgcGF0Y2ggc2VyaWVzCgp2MiAtPiB2MzoKLSBJbXBsZW1l
bnQgY29uZmlndXJlX3R4KCkgbW1zdiBjYWxsYmFjayAoVmxhZGltaXIpCi0gVXNlIHN0YXRpY19i
cmFuY2hfaW5jKCkgYW5kIHN0YXRpY19icmFuY2hfZGVjKCkgKFZsYWRpbWlyKQotIEFkZCBhZGFw
dGVyLT5mcGUubW1zdi5wbWFjX2VuYWJsZWQgYXMgZXh0cmEgY2hlY2sgKFZsYWRpbWlyKQotIFJl
bW92ZSB1bm5lY2Vzc2FyeSBlcnJvciBjaGVjayBpbiBpZ2NfZnBlX2luaXRfdHhfZGVzY3JpcHRv
cigpIChWbGFkaW1pcikKLSBBZGRpdGlvbmFsIHBsYWNlcyB0byB1c2UgRklFTERfUFJFUCgpIGlu
c3RlYWQgb2YgbWFudWFsIGJpdCBtYW5pcHVsYXRpb24gKFZsYWRpbWlyKQotIElHQ19UWERfUE9Q
VFNfU01EX1YgYW5kIElHQ19UWERfUE9QVFNfU01EX1IgdHlwZSBjaGFuZ2UgdG8gZW51bSAoVmxh
ZGltaXIpCi0gUmVtb3ZlIHVubmVjZXNzYXJ5IG5ldGlmX3J1bm5pbmcoKSBjaGVjayBpbiBpZ2Nf
ZnBlX3htaXRfZnJhbWUgKFZsYWRpbWlyKQotIFJhdGUgbGltaXQgcHJpbnQgaW4gaWdjX2ZwZV9z
ZW5kX21wYWNrZXQgKFZsYWRpbWlyKQoKdjEgLT4gdjI6Ci0gRXh0cmFjdCB0aGUgc3RtbWFjIHZl
cmlmaWNhdGlvbiBsb2dpYyBpbnRvIGEgY29tbW9uIGxpYnJhcnkgKFZsYWRpbWlyKQotIGlnYyB0
byB1c2UgY29tbW9uIGxpYnJhcnkgZm9yIHZlcmlmaWNhdGlvbiAoVmxhZGltaXIpCi0gRml4IHN5
bnRheCBmb3Iga2VybmVsLWRvYyB0byB1c2UgIlJldHVybjoiIChWbGFkaW1pcikKLSBVc2UgRklF
TERfR0VUIGluc3RlYWQgb2YgbWFudWFsIGJpdCBtYXNraW5nIChWbGFkaW1pcikKLSBEb24ndCBh
c3NpZ24gMCB0byBzdGF0aXN0aWNzIGNvdW50ZXIgaW4gaWdjX2V0aHRvb2xfZ2V0X21tX3N0YXRz
KCkgKFZsYWRpbWlyKQotIFVzZSBwbWFjLWVuYWJsZWQgYXMgYSBjb25kaXRpb24gdG8gYWxsb3cg
TUFDIGFkZHJlc3MgdmFsdWUgMCAoVmxhZGltaXIpCi0gRGVmaW5lIG1hY3JvIHJlZ2lzdGVyIHZh
bHVlIGluIGluY3JlYXNpbmcgdmFsdWUgb3JkZXIgKFZsYWRpbWlyKQotIEZpeCB0eC1taW4tZnJh
Zy1zaXplIGhhbmRsaW5nIGZvciBpZ2MgKFZsYWRpbWlyKQotIEhhbmRsZSBsaW5rIHN0YXRlIGNo
YW5nZXMgd2l0aCB2ZXJpZmljYXRpb24gaW4gaWdjIChWbGFkaW1pcikKLSBBZGQgc3RhdGljIGtl
eSBmb3IgZmFzdCBwYXRoIGNvZGUgKFZsYWRpbWlyKQotIHJ4X21pbl9mcmFnX3NpemUgZ2V0IGZy
b20gY29uc3RhbnQgKFZsYWRpbWlyKQoKdjE6IGh0dHBzOi8vcGF0Y2h3b3JrLmtlcm5lbC5vcmcv
cHJvamVjdC9uZXRkZXZicGYvY292ZXIvMjAyNDEyMTYwNjQ3MjAuOTMxNTIyLTEtZmFpemFsLmFi
ZHVsLnJhaGltQGxpbnV4LmludGVsLmNvbS8KdjI6IGh0dHBzOi8vcGF0Y2h3b3JrLmtlcm5lbC5v
cmcvcHJvamVjdC9uZXRkZXZicGYvY292ZXIvMjAyNTAyMDUxMDA1MjQuMTEzODUyMy0xLWZhaXph
bC5hYmR1bC5yYWhpbUBsaW51eC5pbnRlbC5jb20vCnYzOiBodHRwczovL3BhdGNod29yay5rZXJu
ZWwub3JnL3Byb2plY3QvbmV0ZGV2YnBmL2NvdmVyLzIwMjUwMjA3MTY1NjQ5LjIyNDUzMjAtMS1m
YWl6YWwuYWJkdWwucmFoaW1AbGludXguaW50ZWwuY29tLwp2NDogaHR0cHM6Ly9wYXRjaHdvcmsu
a2VybmVsLm9yZy9wcm9qZWN0L25ldGRldmJwZi9jb3Zlci8yMDI1MDIxMDA3MDIwNy4yNjE1NDE4
LTEtZmFpemFsLmFiZHVsLnJhaGltQGxpbnV4LmludGVsLmNvbS8KdjU6IGh0dHBzOi8vcGF0Y2h3
b3JrLmtlcm5lbC5vcmcvcHJvamVjdC9uZXRkZXZicGYvY292ZXIvMjAyNTAyMjAwMjUzNDkuMzAw
Nzc5My0xLWZhaXphbC5hYmR1bC5yYWhpbUBsaW51eC5pbnRlbC5jb20vCnY2OiBodHRwczovL3Bh
dGNod29yay5rZXJuZWwub3JnL3Byb2plY3QvbmV0ZGV2YnBmL2NvdmVyLzIwMjUwMjI3MTQwMTU4
LjIxMjk5ODgtMS1mYWl6YWwuYWJkdWwucmFoaW1AbGludXguaW50ZWwuY29tLwoKRmFpemFsIFJh
aGltICg4KToKICBpZ2M6IFJlbmFtZSB4ZHBfZ2V0X3R4X3JpbmcoKSBmb3Igbm9uLXhkcCB1c2Fn
ZQogIGlnYzogT3B0aW1pemUgdGhlIFRYIHBhY2tldCBidWZmZXIgdXRpbGl6YXRpb24KICBpZ2M6
IFNldCB0aGUgUlggcGFja2V0IGJ1ZmZlciBzaXplIGZvciBUU04gbW9kZQogIGlnYzogQWRkIHN1
cHBvcnQgZm9yIGZyYW1lIHByZWVtcHRpb24gdmVyaWZpY2F0aW9uCiAgaWdjOiBBZGQgc3VwcG9y
dCB0byBzZXQgdHgtbWluLWZyYWctc2l6ZQogIGlnYzogQmxvY2sgc2V0dGluZyBwcmVlbXB0aWJs
ZSB0cmFmZmljIGNsYXNzIGluIHRhcHJpbwogIGlnYzogQWRkIHN1cHBvcnQgdG8gZ2V0IE1BQyBN
ZXJnZSBkYXRhIHZpYSBldGh0b29sCiAgaWdjOiBBZGQgc3VwcG9ydCB0byBnZXQgZnJhbWUgcHJl
ZW1wdGlvbiBzdGF0aXN0aWNzIHZpYSBldGh0b29sCgpWbGFkaW1pciBPbHRlYW4gKDEpOgogIG5l
dDogZXRodG9vbDogbW06IGV4dHJhY3Qgc3RtbWFjIHZlcmlmaWNhdGlvbiBsb2dpYyBpbnRvIGNv
bW1vbgogICAgbGlicmFyeQoKIGRyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2MuaCAg
ICAgICAgICB8ICAxNSArLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaWdjL2lnY19iYXNl
LmggICAgIHwgICAxICsKIGRyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2NfZGVmaW5l
cy5oICB8ICAxNSArLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaWdjL2lnY19ldGh0b29s
LmMgIHwgIDc2ICsrKysrCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9pbnRlbC9pZ2MvaWdjX21haW4u
YyAgICAgfCAgNjYgKysrLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvaW50ZWwvaWdjL2lnY19yZWdz
LmggICAgIHwgIDE2ICsKIGRyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9pZ2NfdHNuLmMg
ICAgICB8IDE5MiArKysrKysrKysrKy0KIGRyaXZlcnMvbmV0L2V0aGVybmV0L2ludGVsL2lnYy9p
Z2NfdHNuLmggICAgICB8ICA1MiArKysrCiBkcml2ZXJzL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0
bW1hYy9zdG1tYWMuaCAgfCAgMTYgKy0KIC4uLi9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9zdG1t
YWNfZXRodG9vbC5jICB8ICA0MSArLS0KIC4uLi9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMv
c3RtbWFjX2ZwZS5jICB8IDE3NCArKystLS0tLS0tLQogLi4uL25ldC9ldGhlcm5ldC9zdG1pY3Jv
L3N0bW1hYy9zdG1tYWNfZnBlLmggIHwgICA1IC0KIC4uLi9uZXQvZXRoZXJuZXQvc3RtaWNyby9z
dG1tYWMvc3RtbWFjX21haW4uYyB8ICAgOCArLQogaW5jbHVkZS9saW51eC9ldGh0b29sLmggICAg
ICAgICAgICAgICAgICAgICAgIHwgIDczICsrKysrCiBuZXQvZXRodG9vbC9tbS5jICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgfCAyODEgKysrKysrKysrKysrKysrKystCiAxNSBmaWxlcyBj
aGFuZ2VkLCA4MTQgaW5zZXJ0aW9ucygrKSwgMjE3IGRlbGV0aW9ucygtKQoKLS0KMi4zNC4xCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpMaW51eC1zdG0z
MiBtYWlsaW5nIGxpc3QKTGludXgtc3RtMzJAc3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbQpo
dHRwczovL3N0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20vbWFpbG1hbi9saXN0aW5mby9saW51
eC1zdG0zMgo=
