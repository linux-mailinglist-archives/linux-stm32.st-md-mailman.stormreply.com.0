Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 788A9836CD7
	for <lists+linux-stm32@lfdr.de>; Mon, 22 Jan 2024 18:18:59 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 257C8C6DD6B;
	Mon, 22 Jan 2024 17:18:59 +0000 (UTC)
Received: from vps0.lunn.ch (vps0.lunn.ch [156.67.10.101])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 5689BC6DD66
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Mon, 22 Jan 2024 17:18:58 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=lunn.ch;
 s=20171124; h=In-Reply-To:Content-Transfer-Encoding:Content-Disposition:
 Content-Type:MIME-Version:References:Message-ID:Subject:Cc:To:From:Date:From:
 Sender:Reply-To:Subject:Date:Message-ID:To:Cc:MIME-Version:Content-Type:
 Content-Transfer-Encoding:Content-ID:Content-Description:Content-Disposition:
 In-Reply-To:References; bh=GIH1lk8fYjb+SC7zSuml30XODBqNf4rdLQG2tLbfsTY=; b=NE
 4tdCy6gDsUAP6RmHgoHuidlz73NSsdOnQqHSs8vsI0brvXLTz0P17svDS7NF/lw402SrNlLgSQVHo
 Tv9USmTEPwtyQK5joYWQQfroqdzelbv2du3HhvX59F0UXCdswNPc43MaiG3BCHFqcl4a0tdubUP6Z
 S3epleNfi7Rua3o=;
Received: from andrew by vps0.lunn.ch with local (Exim 4.94.2)
 (envelope-from <andrew@lunn.ch>)
 id 1rRxwf-005kME-6n; Mon, 22 Jan 2024 18:18:49 +0100
Date: Mon, 22 Jan 2024 18:18:49 +0100
From: Andrew Lunn <andrew@lunn.ch>
To: Ziyang Huang <hzyitc@outlook.com>
Message-ID: <e1fd863a-6725-4180-8ad3-faeb44c09238@lunn.ch>
References: <TYZPR01MB55563BD6A2B78402E4BB44D4C9762@TYZPR01MB5556.apcprd01.prod.exchangelabs.com>
 <TYZPR01MB5556D5568546D6DA4313209EC9762@TYZPR01MB5556.apcprd01.prod.exchangelabs.com>
 <2c6c0d72-5d4e-4ec4-beb6-d30852108a67@lunn.ch>
 <TYZPR01MB5556D035D9A13962844BB553C9752@TYZPR01MB5556.apcprd01.prod.exchangelabs.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <TYZPR01MB5556D035D9A13962844BB553C9752@TYZPR01MB5556.apcprd01.prod.exchangelabs.com>
Cc: mcoquelin.stm32@gmail.com, netdev@vger.kernel.org, richardcochran@gmail.com,
 linux-kernel@vger.kernel.org, linux-mediatek@lists.infradead.org,
 p.zabel@pengutronix.de, matthias.bgg@gmail.com,
 linux-stm32@st-md-mailman.stormreply.com, linux-arm-kernel@lists.infradead.org,
 angelogioacchino.delregno@collabora.com
Subject: Re: [Linux-stm32] [PATCH 1/8] net: phy: Introduce Qualcomm IPQ5018
 internal PHY driver
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

T24gTW9uLCBKYW4gMjIsIDIwMjQgYXQgMTE6Mzc6MjlQTSArMDgwMCwgWml5YW5nIEh1YW5nIHdy
b3RlOgo+IOWcqCAyMDI0LzEvMjIgMDoxOSwgQW5kcmV3IEx1bm4g5YaZ6YGTOgo+ID4gT24gU3Vu
LCBKYW4gMjEsIDIwMjQgYXQgMDg6NDI6MzBQTSArMDgwMCwgWml5YW5nIEh1YW5nIHdyb3RlOgo+
ID4gPiBTaWduZWQtb2ZmLWJ5OiBaaXlhbmcgSHVhbmcgPGh6eWl0Y0BvdXRsb29rLmNvbT4KPiA+
IAo+ID4gWW91IG5lZWQgdG8gc2F5IHNvbWV0aGluZyBpbiB0aGUgY29tbWl0IG1lc3NhZ2UuIE9u
ZSBvYnZpb3VzIHRoaW5nIGlzCj4gPiB0byBqdXN0aWZ5IG5vdCB1c2luZyB0aGUgYXQ4MDN4IGRy
aXZlciwgc2luY2UKPiAKPiBJIHdhbnQgYWRkIG1vcmUgZGVzY3JpcHRpb25zIGhlcmUuIEJ1dCBJ
IGhhdmUgbm8gaWRlYSB3aGF0IHRvIHdyaXRlLiBUaGlzIGlzCj4gYSBtaW5pbmFsIGRyaXZlciBm
b3IgYSBzcGVjaWFsIHBoeS4KClNvIHNheSBob3cgaXQgaXMgc3BlY2lhbC4gSW5kaWNhdGUgd2h5
IGl0IG5lZWRzIGEgbWluaW1hbCBkcml2ZXIuCgpEb2VzIHRoZSBoYXJkd2FyZSBzdXBwb3J0IGNh
YmxlIHRlc3Q/IFdvTD8gRG9lcyBpdCBwZXJmb3JtIGRvd25zaGlmdAphbmQgeW91IGNhbiByZWFk
IHRoZSBhY3R1YWwgc3BlZWQgZnJvbSB0aGUgQVQ4MDNYX1NQRUNJRklDX1NUQVRVUwpyZWdpc3Rl
cnM/CgpXaGF0IHdlIHdhbnQgdG8gYXZvaWQgaXMgdGhhdCB5b3Ugc3RhcnQgd2l0aCBhIHNwZWNp
YWwgZHJpdmVyLCBhbmQKdGhlbiBzdGFydCBjb3B5aW5nIGJpdHMgb2YgdGhlIGF0ODAzeCBkcml2
ZXIgdG8gc3VwcG9ydCB0aGUgaGFyZHdhcmUKZmVhdHVyZXMuIFRoZSBhdDgwM3guYyBkcml2ZXIg
YWxyZWFkeSBzdXBwb3J0cyBhIGZldyBpbnRlcm5hbCBQSFlzOgoiUXVhbGNvbW0gQXRoZXJvcyBB
UjkzMzEgYnVpbHQtaW4iLCAiUXVhbGNvbW0gQXRoZXJvcyBRQ0E5NTYxIGJ1aWx0LWluClBIWSIs
ICJRdWFsY29tbSBBdGhlcm9zIDgzMzcgaW50ZXJuYWwgUEhZIiwgIlF1YWxjb21tIEF0aGVyb3Mg
ODMyNy1BCmludGVybmFsIFBIWSIsICJRdWFsY29tbSBBdGhlcm9zIDgzMjctQiBpbnRlcm5hbCBQ
SFkiLCBzbyBwbGVhc2UgYWRkCml0IHRvIHRoZSBkcml2ZXIgYW5kIHRlc3Qgd2hhdCBhZGRpdGlv
bmFsIGZlYXR1cmVzIHdvcmsgZm9yIGl0LgoKPiBIZXJlIGlzIHRoZSB0aGluZywgYXQgZmlyc3Qs
IEkgd2FzIHRyaW5nIHRvIGFkZCB0aGVzZSBpbnRvIGF0ODAzeCBkcml2ZXIsCj4gdGhlbiBJIGZv
dW5kIHRoYXQgdGhlIElQUTUwMTggaW50ZXJuZWwgcGh5IGlzIGEgc3BlY2lhbCBkZXZpY2UuIFRo
ZQo+IGluaXRpYWxpemF0aW9uIHNlcXVlbmNlIGlzIGluaXRpbmcgR0NDIGNsb2NrIGFuZCByZXNl
dCBjb250cm9sLCB0aGVuCj4gcmVnaXN0ZXJpbmcgY2xvY2tzIHByb3ZpZGVycywgd2hpY2ggaXMg
dmVyeSBkaWZmZXJlbnQgZnJvbSBvdGhlciBkZXZpY2VzLgoKVGhhdCBpcyBhIGRpZmZlcmVudCBz
dG9yeSBhbGwgdG9nZXRoZXIsIGFuZCBwYXJ0IG9mIHRoZSBwcm9ibGVtcyB3ZQpoYWQgd2l0aCBR
dWFsY29tbSBwYXRjaGVzLiBJdCBtaWdodCBiZSB5b3UgbmVlZCB0byB1c2UgSUQgdmFsdWVzIGlu
CnRoZSBjb21wYXRpYmxlIHRvIGdldCB0aGlzIGRyaXZlciBsb2FkZWQuIFRoZSBQSFkgZHJpdmVy
IGNhbiB0aGVuCmVuYWJsZSB0aGUgY2xvY2tzIGl0IG5lZWRzIGFuZCB0YWtlIGl0c2VsZiBvdXQg
b2YgcmVzZXQuIFdoYXQgaXMKaW1wb3J0YW50IGhlcmUgaXMgYW4gYWNjdXJhdGUgZGV2aWNlIHRy
ZWUgcmVwcmVzZW50YXRpb24uIFdoYXQgY2xvY2tzCmFuZCByZXNldHMgZG9lcyB0aGlzIGRldmlj
ZSBjb25zdW1lLgoKPiA+ID4gKwlpZiAoIXByaXYpCj4gPiA+ICsJCXJldHVybiBkZXZfZXJyX3By
b2JlKGRldiwgLUVOT01FTSwKPiA+ID4gKwkJCQkgICAgICJmYWlsZWQgdG8gYWxsb2NhdGUgcHJp
dlxuIik7Cj4gPiAKPiA+IFBsZWFzZSByZWFkIHRoZSBkb2N1bWVudGF0aW9uIG9mIGRldl9lcnJf
cHJvYmUoKSBhbmQgdGhpcyBmaXggdGhlCj4gPiBvYnZpb3VzIHByb2JsZW0gd2l0aCB0aGlzLgoK
PiBBbmQgSSBjYW4gZmluZCB0aGUgc2FtZSBjb2RlIGluIG90aGVyIGRyaXZlciwgc28gSSB0aG91
Z2h0IGl0IGlzIGEgc3RhbmRhcmQuCj4gT3Igc2hvdWxkIEkganVzdCByZXR1cm4gLUVOT01FTT8g
UGxlYXNlIGxldCBtZSBrbm93bi4KCi1FTk9NRU0gaXMgb25lIG9mIHRoZSBlcnJvciBjb2RlcyB5
b3UgYXJlIHVubGlrZWx5IHRvIHNlZS4gQW5kIGlmIGl0CmRvZXMgaGFwcGVuLCB5b3UgYXJlIGdv
aW5nIHRvIGhhdmUgY2FzY2FkaW5nIGVycm9ycy4gU28ganVzdCByZXR1cm4KLUVOT01FTS4KCj4g
PiA+ICsJc25wcmludGYobmFtZSwgc2l6ZW9mKG5hbWUpLCAiJXMjcngiLCBkZXZfbmFtZShkZXYp
KTsKPiA+ID4gKwlwcml2LT5jbGtfcnggPSBjbGtfaHdfcmVnaXN0ZXJfZml4ZWRfcmF0ZShkZXYs
IG5hbWUsIE5VTEwsIDAsCj4gPiA+ICsJCQkJCQkgIFRYX1JYX0NMS19SQVRFKTsKPiA+ID4gKwlp
ZiAoSVNfRVJSX09SX05VTEwocHJpdi0+Y2xrX3J4KSkKPiA+ID4gKwkJcmV0dXJuIGRldl9lcnJf
cHJvYmUoZGV2LCBQVFJfRVJSKHByaXYtPmNsa19yeCksCj4gPiA+ICsJCQkJICAgICAiZmFpbGVk
IHRvIHJlZ2lzdGVyIHJ4IGNsb2NrXG4iKTsKPiA+ID4gKwo+ID4gPiArCXNucHJpbnRmKG5hbWUs
IHNpemVvZihuYW1lKSwgIiVzI3R4IiwgZGV2X25hbWUoZGV2KSk7Cj4gPiA+ICsJcHJpdi0+Y2xr
X3R4ID0gY2xrX2h3X3JlZ2lzdGVyX2ZpeGVkX3JhdGUoZGV2LCBuYW1lLCBOVUxMLCAwLAo+ID4g
PiArCQkJCQkJICBUWF9SWF9DTEtfUkFURSk7Cj4gPiA+ICsJaWYgKElTX0VSUl9PUl9OVUxMKHBy
aXYtPmNsa190eCkpCj4gPiA+ICsJCXJldHVybiBkZXZfZXJyX3Byb2JlKGRldiwgUFRSX0VSUihw
cml2LT5jbGtfdHgpLAo+ID4gPiArCQkJCSAgICAgImZhaWxlZCB0byByZWdpc3RlciB0eCBjbG9j
a1xuIik7Cj4gPiA+ICsKPiA+ID4gKwlwcml2LT5jbGtfZGF0YSA9IGRldm1fa3phbGxvYyhkZXYs
Cj4gPiA+ICsJCQkJICAgICAgc3RydWN0X3NpemUocHJpdi0+Y2xrX2RhdGEsIGh3cywgMiksCj4g
PiA+ICsJCQkJICAgICAgR0ZQX0tFUk5FTCk7Cj4gPiA+ICsJaWYgKCFwcml2LT5jbGtfZGF0YSkK
PiA+ID4gKwkJcmV0dXJuIGRldl9lcnJfcHJvYmUoZGV2LCAtRU5PTUVNLAo+ID4gPiArCQkJCSAg
ICAgImZhaWxlZCB0byBhbGxvY2F0ZSBjbGtfZGF0YVxuIik7Cj4gPiA+ICsKPiA+ID4gKwlwcml2
LT5jbGtfZGF0YS0+bnVtID0gMjsKPiA+ID4gKwlwcml2LT5jbGtfZGF0YS0+aHdzWzBdID0gcHJp
di0+Y2xrX3J4Owo+ID4gPiArCXByaXYtPmNsa19kYXRhLT5od3NbMV0gPSBwcml2LT5jbGtfdHg7
Cj4gPiA+ICsJcmV0ID0gb2ZfY2xrX2FkZF9od19wcm92aWRlcihkZXYtPm9mX25vZGUsIG9mX2Ns
a19od19vbmVjZWxsX2dldCwKPiA+ID4gKwkJCQkgICAgIHByaXYtPmNsa19kYXRhKTsKPiA+ID4g
KwlpZiAocmV0KQo+ID4gPiArCQlyZXR1cm4gZGV2X2Vycl9wcm9iZShkZXYsIHJldCwKPiA+ID4g
KwkJCQkgICAgICJmYWlsIHRvIHJlZ2lzdGVyIGNsb2NrIHByb3ZpZGVyXG4iKTsKPiA+IAo+ID4g
VGhpcyBuZWVkcyBhbiBleHBsYW5hdGlvbi4gV2h5IHJlZ2lzdGVyIHR3byBmaXhlZCBjbG9ja3Ms
IHdoaWNoIHlvdQo+ID4gbmV2ZXIgdXNlPyBXaHkgbm90IHB1dCB0aGVzZSB0d28gY2xvY2tzIGlu
IERUPwo+IAo+IFdpdGhvdXQgZG9jdW1lbnRpb25zLCBoZXJlIGlzIG15IGd1ZXNzOgoKU28geW91
IGRvbid0IGhhdmUgdGhlIGRhdGEgc2hlZXQ/IEFyZSB5b3Ugd29ya2luZyBmcm9tIHRoZSBRdWFs
Y29tbQp2ZW5kb3IgdHJlZT8KCj4gVGhpcyBpcyByZXF1aXJlZCBieSBHQ0MgY29udHJvbGxlci4g
R0NDIGRyaXZlciByZXF1aXJlIFRYIGFuZCBSWCBjbG9ja3MgZnJvbQo+IEdFUEhZL1VOSVBIWS4g
VGhlbiB0aHJvdWdodCBzb21lIHNlbCBvciBkaXYgY2VsbHMsIG91dHB1dCBjbG9ja3MgdG8KPiBH
RVBIWS9VTklQSFkgYW5kIE1BQy4gU28gSSBuZWVkIHRvIHJlZ2lzdGVyIHRoZW0gdG8gbWFrZSB0
aGVtIGNhbiBiZSByZWZlcmVkCj4gaW4gR0NDIGNvbnRyb2xsZXIuIFdpbGwgYWRkIGEgZmlndXJl
IGRlc2NyaWJpbmcgdGhlIGNsb2NrIHRyZWUgaW4gVU5JUEhZCj4gZHJpdmVyLgoKU28gaW4gdGhp
cyBjYXNlLCB0aGUgR0NDIGlzIGEgY2xvY2sgY29uc3VtZXIgYW5kIHRoZSBQSFkgaXMgYSBjbG9j
awpwcm92aWRlci4gRG9lcyBHQ0MgdXNlIERUIHByb3BlcnRpZXMgY2xvY2tzL2Nsb2NrLW5hbWVz
IGFuZCBwaGFuZGxlcwp0byByZWZlcmVuY2UgdGhlc2UgY2xvY2tzIGl0IGlzIGNvbnN1bWluZz8g
SWYgc28sIHlvdSBjYW4ganVzdCB1c2UKZml4ZWQtY2xvY2tzIGluIERULgoKPiA+ID4gK3N0YXRp
YyBpbnQgaXBxNTAxOF9zb2Z0X3Jlc2V0KHN0cnVjdCBwaHlfZGV2aWNlICpwaHlkZXYpCj4gPiA+
ICt7Cj4gPiA+ICsJaW50IHJldDsKPiA+ID4gKwo+ID4gPiArCXJldCA9IHBoeV9tb2RpZnkocGh5
ZGV2LCBJUFE1MDE4X1BIWV9GSUZPX0NPTlRST0wsCj4gPiA+ICsJCQkgSVBRNTAxOF9QSFlfRklG
T19SRVNFVCwgMCk7Cj4gPiA+ICsJaWYgKHJldCA8IDApCj4gPiA+ICsJCXJldHVybiByZXQ7Cj4g
PiA+ICsKPiA+ID4gKwltc2xlZXAoNTApOwo+ID4gPiArCj4gPiA+ICsJcmV0ID0gcGh5X21vZGlm
eShwaHlkZXYsIElQUTUwMThfUEhZX0ZJRk9fQ09OVFJPTCwKPiA+ID4gKwkJCSBJUFE1MDE4X1BI
WV9GSUZPX1JFU0VULCBJUFE1MDE4X1BIWV9GSUZPX1JFU0VUKTsKPiA+ID4gKwlpZiAocmV0IDwg
MCkKPiA+ID4gKwkJcmV0dXJuIHJldDsKPiA+ID4gKwo+ID4gPiArCXJldHVybiAwOwo+ID4gPiAr
fQo+ID4gCj4gPiBUaGlzIG5lZWRzIGFuIGV4cGxhbmF0aW9uLiBJdCBpcyBhbHNvIHNvbWV3aGF0
IGxpa2UKPiA+IHFjYTgwOHhfbGlua19jaGFuZ2Vfbm90aWZ5KCkuIElzIGl0IHJlYWxseSBzdWZm
aWNpZW50IHRvIG9ubHkgZG8gdGhpcwo+ID4gcmVzZXQgRklGTyBkdXJpbmcgYSBzb2Z0IHJlc2V0
LCBvciBpcyBpdCBuZWVkZWQgd2hlbiBldmVyIHRoZSBsaW5rCj4gPiBjaGFuZ2VzPwo+IAo+IEkn
bSBub3Qgc3VyZSBoZXJlLCB0aGlzIGlzIHdoYXQgdS1ib290IGRvZXMuIEJ1dCBJIGd1ZXNzLCB3
ZSBjYW4gcmVzZXQKPiBHQ0NfR0VQSFlfKiBzZXJpYWwgcmVzZXRfY29udHJvbHMuCgpQbGVhc2Ug
YWRkIGEgY29tbWVudCB3aXRoIHlvdXIgYmVzdCBndWVzcyB3aGF0IGl0IGlzIGRvaW5nIGFuZCB3
aHkuIElzCnRoaXMgdmVuZG9yIHUtYm9vdCwgb3IgdXBzdHJlYW0gdS1ib290PyBNYXliZSB0aGUg
Z2l0IGhpc3Rvcnkgd2lsbApnaXZlIHlvdSBtb3JlIGRldGFpbHMuCgo+ID4gWW91IGFsc28gYXBw
ZWFyIHRvIGJlIG1pc3NpbmcgZGV2aWNlIHRyZWUgYmluZGluZ3MuCj4gCj4gU29ycnkgZm9yIGZv
cmdldGluZyB0byBhZGQgYSBXaVAgdGFnLiBXaWxsIGFkZCBkdC1iaW5kaW5ncyBkb2N1bWVudGlv
bnMgaW4KPiBuZXh0IHBhdGNoZXMuCgpUaGUgRFQgYmluZGluZyBpcyBqdXN0IGFzIGltcG9ydGFu
dCBhcyB0aGUgY29kZS4gT2Z0ZW4gdGhlIERUIGJpbmRpbmcKaXMgc28gYnJva2VuIHdlIGRvbid0
IGV2ZW4gYm90aGVyIGxvb2tpbmcgYXQgdGhlIGNvZGUuLi4KCiAgIEFuZHJldwpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpMaW51eC1zdG0zMiBtYWlsaW5n
IGxpc3QKTGludXgtc3RtMzJAc3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbQpodHRwczovL3N0
LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20vbWFpbG1hbi9saXN0aW5mby9saW51eC1zdG0zMgo=
