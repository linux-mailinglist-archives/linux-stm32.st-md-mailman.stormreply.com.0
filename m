Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 2974958B74B
	for <lists+linux-stm32@lfdr.de>; Sat,  6 Aug 2022 19:35:01 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id BF1D7C03FC8;
	Sat,  6 Aug 2022 17:35:00 +0000 (UTC)
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 7D58BC035BD
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Sat,  6 Aug 2022 17:34:59 +0000 (UTC)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by dfw.source.kernel.org (Postfix) with ESMTPS id CFD1A61209;
 Sat,  6 Aug 2022 17:34:57 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 9F2D9C433C1;
 Sat,  6 Aug 2022 17:34:43 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1659807297;
 bh=9V47ZcJgmG3gxd6TEyTt7TnP9+dBJRDESW0GnB21IA4=;
 h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
 b=a5tQcy+DFx7uHdSBRZBe8UBYx8KBXqwzs/nW7D4FRgNkM8Q2+IRwkC5jBNJGnodVU
 /pktq2S6mhhiDE3BaPMJAcUwJJFPCoPEUZnD3tV8cUalTyOfigbqEpZ1mX/jOpO/kN
 KBejr9O/cI4JZSmGYMbb7V82Q+3vIulT7QlTNblzsJEn8uxBcFMv3qH95InXcB2fpO
 4t3Lpbqm2UzZtcnYr2PAchvHTmy4CkcopHS8xQZAiIl/wmE221mjHJCYCHbznTGDEV
 AF5NBgsQlOJ75mJsseG/ctSCNqmKQ2kUjay4hRBaN1uWrrjLn9nHxK0n+p65HQQx6v
 Kam7rqGtXsT+A==
Date: Sat, 6 Aug 2022 18:45:04 +0100
From: Jonathan Cameron <jic23@kernel.org>
To: Nuno =?UTF-8?B?U8Oh?= <nuno.sa@analog.com>
Message-ID: <20220806184504.58960bd0@jic23-huawei>
In-Reply-To: <20220715122903.332535-4-nuno.sa@analog.com>
References: <20220715122903.332535-1-nuno.sa@analog.com>
 <20220715122903.332535-4-nuno.sa@analog.com>
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.34; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Cc: Gwendal Grignou <gwendal@chromium.org>,
 Jishnu Prakash <quic_jprakash@quicinc.com>, Tomer Maimon <tmaimon77@gmail.com>,
 Alexandre Belloni <alexandre.belloni@bootlin.com>,
 "Rafael J. Wysocki" <rafael@kernel.org>, linux-iio@vger.kernel.org,
 Linus Walleij <linus.walleij@linaro.org>, Amit Kucheria <amitk@kernel.org>,
 Tali Perry <tali.perry1@gmail.com>, Paul Cercueil <paul@crapouillou.net>,
 Miquel Raynal <miquel.raynal@bootlin.com>, Guenter Roeck <groeck@chromium.org>,
 Fabio Estevam <festevam@gmail.com>, linux-stm32@st-md-mailman.stormreply.com,
 Michael Hennerich <Michael.Hennerich@analog.com>,
 chrome-platform@lists.linux.dev, Lars-Peter Clausen <lars@metafoo.de>,
 Benjamin Fair <benjaminfair@google.com>, openbmc@lists.ozlabs.org,
 Daniel Lezcano <daniel.lezcano@linaro.org>, Haibo Chen <haibo.chen@nxp.com>,
 Christophe Branchereau <cbranchereau@gmail.com>, Nancy Yuen <yuenn@google.com>,
 Andy Shevchenko <andy.shevchenko@gmail.com>, Andy Gross <agross@kernel.org>,
 linux-imx@nxp.com, Zhang Rui <rui.zhang@intel.com>,
 Lorenzo Bianconi <lorenzo@kernel.org>, Saravanan Sekar <sravanhome@gmail.com>,
 Arnd Bergmann <arnd@arndb.de>, linux-arm-msm@vger.kernel.org,
 Sascha Hauer <s.hauer@pengutronix.de>,
 Nicolas Ferre <nicolas.ferre@microchip.com>,
 Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>,
 linux-mediatek@lists.infradead.org,
 Eugen Hristev <eugen.hristev@microchip.com>,
 Matthias Brugger <matthias.bgg@gmail.com>,
 Bjorn Andersson <bjorn.andersson@linaro.org>,
 Benson Leung <bleung@chromium.org>,
 Pengutronix Kernel Team <kernel@pengutronix.de>,
 linux-arm-kernel@lists.infradead.org, Avi Fishman <avifishman70@gmail.com>,
 Patrick Venture <venture@google.com>, linux-mips@vger.kernel.org,
 Thara Gopinath <thara.gopinath@linaro.org>, linux-renesas-soc@vger.kernel.org,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Cai Huoqing <cai.huoqing@linux.dev>, Shawn Guo <shawnguo@kernel.org>,
 Claudiu Beznea <claudiu.beznea@microchip.com>
Subject: Re: [Linux-stm32] [PATCH v3 03/15] iio: inkern: only return error
 codes in iio_channel_get_*() APIs
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

T24gRnJpLCAxNSBKdWwgMjAyMiAxNDoyODo1MSArMDIwMApOdW5vIFPDoSA8bnVuby5zYUBhbmFs
b2cuY29tPiB3cm90ZToKCj4gQVBJcyBsaWtlIG9mX2lpb19jaGFubmVsX2dldF9ieV9uYW1lKCkg
YW5kIG9mX2lpb19jaGFubmVsX2dldF9hbGwoKSB3ZXJlCj4gcmV0dXJuaW5nIGEgbWl4IG9mIE5V
TEwgYW5kIHBvaW50ZXJzIHdpdGggTlVMTCBiZWluZyB0aGUgd2F5IHRvCj4gIm5vdGlmeSIgdGhh
dCB3ZSBzaG91bGQgZG8gYSAic3lzdGVtIiBsb29rdXAgZm9yIGNoYW5uZWxzLiBUaGlzIG1ha2UK
PiBpdCB2ZXJ5IGNvbmZ1c2luZyBhbmQgcHJvbmUgdG8gZXJyb3JzIGFzIGNvbW1pdCA5ZjYzY2Mw
OTIxZWMKPiAoImlpbzogaW5rZXJuOiBmaXggcmV0dXJuIHZhbHVlIGluIGRldm1fb2ZfaWlvX2No
YW5uZWxfZ2V0X2J5X25hbWUoKSIpCj4gcHJvdmVzLiBPbiB0b3Agb2YgdGhpcywgcGF0dGVybnMg
bGlrZSAnaWYgKGNoYW5uZWwgIT0gTlVMTCkgcmV0dXJuCj4gY2hhbm5lbCcgd2VyZSBiZWluZyB1
c2VkIHdoZXJlIGNoYW5uZWwgY291bGQgYWN0dWFsbHkgYmUgYW4gZXJyb3IgY29kZQo+IHdoaWNo
IG1ha2VzIHRoZSBjb2RlIGhhcmQgdG8gcmVhZC4KPiAKPiBUaGlzIGNoYW5nZSBhbHNvIG1ha2Vz
IHNvbWUgZnVuY3Rpb25hbCBjaGFuZ2VzIG9uIGhvdyBlcnJvcnMgd2VyZSBiZWluZwo+IGhhbmRs
ZWQuIEluIHRoZSBvcmlnaW5hbCBiZWhhdmlvciwgZXZlbiBpZiB3ZSBnZXQgYW4gZXJyb3IgbGlr
ZSAnLUVOT01FTScsCj4gd2Ugc3RpbGwgY29udGludWUgd2l0aCB0aGUgc2VhcmNoLiBXZSBzaG91
bGQgb25seSBjb250aW51ZSB0byBsb29rdXAgZm9yCj4gdGhlIGNoYW5uZWwgd2hlbiBpdCBtYWtl
cyBzZW5zZSB0byBkbyBzby4gSGVuY2UsIHRoZSBtYWluIGVycm9yIGhhbmRsaW5nCj4gaW4gJ29m
X2lpb19jaGFubmVsX2dldF9ieV9uYW1lKCknIGlzIGNoYW5nZWQgdG8gdGhlIGZvbGxvd2luZyBs
b2dpYzoKPiAKPiAgKiBJZiBhIGNoYW5uZWwgJ25hbWUnIGlzIHByb3ZpZGVkIGFuZCB3ZSBkbyBm
aW5kIGl0IHZpYQo+ICdpby1jaGFubmVsLW5hbWVzJywgd2Ugc2hvdWxkIGJlIGFibGUgdG8gZ2V0
IGl0LiBJZiB3ZSBnZXQgYW55IGVycm9yLAo+IHdlIHNob3VsZCBub3QgcHJvY2VlZCB3aXRoIHRo
ZSBsb29rdXAuIE1vcmVvdmVyLCB3ZSBzaG91bGQgcmV0dXJuIGFuIGVycm9yCj4gc28gdGhhdCBj
YWxsZXJzIHdvbid0IHByb2NlZWQgd2l0aCBhIHN5c3RlbSBsb29rdXAuCj4gICogSWYgYSBjaGFu
bmVsICduYW1lJyBpcyBwcm92aWRlZCBhbmQgd2UgY2Fubm90IGZpbmQgaXQgKCdpbmRleCA8IDAn
KSwKPiAnb2ZfcGFyc2VfcGhhbmRsZV93aXRoX2FyZ3MoKScgaXMgZXhwZWN0ZWQgdG8gZmFpbCB3
aXRoICctRUlOVkFMJy4gSGVuY2UsCj4gd2Ugc2hvdWxkIG9ubHkgY29udGludWUgaWYgd2UgZ2V0
IHRoYXQgZXJyb3IuCj4gICogSWYgYSBjaGFubmVsICduYW1lJyBpcyBub3QgcHJvdmlkZWQgd2Ug
c2hvdWxkIG9ubHkgY2Fycnkgb24gd2l0aCB0aGUKPiBzZWFyY2ggaWYgJ29mX3BhcnNlX3BoYW5k
bGVfd2l0aF9hcmdzKCknIHJldHVybnMgJy1FTk9FTlQnLgo+IAo+IEFsc28gbm90ZSB0aGF0IGEg
c3lzdGVtIGNoYW5uZWwgbG9va3VwIGlzIG9ubHkgZG9uZSBpZiB0aGUgcmV0dXJuZWQKPiBlcnJv
ciBjb2RlIChmcm9tICdvZl9paW9fY2hhbm5lbF9nZXRfYnlfbmFtZSgpJyBvcgo+ICdvZl9paW9f
Y2hhbm5lbF9nZXRfYWxsKCknIGlzIC1FTk9ERVYuCj4gCj4gU2lnbmVkLW9mZi1ieTogTnVubyBT
w6EgPG51bm8uc2FAYW5hbG9nLmNvbT4KPiBSZXZpZXdlZC1ieTogQW5keSBTaGV2Y2hlbmtvIDxh
bmR5LnNoZXZjaGVua29AZ21haWwuY29tPgoKSGkgTnVubywKClNvcnJ5IGZvciBkZWxheSBvbiBn
ZXR0aW5nIHRvIHRoaXMuICBTb21ldGltZXMgdGhlIG1vc3QgdXNlZnVsIHdvcmsKb24gdGhlIGNv
cmUgZ2V0cyBxdWV1ZWQgdXAgYXQgdGhlIGJhY2sgb2YgbXkgcmV2aWV3IHF1ZXVlIGJlY2F1c2Ug
aXQncyBoYXJkZXIKdGhhbiB0aGUgYXZlcmFnZSBkcml2ZXIgOikKCkFueWhvdywgb25seSB0b3Rh
bGx5IHRyaXZpYWwgc3R1ZmYgaW4gaGVyZSBmcm9tIG1lLgpJZiB5b3UgZG9uJ3QgcmVzcGluIGJl
Y2F1c2Ugb2Ygb3RoZXIgY29tbWVudHMsIEkgY2FuIGNsZWFuIHRoZXNlIHVwCndoaWxzdCBhcHBs
eWluZy4KClRoYW5rcywKCkpvbmF0aGFuCgo+IC0tLQo+ICBkcml2ZXJzL2lpby9pbmtlcm4uYyB8
IDU0ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tCj4gIDEgZmls
ZSBjaGFuZ2VkLCAzOCBpbnNlcnRpb25zKCspLCAxNiBkZWxldGlvbnMoLSkKPiAKPiBkaWZmIC0t
Z2l0IGEvZHJpdmVycy9paW8vaW5rZXJuLmMgYi9kcml2ZXJzL2lpby9pbmtlcm4uYwo+IGluZGV4
IDg3ZmQyYTBkNDRmMi4uYzZmMWNmZTA5YmQzIDEwMDY0NAo+IC0tLSBhL2RyaXZlcnMvaWlvL2lu
a2Vybi5jCj4gKysrIGIvZHJpdmVycy9paW8vaW5rZXJuLmMKPiBAQCAtMjE0LDcgKzIxNCw3IEBA
IHN0YXRpYyBzdHJ1Y3QgaWlvX2NoYW5uZWwgKm9mX2lpb19jaGFubmVsX2dldChzdHJ1Y3QgZGV2
aWNlX25vZGUgKm5wLCBpbnQgaW5kZXgpCj4gIHN0cnVjdCBpaW9fY2hhbm5lbCAqb2ZfaWlvX2No
YW5uZWxfZ2V0X2J5X25hbWUoc3RydWN0IGRldmljZV9ub2RlICpucCwKPiAgCQkJCQkgICAgICAg
Y29uc3QgY2hhciAqbmFtZSkKPiAgewo+IC0Jc3RydWN0IGlpb19jaGFubmVsICpjaGFuID0gTlVM
TDsKPiArCXN0cnVjdCBpaW9fY2hhbm5lbCAqY2hhbjsKPiAgCj4gIAkvKiBXYWxrIHVwIHRoZSB0
cmVlIG9mIGRldmljZXMgbG9va2luZyBmb3IgYSBtYXRjaGluZyBpaW8gY2hhbm5lbCAqLwo+ICAJ
d2hpbGUgKG5wKSB7Cj4gQEAgLTIzMSwxMyArMjMxLDMzIEBAIHN0cnVjdCBpaW9fY2hhbm5lbCAq
b2ZfaWlvX2NoYW5uZWxfZ2V0X2J5X25hbWUoc3RydWN0IGRldmljZV9ub2RlICpucCwKPiAgCQkJ
CQkJCSBuYW1lKTsKPiAgCQljaGFuID0gb2ZfaWlvX2NoYW5uZWxfZ2V0KG5wLCBpbmRleCk7Cj4g
IAkJaWYgKCFJU19FUlIoY2hhbikgfHwgUFRSX0VSUihjaGFuKSA9PSAtRVBST0JFX0RFRkVSKQo+
IC0JCQlicmVhazsKPiAtCQllbHNlIGlmIChuYW1lICYmIGluZGV4ID49IDApIHsKPiAtCQkJcHJf
ZXJyKCJFUlJPUjogY291bGQgbm90IGdldCBJSU8gY2hhbm5lbCAlcE9GOiVzKCVpKVxuIiwKPiAt
CQkJCW5wLCBuYW1lID8gbmFtZSA6ICIiLCBpbmRleCk7Cj4gLQkJCXJldHVybiBOVUxMOwo+ICsJ
CQlyZXR1cm4gY2hhbjsKPiArCQlpZiAobmFtZSkgewo+ICsJCQlpZiAoaW5kZXggPj0gMCkgewo+
ICsJCQkJcHJfZXJyKCJFUlJPUjogY291bGQgbm90IGdldCBJSU8gY2hhbm5lbCAlcE9GOiVzKCVp
KVxuIiwKPiArCQkJCSAgICAgICBucCwgbmFtZSwgaW5kZXgpOwo+ICsJCQkJLyoKPiArCQkJCSAq
IEluIHRoaXMgY2FzZSwgd2UgZm91bmQgJ25hbWUnIGluICdpby1jaGFubmVsLW5hbWVzJwo+ICsJ
CQkJICogYnV0IHNvbWVob3cgd2Ugc3RpbGwgZmFpbCBzbyB0aGF0IHdlIHNob3VsZCBub3QgcHJv
Y2VlZAo+ICsJCQkJICogd2l0aCBhbnkgb3RoZXIgbG9va3VwLiBIZW5jZSwgZXhwbGljaXRseSBy
ZXR1cm4gLUVJTlZBTAo+ICsJCQkJICogKG1heWJlIG5vdCB0aGUgYmV0dGVyIGVycm9yIGNvZGUp
IHNvIHRoYXQgdGhlIGNhbGxlcgo+ICsJCQkJICogd29uJ3QgZG8gYSBzeXN0ZW0gbG9va3VwLgo+
ICsJCQkJICovCj4gKwkJCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKPiArCQkJfQoKVHJpdmlh
bCwgYnV0IHdyb25nIGNvbW1lbnQgc3ludGF4IGZvciBJSU8gKyBpbmNvbnNpc3RlbnQgd2l0aCBz
dXJyb3VuZGluZyBjb21tZW50cy4KCj4gKwkJCS8qIElmIGluZGV4IDwgMCwgdGhlbiBvZl9wYXJz
ZV9waGFuZGxlX3dpdGhfYXJncygpIGZhaWxzCj4gKwkJCSAqIHdpdGggLUVJTlZBTCB3aGljaCBp
cyBleHBlY3RlZC4gV2Ugc2hvdWxkIG5vdCBwcm9jZWVkCj4gKwkJCSAqIGlmIHdlIGdldCBhbnkg
b3RoZXIgZXJyb3IuCj4gKwkJCSAqLwo+ICsJCQlpZiAoUFRSX0VSUihjaGFuKSAhPSAtRUlOVkFM
KQo+ICsJCQkJcmV0dXJuIGNoYW47Cj4gKwkJfSBlbHNlIGlmIChQVFJfRVJSKGNoYW4pICE9IC1F
Tk9FTlQpIHsKPiArCQkJLyoKPiArCQkJICogaWYgIW5hbWUsIHRoZW4gd2Ugc2hvdWxkIG9ubHkg
cHJvY2VlZCB0aGUgbG9va3VwIGlmCj4gKwkJCSAqIG9mX3BhcnNlX3BoYW5kbGVfd2l0aF9hcmdz
KCkgcmV0dXJucyAtRU5PRU5ULgo+ICsJCQkgKi8KPiArCQkJcmV0dXJuIGNoYW47Cj4gIAkJfQo+
IC0KClRyeSB0byBhdm9pZCBub2lzZSBsaWtlIHRoaXMgKyBJIGxpa2UgdGhpcyB3aGl0ZXNwYWNl
IDopCgo+ICAJCS8qCj4gIAkJICogTm8gbWF0Y2hpbmcgSUlPIGNoYW5uZWwgZm91bmQgb24gdGhp
cyBub2RlLgo+ICAJCSAqIElmIHRoZSBwYXJlbnQgbm9kZSBoYXMgYSAiaW8tY2hhbm5lbC1yYW5n
ZXMiIHByb3BlcnR5LAo+IEBAIC0yNDUsMTAgKzI2NSwxMCBAQCBzdHJ1Y3QgaWlvX2NoYW5uZWwg
Km9mX2lpb19jaGFubmVsX2dldF9ieV9uYW1lKHN0cnVjdCBkZXZpY2Vfbm9kZSAqbnAsCj4gIAkJ
ICovCj4gIAkJbnAgPSBucC0+cGFyZW50Owo+ICAJCWlmIChucCAmJiAhb2ZfZ2V0X3Byb3BlcnR5
KG5wLCAiaW8tY2hhbm5lbC1yYW5nZXMiLCBOVUxMKSkKPiAtCQkJcmV0dXJuIE5VTEw7Cj4gKwkJ
CXJldHVybiBFUlJfUFRSKC1FTk9ERVYpOwo+ICAJfQo+ICAKPiAtCXJldHVybiBjaGFuOwo+ICsJ
cmV0dXJuIEVSUl9QVFIoLUVOT0RFVik7Cj4gIH0KPiAgRVhQT1JUX1NZTUJPTF9HUEwob2ZfaWlv
X2NoYW5uZWxfZ2V0X2J5X25hbWUpOwo+ICAKPiBAQCAtMjY3LDggKzI4Nyw4IEBAIHN0YXRpYyBz
dHJ1Y3QgaWlvX2NoYW5uZWwgKm9mX2lpb19jaGFubmVsX2dldF9hbGwoc3RydWN0IGRldmljZSAq
ZGV2KQo+ICAJCQlicmVhazsKPiAgCX0gd2hpbGUgKCsrbnVtbWFwcyk7Cj4gIAo+IC0JaWYgKG51
bW1hcHMgPT0gMCkJLyogbm8gZXJyb3IsIHJldHVybiBOVUxMIHRvIHNlYXJjaCBtYXAgdGFibGUg
Ki8KPiAtCQlyZXR1cm4gTlVMTDsKPiArCWlmIChudW1tYXBzID09IDApCj4gKwkJcmV0dXJuIEVS
Ul9QVFIoLUVOT0RFVik7Cj4gIAo+ICAJLyogTlVMTCB0ZXJtaW5hdGVkIGFycmF5IHRvIHNhdmUg
cGFzc2luZyBzaXplICovCj4gIAljaGFucyA9IGtjYWxsb2MobnVtbWFwcyArIDEsIHNpemVvZigq
Y2hhbnMpLCBHRlBfS0VSTkVMKTsKPiBAQCAtMjk1LDcgKzMxNSw3IEBAIHN0YXRpYyBzdHJ1Y3Qg
aWlvX2NoYW5uZWwgKm9mX2lpb19jaGFubmVsX2dldF9hbGwoc3RydWN0IGRldmljZSAqZGV2KQo+
ICAKPiAgc3RhdGljIGlubGluZSBzdHJ1Y3QgaWlvX2NoYW5uZWwgKm9mX2lpb19jaGFubmVsX2dl
dF9hbGwoc3RydWN0IGRldmljZSAqZGV2KQo+ICB7Cj4gLQlyZXR1cm4gTlVMTDsKPiArCXJldHVy
biBFUlJfUFRSKC1FTk9ERVYpOwo+ICB9Cj4gIAo+ICAjZW5kaWYgLyogQ09ORklHX09GICovCj4g
QEAgLTM2Miw3ICszODIsNyBAQCBzdHJ1Y3QgaWlvX2NoYW5uZWwgKmlpb19jaGFubmVsX2dldChz
dHJ1Y3QgZGV2aWNlICpkZXYsCj4gIAlpZiAoZGV2KSB7Cj4gIAkJY2hhbm5lbCA9IG9mX2lpb19j
aGFubmVsX2dldF9ieV9uYW1lKGRldi0+b2Zfbm9kZSwKPiAgCQkJCQkJICAgICBjaGFubmVsX25h
bWUpOwo+IC0JCWlmIChjaGFubmVsICE9IE5VTEwpCj4gKwkJaWYgKCFJU19FUlIoY2hhbm5lbCkg
fHwgUFRSX0VSUihjaGFubmVsKSAhPSAtRU5PREVWKQo+ICAJCQlyZXR1cm4gY2hhbm5lbDsKPiAg
CX0KPiAgCj4gQEAgLTQxMiw4ICs0MzIsNiBAQCBzdHJ1Y3QgaWlvX2NoYW5uZWwgKmRldm1fb2Zf
aWlvX2NoYW5uZWxfZ2V0X2J5X25hbWUoc3RydWN0IGRldmljZSAqZGV2LAo+ICAJY2hhbm5lbCA9
IG9mX2lpb19jaGFubmVsX2dldF9ieV9uYW1lKG5wLCBjaGFubmVsX25hbWUpOwo+ICAJaWYgKElT
X0VSUihjaGFubmVsKSkKPiAgCQlyZXR1cm4gY2hhbm5lbDsKPiAtCWlmICghY2hhbm5lbCkKPiAt
CQlyZXR1cm4gRVJSX1BUUigtRU5PREVWKTsKPiAgCj4gIAlyZXQgPSBkZXZtX2FkZF9hY3Rpb25f
b3JfcmVzZXQoZGV2LCBkZXZtX2lpb19jaGFubmVsX2ZyZWUsIGNoYW5uZWwpOwo+ICAJaWYgKHJl
dCkKPiBAQCAtNDM2LDcgKzQ1NCwxMSBAQCBzdHJ1Y3QgaWlvX2NoYW5uZWwgKmlpb19jaGFubmVs
X2dldF9hbGwoc3RydWN0IGRldmljZSAqZGV2KQo+ICAJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwp
Owo+ICAKPiAgCWNoYW5zID0gb2ZfaWlvX2NoYW5uZWxfZ2V0X2FsbChkZXYpOwo+IC0JaWYgKGNo
YW5zKQo+ICsJLyoKPiArCSAqIFdlIG9ubHkgd2FudCB0byBjYXJyeSBvbiBpZiB0aGUgZXJyb3Ig
aXMgLUVOT0RFVi4gIEFueXRoaW5nIGVsc2UKPiArCSAqIHNob3VsZCBiZSByZXBvcnRlZCB1cCB0
aGUgc3RhY2suCj4gKwkgKi8KPiArCWlmICghSVNfRVJSKGNoYW5zKSB8fCBQVFJfRVJSKGNoYW5z
KSAhPSAtRU5PREVWKQo+ICAJCXJldHVybiBjaGFuczsKPiAgCj4gIAluYW1lID0gZGV2X25hbWUo
ZGV2KTsKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkxp
bnV4LXN0bTMyIG1haWxpbmcgbGlzdApMaW51eC1zdG0zMkBzdC1tZC1tYWlsbWFuLnN0b3JtcmVw
bHkuY29tCmh0dHBzOi8vc3QtbWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbS9tYWlsbWFuL2xpc3Rp
bmZvL2xpbnV4LXN0bTMyCg==
