Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 835B8A74B1A
	for <lists+linux-stm32@lfdr.de>; Fri, 28 Mar 2025 14:42:44 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 376D5C78F81;
	Fri, 28 Mar 2025 13:42:44 +0000 (UTC)
Received: from mail-wr1-f43.google.com (mail-wr1-f43.google.com
 [209.85.221.43])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 38831C78F7F
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Fri, 28 Mar 2025 13:42:42 +0000 (UTC)
Received: by mail-wr1-f43.google.com with SMTP id
 ffacd0b85a97d-3914aba1ce4so1745531f8f.2
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Fri, 28 Mar 2025 06:42:42 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=linaro.org; s=google; t=1743169362; x=1743774162;
 darn=st-md-mailman.stormreply.com; 
 h=content-transfer-encoding:mime-version:references:in-reply-to
 :message-id:date:subject:cc:to:from:from:to:cc:subject:date
 :message-id:reply-to;
 bh=gkabenep1zUXpoNmG8Ukky5GYljP1cMUllO44DSLlAU=;
 b=ZvAH9NalhJhMmYcHxweO3yDKeu+Q2Rul4N7X0kpRQdZsqE7ysuYwXIyiiXKuZR5rJS
 BWIUaXJAWkZwwa33CL7HJij6CAW304W1W1a8xLfCTmKEKe4KzwpScNn+ariwfUnGt0i7
 kIeRSP9LtTr4V/o/bXZEt/n5nx/Zasuz9AdtPO031ZxcI3M1WI7ptOGG5proVfYqJVld
 yOUbzNgppZD/rG+b4nfjm2sTg8Oy4/5b60r3jtPp7ceqBcwzrxnMHU4FenOEfy/zgABu
 aB+gFvZAD3GTQaDONtwYiAQV0/3JLHA2d3CUhX8FNSmh5MqMm13YeagQmPHXfU3D8Vxd
 7F9w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20230601; t=1743169362; x=1743774162;
 h=content-transfer-encoding:mime-version:references:in-reply-to
 :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
 :subject:date:message-id:reply-to;
 bh=gkabenep1zUXpoNmG8Ukky5GYljP1cMUllO44DSLlAU=;
 b=EdNgzR5zqo3l05Vx48hgafKSLHZqnDvo6Pj+4pcVy8ibJT9exzdybUx4HG4gVwMDR+
 Zx94RG5TtDC/DkcKPR4d3/nIF5tglfa6RGN3xOrUV/WapbQDllawbkT4ZJqlsVwQTLy/
 zEpaa5l7XUvOEtwT7i37maOlpAZ+0x8dlFuszr59x1TlUjFaLRY955dBH/0phY+5TdpT
 gh9uwtBQ29olHaiUypT1nWzIl5PuJYPbuOxWsaJ+zHh/YE2TzewUDlfquIfft3KQp5J8
 QNxyuDXdGHh7J18Nw+C1paCmp0yUwMwUhnIzz3cMnbldIMetXxjBnkA79t3JymVaIcLi
 erBw==
X-Forwarded-Encrypted: i=1;
 AJvYcCW4pNg3iQatIRUN9x/hSShVf8T+QK28kZ+oJyP3xtf1Y0HtvVYCO3EQK1e9wu73MCyWsiinzqc+6/7E/g==@st-md-mailman.stormreply.com
X-Gm-Message-State: AOJu0YzJHD2ZMFkKM4e5MBYQZb83aWgJb9+VEyq2mXLMWIqbeoVk4sAn
 z0LTlI0fjpF+HCzAy6xJdKAx0ExiTGHCb/FfECgxKVOhbiVSOgJMrNiuhaLLHPU=
X-Gm-Gg: ASbGnculbvOtED2S/nh6f2SS9+jnmcdpWfT8aRt6CR0Ih3FgJN90x1yBZnqocn/3Ec3
 bimZVyoOzXQVOBdfOuDqJIJ91TAVAuU2z3a/ysuEpmAHqsr01xZmEfoc/8+mTp8FPGNi9Y0H/1b
 NRRj/OWCDRpJFj3VECCm1Z+NNAXID5RvSR3ZsL5KZb8Da7FmMNQdPiIUhvREJZ93xEqNYL1Fob6
 KHcCnyI+qX9QSBRJtDrVhmiF4muXOIuqteOf1ZTpehO7GymOMthCkcaRq1ZZxfPLPTBQpYBopls
 BqJH4drXYkHTVhsK7xZsBsiFc+e7qLgKUhpzJg0peLhwBSxZDKvDgJRtEc9wiOE5omoy/9M=
X-Google-Smtp-Source: AGHT+IFtlECplpWB0bq+AOAdscPSlGVkbttpCocRuUyBHE1s6+J9QTfsyZny8R6cs53FR+rXI00TEQ==
X-Received: by 2002:a05:6000:400c:b0:391:ccf:2d17 with SMTP id
 ffacd0b85a97d-39ad17136e2mr7770316f8f.0.1743169361539; 
 Fri, 28 Mar 2025 06:42:41 -0700 (PDT)
Received: from mai.. (146725694.box.freepro.com. [130.180.211.218])
 by smtp.gmail.com with ESMTPSA id
 ffacd0b85a97d-39c0b79e097sm2595454f8f.80.2025.03.28.06.42.40
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 28 Mar 2025 06:42:41 -0700 (PDT)
From: Daniel Lezcano <daniel.lezcano@linaro.org>
To: daniel.lezcano@linaro.org,
	tglx@linutronix.de
Date: Fri, 28 Mar 2025 14:42:06 +0100
Message-ID: <20250328134208.2183653-3-daniel.lezcano@linaro.org>
X-Mailer: git-send-email 2.43.0
In-Reply-To: <20250328134208.2183653-1-daniel.lezcano@linaro.org>
References: <20250328134208.2183653-1-daniel.lezcano@linaro.org>
MIME-Version: 1.0
Cc: S32@nxp.com, "moderated list:ARM/STM32 ARCHITECTURE"
 <linux-stm32@st-md-mailman.stormreply.com>, Larisa.Grigore@nxp.com,
 linux-kernel@vger.kernel.org, krzk@kernel.org,
 Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>, thomas.fossati@linaro.org,
 Ghennadi Procopciuc <ghennadi.procopciuc@oss.nxp.com>,
 ghennadi.procopciuc@nxp.com,
 "moderated list:ARM/STM32 ARCHITECTURE" <linux-arm-kernel@lists.infradead.org>
Subject: [Linux-stm32] [PATCH v2 2/2] clocksource/drivers/nxp-timer: Add the
	System Timer Module for the s32g platform
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

U1RNIHN1cHBvcnRzIGNvbW1vbmx5IHJlcXVpcmVkIHN5c3RlbSBhbmQgYXBwbGljYXRpb24gc29m
dHdhcmUgdGltaW5nCmZ1bmN0aW9ucy4gU1RNIGluY2x1ZGVzIGEgMzItYml0IGNvdW50LXVwIHRp
bWVyIGFuZCBmb3VyIDMyLWJpdApjb21wYXJlIGNoYW5uZWxzIHdpdGggYSBzZXBhcmF0ZSBpbnRl
cnJ1cHQgc291cmNlIGZvciBlYWNoCmNoYW5uZWwuIFRoZSB0aW1lciBpcyBkcml2ZW4gYnkgdGhl
IFNUTSBtb2R1bGUgY2xvY2sgZGl2aWRlZCBieSBhbgo4LWJpdCBwcmVzY2FsZSB2YWx1ZSAoMSB0
byAyNTYpLgoKU1RNIGhhcyB0aGUgZm9sbG93aW5nIGZlYXR1cmVzOgogICAg4oCiIE9uZSAzMi1i
aXQgY291bnQtdXAgdGltZXIgd2l0aCBhbiA4LWJpdCBwcmVzY2FsZXIKICAgIOKAoiBGb3VyIDMy
LWJpdCBjb21wYXJlIGNoYW5uZWxzCiAgICDigKIgQW4gaW5kZXBlbmRlbnQgaW50ZXJydXB0IHNv
dXJjZSBmb3IgZWFjaCBjaGFubmVsCiAgICDigKIgQWJpbGl0eSB0byBzdG9wIHRoZSB0aW1lciBp
biBEZWJ1ZyBtb2RlCgpUaGUgczMyZyBwbGF0Zm9ybSBpcyBkZWNsaW5lZCBpbnRvIHR3byB2ZXJz
aW9ucywgdGhlIHMzMmcyIGFuZCB0aGUKczMyZzMuIFRoZSBmb3JtZXIgaGFzIGEgU1RNIGJsb2Nr
IHdpdGggOCB0aW1lcnMgYW5kIHRoZSBsYXR0ZXIgaGFzIDEyCnRpbWVycy4KClRoZSBwbGF0Zm9y
bSBpcyBkZXNpZ25lZCB0byBoYXZlIG9uZSB1c2FibGUgU1RNIGluc3RhbmNlIHBlciBjb3JlIG9u
CnRoZSBzeXN0ZW0gd2hpY2ggaXMgY29tcG9zZWQgb2YgMyB4IENvcnRleC1NMyArIDQgQ29ydGV4
LUE1MyBmb3IgdGhlCnMzMmcyIGFuZCAzIHggQ29ydGV4LU0zICsgOCBDb3J0ZXgtQTUzLgoKVGhl
cmUgaXMgYSBzcGVjaWFsIFNUTSBpbnN0YW5jZSBjYWxsZWQgU1RNX1RTIHdoaWNoIGlzIGRlZGlj
YXRlZCB0bwp0aGUgdGltZXN0YW1wLiBUaGUgN3RoIFNUTSBpbnN0YW5jZSBTVE1fMDcgaXMgZGly
ZWN0bHkgdGllZCB0byB0aGUKU1RNX1RTIHdoaWNoIG1lYW5zIGl0IGlzIG5vdCB1c2FibGUgYXMg
YSBjbG9ja2V2ZW50LgoKVGhlIGRyaXZlciBpbnN0YW5jaWF0ZSBlYWNoIFNUTSBpbnN0YW5jZSBk
ZXNjcmliZWQgaW4gdGhlIGRldmljZSB0cmVlCmFzIGEgY2xvY2tzb3VyY2UgYW5kIGEgY2xvY2tl
dmVudCBjb25mb3JtaW5nIHRvIHRoZSByZWZlcmVuY2UgbWFudWFsCmV2ZW4gaWYgdGhlIExpbnV4
IHN5c3RlbSBkb2VzIG5vdCB1c2UgYWxsIG9mIHRoZSBjbG9ja3NvdXJjZS4gRWFjaApjbG9ja2V2
ZW50IHdpbGwgaGF2ZSBhIGNwdW1hc2sgc2V0IGZvciBhIHNwZWNpZmljIENQVS4KCkdpdmVuIHRo
ZSBjb3VudGVyIGlzIHNoYXJlZCBiZXR3ZWVuIHRoZSBjbG9ja3NvdXJjZSBhbmQgdGhlCmNsb2Nr
ZXZlbnQsIHRoZSBTVE0gbW9kdWxlIGNhbiBub3QgYmUgZGlzYWJsZWQgYnkgb25lIG9yIGFub3Ro
ZXIgc28KdGhlIHJlZmNvdW50aW5nIG1lY2hhbmlzbSBpcyB1c2VkIHRvIHN0b3AgdGhlIGNvdW50
ZXIgd2hlbiBpdCByZWFjaGVzCnplcm8gYW5kIHRvIHN0YXJ0IGl0IHdoZW4gaXQgaXMgb25lLiBU
aGUgc3VzcGVuZCBhbmQgcmVzdW1lIHJlbGllcyBvbgp0aGUgcmVmY291bnQgdG8gc3RvcCB0aGUg
bW9kdWxlLgoKQXMgdGhlIGRldmljZSB0cmVlIHdpbGwgaGF2ZSBtdWx0aXBsZSBTVE0gZW50cmll
cywgdGhlIGRyaXZlciBjYW4gYmUKcHJvYmVkIGluIHBhcmFsbGVsIHdpdGggdGhlIGFzeW5jIG9w
dGlvbiBidXQgaXQgaXMgbm90IGVuYWJsZWQKeWV0LiBIb3dldmVyLCB0aGUgZHJpdmVyIGNvZGUg
dGFrZXMgY2FyZSBvZiBwcmV2ZW50aW5nIGEgcmFjZSBieQpwdXR0aW5nIGEgbG9jayB0byBwcm90
ZWN0IHRoZSBudW1iZXIgb2YgU1RNIGluc3RhbmNlcyBnbG9iYWwgdmFyaWFibGUKd2hpY2ggbWVh
bnMgaXQgaXMgcmVhZHkgdG8gc3VwcG9ydCB0aGUgb3B0aW9uIHdoZW4gZW5vdWdoIHRlc3Rpbmcg
d2lsbApiZSBkb25lIHdpdGggdGhlIHVuZGVybHlpbmcgdGltZSBmcmFtZXdvcmsuCgpJbiBvcmRl
ciB0byBpbXByb3ZlIHRoZSBkcml2ZXIgcXVhbGl0eSBmb3IgZGVidWcgcHVycG9zZSwgdGhlIGRl
YnVnZnMKZW50cnkgaXMgc2V0IHRvIHNob3cgdGhlIHJlZ2lzdGVycyBhbmQgdGhlIHJlZmNvdW50
IG9mIGFuIFNUTQppbnN0YW5jZS4KCkNjOiBHaGVubmFkaSBQcm9jb3BjaXVjIDxnaGVubmFkaS5w
cm9jb3BjaXVjQG9zcy5ueHAuY29tPgpDYzogS3J6eXN6dG9mIEtvemxvd3NraSA8a3J6eXN6dG9m
Lmtvemxvd3NraUBsaW5hcm8ub3JnPgpDYzogVGhvbWFzIEZvc3NhdGkgPHRob21hcy5mb3NzYXRp
QGxpbmFyby5vcmc+ClN1Z2dlc3RlZC1ieTogR2hlbm5hZGkgUHJvY29wY2l1YyA8Z2hlbm5hZGku
cHJvY29wY2l1Y0BueHAuY29tPgpTaWduZWQtb2ZmLWJ5OiBEYW5pZWwgTGV6Y2FubyA8ZGFuaWVs
LmxlemNhbm9AbGluYXJvLm9yZz4KLS0tCiBkcml2ZXJzL2Nsb2Nrc291cmNlL0tjb25maWcgICAg
ICAgICB8ICAgOSArCiBkcml2ZXJzL2Nsb2Nrc291cmNlL01ha2VmaWxlICAgICAgICB8ICAgMiAr
CiBkcml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLW54cC1zdG0uYyB8IDU2MyArKysrKysrKysrKysr
KysrKysrKysrKysrKysrCiAzIGZpbGVzIGNoYW5nZWQsIDU3NCBpbnNlcnRpb25zKCspCiBjcmVh
dGUgbW9kZSAxMDA2NDQgZHJpdmVycy9jbG9ja3NvdXJjZS90aW1lci1ueHAtc3RtLmMKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2Nsb2Nrc291cmNlL0tjb25maWcgYi9kcml2ZXJzL2Nsb2Nrc291cmNl
L0tjb25maWcKaW5kZXggNDg3Yzg1MjU5OTY3Li5lODZlMzI3MzkyYWYgMTAwNjQ0Ci0tLSBhL2Ry
aXZlcnMvY2xvY2tzb3VyY2UvS2NvbmZpZworKysgYi9kcml2ZXJzL2Nsb2Nrc291cmNlL0tjb25m
aWcKQEAgLTc2Myw0ICs3NjMsMTMgQEAgY29uZmlnIFJBTElOS19USU1FUgogCSAgRW5hYmxlcyBz
dXBwb3J0IGZvciBzeXN0ZW0gdGljayBjb3VudGVyIHByZXNlbnQgb24KIAkgIFJhbGluayBTb0Nz
IFJUMzM1MiBhbmQgTVQ3NjIwLgogCitjb25maWcgTlhQX1NUTV9USU1FUgorCWJvb2wgIk5YUCBT
eXN0ZW0gVGltZXIgTW9kdWxlIGRyaXZlciIKKwlkZXBlbmRzIG9uIEFSQ0hfUzMyIHx8IENPTVBJ
TEVfVEVTVAorCXNlbGVjdCBDTEtTUkNfTU1JTworCWhlbHAKKwkgIFN1cHBvcnQgZm9yIE5YUCBT
eXN0ZW0gVGltZXIgTW9kdWxlLiBJdCB3aWxsIGNyZWF0ZSwgaW4gdGhpcworCSAgb3JkZXIsIGEg
Y2xvY2tzb3VyY2UsIGEgYnJvYWRjYXN0IGNsb2NrZXZlbnQgYW5kIGEgcGVyIGNwdQorCSAgY2xv
Y2tldmVudC4KKwogZW5kbWVudQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9jbG9ja3NvdXJjZS9NYWtl
ZmlsZSBiL2RyaXZlcnMvY2xvY2tzb3VyY2UvTWFrZWZpbGUKaW5kZXggNDNlZjE2YTRlZmE2Li5j
M2E5MmU2YjlmOTQgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvTWFrZWZpbGUKKysr
IGIvZHJpdmVycy9jbG9ja3NvdXJjZS9NYWtlZmlsZQpAQCAtOTIsMyArOTIsNSBAQCBvYmotJChD
T05GSUdfR1hQX1RJTUVSKQkJCSs9IHRpbWVyLWd4cC5vCiBvYmotJChDT05GSUdfQ0xLU1JDX0xP
T05HU09OMV9QV00pCSs9IHRpbWVyLWxvb25nc29uMS1wd20ubwogb2JqLSQoQ09ORklHX0VQOTNY
WF9USU1FUikJCSs9IHRpbWVyLWVwOTN4eC5vCiBvYmotJChDT05GSUdfUkFMSU5LX1RJTUVSKQkJ
Kz0gdGltZXItcmFsaW5rLm8KK29iai0kKENPTkZJR19OWFBfU1RNX1RJTUVSKQkJKz0gdGltZXIt
bnhwLXN0bS5vCisKZGlmZiAtLWdpdCBhL2RyaXZlcnMvY2xvY2tzb3VyY2UvdGltZXItbnhwLXN0
bS5jIGIvZHJpdmVycy9jbG9ja3NvdXJjZS90aW1lci1ueHAtc3RtLmMKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi41ZmQ5ZTI1MDdlNzcKLS0tIC9kZXYvbnVsbAorKysg
Yi9kcml2ZXJzL2Nsb2Nrc291cmNlL3RpbWVyLW54cC1zdG0uYwpAQCAtMCwwICsxLDU2MyBAQAor
Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKKy8qCisgKiBDb3B5
cmlnaHQgMjAxNiBGcmVlc2NhbGUgU2VtaWNvbmR1Y3RvciwgSW5jLgorICogQ29weXJpZ2h0IDIw
MTgsMjAyMS0yMDI1IE5YUAorICoKKyAqIE5YUCBTeXN0ZW0gVGltZXIgTW9kdWxlOgorICoKKyAq
ICBTVE0gc3VwcG9ydHMgY29tbW9ubHkgcmVxdWlyZWQgc3lzdGVtIGFuZCBhcHBsaWNhdGlvbiBz
b2Z0d2FyZQorICogIHRpbWluZyBmdW5jdGlvbnMuIFNUTSBpbmNsdWRlcyBhIDMyLWJpdCBjb3Vu
dC11cCB0aW1lciBhbmQgZm91cgorICogIDMyLWJpdCBjb21wYXJlIGNoYW5uZWxzIHdpdGggYSBz
ZXBhcmF0ZSBpbnRlcnJ1cHQgc291cmNlIGZvciBlYWNoCisgKiAgY2hhbm5lbC4gVGhlIHRpbWVy
IGlzIGRyaXZlbiBieSB0aGUgU1RNIG1vZHVsZSBjbG9jayBkaXZpZGVkIGJ5IGFuCisgKiAgOC1i
aXQgcHJlc2NhbGUgdmFsdWUgKDEgdG8gMjU2KS4gSXQgaGFzIGFiaWxpdHkgdG8gc3RvcCB0aGUg
dGltZXIKKyAqICBpbiBEZWJ1ZyBtb2RlCisgKi8KKyNpbmNsdWRlIDxsaW51eC9jbGsuaD4KKyNp
bmNsdWRlIDxsaW51eC9jbG9ja2NoaXBzLmg+CisjaW5jbHVkZSA8bGludXgvY3B1aG90cGx1Zy5o
PgorI2luY2x1ZGUgPGxpbnV4L2RlYnVnZnMuaD4KKyNpbmNsdWRlIDxsaW51eC9pbnRlcnJ1cHQu
aD4KKyNpbmNsdWRlIDxsaW51eC9tb2R1bGUuaD4KKyNpbmNsdWRlIDxsaW51eC9vZl9pcnEuaD4K
KyNpbmNsdWRlIDxsaW51eC9wbGF0Zm9ybV9kZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51eC9zY2hl
ZF9jbG9jay5oPgorI2luY2x1ZGUgPGxpbnV4L3VuaXRzLmg+CisKKyNkZWZpbmUgU1RNX0NSKF9f
YmFzZSkJCShfX2Jhc2UpCisKKyNkZWZpbmUgU1RNX0NSX1RFTgkJQklUKDApCisjZGVmaW5lIFNU
TV9DUl9GUloJCUJJVCgxKQorI2RlZmluZSBTVE1fQ1JfQ1BTX09GRlNFVAk4dQorI2RlZmluZSBT
VE1fQ1JfQ1BTX01BU0sJCUdFTk1BU0soMTUsIFNUTV9DUl9DUFNfT0ZGU0VUKQorCisjZGVmaW5l
IFNUTV9DTlQoX19iYXNlKQkJKF9fYmFzZSArIDB4MDQpCisKKyNkZWZpbmUgU1RNX0NDUjAoX19i
YXNlKQkoX19iYXNlICsgMHgxMCkKKyNkZWZpbmUgU1RNX0NDUjEoX19iYXNlKQkoX19iYXNlICsg
MHgyMCkKKyNkZWZpbmUgU1RNX0NDUjIoX19iYXNlKQkoX19iYXNlICsgMHgzMCkKKyNkZWZpbmUg
U1RNX0NDUjMoX19iYXNlKQkoX19iYXNlICsgMHg0MCkKKworI2RlZmluZSBTVE1fQ0NSX0NFTgkJ
QklUKDApCisKKyNkZWZpbmUgU1RNX0NJUjAoX19iYXNlKQkoX19iYXNlICsgMHgxNCkKKyNkZWZp
bmUgU1RNX0NJUjEoX19iYXNlKQkoX19iYXNlICsgMHgyNCkKKyNkZWZpbmUgU1RNX0NJUjIoX19i
YXNlKQkoX19iYXNlICsgMHgzNCkKKyNkZWZpbmUgU1RNX0NJUjMoX19iYXNlKQkoX19iYXNlICsg
MHg0NCkKKworI2RlZmluZSBTVE1fQ0lSX0NJRgkJQklUKDApCisKKyNkZWZpbmUgU1RNX0NNUDAo
X19iYXNlKQkoX19iYXNlICsgMHgxOCkKKyNkZWZpbmUgU1RNX0NNUDEoX19iYXNlKQkoX19iYXNl
ICsgMHgyOCkKKyNkZWZpbmUgU1RNX0NNUDIoX19iYXNlKQkoX19iYXNlICsgMHgzOCkKKyNkZWZp
bmUgU1RNX0NNUDMoX19iYXNlKQkoX19iYXNlICsgMHg0OCkKKworI2RlZmluZSBTVE1fRU5BQkxF
X01BU0sJKFNUTV9DUl9GUlogfCBTVE1fQ1JfVEVOKQorCitzdHJ1Y3Qgc3RtX3RpbWVyIHsKKwl2
b2lkIF9faW9tZW0gKmJhc2U7CisJdW5zaWduZWQgbG9uZyByYXRlOworCXVuc2lnbmVkIGxvbmcg
ZGVsdGE7CisJdW5zaWduZWQgbG9uZyBjb3VudGVyOworCXN0cnVjdCBjbG9ja19ldmVudF9kZXZp
Y2UgY2VkOworCXN0cnVjdCBjbG9ja3NvdXJjZSBjczsKKwlhdG9taWNfdCByZWZjbnQ7Cit9Owor
CitzdGF0aWMgREVGSU5FX1BFUl9DUFUoc3RydWN0IHN0bV90aW1lciAqLCBzdG1fdGltZXJzKTsK
Kworc3RhdGljIHN0cnVjdCBzdG1fdGltZXIgKnN0bV9zY2hlZF9jbG9jazsKKworLyoKKyAqIEds
b2JhbCBzdHJ1Y3R1cmUgZm9yIG11bHRpcGxlIFNUTXMgaW5pdGlhbGl6YXRpb24KKyAqLworc3Rh
dGljIGludCBzdG1faW5zdGFuY2VzOworCisvKgorICogVGhpcyBnbG9iYWwgbG9jayBpcyB1c2Vk
IHRvIHByZXZlbnQgcmFjZSBjb25kaXRpb25zIHdpdGggdGhlCisgKiBzdG1faW5zdGFuY2VzIGlu
IGNhc2UgdGhlIGRyaXZlciBpcyB1c2luZyB0aGUgQVNZTkMgb3B0aW9uCisgKi8KK3N0YXRpYyBE
RUZJTkVfTVVURVgoc3RtX2luc3RhbmNlc19sb2NrKTsKKworREVGSU5FX0dVQVJEKHN0bV9pbnN0
YW5jZXMsIHN0cnVjdCBtdXRleCAqLCBtdXRleF9sb2NrKF9UKSwgbXV0ZXhfdW5sb2NrKF9UKSkK
KworI2lmZGVmIENPTkZJR19ERUJVR19GUworI2RlZmluZSBTVE1fREVCVUdfRlNfUkVHUyhfX3Jl
ZykJCVwKKwl7CQkJCQlcCisJCS5uYW1lID0gX19zdHJpbmdpZnkoX19yZWcpLAlcCisJCQkub2Zm
c2V0ID0gX19yZWcoMCksCVwKKwl9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3QgZGVidWdmc19yZWcz
MiBzdG1fcmVnc1tdID0geworCVNUTV9ERUJVR19GU19SRUdTKFNUTV9DUiksCisJU1RNX0RFQlVH
X0ZTX1JFR1MoU1RNX0NOVCksCisJU1RNX0RFQlVHX0ZTX1JFR1MoU1RNX0NDUjApLAorCVNUTV9E
RUJVR19GU19SRUdTKFNUTV9DSVIwKSwKKwlTVE1fREVCVUdfRlNfUkVHUyhTVE1fQ01QMCksCisJ
U1RNX0RFQlVHX0ZTX1JFR1MoU1RNX0NDUjEpLAorCVNUTV9ERUJVR19GU19SRUdTKFNUTV9DSVIx
KSwKKwlTVE1fREVCVUdfRlNfUkVHUyhTVE1fQ01QMSksCisJU1RNX0RFQlVHX0ZTX1JFR1MoU1RN
X0NDUjIpLAorCVNUTV9ERUJVR19GU19SRUdTKFNUTV9DSVIyKSwKKwlTVE1fREVCVUdfRlNfUkVH
UyhTVE1fQ01QMiksCisJU1RNX0RFQlVHX0ZTX1JFR1MoU1RNX0NDUjMpLAorCVNUTV9ERUJVR19G
U19SRUdTKFNUTV9DSVIzKSwKKwlTVE1fREVCVUdfRlNfUkVHUyhTVE1fQ01QMyksCit9OworCitz
dGF0aWMgdm9pZCBueHBfc3RtX21vZHVsZV9kZWJ1Z2ZzX2luaXQoc3RydWN0IGRldmljZSAqZGV2
LCBzdHJ1Y3Qgc3RtX3RpbWVyICpzdG1fdGltZXIpCit7CisJc3RydWN0IGRlYnVnZnNfcmVnc2V0
MzIgKnJlZ3NldDsKKwlzdHJ1Y3QgZGVudHJ5ICpkZW50cnk7CisJc3RhdGljIHN0cnVjdCBkZW50
cnkgKnRvcGRpciA9IE5VTEw7CisKKwlpZiAoIXRvcGRpcikKKwkJdG9wZGlyID0gZGVidWdmc19j
cmVhdGVfZGlyKCJ0aW1lcnMiLCBOVUxMKTsKKworCWRlbnRyeSA9IGRlYnVnZnNfY3JlYXRlX2Rp
cihkZXZfbmFtZShkZXYpLCB0b3BkaXIpOworCisJcmVnc2V0ID0gZGV2bV9remFsbG9jKGRldiwg
c2l6ZW9mKCpyZWdzZXQpLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXJlZ3NldCkKKwkJcmV0dXJuOwor
CisJcmVnc2V0LT5iYXNlID0gc3RtX3RpbWVyLT5iYXNlOworCXJlZ3NldC0+cmVncyA9IHN0bV9y
ZWdzOworCXJlZ3NldC0+bnJlZ3MgPSBBUlJBWV9TSVpFKHN0bV9yZWdzKTsKKworCWRlYnVnZnNf
Y3JlYXRlX3JlZ3NldDMyKCJyZWdpc3RlcnMiLCAwNDAwLCBkZW50cnksIHJlZ3NldCk7CisKKwlk
ZWJ1Z2ZzX2NyZWF0ZV9hdG9taWNfdCgicmVmY291bnQiLCAwNDAwLCBkZW50cnksICZzdG1fdGlt
ZXItPnJlZmNudCk7Cit9CisjZWxzZQorc3RhdGljIGlubGluZSB2b2lkIG54cF9zdG1fbW9kdWxl
X2RlYnVnZnNfaW5pdChzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBzdG1fdGltZXIgKnN0bV90
aW1lcikKK3sKK30KKyNlbmRpZgorCitzdGF0aWMgc3RydWN0IHN0bV90aW1lciAqY3NfdG9fc3Rt
KHN0cnVjdCBjbG9ja3NvdXJjZSAqY3MpCit7CisJcmV0dXJuIGNvbnRhaW5lcl9vZihjcywgc3Ry
dWN0IHN0bV90aW1lciwgY3MpOworfQorCitzdGF0aWMgc3RydWN0IHN0bV90aW1lciAqY2VkX3Rv
X3N0bShzdHJ1Y3QgY2xvY2tfZXZlbnRfZGV2aWNlICpjZWQpCit7CisgICAgICAgIHJldHVybiBj
b250YWluZXJfb2YoY2VkLCBzdHJ1Y3Qgc3RtX3RpbWVyLCBjZWQpOworfQorCitzdGF0aWMgdTY0
IG5vdHJhY2UgbnhwX3N0bV9yZWFkX3NjaGVkX2Nsb2NrKHZvaWQpCit7CisJcmV0dXJuIHJlYWRs
KFNUTV9DTlQoc3RtX3NjaGVkX2Nsb2NrLT5iYXNlKSk7Cit9CisKK3N0YXRpYyB1MzIgbnhwX3N0
bV9jbG9ja3NvdXJjZV9nZXRjbnQoc3RydWN0IHN0bV90aW1lciAqc3RtX3RpbWVyKQoreworCXJl
dHVybiByZWFkbChTVE1fQ05UKHN0bV90aW1lci0+YmFzZSkpOworfQorCitzdGF0aWMgdm9pZCBu
eHBfc3RtX2Nsb2Nrc291cmNlX3NldGNudChzdHJ1Y3Qgc3RtX3RpbWVyICpzdG1fdGltZXIsIHUz
MiBjbnQpCit7CisJd3JpdGVsKGNudCwgU1RNX0NOVChzdG1fdGltZXItPmJhc2UpKTsKK30KKwor
c3RhdGljIHU2NCBueHBfc3RtX2Nsb2Nrc291cmNlX3JlYWQoc3RydWN0IGNsb2Nrc291cmNlICpj
cykKK3sKKwlzdHJ1Y3Qgc3RtX3RpbWVyICpzdG1fdGltZXIgPSBjc190b19zdG0oY3MpOworCisJ
cmV0dXJuICh1NjQpbnhwX3N0bV9jbG9ja3NvdXJjZV9nZXRjbnQoc3RtX3RpbWVyKTsKK30KKwor
c3RhdGljIHZvaWQgbnhwX3N0bV9tb2R1bGVfZW5hYmxlKHN0cnVjdCBzdG1fdGltZXIgKnN0bV90
aW1lcikKK3sKKwl1MzIgcmVnOworCisJcmVnID0gcmVhZGwoU1RNX0NSKHN0bV90aW1lci0+YmFz
ZSkpOworCisJcmVnIHw9IFNUTV9FTkFCTEVfTUFTSzsKKworCXdyaXRlbChyZWcsIFNUTV9DUihz
dG1fdGltZXItPmJhc2UpKTsKK30KKworc3RhdGljIHZvaWQgbnhwX3N0bV9tb2R1bGVfZGlzYWJs
ZShzdHJ1Y3Qgc3RtX3RpbWVyICpzdG1fdGltZXIpCit7CisJdTMyIHJlZzsKKworCXJlZyA9IHJl
YWRsKFNUTV9DUihzdG1fdGltZXItPmJhc2UpKTsKKworCXJlZyAmPSB+U1RNX0VOQUJMRV9NQVNL
OworCisJd3JpdGVsKHJlZywgU1RNX0NSKHN0bV90aW1lci0+YmFzZSkpOworfQorCitzdGF0aWMg
dm9pZCBueHBfc3RtX21vZHVsZV9wdXQoc3RydWN0IHN0bV90aW1lciAqc3RtX3RpbWVyKQorewor
CWlmIChhdG9taWNfZGVjX2FuZF90ZXN0KCZzdG1fdGltZXItPnJlZmNudCkpCisJCW54cF9zdG1f
bW9kdWxlX2Rpc2FibGUoc3RtX3RpbWVyKTsKK30KKworc3RhdGljIHZvaWQgbnhwX3N0bV9tb2R1
bGVfZ2V0KHN0cnVjdCBzdG1fdGltZXIgKnN0bV90aW1lcikKK3sKKwlpZiAoYXRvbWljX2luY19y
ZXR1cm4oJnN0bV90aW1lci0+cmVmY250KSA9PSAxKQorCQlueHBfc3RtX21vZHVsZV9lbmFibGUo
c3RtX3RpbWVyKTsKK30KKworc3RhdGljIGludCBueHBfc3RtX2Nsb2Nrc291cmNlX2VuYWJsZShz
dHJ1Y3QgY2xvY2tzb3VyY2UgKmNzKQoreworCXN0cnVjdCBzdG1fdGltZXIgKnN0bV90aW1lciA9
IGNzX3RvX3N0bShjcyk7CisKKwlueHBfc3RtX21vZHVsZV9nZXQoc3RtX3RpbWVyKTsKKworCXJl
dHVybiAwOworfQorCitzdGF0aWMgdm9pZCBueHBfc3RtX2Nsb2Nrc291cmNlX2Rpc2FibGUoc3Ry
dWN0IGNsb2Nrc291cmNlICpjcykKK3sKKwlzdHJ1Y3Qgc3RtX3RpbWVyICpzdG1fdGltZXIgPSBj
c190b19zdG0oY3MpOworCisJbnhwX3N0bV9tb2R1bGVfcHV0KHN0bV90aW1lcik7Cit9CisKK3N0
YXRpYyB2b2lkIG54cF9zdG1fY2xvY2tzb3VyY2Vfc3VzcGVuZChzdHJ1Y3QgY2xvY2tzb3VyY2Ug
KmNzKQoreworCXN0cnVjdCBzdG1fdGltZXIgKnN0bV90aW1lciA9IGNzX3RvX3N0bShjcyk7CisK
KwlueHBfc3RtX2Nsb2Nrc291cmNlX2Rpc2FibGUoY3MpOworCXN0bV90aW1lci0+Y291bnRlciA9
IG54cF9zdG1fY2xvY2tzb3VyY2VfZ2V0Y250KHN0bV90aW1lcik7Cit9CisKK3N0YXRpYyB2b2lk
IG54cF9zdG1fY2xvY2tzb3VyY2VfcmVzdW1lKHN0cnVjdCBjbG9ja3NvdXJjZSAqY3MpCit7CisJ
c3RydWN0IHN0bV90aW1lciAqc3RtX3RpbWVyID0gY3NfdG9fc3RtKGNzKTsKKworCW54cF9zdG1f
Y2xvY2tzb3VyY2Vfc2V0Y250KHN0bV90aW1lciwgc3RtX3RpbWVyLT5jb3VudGVyKTsKKwlueHBf
c3RtX2Nsb2Nrc291cmNlX2VuYWJsZShjcyk7Cit9CisKK3N0YXRpYyB2b2lkIF9faW5pdCBkZXZt
X2Nsb2Nrc291cmNlX3VucmVnaXN0ZXIodm9pZCAqZGF0YSkKK3sKKwlzdHJ1Y3Qgc3RtX3RpbWVy
ICpzdG1fdGltZXIgPSBkYXRhOworCisJY2xvY2tzb3VyY2VfdW5yZWdpc3Rlcigmc3RtX3RpbWVy
LT5jcyk7Cit9CisKK3N0YXRpYyBpbnQgX19pbml0IG54cF9zdG1fY2xvY2tzb3VyY2VfaW5pdChz
dHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBzdG1fdGltZXIgKnN0bV90aW1lciwgY29uc3QgY2hh
ciAqbmFtZSwKKwkJCQkJICAgdm9pZCBfX2lvbWVtICpiYXNlLCBzdHJ1Y3QgY2xrICpjbGspCit7
CisJaW50IHJldDsKKworCXN0bV90aW1lci0+YmFzZSA9IGJhc2U7CisJc3RtX3RpbWVyLT5yYXRl
ID0gY2xrX2dldF9yYXRlKGNsayk7CisKKwlzdG1fdGltZXItPmNzLm5hbWUgPSBuYW1lOworCXN0
bV90aW1lci0+Y3MucmF0aW5nID0gNDYwOworCXN0bV90aW1lci0+Y3MucmVhZCA9IG54cF9zdG1f
Y2xvY2tzb3VyY2VfcmVhZDsKKwlzdG1fdGltZXItPmNzLmVuYWJsZSA9IG54cF9zdG1fY2xvY2tz
b3VyY2VfZW5hYmxlOworCXN0bV90aW1lci0+Y3MuZGlzYWJsZSA9IG54cF9zdG1fY2xvY2tzb3Vy
Y2VfZGlzYWJsZTsKKwlzdG1fdGltZXItPmNzLnN1c3BlbmQgPSBueHBfc3RtX2Nsb2Nrc291cmNl
X3N1c3BlbmQ7CisJc3RtX3RpbWVyLT5jcy5yZXN1bWUgPSBueHBfc3RtX2Nsb2Nrc291cmNlX3Jl
c3VtZTsKKwlzdG1fdGltZXItPmNzLm1hc2sgPSBDTE9DS1NPVVJDRV9NQVNLKDMyKTsKKwlzdG1f
dGltZXItPmNzLmZsYWdzID0gQ0xPQ0tfU09VUkNFX0lTX0NPTlRJTlVPVVM7CisKKwlyZXQgPSBj
bG9ja3NvdXJjZV9yZWdpc3Rlcl9oeigmc3RtX3RpbWVyLT5jcywgc3RtX3RpbWVyLT5yYXRlKTsK
KwlpZiAocmV0KQorCQlyZXR1cm4gcmV0OworCisJcmV0ID0gZGV2bV9hZGRfYWN0aW9uX29yX3Jl
c2V0KGRldiwgZGV2bV9jbG9ja3NvdXJjZV91bnJlZ2lzdGVyLCBzdG1fdGltZXIpOworCWlmIChy
ZXQpIHsKKwkJY2xvY2tzb3VyY2VfdW5yZWdpc3Rlcigmc3RtX3RpbWVyLT5jcyk7CisJCXJldHVy
biByZXQ7CisJfQorCisJc3RtX3NjaGVkX2Nsb2NrID0gc3RtX3RpbWVyOworCisJc2NoZWRfY2xv
Y2tfcmVnaXN0ZXIobnhwX3N0bV9yZWFkX3NjaGVkX2Nsb2NrLCAzMiwgc3RtX3RpbWVyLT5yYXRl
KTsKKworCWRldl9kYmcoZGV2LCAiUmVnaXN0ZXJlZCBjbG9ja3NvdXJjZSAlc1xuIiwgbmFtZSk7
CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBueHBfc3RtX2Nsb2NrZXZlbnRfcmVhZF9j
b3VudGVyKHN0cnVjdCBzdG1fdGltZXIgKnN0bV90aW1lcikKK3sKKwlyZXR1cm4gcmVhZGwoU1RN
X0NOVChzdG1fdGltZXItPmJhc2UpKTsKK30KKworc3RhdGljIHZvaWQgbnhwX3N0bV9jbG9ja2V2
ZW50X2Rpc2FibGUoc3RydWN0IHN0bV90aW1lciAqc3RtX3RpbWVyKQoreworCXdyaXRlbCgwLCBT
VE1fQ0NSMChzdG1fdGltZXItPmJhc2UpKTsKK30KKworc3RhdGljIHZvaWQgbnhwX3N0bV9jbG9j
a2V2ZW50X2VuYWJsZShzdHJ1Y3Qgc3RtX3RpbWVyICpzdG1fdGltZXIpCit7CisJd3JpdGVsKFNU
TV9DQ1JfQ0VOLCBTVE1fQ0NSMChzdG1fdGltZXItPmJhc2UpKTsKK30KKworc3RhdGljIGludCBu
eHBfc3RtX2Nsb2NrZXZlbnRfc2h1dGRvd24oc3RydWN0IGNsb2NrX2V2ZW50X2RldmljZSAqY2Vk
KQoreworCXN0cnVjdCBzdG1fdGltZXIgKnN0bV90aW1lciA9IGNlZF90b19zdG0oY2VkKTsKKwor
CW54cF9zdG1fY2xvY2tldmVudF9kaXNhYmxlKHN0bV90aW1lcik7CisKKwlyZXR1cm4gMDsKK30K
Kworc3RhdGljIGludCBueHBfc3RtX2Nsb2NrZXZlbnRfc2V0X25leHRfZXZlbnQodW5zaWduZWQg
bG9uZyBkZWx0YSwgc3RydWN0IGNsb2NrX2V2ZW50X2RldmljZSAqY2VkKQoreworCXN0cnVjdCBz
dG1fdGltZXIgKnN0bV90aW1lciA9IGNlZF90b19zdG0oY2VkKTsKKwl1MzIgdmFsOworCisJbnhw
X3N0bV9jbG9ja2V2ZW50X2Rpc2FibGUoc3RtX3RpbWVyKTsKKworCXN0bV90aW1lci0+ZGVsdGEg
PSBkZWx0YTsKKworCXZhbCA9IG54cF9zdG1fY2xvY2tldmVudF9yZWFkX2NvdW50ZXIoc3RtX3Rp
bWVyKSArIGRlbHRhOworCisJd3JpdGVsKHZhbCwgU1RNX0NNUDAoc3RtX3RpbWVyLT5iYXNlKSk7
CisKKwkvKgorCSAqIFRoZSBjb3VudGVyIGlzIHNoYXJlZCBhY3Jvc3MgdGhlIGNoYW5uZWxzIGFu
ZCBjYW4gbm90IGJlCisJICogc3RvcHBlZCB3aGlsZSB3ZSBhcmUgc2V0dGluZyB0aGUgbmV4dCBl
dmVudC4gSWYgdGhlIGRlbHRhCisJICogaXMgdmVyeSBzbWFsbCBpdCBpcyBwb3NzaWJsZSB0aGUg
Y291bnRlciBpbmNyZWFzZXMgYWJvdmUKKwkgKiB0aGUgY29tcHV0ZWQgJ3ZhbCcuIFRoZSBtaW5f
ZGVsdGEgdmFsdWUgc3BlY2lmaWVkIHdoZW4KKwkgKiByZWdpc3RlcmluZyB0aGUgY2xvY2tldmVu
dCB3aWxsIHByZXZlbnQgdGhhdC4gVGhlIHNlY29uZAorCSAqIGNhc2UgaXMgaWYgdGhlIGNvdW50
ZXIgd3JhcHMgd2hpbGUgd2UgY29tcHV0ZSB0aGUgJ3ZhbCcgYW5kCisJICogYmVmb3JlIHdyaXRp
bmcgdGhlIGNvbXBhcmF0b3IgcmVnaXN0ZXIuIFdlIHJlYWQgdGhlIGNvdW50ZXIsCisJICogY2hl
Y2sgaWYgd2UgYXJlIGJhY2sgaW4gdGltZSBhbmQgYWJvcnQgdGhlIHRpbWVyIHdpdGggLUVUSU1F
LgorCSAqLworCWlmICh2YWwgPiBueHBfc3RtX2Nsb2NrZXZlbnRfcmVhZF9jb3VudGVyKHN0bV90
aW1lcikgKyBkZWx0YSkKKwkJcmV0dXJuIC1FVElNRTsKKworCW54cF9zdG1fY2xvY2tldmVudF9l
bmFibGUoc3RtX3RpbWVyKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgaW50IG54cF9zdG1f
Y2xvY2tldmVudF9zZXRfcGVyaW9kaWMoc3RydWN0IGNsb2NrX2V2ZW50X2RldmljZSAqY2VkKQor
eworCXN0cnVjdCBzdG1fdGltZXIgKnN0bV90aW1lciA9IGNlZF90b19zdG0oY2VkKTsKKworICAg
ICAgICByZXR1cm4gbnhwX3N0bV9jbG9ja2V2ZW50X3NldF9uZXh0X2V2ZW50KHN0bV90aW1lci0+
cmF0ZSwgY2VkKTsKK30KKworc3RhdGljIHZvaWQgbnhwX3N0bV9jbG9ja2V2ZW50X3N1c3BlbmQo
c3RydWN0IGNsb2NrX2V2ZW50X2RldmljZSAqY2VkKQoreworCXN0cnVjdCBzdG1fdGltZXIgKnN0
bV90aW1lciA9IGNlZF90b19zdG0oY2VkKTsKKworCW54cF9zdG1fbW9kdWxlX3B1dChzdG1fdGlt
ZXIpOworfQorCitzdGF0aWMgdm9pZCBueHBfc3RtX2Nsb2NrZXZlbnRfcmVzdW1lKHN0cnVjdCBj
bG9ja19ldmVudF9kZXZpY2UgKmNlZCkKK3sKKwlzdHJ1Y3Qgc3RtX3RpbWVyICpzdG1fdGltZXIg
PSBjZWRfdG9fc3RtKGNlZCk7CisKKwlueHBfc3RtX21vZHVsZV9nZXQoc3RtX3RpbWVyKTsKK30K
Kworc3RhdGljIGludCBfX2luaXQgbnhwX3N0bV9jbG9ja2V2ZW50X3Blcl9jcHVfaW5pdChzdHJ1
Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBzdG1fdGltZXIgKnN0bV90aW1lciwgY29uc3QgY2hhciAq
bmFtZSwKKwkJCQkJCSAgdm9pZCBfX2lvbWVtICpiYXNlLCBpbnQgaXJxLCBzdHJ1Y3QgY2xrICpj
bGssIGludCBjcHUpCit7CisJc3RtX3RpbWVyLT5iYXNlID0gYmFzZTsKKwlzdG1fdGltZXItPnJh
dGUgPSBjbGtfZ2V0X3JhdGUoY2xrKTsKKworCXN0bV90aW1lci0+Y2VkLm5hbWUgPSBuYW1lOwor
CXN0bV90aW1lci0+Y2VkLmZlYXR1cmVzID0gQ0xPQ0tfRVZUX0ZFQVRfUEVSSU9ESUMgfCBDTE9D
S19FVlRfRkVBVF9PTkVTSE9UOworCXN0bV90aW1lci0+Y2VkLnNldF9zdGF0ZV9zaHV0ZG93biA9
IG54cF9zdG1fY2xvY2tldmVudF9zaHV0ZG93bjsKKwlzdG1fdGltZXItPmNlZC5zZXRfc3RhdGVf
cGVyaW9kaWMgPSBueHBfc3RtX2Nsb2NrZXZlbnRfc2V0X3BlcmlvZGljOworCXN0bV90aW1lci0+
Y2VkLnNldF9uZXh0X2V2ZW50ID0gbnhwX3N0bV9jbG9ja2V2ZW50X3NldF9uZXh0X2V2ZW50Owor
CXN0bV90aW1lci0+Y2VkLnN1c3BlbmQgPSBueHBfc3RtX2Nsb2NrZXZlbnRfc3VzcGVuZDsKKwlz
dG1fdGltZXItPmNlZC5yZXN1bWUgPSBueHBfc3RtX2Nsb2NrZXZlbnRfcmVzdW1lOworCXN0bV90
aW1lci0+Y2VkLmNwdW1hc2sgPSBjcHVtYXNrX29mKGNwdSk7CisJc3RtX3RpbWVyLT5jZWQucmF0
aW5nID0gNDYwOworCXN0bV90aW1lci0+Y2VkLmlycSA9IGlycTsKKworCXBlcl9jcHUoc3RtX3Rp
bWVycywgY3B1KSA9IHN0bV90aW1lcjsKKworCW54cF9zdG1fbW9kdWxlX2dldChzdG1fdGltZXIp
OworCisJZGV2X2RiZyhkZXYsICJJbml0aWFsaXplZCBwZXIgY3B1IGNsb2NrZXZlbnQgbmFtZT0l
cywgaXJxPSVkLCBjcHU9JWRcbiIsIG5hbWUsIGlycSwgY3B1KTsKKworCXJldHVybiAwOworfQor
CitzdGF0aWMgaW50IG54cF9zdG1fY2xvY2tldmVudF9zdGFydGluZ19jcHUodW5zaWduZWQgaW50
IGNwdSkKK3sKKwlzdHJ1Y3Qgc3RtX3RpbWVyICpzdG1fdGltZXIgPSBwZXJfY3B1KHN0bV90aW1l
cnMsIGNwdSk7CisJaW50IHJldDsKKworCWlmIChXQVJOX09OKCFzdG1fdGltZXIpKQorCQlyZXR1
cm4gLUVGQVVMVDsKKworCXJldCA9IGlycV9mb3JjZV9hZmZpbml0eShzdG1fdGltZXItPmNlZC5p
cnEsIGNwdW1hc2tfb2YoY3B1KSk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCS8qCisJ
ICogVGhlIHRpbWluZ3MgbWVhc3VyZW1lbnQgc2hvdyByZWFkaW5nIHRoZSBjb3VudGVyIHJlZ2lz
dGVyCisJICogYW5kIHdyaXRpbmcgdG8gdGhlIGNvbXBhcmF0b3IgcmVnaXN0ZXIgdGFrZXMgYXMg
YSBtYXhpbXVtCisJICogdmFsdWUgMTEwMCBucyBhdCAxMzNNSHogcmF0ZSBmcmVxdWVuY3kuIFRo
ZSB0aW1lciBtdXN0IGJlCisJICogc2V0IGFib3ZlIHRoaXMgdmFsdWUgYW5kIHRvIGJlIHNlY3Vy
ZSB3ZSBzZXQgdGhlIG1pbmltdW0KKwkgKiB2YWx1ZSBlcXVhbCB0byAyMDAwbnMsIHNvIDJ1cy4K
KwkgKgorCSAqIG1pbmltdW0gdGlja3MgPSAocmF0ZSAvIE1JQ1JPKSAqIDIKKwkgKi8KKwljbG9j
a2V2ZW50c19jb25maWdfYW5kX3JlZ2lzdGVyKCZzdG1fdGltZXItPmNlZCwgc3RtX3RpbWVyLT5y
YXRlLAorCQkJCQkoc3RtX3RpbWVyLT5yYXRlIC8gTUlDUk8pICogMiwgMHhmZmZmZmZmZik7CisK
KwlyZXR1cm4gMDsKK30KKworc3RhdGljIGlycXJldHVybl90IG54cF9zdG1fbW9kdWxlX2ludGVy
cnVwdChpbnQgaXJxLCB2b2lkICpkZXZfaWQpCit7CisJc3RydWN0IHN0bV90aW1lciAqc3RtX3Rp
bWVyID0gZGV2X2lkOworCXN0cnVjdCBjbG9ja19ldmVudF9kZXZpY2UgKmNlZCA9ICZzdG1fdGlt
ZXItPmNlZDsKKwl1MzIgdmFsOworCisJLyoKKwkgKiBUaGUgaW50ZXJydXB0IGlzIHNoYXJlZCBh
Y3Jvc3MgdGhlIGNoYW5uZWxzIGluIHRoZQorCSAqIG1vZHVsZS4gQnV0IHRoaXMgb25lIGlzIGNv
bmZpZ3VyZWQgdG8gcnVuIG9ubHkgb25lIGNoYW5uZWwsCisJICogY29uc2VxdWVudGx5IGl0IGlz
IHBvaW50bGVzcyB0byB0ZXN0IHRoZSBpbnRlcnJ1cHQgZmxhZ3MKKwkgKiBiZWZvcmUgYW5kIHdl
IGNhbiBkaXJlY3RseSByZXNldCB0aGUgY2hhbm5lbCAwIGlycSBmbGFnCisJICogcmVnaXN0ZXIu
CisJICovCisJd3JpdGVsKFNUTV9DSVJfQ0lGLCBTVE1fQ0lSMChzdG1fdGltZXItPmJhc2UpKTsK
KworCS8qCisJICogVXBkYXRlIFNUTV9DTVAgdmFsdWUgdXNpbmcgdGhlIGNvdW50ZXIgdmFsdWUK
KwkgKi8KKwl2YWwgPSBueHBfc3RtX2Nsb2NrZXZlbnRfcmVhZF9jb3VudGVyKHN0bV90aW1lcikg
KyBzdG1fdGltZXItPmRlbHRhOworCisJd3JpdGVsKHZhbCwgU1RNX0NNUDAoc3RtX3RpbWVyLT5i
YXNlKSk7CisKKwkvKgorCSAqIHN0bSBoYXJkd2FyZSBkb2Vzbid0IHN1cHBvcnQgb25lc2hvdCwg
aXQgd2lsbCBnZW5lcmF0ZSBhbgorCSAqIGludGVycnVwdCBhbmQgc3RhcnQgdGhlIGNvdW50ZXIg
YWdhaW4gc28gc29mdHdhcmUgbmVlZCB0bworCSAqIGRpc2FibGUgdGhlIHRpbWVyIHRvIHN0b3Ag
dGhlIGNvdW50ZXIgbG9vcCBpbiBPTkVTSE9UIG1vZGUuCisJICovCisJaWYgKGxpa2VseShjbG9j
a2V2ZW50X3N0YXRlX29uZXNob3QoY2VkKSkpCisJCW54cF9zdG1fY2xvY2tldmVudF9kaXNhYmxl
KHN0bV90aW1lcik7CisKKwljZWQtPmV2ZW50X2hhbmRsZXIoY2VkKTsKKworCXJldHVybiBJUlFf
SEFORExFRDsKK30KKworc3RhdGljIHZvaWQgX19pbml0IGRldm1faXJxX2Rpc3Bvc2VfbWFwcGlu
Zyh2b2lkICpkYXRhKQoreworCWludCAqaXJxID0gZGF0YTsKKworCWlycV9kaXNwb3NlX21hcHBp
bmcoKmlycSk7Cit9CisKK3N0YXRpYyBpbnQgX19pbml0IG54cF9zdG1fdGltZXJfcHJvYmUoc3Ry
dWN0IHBsYXRmb3JtX2RldmljZSAqcGRldikKK3sKKwlzdHJ1Y3Qgc3RtX3RpbWVyICpzdG1fdGlt
ZXI7CisJc3RydWN0IGRldmljZSAqZGV2ID0gJnBkZXYtPmRldjsKKwlzdHJ1Y3QgZGV2aWNlX25v
ZGUgKm5wID0gZGV2LT5vZl9ub2RlOworCWNvbnN0IGNoYXIgKm5hbWUgPSBvZl9ub2RlX2Z1bGxf
bmFtZShucCk7CisJc3RydWN0IGNsayAqY2xrOworCXZvaWQgX19pb21lbSAqYmFzZTsKKwlpbnQg
aXJxLCByZXQ7CisKKwkvKgorCSAqIFRoZSBkZXZpY2UgdHJlZSBjYW4gaGF2ZSBtdWx0aXBsZSBT
VE0gbm9kZXMgZGVzY3JpYmVkLCBzbworCSAqIGl0IG1ha2VzIHRoaXMgZHJpdmVyIGEgZ29vZCBj
YW5kaWRhdGUgZm9yIHRoZSBhc3luYyBwcm9iZS4KKwkgKiBJdCBpcyBzdGlsbCB1bmNsZWFyIGlm
IHRoZSB0aW1lIGZyYW1ld29yayBkb2VzIGNvcnJlY3RseQorCSAqIGhhbmRsZSBhIHBhcmFsbGVs
IGxvYWRpbmcgb2YgdGhlIHRpbWVycyBidXQgYXQgbGVhc3QgdGhpcworCSAqIGRyaXZlciBpcyBy
ZWFkeSB0byBzdXBwb3J0IHRoZSBvcHRpb24uCisJICovCisJZ3VhcmQoc3RtX2luc3RhbmNlcyko
JnN0bV9pbnN0YW5jZXNfbG9jayk7CisKKwkvKgorCSAqIFRoZSBTMzJHeCBhcmUgU29DcyBmZWF0
dXJpbmcgYSBkaXZlcnNlIHNldCBvZiBjb3Jlcy4gTGludXgKKwkgKiBpcyBleHBlY3RlZCB0byBy
dW4gb24gQ29ydGV4LUE1MyBjb3Jlcywgd2hpbGUgb3RoZXIKKwkgKiBzb2Z0d2FyZSBzdGFja3Mg
d2lsbCBvcGVyYXRlIG9uIENvcnRleC1NIGNvcmVzLiBUaGUgbnVtYmVyCisJICogb2YgU1RNIGlu
c3RhbmNlcyBoYXMgYmVlbiBzaXplZCB0byBpbmNsdWRlIGF0IG1vc3Qgb25lCisJICogaW5zdGFu
Y2UgcGVyIGNvcmUuCisJICoKKwkgKiBBcyB3ZSBuZWVkIGEgY2xvY2tzb3VyY2UgYW5kIGEgY2xv
Y2tldmVudCBwZXIgY3B1LCB3ZQorCSAqIHNpbXBseSBpbml0aWFsaXplIGEgY2xvY2tzb3VyY2Ug
cGVyIGNwdSBhbG9uZyB3aXRoIHRoZQorCSAqIGNsb2NrZXZlbnQgd2hpY2ggbWFrZXMgdGhlIHJl
c3VsdGluZyBjb2RlIHNpbXBsZXIuCisJICoKKwkgKiBIb3dldmVyIGlmIHRoZSBkZXZpY2UgdHJl
ZSBpcyBkZXNjcmliaW5nIG1vcmUgU1RNIGluc3RhbmNlcworCSAqIHRoYW4gdGhlIG51bWJlciBv
ZiBjb3JlcywgdGhlbiB3ZSBpZ25vcmUgdGhlbS4KKwkgKi8KKwlpZiAoc3RtX2luc3RhbmNlcyA+
PSBudW1fcG9zc2libGVfY3B1cygpKQorCQlyZXR1cm4gMDsKKworCWJhc2UgPSBkZXZtX29mX2lv
bWFwKGRldiwgbnAsIDAsIE5VTEwpOworCWlmIChJU19FUlIoYmFzZSkpCisJCXJldHVybiBkZXZf
ZXJyX3Byb2JlKGRldiwgUFRSX0VSUihiYXNlKSwgIkZhaWxlZCB0byBpb21hcCAlcE9GblxuIiwg
bnApOworCisJaXJxID0gaXJxX29mX3BhcnNlX2FuZF9tYXAobnAsIDApOworCWlmIChpcnEgPD0g
MCkKKwkJcmV0dXJuIGRldl9lcnJfcHJvYmUoZGV2LCBpcnEsICJGYWlsZWQgdG8gcGFyc2UgYW5k
IG1hcCBJUlFcbiIpOworCisJcmV0ID0gZGV2bV9hZGRfYWN0aW9uX29yX3Jlc2V0KGRldiwgZGV2
bV9pcnFfZGlzcG9zZV9tYXBwaW5nLCAmaXJxKTsKKwlpZiAocmV0KSB7CisJCWlycV9kaXNwb3Nl
X21hcHBpbmcoaXJxKTsKKwkJcmV0dXJuIGRldl9lcnJfcHJvYmUoZGV2LCByZXQsICJGYWlsZWQg
dG8gYWRkIGRldm0gYWN0aW9uXG4iKTsKKwl9CisKKwljbGsgPSBkZXZtX2Nsa19nZXRfZW5hYmxl
ZChkZXYsIE5VTEwpOworCWlmIChJU19FUlIoY2xrKSkKKwkJcmV0dXJuIGRldl9lcnJfcHJvYmUo
ZGV2LCBQVFJfRVJSKGNsayksICJDbG9jayBub3QgZm91bmRcbiIpOworCisJc3RtX3RpbWVyID0g
ZGV2bV9remFsbG9jKGRldiwgc2l6ZW9mKCpzdG1fdGltZXIpLCBHRlBfS0VSTkVMKTsKKwlpZiAo
IXN0bV90aW1lcikKKwkJcmV0dXJuIC1FTk9NRU07CisKKwlyZXQgPSBkZXZtX3JlcXVlc3RfaXJx
KGRldiwgaXJxLCBueHBfc3RtX21vZHVsZV9pbnRlcnJ1cHQsCisJCQkgICAgICAgSVJRRl9USU1F
UiB8IElSUUZfTk9CQUxBTkNJTkcsIG5hbWUsIHN0bV90aW1lcik7CisJaWYgKHJldCkKKwkJcmV0
dXJuIGRldl9lcnJfcHJvYmUoZGV2LCByZXQsICJVbmFibGUgdG8gYWxsb2NhdGUgaW50ZXJydXB0
IGxpbmVcbiIpOworCisJcmV0ID0gbnhwX3N0bV9jbG9ja3NvdXJjZV9pbml0KGRldiwgc3RtX3Rp
bWVyLCBuYW1lLCBiYXNlLCBjbGspOworCWlmIChyZXQpCisJCXJldHVybiByZXQ7CisKKwkvKgor
CSAqIE5leHQgcHJvYmVkIFNUTSB3aWxsIGJlIGEgcGVyIENQVSBjbG9ja2V2ZW50LCB1bnRpbAor
CSAqIHdlIHByb2JlIGFzIG11Y2ggYXMgd2UgaGF2ZSBDUFVzIGF2YWlsYWJsZSBvbiB0aGUKKwkg
KiBzeXN0ZW0sIHdlIGRvIGEgcGFydGlhbCBpbml0aWFsaXphdGlvbgorCSAqLworCXJldCA9IG54
cF9zdG1fY2xvY2tldmVudF9wZXJfY3B1X2luaXQoZGV2LCBzdG1fdGltZXIsIG5hbWUsCisJCQkJ
CSAgICAgIGJhc2UsIGlycSwgY2xrLAorCQkJCQkgICAgICBzdG1faW5zdGFuY2VzKTsKKwlpZiAo
cmV0KQorCQlyZXR1cm4gcmV0OworCisJc3RtX2luc3RhbmNlcysrOworCisJLyoKKwkgKiBUaGUg
bnVtYmVyIG9mIHByb2JlZCBTVE0gZm9yIHBlciBDUFUgY2xvY2tldmVudCBpcworCSAqIGVxdWFs
IHRvIHRoZSBudW1iZXIgb2YgYXZhaWxhYmxlIENQVXMgb24gdGhlCisJICogc3lzdGVtLiBXZSBp
bnN0YWxsIHRoZSBjcHUgaG90cGx1ZyB0byBmaW5pc2ggdGhlCisJICogaW5pdGlhbGl6YXRpb24g
YnkgcmVnaXN0ZXJpbmcgdGhlIGNsb2NrZXZlbnRzCisJICovCisJaWYgKHN0bV9pbnN0YW5jZXMg
PT0gbnVtX3Bvc3NpYmxlX2NwdXMoKSkgeworCQlyZXQgPSBjcHVocF9zZXR1cF9zdGF0ZShDUFVI
UF9BUF9PTkxJTkVfRFlOLCAiU1RNIHRpbWVyOnN0YXJ0aW5nIiwKKwkJCQkJbnhwX3N0bV9jbG9j
a2V2ZW50X3N0YXJ0aW5nX2NwdSwgTlVMTCk7CisJCWlmIChyZXQgPCAwKQorCQkJcmV0dXJuIHJl
dDsKKwl9CisKKwlueHBfc3RtX21vZHVsZV9kZWJ1Z2ZzX2luaXQoZGV2LCBzdG1fdGltZXIpOwor
CisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3Qgb2ZfZGV2aWNlX2lkIG54cF9z
dG1fb2ZfbWF0Y2hbXSA9IHsKKwl7IC5jb21wYXRpYmxlID0gIm54cCxzMzJnLXN0bSIgfSwKKwl7
IH0KK307CitNT0RVTEVfREVWSUNFX1RBQkxFKG9mLCBueHBfc3RtX29mX21hdGNoKTsKKworc3Rh
dGljIHN0cnVjdCBwbGF0Zm9ybV9kcml2ZXIgbnhwX3N0bV9wcm9iZSA9IHsKKwkucHJvYmUJPSBu
eHBfc3RtX3RpbWVyX3Byb2JlLAorCS5kcml2ZXIJPSB7CisJCS5uYW1lCQk9ICJueHAtc3RtIiwK
KwkJLm9mX21hdGNoX3RhYmxlCT0gb2ZfbWF0Y2hfcHRyKG54cF9zdG1fb2ZfbWF0Y2gpLAorCX0s
Cit9OworbW9kdWxlX3BsYXRmb3JtX2RyaXZlcihueHBfc3RtX3Byb2JlKTsKKworTU9EVUxFX0RF
U0NSSVBUSU9OKCJOWFAgU3lzdGVtIFRpbWVyIE1vZHVsZSBkcml2ZXIiKTsKK01PRFVMRV9MSUNF
TlNFKCJHUEwiKTsKLS0gCjIuNDMuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX18KTGludXgtc3RtMzIgbWFpbGluZyBsaXN0CkxpbnV4LXN0bTMyQHN0LW1k
LW1haWxtYW4uc3Rvcm1yZXBseS5jb20KaHR0cHM6Ly9zdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHku
Y29tL21haWxtYW4vbGlzdGluZm8vbGludXgtc3RtMzIK
