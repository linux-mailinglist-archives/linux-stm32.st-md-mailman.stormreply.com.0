Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 64685932E82
	for <lists+linux-stm32@lfdr.de>; Tue, 16 Jul 2024 18:45:36 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 07681C71280;
	Tue, 16 Jul 2024 16:45:36 +0000 (UTC)
Received: from mail-wm1-f43.google.com (mail-wm1-f43.google.com
 [209.85.128.43])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 96A1FC6DD66
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Tue, 16 Jul 2024 16:45:28 +0000 (UTC)
Received: by mail-wm1-f43.google.com with SMTP id
 5b1f17b1804b1-42797289c8bso42821155e9.0
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Tue, 16 Jul 2024 09:45:28 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=gmail.com; s=20230601; t=1721148328; x=1721753128;
 darn=st-md-mailman.stormreply.com; 
 h=content-transfer-encoding:in-reply-to:from:content-language
 :references:cc:to:subject:user-agent:mime-version:date:message-id
 :from:to:cc:subject:date:message-id:reply-to;
 bh=50Q7bLhb5pI/OfvvmK74KWMk9NSGzK3vz/37rCx6kjc=;
 b=QgBudzHCXvNqYN8IW04KptH2mum3nxWkZeUrM9nRMslT0K1gE6+G5Lk96AxRG4SLxK
 jwoyNpfPdnirQmcwNAP0bdHGkFdI/6q0QWKPxeVKIexY2Z5rlH+CRj54oWncxiQDoTZu
 59AQLyZh0nZgIMWzGDCDUKDpP+hHa6ccF2iAhK3jNHDaqPb58U1+5U09kzviBtQl/fnU
 0TOxCQiIYsRgy5wyA4CvhMqGgS+Q52MRR+UMa5Z2yu70nWOLq9x3UYvEnYcjOvRGm/r3
 BjyZevCrDq75Qqy53Vvfn+l3mU8bzvvlRjY0I+XbUSQVKZqPOowQs43aVcttdWnWELPS
 Qjig==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20230601; t=1721148328; x=1721753128;
 h=content-transfer-encoding:in-reply-to:from:content-language
 :references:cc:to:subject:user-agent:mime-version:date:message-id
 :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
 bh=50Q7bLhb5pI/OfvvmK74KWMk9NSGzK3vz/37rCx6kjc=;
 b=ECWbbGFeKyWyibBL4Svu1zNxjaAUIiY2xdw+81QzaZIxUkBFArS+pU8TLMuSc6pL43
 I7IT3L8G7KDyQRIqWZ4cDg7nSg40GFiVO2JGNTA2Z04+O6BccVoFdWCY1XvuMu6+CpGa
 MAoC4J7zGPlaG32gnZyFHarHUidHoUONBTcM/JfFvft75jYboujLH0XF5ZCdAVjURWdU
 rOhXyz3OJBASe2g99s+fDzv2VIpOsOzrA744C5Gjh39bVjDwxjdIdOMAhUOTqJQfR7ON
 lkdmGtCAqZlq/KyIkRA6yyKmTZTA2/EzTM8A3c5k0Lt54BmMWkDbmgxdqMeCYmkRc5UT
 5DFA==
X-Forwarded-Encrypted: i=1;
 AJvYcCVhSCrSaKYqq1e0aWf561faWEQ5Bx5HknzvvDOYuGKN2bUV41eLpApA+epcjBcZIlteujApaUqfJH5Bn6FDb2V0GFnt/t30vFfj8lWSiiF7+CFntdhig0b2
X-Gm-Message-State: AOJu0Yxo4hwNt0dPhK0WQSmVkFVYJ85EERuGB1Sc2z9PNIQ9COXN7fcR
 pjkj06I1EqzHk1qACo48GkslhwD3tS3jCeFRBk/TPflAIVKqiOa7
X-Google-Smtp-Source: AGHT+IF+rJaQWuy8Q5qFgVkGLfaxPqUmmetwr9fjqPSEQWcUmokIAeXlBVz3FtS+xqGT1oQHZnITaw==
X-Received: by 2002:a05:600c:2218:b0:427:985b:178b with SMTP id
 5b1f17b1804b1-427ba690fc1mr18681335e9.16.1721148327400; 
 Tue, 16 Jul 2024 09:45:27 -0700 (PDT)
Received: from ?IPV6:2001:861:3385:e20:6384:4cf:52c5:3194?
 ([2001:861:3385:e20:6384:4cf:52c5:3194])
 by smtp.gmail.com with ESMTPSA id
 5b1f17b1804b1-427a5e983dbsm133978275e9.24.2024.07.16.09.45.26
 (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
 Tue, 16 Jul 2024 09:45:27 -0700 (PDT)
Message-ID: <9b3a619f-cfe3-4fbc-a7c2-a2457a3923a6@gmail.com>
Date: Tue, 16 Jul 2024 18:45:26 +0200
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
To: Daniel Lezcano <daniel.lezcano@linaro.org>,
 "Rafael J. Wysocki" <rafael@kernel.org>, Zhang Rui <rui.zhang@intel.com>,
 Lukasz Luba <lukasz.luba@arm.com>,
 Maxime Coquelin <mcoquelin.stm32@gmail.com>,
 Alexandre Torgue <alexandre.torgue@foss.st.com>,
 Patrice Chotard <patrice.chotard@foss.st.com>, Rob Herring
 <robh@kernel.org>, Krzysztof Kozlowski <krzk+dt@kernel.org>,
 Conor Dooley <conor+dt@kernel.org>
References: <20240714-thermal-v3-0-88f2489ef7d5@gmail.com>
 <20240714-thermal-v3-2-88f2489ef7d5@gmail.com>
 <046303cd-54d0-42f0-990d-2d18a9de1f3e@linaro.org>
Content-Language: en-US, fr
From: =?UTF-8?Q?Rapha=C3=ABl_Gallais-Pou?= <rgallaispou@gmail.com>
In-Reply-To: <046303cd-54d0-42f0-990d-2d18a9de1f3e@linaro.org>
Cc: devicetree@vger.kernel.org, linux-stm32@st-md-mailman.stormreply.com,
 linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
 linux-pm@vger.kernel.org
Subject: Re: [Linux-stm32] [PATCH v3 2/2] thermal: sti: depend on THERMAL_OF
	subsystem
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

CgpMZSAxNi8wNy8yMDI0IMOgIDE1OjA3LCBEYW5pZWwgTGV6Y2FubyBhIMOpY3JpdMKgOgo+IE9u
IDE0LzA3LzIwMjQgMTM6NDIsIFJhcGhhZWwgR2FsbGFpcy1Qb3Ugd3JvdGU6Cj4+IFN3aXRjaCB0
byB0aGVybWFsX29mX3pvbmUgdG8gaGFuZGxlIHRoZXJtYWwtem9uZXMuIFJlcGxhY2UKPj4gdGhl
cm1hbF96b25lX2RldmljZV9yZWdpc3RlcigpIGJ5IGRldm1fdGhlcm1hbF9vZl96b25lX3JlZ2lz
dGVyKCkgYW5kCj4+IHJlbW92ZSBvcHMgc3RfdGhlcm1hbF9nZXRfdHJpcF90eXBlLCBzdF90aGVy
bWFsX2dldF90cmlwX3RlbXAuCj4+Cj4+IFNpZ25lZC1vZmYtYnk6IFJhcGhhZWwgR2FsbGFpcy1Q
b3UgPHJnYWxsYWlzcG91QGdtYWlsLmNvbT4KPj4gLS0tCj4+IENoYW5nZXMgaW4gdjM6Cj4+IC0g
Rml4IHVubWV0IGRlcGVuZGVuY3kgd2hlbiBidWlsZGluZyB3aXRoIEFSTTY0IGNvbXBpbGVyCj4+
IMKgwqAgaHR0cHM6Ly9sb3JlLmtlcm5lbC5vcmcvbGttbC8yMDI0MDYyNzA2MDUucW9kYVdkNG4t
bGtwQGludGVsLmNvbS8KPj4gLSBSZW1vdmUgbm8gbW9yZSB1c2VkIHBvbGxpbmdfZGVsYXkgdmFy
aWFibGUgZGV0ZWN0ZWQgYnkga2VybmVsIHJvYm90Cj4+IMKgwqAgaHR0cHM6Ly9sb3JlLmtlcm5l
bC5vcmcvbGttbC8yMDI0MDYyNzA1MzAua041d0lzd2ktbGtwQGludGVsLmNvbS8KPj4gQ2hhbmdl
cyBpbiB2MjoKPj4gLSBSZW1vdmUgdW51c2VkIHN0cnVjdCB0aGVybWFsX3RyaXAgdHJpcAo+PiAt
LS0KPj4gwqAgZHJpdmVycy90aGVybWFsL3N0L0tjb25maWfCoMKgwqDCoMKgIHzCoCAyICsrCj4+
IMKgIGRyaXZlcnMvdGhlcm1hbC9zdC9zdF90aGVybWFsLmMgfCAyOCArKysrKysrKysrLS0tLS0t
LS0tLS0tLS0tLS0tCj4+IMKgIDIgZmlsZXMgY2hhbmdlZCwgMTIgaW5zZXJ0aW9ucygrKSwgMTgg
ZGVsZXRpb25zKC0pCj4+Cj4+IGRpZmYgLS1naXQgYS9kcml2ZXJzL3RoZXJtYWwvc3QvS2NvbmZp
ZyBiL2RyaXZlcnMvdGhlcm1hbC9zdC9LY29uZmlnCj4+IGluZGV4IGVjYmRmNGVmMDBmNC4uOTVh
NjM0NzA5YTk5IDEwMDY0NAo+PiAtLS0gYS9kcml2ZXJzL3RoZXJtYWwvc3QvS2NvbmZpZwo+PiAr
KysgYi9kcml2ZXJzL3RoZXJtYWwvc3QvS2NvbmZpZwo+PiBAQCAtNSwxMiArNSwxNCBAQAo+PiDC
oCBjb25maWcgU1RfVEhFUk1BTAo+PiDCoMKgwqDCoMKgIHRyaXN0YXRlICJUaGVybWFsIHNlbnNv
cnMgb24gU1RNaWNyb2VsZWN0cm9uaWNzIFNUaSBzZXJpZXMgb2YgU29DcyIKPj4gK8KgwqDCoCBk
ZXBlbmRzIG9uIFRIRVJNQUxfT0YKPj4gwqDCoMKgwqDCoCBoZWxwCj4+IMKgwqDCoMKgwqDCoMKg
IFN1cHBvcnQgZm9yIHRoZXJtYWwgc2Vuc29ycyBvbiBTVE1pY3JvZWxlY3Ryb25pY3MgU1RpIHNl
cmllcyAKPj4gb2YgU29Dcy4KPj4gwqAgY29uZmlnIFNUX1RIRVJNQUxfTUVNTUFQCj4+IMKgwqDC
oMKgwqAgc2VsZWN0IFNUX1RIRVJNQUwKPj4gwqDCoMKgwqDCoCB0cmlzdGF0ZSAiU1RpIHNlcmll
cyBtZW1vcnkgbWFwcGVkIGFjY2VzcyBiYXNlZCB0aGVybWFsIHNlbnNvcnMiCj4+ICvCoMKgwqAg
ZGVwZW5kcyBvbiBUSEVSTUFMX09GCj4gCj4gR2l2ZW4gdGhlIGNoYW5nZXMgYmVsb3cgaXQgaXMg
cG9zc2libGUgdG8gbW92ZSB0aGlzIGRlcGVuZGVuY3kgaW4gdGhlIAo+IHVwcGVyIEtjb25maWcg
QUZBSUNTOgo+IAo+IGRpZmYgLS1naXQgYS9kcml2ZXJzL3RoZXJtYWwvS2NvbmZpZyBiL2RyaXZl
cnMvdGhlcm1hbC9LY29uZmlnCj4gaW5kZXggZWQxNjg5NzU4NGI0Li5iNmI5MTZlN2UyOTQgMTAw
NjQ0Cj4gLS0tIGEvZHJpdmVycy90aGVybWFsL0tjb25maWcKPiArKysgYi9kcml2ZXJzL3RoZXJt
YWwvS2NvbmZpZwo+IEBAIC00MjksNyArNDI5LDcgQEAgc291cmNlICJkcml2ZXJzL3RoZXJtYWwv
c2Ftc3VuZy9LY29uZmlnIgo+ICDCoGVuZG1lbnUKPiAKPiAgwqBtZW51ICJTVE1pY3JvZWxlY3Ry
b25pY3MgdGhlcm1hbCBkcml2ZXJzIgo+IC1kZXBlbmRzIG9uIChBUkNIX1NUSSB8fCBBUkNIX1NU
TTMyKSAmJiBPRgo+ICtkZXBlbmRzIG9uIChBUkNIX1NUSSB8fCBBUkNIX1NUTTMyKSAmJiBUSEVS
TUFMX09GCj4gIMKgc291cmNlICJkcml2ZXJzL3RoZXJtYWwvc3QvS2NvbmZpZyIKPiAgwqBlbmRt
ZW51Cj4gCj4gVEhFUk1BTF9PRiBkZXBlbmRzIG9uIE9GCgpIaSBEYW5pZWwsCgpUaGFua3MgZm9y
IHlvdXIgcmV2aWV3LgoKSW5kZWVkLCBpdCBtYWtlcyBtb3JlIHNlbnNlLiBJJ2xsIGNoYW5nZSB0
aGlzIGFuZCByZW1vdmUgdGhlICJkZXBlbmRzIG9uIApUSEVSTUFMX09GIiBvbiBzdC8gbGV2ZWwu
Cj4gCj4+IMKgIGNvbmZpZyBTVE0zMl9USEVSTUFMCj4+IMKgwqDCoMKgwqAgdHJpc3RhdGUgIlRo
ZXJtYWwgZnJhbWV3b3JrIHN1cHBvcnQgb24gU1RNaWNyb2VsZWN0cm9uaWNzIFNUTTMyIAo+PiBz
ZXJpZXMgb2YgU29DcyIKPj4gZGlmZiAtLWdpdCBhL2RyaXZlcnMvdGhlcm1hbC9zdC9zdF90aGVy
bWFsLmMgCj4+IGIvZHJpdmVycy90aGVybWFsL3N0L3N0X3RoZXJtYWwuYwo+PiBpbmRleCA1ZjMz
NTQzYTNhNTQuLjIzNTk3ODE5Y2U4NCAxMDA2NDQKPj4gLS0tIGEvZHJpdmVycy90aGVybWFsL3N0
L3N0X3RoZXJtYWwuYwo+PiArKysgYi9kcml2ZXJzL3RoZXJtYWwvc3Qvc3RfdGhlcm1hbC5jCj4+
IEBAIC0xMiw2ICsxMiw3IEBACj4+IMKgICNpbmNsdWRlIDxsaW51eC9vZl9kZXZpY2UuaD4KPj4g
wqAgI2luY2x1ZGUgInN0X3RoZXJtYWwuaCIKPj4gKyNpbmNsdWRlICIuLi90aGVybWFsX2h3bW9u
LmgiCj4+IMKgIC8qIFRoZSBUaGVybWFsIEZyYW1ld29yayBleHBlY3RzIG1pbGxpZGVncmVlcyAq
Lwo+PiDCoCAjZGVmaW5lIG1jZWxzaXVzKHRlbXApwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCAoKHRl
bXApICogMTAwMCkKPj4gQEAgLTEzNSw4ICsxMzYsNiBAQCBzdGF0aWMgc3RydWN0IHRoZXJtYWxf
em9uZV9kZXZpY2Vfb3BzIHN0X3R6X29wcyA9IHsKPj4gwqDCoMKgwqDCoCAuZ2V0X3RlbXDCoMKg
wqAgPSBzdF90aGVybWFsX2dldF90ZW1wLAo+PiDCoCB9Owo+PiAtc3RhdGljIHN0cnVjdCB0aGVy
bWFsX3RyaXAgdHJpcDsKPj4gLQo+PiDCoCBpbnQgc3RfdGhlcm1hbF9yZWdpc3RlcihzdHJ1Y3Qg
cGxhdGZvcm1fZGV2aWNlICpwZGV2LAo+PiDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBjb25z
dCBzdHJ1Y3Qgb2ZfZGV2aWNlX2lkICpzdF90aGVybWFsX29mX21hdGNoKQo+PiDCoCB7Cj4+IEBA
IC0xNDUsNyArMTQ0LDYgQEAgaW50IHN0X3RoZXJtYWxfcmVnaXN0ZXIoc3RydWN0IHBsYXRmb3Jt
X2RldmljZSAqcGRldiwKPj4gwqDCoMKgwqDCoCBzdHJ1Y3QgZGV2aWNlX25vZGUgKm5wID0gZGV2
LT5vZl9ub2RlOwo+PiDCoMKgwqDCoMKgIGNvbnN0IHN0cnVjdCBvZl9kZXZpY2VfaWQgKm1hdGNo
Owo+PiAtwqDCoMKgIGludCBwb2xsaW5nX2RlbGF5Owo+PiDCoMKgwqDCoMKgIGludCByZXQ7Cj4+
IMKgwqDCoMKgwqAgaWYgKCFucCkgewo+PiBAQCAtMTk3LDI5ICsxOTUsMjIgQEAgaW50IHN0X3Ro
ZXJtYWxfcmVnaXN0ZXIoc3RydWN0IHBsYXRmb3JtX2RldmljZSAKPj4gKnBkZXYsCj4+IMKgwqDC
oMKgwqAgaWYgKHJldCkKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIGdvdG8gc2Vuc29yX29mZjsKPj4g
LcKgwqDCoCBwb2xsaW5nX2RlbGF5ID0gc2Vuc29yLT5vcHMtPnJlZ2lzdGVyX2VuYWJsZV9pcnEg
PyAwIDogMTAwMDsKPj4gLQo+PiAtwqDCoMKgIHRyaXAudGVtcGVyYXR1cmUgPSBzZW5zb3ItPmNk
YXRhLT5jcml0X3RlbXA7Cj4+IC3CoMKgwqAgdHJpcC50eXBlID0gVEhFUk1BTF9UUklQX0NSSVRJ
Q0FMOwo+PiAtCj4+IMKgwqDCoMKgwqAgc2Vuc29yLT50aGVybWFsX2RldiA9Cj4+IC3CoMKgwqDC
oMKgwqDCoCB0aGVybWFsX3pvbmVfZGV2aWNlX3JlZ2lzdGVyX3dpdGhfdHJpcHMoZGV2X25hbWUo
ZGV2KSwgJnRyaXAsIAo+PiAxLCBzZW5zb3IsCj4+IC3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgJnN0X3R6X29wcywgTlVMTCwgMCwgcG9sbGlu
Z19kZWxheSk7Cj4+ICvCoMKgwqDCoMKgwqDCoCBkZXZtX3RoZXJtYWxfb2Zfem9uZV9yZWdpc3Rl
cihkZXYsIDAsIHNlbnNvciwgJnN0X3R6X29wcyk7Cj4+IMKgwqDCoMKgwqAgaWYgKElTX0VSUihz
ZW5zb3ItPnRoZXJtYWxfZGV2KSkgewo+PiAtwqDCoMKgwqDCoMKgwqAgZGV2X2VycihkZXYsICJm
YWlsZWQgdG8gcmVnaXN0ZXIgdGhlcm1hbCB6b25lIGRldmljZVxuIik7Cj4+ICvCoMKgwqDCoMKg
wqDCoCBkZXZfZXJyKGRldiwgImZhaWxlZCB0byByZWdpc3RlciB0aGVybWFsIG9mIHpvbmVcbiIp
Owo+PiDCoMKgwqDCoMKgwqDCoMKgwqAgcmV0ID0gUFRSX0VSUihzZW5zb3ItPnRoZXJtYWxfZGV2
KTsKPj4gwqDCoMKgwqDCoMKgwqDCoMKgIGdvdG8gc2Vuc29yX29mZjsKPj4gwqDCoMKgwqDCoCB9
Cj4+IC3CoMKgwqAgcmV0ID0gdGhlcm1hbF96b25lX2RldmljZV9lbmFibGUoc2Vuc29yLT50aGVy
bWFsX2Rldik7Cj4+IC3CoMKgwqAgaWYgKHJldCkKPj4gLcKgwqDCoMKgwqDCoMKgIGdvdG8gdHpk
X3VucmVnaXN0ZXI7Cj4+IMKgwqDCoMKgwqAgcGxhdGZvcm1fc2V0X2RydmRhdGEocGRldiwgc2Vu
c29yKTsKPj4gLcKgwqDCoCByZXR1cm4gMDsKPj4gK8KgwqDCoCAvKgo+PiArwqDCoMKgwqAgKiBk
ZXZtX3RoZXJtYWxfb2Zfem9uZV9yZWdpc3RlcigpIGRvZXNuJ3QgZW5hYmxlIGh3bW9uIGJ5IGRl
ZmF1bHQKPj4gK8KgwqDCoMKgICogRW5hYmxlIGl0IGhlcmUKPj4gK8KgwqDCoMKgICovCj4+ICvC
oMKgwqAgcmV0dXJuIGRldm1fdGhlcm1hbF9hZGRfaHdtb25fc3lzZnMoZGV2LCBzZW5zb3ItPnRo
ZXJtYWxfZGV2KTsKPiAKPiBPdGhlciBkcml2ZXJzIGlnbm9yZSB0aGUgcmV0dXJuIGNvZGUgb3Ig
anVzdCBwcmludCBhIG1lc3NhZ2UgaW4gY2FzZSBpdCAKPiBpcyBub3QgemVyby4gT3RoZXJ3aXNl
LCB0aGF0IG1ha2VzIHRoZSB0aGVybWFsIGRyaXZlciB0byBmYWlsIGJlY2F1c2Ugb2YgCj4gaHdt
b24uCgpJbmRlZWQuIEkgZmlndXJlZCB0aGF0IHNpbmNlIGFuIGVycm9yIGNvZGUgaXMgeWllbGRl
ZCBvbmx5IGJ5IGh3bW9uIHdoZW4gCml0IGZhaWxzLCBpdCBzZWVtcyBsb2dpY2FsIHRvIG1ha2Ug
dGhlIHRoZXJtYWwgZHJpdmVyIGZhaWwgYXMgd2VsbCBzaW5jZSAKaXQgZGVwZW5kcyBvbiBod21v
bi4gTWF5YmUgSSB1bmRlcnN0b29kIHNvbWV0aGluZyB3cm9uZy4KCkRvZXMgdHlpbmcgdGhlcm1h
bCB0byBod21vbiBpcyBhIGJhZCBwcmFjdGljZSA/CgpSZWdhcmRzLApSYXBoYcOrbAo+IAo+PiAt
dHpkX3VucmVnaXN0ZXI6Cj4+IC3CoMKgwqAgdGhlcm1hbF96b25lX2RldmljZV91bnJlZ2lzdGVy
KHNlbnNvci0+dGhlcm1hbF9kZXYpOwo+PiDCoCBzZW5zb3Jfb2ZmOgo+PiDCoMKgwqDCoMKgIHN0
X3RoZXJtYWxfc2Vuc29yX29mZihzZW5zb3IpOwo+PiBAQCAtMjMyLDcgKzIyMyw4IEBAIHZvaWQg
c3RfdGhlcm1hbF91bnJlZ2lzdGVyKHN0cnVjdCBwbGF0Zm9ybV9kZXZpY2UgCj4+ICpwZGV2KQo+
PiDCoMKgwqDCoMKgIHN0cnVjdCBzdF90aGVybWFsX3NlbnNvciAqc2Vuc29yID0gcGxhdGZvcm1f
Z2V0X2RydmRhdGEocGRldik7Cj4+IMKgwqDCoMKgwqAgc3RfdGhlcm1hbF9zZW5zb3Jfb2ZmKHNl
bnNvcik7Cj4+IC3CoMKgwqAgdGhlcm1hbF96b25lX2RldmljZV91bnJlZ2lzdGVyKHNlbnNvci0+
dGhlcm1hbF9kZXYpOwo+PiArwqDCoMKgIHRoZXJtYWxfcmVtb3ZlX2h3bW9uX3N5c2ZzKHNlbnNv
ci0+dGhlcm1hbF9kZXYpOwo+PiArwqDCoMKgIGRldm1fdGhlcm1hbF9vZl96b25lX3VucmVnaXN0
ZXIoc2Vuc29yLT5kZXYsIHNlbnNvci0+dGhlcm1hbF9kZXYpOwo+PiDCoCB9Cj4+IMKgIEVYUE9S
VF9TWU1CT0xfR1BMKHN0X3RoZXJtYWxfdW5yZWdpc3Rlcik7Cj4+Cj4gCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCkxpbnV4LXN0bTMyIG1haWxpbmcgbGlz
dApMaW51eC1zdG0zMkBzdC1tZC1tYWlsbWFuLnN0b3JtcmVwbHkuY29tCmh0dHBzOi8vc3QtbWQt
bWFpbG1hbi5zdG9ybXJlcGx5LmNvbS9tYWlsbWFuL2xpc3RpbmZvL2xpbnV4LXN0bTMyCg==
