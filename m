Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id EEFC68519B8
	for <lists+linux-stm32@lfdr.de>; Mon, 12 Feb 2024 17:41:45 +0100 (CET)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id A45C9C6C83D;
	Mon, 12 Feb 2024 16:41:45 +0000 (UTC)
Received: from relay2-d.mail.gandi.net (relay2-d.mail.gandi.net
 [217.70.183.194])
 (using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id D2954C6B45B
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Mon, 12 Feb 2024 16:41:44 +0000 (UTC)
Received: by mail.gandi.net (Postfix) with ESMTPSA id 334F340004;
 Mon, 12 Feb 2024 16:41:41 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=bootlin.com; s=gm1;
 t=1707756104;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding;
 bh=zhKJediQ9A/HvPfmx+8A0oshk4y1nUibJBToc7DKHZU=;
 b=G+oRZRVzii3jMfJBrOKYfUIqX6kjPsnAYi+mFwouK9738FWpTDfZsC+EXP0HX9VMybAMw1
 khoOBjdTpUWIQLaJNLbHhpKqLdEeoAMLlT7ClOgj62CfgtkTOCMaFIGeiwZh6GMVCIR4IM
 0jvL3MWOCh+KSDZKYgRduaLRLyJ60uSCB2c+WDlmli71kFFdN/A5vQzRHRd88/oOhdoo0c
 GO61yTjNBO6jmRKnn7q4nU1SMx9MISFSoZaxFoaTLOIw0TAvjqAtMhal6NxEhYH5Js/j9Z
 VN82rJhSFdLIK1JLM6EvKt5/gBmnbBNcg6E65gxK2KwuWKG5Hc2U57i8aa1X8Q==
From: Romain Gantois <romain.gantois@bootlin.com>
Date: Mon, 12 Feb 2024 17:42:07 +0100
Message-Id: <20240212-rxc_bugfix-v3-0-e9f2eb6b3b05@bootlin.com>
MIME-Version: 1.0
X-B4-Tracking: v=1; b=H4sIAGBKymUC/1WOyw6CMBBFf4V07ZC+eMSV/2GIKWUKTbQ1bSUYw
 r9bcYPLM3PnzF1JxGAxknOxkoCzjda7DOJUED0pNyLYITPhlEvKeA1h0bf+NRq7wCCbXvRMiUY
 akg+eAfN4l12JwwQOl0S6vDHBPyBNAdVBRgWTvOVNyepWcAYMckpZV47KJW/jpfc+3TNr//jqJ
 xuTD++96sz3Jz+RoMdWMwcKFdZaZC9Whv55um3bPtBSOn31AAAA
To: Russell King <linux@armlinux.org.uk>, Andrew Lunn <andrew@lunn.ch>, 
 Heiner Kallweit <hkallweit1@gmail.com>, 
 "David S. Miller" <davem@davemloft.net>, Eric Dumazet <edumazet@google.com>, 
 Jakub Kicinski <kuba@kernel.org>, Paolo Abeni <pabeni@redhat.com>, 
 Alexandre Torgue <alexandre.torgue@foss.st.com>, 
 Jose Abreu <joabreu@synopsys.com>, 
 Maxime Coquelin <mcoquelin.stm32@gmail.com>, 
 =?utf-8?q?Cl=C3=A9ment_L=C3=A9ger?= <clement.leger@bootlin.com>
X-Mailer: b4 0.12.4
X-GND-Sasl: romain.gantois@bootlin.com
Cc: Romain Gantois <romain.gantois@bootlin.com>, netdev@vger.kernel.org,
 linux-renesas-soc@vger.kernel.org, Clark Wang <xiaoning.wang@nxp.com>,
 Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
 Miquel Raynal <miquel.raynal@bootlin.com>,
 linux-stm32@st-md-mailman.stormreply.com, linux-arm-kernel@lists.infradead.org
Subject: [Linux-stm32] [PATCH net-next v3 0/7] Fix missing PHY-to-MAC RX
	clock
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

SGVsbG8gZXZlcnlvbmUsCgpUaGlzIGlzIHZlcnNpb24gdGhyZWUgb2YgbXkgc2VyaWVzIHRoYXQg
YWRkcmVzc2VzIHRoZSBpc3N1ZSB3aXRoIHNvbWUgTUFDL1BIWQpjb21iaW5hdGlvbnMuCgpOb3Rh
YmxlIGNoYW5nZXMgaW4gdjM6CiAgLSBSZW1vdmVkIHRoZSAiaW50ZXJmYWNlIiBhcmd1bWVudCBm
cm9tIHBjc19pbml0KCkuCiAgLSBBZGRlZCBhIGtlcm5lbCBkb2MgZm9yIHBjc19pbml0KCkuCgpO
b3RhYmxlIGNoYW5nZXMgaW4gdjI6CiAgLSBJbnRyb2R1Y2VkIGEgcGNzIG9wIGZvciBpbml0aWFs
aXppbmcgaGFyZHdhcmUgcmVxdWlyZWQgZm9yIE1BQwogICAgaW5pdGlhbGl6YXRpb24sIGluc3Rl
YWQgb2YgdXNpbmcgcGh5bGlua192YWxpZGF0ZSgpIGZvciB0aGlzIHB1cnBvc2UuCiAgLSBSZWZh
Y3RvcmVkIHN0bW1hYyB0byB1c2UgYSBnZW5lcmljIFBDUyByZWZlcmVuY2UgaW4gbWFjX2Rldmlj
ZV9pbmZvCiAgICBpbnN0ZWFkIG9mIGEgbW9kZWwtc3BlY2lmaWMgZmllbGQuCgpUaGVyZSBpcyBh
biBpc3N1ZSB3aXRoIHNvbWUgc3RtbWFjL1BIWSBjb21iaW5hdGlvbnMgdGhhdCBoYXMgYmVlbiBy
ZXBvcnRlZApzb21lIHRpbWUgYWdvIGluIGEgY291cGxlIG9mIGRpZmZlcmVudCBzZXJpZXM6CgpD
bGFyayBXYW5nJ3MgcmVwb3J0OgpodHRwczovL2xvcmUua2VybmVsLm9yZy9hbGwvMjAyMzAyMDIw
ODE1NTkuMzU1MzYzNy0xLXhpYW9uaW5nLndhbmdAbnhwLmNvbS8KQ2zDqW1lbnQgTMOpZ2VyJ3Mg
cmVwb3J0OgpodHRwczovL2xvcmUua2VybmVsLm9yZy9saW51eC1hcm0ta2VybmVsLzIwMjMwMTE2
MTAzOTI2LjI3Njg2OS00LWNsZW1lbnQubGVnZXJAYm9vdGxpbi5jb20vCgpTdG1tYWMgY29udHJv
bGxlcnMgcmVxdWlyZSBhbiBSWCBjbG9jayBzaWduYWwgZnJvbSB0aGUgTUlJIGJ1cyB0byBwZXJm
b3JtCnRoZWlyIGhhcmR3YXJlIGluaXRpYWxpemF0aW9uIHN1Y2Nlc3NmdWxseS4gVGhpcyBjYXVz
ZXMgaXNzdWVzIHdpdGggc29tZQpQSFkvUENTIGRldmljZXMuIElmIHRoZXNlIGRldmljZXMgZG8g
bm90IGJyaW5nIHRoZSBjbG9jayBzaWduYWwgdXAgYmVmb3JlCnRoZSBNQUMgZHJpdmVyIGluaXRp
YWxpemVzIGl0cyBoYXJkd2FyZSwgdGhlbiBzYWlkIGluaXRpYWxpemF0aW9uIHdpbGwKZmFpbC4g
VGhpcyBjYW4gaGFwcGVuIGF0IHByb2JlIHRpbWUgb3Igd2hlbiB0aGUgc3lzdGVtIHdha2VzIHVw
IGZyb20gYQpzdXNwZW5kZWQgc3RhdGUuCgpUaGlzIHNlcmllcyBpbnRyb2R1Y2VzIG5ldyBmbGFn
cyBmb3IgcGh5X2RldmljZSBhbmQgcGh5bGlua19wY3MuIFRoZXNlCmZsYWdzIGFsbG93IE1BQyBk
cml2ZXJzIHRvIHNpZ25hbCB0byBQSFkvUENTIGRyaXZlcnMgdGhhdCB0aGUgUlggY2xvY2sKc2ln
bmFsIHNob3VsZCBiZSBlbmFibGVkIGFzIHNvb24gYXMgcG9zc2libGUsIGFuZCB0aGF0IGl0IHNo
b3VsZCBhbHdheXMKc3RheSBlbmFibGVkLgoKSSBoYXZlIGluY2x1ZGVkIHNwZWNpZmljIHVzZXMg
b2YgdGhlc2UgZmxhZ3MgdGhhdCBmaXggdGhlIFJaTjEgR01BQzEgc3RtbWFjCmRyaXZlciB0aGF0
IEkgYW0gY3VycmVudGx5IHdvcmtpbmcgb24gYW5kIHRoYXQgaXMgbm90IHlldCB1cHN0cmVhbS4g
SSBoYXZlCmFsc28gaW5jbHVkZWQgY2hhbmdlcyB0byB0aGUgYXQ4MDN4IFBIWSBkcml2ZXIgdGhh
dCBzaG91bGQgZml4IHRoZSBpc3N1ZQp0aGF0IENsYXJrIFdhbmcgd2FzIGhhdmluZy4KCkNsYXJr
LCBjb3VsZCB5b3UgcGxlYXNlIGNvbmZpcm0gdGhhdCB0aGlzIHNlcmllcyBmaXhlcyB5b3VyIGlz
c3VlIHdpdGggdGhlCmF0ODAzeCBQSFk/CgpCZXN0IFJlZ2FyZHMsCgpSb21haW4KClJvbWFpbiBH
YW50b2lzICgyKToKICBuZXQ6IHBoeTogYWRkIHJ4Y19hbHdheXNfb24gZmxhZyB0byBwaHlsaW5r
X3BjcwogIG5ldDogcGNzOiByem4xLW1paWM6IEluaXQgUlggY2xvY2sgZWFybHkgaWYgTUFDIHJl
cXVpcmVzIGl0CgpSdXNzZWxsIEtpbmcgKDMpOgogIG5ldDogcGh5OiBhZGQgUEhZX0ZfUlhDX0FM
V0FZU19PTiB0byBQSFkgZGV2IGZsYWdzCiAgbmV0OiBzdG1tYWM6IFNpZ25hbCB0byBQSFkvUENT
IGRyaXZlcnMgdG8ga2VlcCBSWCBjbG9jayBvbgogIG5ldDogcGh5OiBhdDgwM3g6IEF2b2lkIGhp
YmVybmF0aW5nIGlmIE1BQyByZXF1aXJlcyBSWCBjbG9jawoKIC4uLi9uZXQvZXRoZXJuZXQvc3Rt
aWNyby9zdG1tYWMvc3RtbWFjX21haW4uYyAgfCAgNSArKysrKwogZHJpdmVycy9uZXQvcGNzL3Bj
cy1yem4xLW1paWMuYyAgICAgICAgICAgICAgICB8IDE4ICsrKysrKysrKysrKystLS0tLQogZHJp
dmVycy9uZXQvcGh5L2F0ODAzeC5jICAgICAgICAgICAgICAgICAgICAgICB8ICAzICsrLQogZHJp
dmVycy9uZXQvcGh5L3BoeWxpbmsuYyAgICAgICAgICAgICAgICAgICAgICB8IDEzICsrKysrKysr
KysrKy0KIGluY2x1ZGUvbGludXgvcGh5LmggICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAg
MSArCiBpbmNsdWRlL2xpbnV4L3BoeWxpbmsuaCAgICAgICAgICAgICAgICAgICAgICAgIHwgIDkg
KysrKysrKysrCiA2IGZpbGVzIGNoYW5nZWQsIDQyIGluc2VydGlvbnMoKyksIDcgZGVsZXRpb25z
KC0pCgotLQoyLjQzLjAKCi0tLQotIExpbmsgdG8gdjI6IGh0dHBzOi8vbG9yZS5rZXJuZWwub3Jn
L3IvMjAyNDAxMzAtcnhjX2J1Z2ZpeC12Mi0wLTVlNmMzMTY4ZTVmMEBib290bGluLmNvbQoKLS0t
Ck1heGltZSBDaGV2YWxsaWVyICgxKToKICAgICAgbmV0OiBzdG1tYWM6IGRvbid0IHJlbHkgb24g
bHlueF9wY3MgcHJlc2VuY2UgdG8gY2hlY2sgZm9yIGEgUEhZCgpSb21haW4gR2FudG9pcyAoNCk6
CiAgICAgIG5ldDogcGh5bGluazogYWRkIHJ4Y19hbHdheXNfb24gZmxhZyB0byBwaHlsaW5rX3Bj
cwogICAgICBuZXQ6IHN0bW1hYzogU3VwcG9ydCBhIGdlbmVyaWMgUENTIGZpZWxkIGluIG1hY19k
ZXZpY2VfaW5mbwogICAgICBuZXQ6IHN0bW1hYzogU2lnbmFsIHRvIFBIWS9QQ1MgZHJpdmVycyB0
byBrZWVwIFJYIGNsb2NrIG9uCiAgICAgIG5ldDogcGNzOiByem4xLW1paWM6IEluaXQgUlggY2xv
Y2sgZWFybHkgaWYgTUFDIHJlcXVpcmVzIGl0CgpSdXNzZWxsIEtpbmcgKDIpOgogICAgICBuZXQ6
IHBoeWxpbms6IGFkZCBQSFlfRl9SWENfQUxXQVlTX09OIHRvIFBIWSBkZXYgZmxhZ3MKICAgICAg
bmV0OiBwaHk6IHFjb206IGF0ODAzeDogQXZvaWQgaGliZXJuYXRpbmcgaWYgTUFDIHJlcXVpcmVz
IFJYIGNsb2NrCgogZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMvY29tbW9uLmgg
ICAgICAgfCAgMiArLQogLi4uL25ldC9ldGhlcm5ldC9zdG1pY3JvL3N0bW1hYy9kd21hYy1zb2Nm
cGdhLmMgICAgfCAgOCArKy0tLQogZHJpdmVycy9uZXQvZXRoZXJuZXQvc3RtaWNyby9zdG1tYWMv
c3RtbWFjX21haW4uYyAgfCAxNSArKysrLS0tLQogZHJpdmVycy9uZXQvcGNzL3Bjcy1yem4xLW1p
aWMuYyAgICAgICAgICAgICAgICAgICAgfCAyNyArKysrKysrKysrKysrKwogZHJpdmVycy9uZXQv
cGh5L3BoeWxpbmsuYyAgICAgICAgICAgICAgICAgICAgICAgICAgfCAyNCArKysrKysrKysrKyst
CiBkcml2ZXJzL25ldC9waHkvcWNvbS9hdDgwM3guYyAgICAgICAgICAgICAgICAgICAgICB8ICAz
ICstCiBpbmNsdWRlL2xpbnV4L3BoeS5oICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8
ICAxICsKIGluY2x1ZGUvbGludXgvcGh5bGluay5oICAgICAgICAgICAgICAgICAgICAgICAgICAg
IHwgNDIgKysrKysrKysrKysrKysrKysrKysrKwogOCBmaWxlcyBjaGFuZ2VkLCAxMDkgaW5zZXJ0
aW9ucygrKSwgMTMgZGVsZXRpb25zKC0pCi0tLQpiYXNlLWNvbW1pdDogMGYzNzY2NmQ4N2QyZGVh
NDJlYzIxNzc2YzNkNTYyYjdjYmQ3MTYxMgpjaGFuZ2UtaWQ6IDIwMjQwMTI2LXJ4Y19idWdmaXgt
ZDQ3YjNiMWEzNzRmCgpCZXN0IHJlZ2FyZHMsCi0tIApSb21haW4gR2FudG9pcyA8cm9tYWluLmdh
bnRvaXNAYm9vdGxpbi5jb20+CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpMaW51eC1zdG0zMiBtYWlsaW5nIGxpc3QKTGludXgtc3RtMzJAc3QtbWQtbWFp
bG1hbi5zdG9ybXJlcGx5LmNvbQpodHRwczovL3N0LW1kLW1haWxtYW4uc3Rvcm1yZXBseS5jb20v
bWFpbG1hbi9saXN0aW5mby9saW51eC1zdG0zMgo=
