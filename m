Return-Path: <linux-stm32-bounces@st-md-mailman.stormreply.com>
X-Original-To: lists+linux-stm32@lfdr.de
Delivered-To: lists+linux-stm32@lfdr.de
Received: from stm-ict-prod-mailman-01.stormreply.prv (st-md-mailman.stormreply.com [52.209.6.89])
	by mail.lfdr.de (Postfix) with ESMTPS id 659B1B05FB0
	for <lists+linux-stm32@lfdr.de>; Tue, 15 Jul 2025 16:08:43 +0200 (CEST)
Received: from ip-172-31-3-47.eu-west-1.compute.internal (localhost [127.0.0.1])
	by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTP id 126B9C3F939;
	Tue, 15 Jul 2025 14:08:43 +0000 (UTC)
Received: from mx07-00178001.pphosted.com (mx08-00178001.pphosted.com
 [91.207.212.93])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by stm-ict-prod-mailman-01.stormreply.prv (Postfix) with ESMTPS id 35918C36B3C
 for <linux-stm32@st-md-mailman.stormreply.com>;
 Tue, 15 Jul 2025 14:08:41 +0000 (UTC)
Received: from pps.filterd (m0046660.ppops.net [127.0.0.1])
 by mx07-00178001.pphosted.com (8.18.1.2/8.18.1.2) with ESMTP id 56FD0R8I025062;
 Tue, 15 Jul 2025 16:08:38 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=foss.st.com; h=
 cc:content-transfer-encoding:content-type:date:from:in-reply-to
 :message-id:mime-version:references:subject:to; s=selector1; bh=
 n5N0n1iUi16xCCfgujsNyLja1114BqY2n0xqBlEvMcY=; b=O1i5CBSeoDSVNUF8
 zz8pxa4JqZOIpDCuUHlnKXd0TUEFvGMWJ08ZNy8XEgWnWiLNYxZ6RKpG32qZGAOy
 nhhdG3hUwgztWeARreDi+wTVMsRlV8/Weh0d5dgTbZcWkFIs++ha/SY4c6xIhwfJ
 Vqr6lEWwFUW1RUhAE0Du2KHQeMViDJXKsGZbblXyRYz8/8fCgmrS+G6gcNE6tyJR
 V2kgk8V6I6DuKS0Mr6FYhuMiIbNtmOfI7o6bLP/AnRbw0snxZUqwGGP2f1DrsSqq
 dtz0ktwFpxov6IzGtDw4jC8VsZDu8TMtl8vqlG8heftf8Qkv/zUlysGy2OJSby+A
 woHJrg==
Received: from beta.dmz-ap.st.com (beta.dmz-ap.st.com [138.198.100.35])
 by mx07-00178001.pphosted.com (PPS) with ESMTPS id 47ucu9dney-1
 (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Tue, 15 Jul 2025 16:08:38 +0200 (MEST)
Received: from euls16034.sgp.st.com (euls16034.sgp.st.com [10.75.44.20])
 by beta.dmz-ap.st.com (STMicroelectronics) with ESMTP id 41D3640056;
 Tue, 15 Jul 2025 16:07:52 +0200 (CEST)
Received: from Webmail-eu.st.com (shfdag1node2.st.com [10.75.129.70])
 by euls16034.sgp.st.com (STMicroelectronics) with ESMTP id 8699CBA59CD;
 Tue, 15 Jul 2025 16:07:26 +0200 (CEST)
Received: from localhost (10.48.86.185) by SHFDAG1NODE2.st.com (10.75.129.70)
 with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Tue, 15 Jul
 2025 16:07:26 +0200
From: =?utf-8?q?Cl=C3=A9ment_Le_Goffic?= <clement.legoffic@foss.st.com>
Date: Tue, 15 Jul 2025 16:07:15 +0200
MIME-Version: 1.0
Message-ID: <20250715-upstream-optee-rtc-v1-3-e0fdf8aae545@foss.st.com>
References: <20250715-upstream-optee-rtc-v1-0-e0fdf8aae545@foss.st.com>
In-Reply-To: <20250715-upstream-optee-rtc-v1-0-e0fdf8aae545@foss.st.com>
To: =?utf-8?q?Cl=C3=A9ment_L=C3=A9ger?= <clement.leger@bootlin.com>, Alexandre
 Belloni <alexandre.belloni@bootlin.com>, Jens Wiklander
 <jens.wiklander@linaro.org>
X-Mailer: b4 0.15-dev-7616d
X-Originating-IP: [10.48.86.185]
X-ClientProxiedBy: SHFCAS1NODE1.st.com (10.75.129.72) To SHFDAG1NODE2.st.com
 (10.75.129.70)
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.293,Aquarius:18.0.1099,Hydra:6.1.9,FMLib:17.12.80.40
 definitions=2025-07-15_03,2025-07-15_01,2025-03-28_01
Cc: linux-rtc@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-stm32@st-md-mailman.stormreply.com
Subject: [Linux-stm32] [PATCH 3/3] rtc: optee: add alarm related rtc ops to
 optee rtc driver
X-BeenThere: linux-stm32@st-md-mailman.stormreply.com
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: <linux-stm32.st-md-mailman.stormreply.com>
List-Unsubscribe: <https://st-md-mailman.stormreply.com/mailman/options/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=unsubscribe>
List-Archive: <http://st-md-mailman.stormreply.com/pipermail/linux-stm32/>
List-Post: <mailto:linux-stm32@st-md-mailman.stormreply.com>
List-Help: <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=help>
List-Subscribe: <https://st-md-mailman.stormreply.com/mailman/listinfo/linux-stm32>, 
 <mailto:linux-stm32-request@st-md-mailman.stormreply.com?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: linux-stm32-bounces@st-md-mailman.stormreply.com
Sender: "Linux-stm32" <linux-stm32-bounces@st-md-mailman.stormreply.com>

QWRkIHJlYWRfYWxhcm0gYW5kIHNldF9hbGFybSBvcHMgZnJvbSB0aGUgcnRjIGZyYW1ld29yay4K
VGhlIHN1cHBvcnQgb2YgYW4gYWxhcm0gaXMgaGFuZGxlZCBieSBhIGtlcm5lbCB0aHJlYWQgd2Fp
dGluZyBpbiBPUC1URUUKZm9yIGFuIGFzeW5jaHJvbm91cyBub3RpZmljYXRpb24gdGhhdCBjb21l
cyBpbiB0aGUgaW50ZXJydXB0CmhhbmRsZXIgb2YgdGhlIGFsYXJtIGludGVycnVwdGlvbiBvbiBP
UC1URUUgc2VjdXJlIHdvcmxkLgoKT25jZSB0aGUgbm90aWZpY2F0aW9uIGFycml2ZXMsIHRoZSBr
ZXJuZWwgdGhyZWFkIHByZXZpb3VzbHkgc3VzcGVuZGVkCmlzIHJlc2NoZWR1bGVkICh0aGlzIGlz
IGhhbmRsZWQgYnkgdGhlIE9QLVRFRSBrZXJuZWwgZHJpdmVyKSBhbmQgY29tZXMKYmFjayB3aXRo
IHRoZSBhbGFybSBpbmZvcm1hdGlvbiB0byB0aGUga2VybmVsLgoKQSBzZWNvbmQgc2Vzc2lvbiBp
cyB0aGVyZWZvcmUgbmVlZGVkIHRvIGVuYWJsZS9kaXNhYmxlL2NhbmNlbCBhIHdhaXRpbmcKYWxh
cm0gZXZlbnQgYXMgdGhlIGtlcm5lbCB0aHJlYWQgc3RvcHBlZCBpbiBPUC1URUUgdGFrZXMgYSBm
b3JtIG9mIG11dGV4Cm9uIHRoZSBzZXNzaW9uIGFuZCBzbyBubyBvbmUgY2FuIHVzZSB0aGlzIHNl
c3Npb24gaW4gcGFyYWxsZWwuCgpTaWduZWQtb2ZmLWJ5OiBDbMOpbWVudCBMZSBHb2ZmaWMgPGNs
ZW1lbnQubGVnb2ZmaWNAZm9zcy5zdC5jb20+Ci0tLQogZHJpdmVycy9ydGMvcnRjLW9wdGVlLmMg
fCA0MzQgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tCiAx
IGZpbGUgY2hhbmdlZCwgNDEzIGluc2VydGlvbnMoKyksIDIxIGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvcnRjL3J0Yy1vcHRlZS5jIGIvZHJpdmVycy9ydGMvcnRjLW9wdGVlLmMK
aW5kZXggYjY1OTUzZWI3Y2ExLi4yN2RiNDAzZTMwNDcgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvcnRj
L3J0Yy1vcHRlZS5jCisrKyBiL2RyaXZlcnMvcnRjL3J0Yy1vcHRlZS5jCkBAIC01LDE5ICs1LDEw
NCBAQAogCiAjaW5jbHVkZSA8bGludXgvZGV2aWNlLmg+CiAjaW5jbHVkZSA8bGludXgva2VybmVs
Lmg+CisjaW5jbHVkZSA8bGludXgva3RocmVhZC5oPgogI2luY2x1ZGUgPGxpbnV4L21vZHVsZS5o
PgogI2luY2x1ZGUgPGxpbnV4L3J0Yy5oPgogI2luY2x1ZGUgPGxpbnV4L3RlZV9kcnYuaD4KIAot
I2RlZmluZSBSVENfSU5GT19WRVJTSU9OCTB4MQorI2RlZmluZSBSVENfSU5GT19WRVJTSU9OCQkJ
MHgxCiAKLSNkZWZpbmUgVEFfQ01EX1JUQ19HRVRfSU5GTwkJMHgwCi0jZGVmaW5lIFRBX0NNRF9S
VENfR0VUX1RJTUUJCTB4MQotI2RlZmluZSBUQV9DTURfUlRDX1NFVF9USU1FCQkweDIKLSNkZWZp
bmUgVEFfQ01EX1JUQ19HRVRfT0ZGU0VUCQkweDMKLSNkZWZpbmUgVEFfQ01EX1JUQ19TRVRfT0ZG
U0VUCQkweDQKKyNkZWZpbmUgVEFfUlRDX0ZFQVRVUkVfQ09SUkVDVElPTgkJQklUKDApCisjZGVm
aW5lIFRBX1JUQ19GRUFUVVJFX0FMQVJNCQkJQklUKDEpCisjZGVmaW5lIFRBX1JUQ19GRUFUVVJF
X1dBS0VVUF9BTEFSTQkJQklUKDIpCiAKLSNkZWZpbmUgVEFfUlRDX0ZFQVRVUkVfQ09SUkVDVElP
TglCSVQoMCkKK2VudW0gcnRjX29wdGVlX3B0YV9jbWQgeworCS8qICBQVEFfQ01EX1JUQ19HRVRf
SU5GTyAtIEdldCBSVEMgaW5mb3JtYXRpb24KKwkgKgorCSAqIFtvdXRdICAgICAgICBtZW1yZWZb
MF0gIFJUQyBidWZmZXIgbWVtb3J5IHJlZmVyZW5jZSBjb250YWluaW5nIGEgc3RydWN0IHB0YV9y
dGNfaW5mbworCSAqLworCVBUQV9DTURfUlRDX0dFVF9JTkYgPSAweDAsCisKKwkvKgorCSAqIFBU
QV9DTURfUlRDX0dFVF9USU1FIC0gR2V0IHRpbWUgZnJvbSBSVEMKKwkgKgorCSAqIFtvdXRdICAg
IG1lbXJlZlswXSAgUlRDIGJ1ZmZlciBtZW1vcnkgcmVmZXJlbmNlIGNvbnRhaW5pbmcgYSBzdHJ1
Y3QgcHRhX3J0Y190aW1lCisJICovCisJUFRBX0NNRF9SVENfR0VUX1RJTUUgPSAweDEsCisKKwkv
KgorCSAqIFBUQV9DTURfUlRDX1NFVF9USU1FIC0gU2V0IHRpbWUgZnJvbSBSVEMKKwkgKgorCSAq
IFtpbl0gICAgIG1lbXJlZlswXSAgUlRDIGJ1ZmZlciBtZW1vcnkgcmVmZXJlbmNlIGNvbnRhaW5p
bmcgYSBzdHJ1Y3QgcHRhX3J0Y190aW1lIHRvIGJlCisJICogICAgICAgICAgICAgICAgICAgICB1
c2VkIGFzIFJUQyB0aW1lCisJICovCisJUFRBX0NNRF9SVENfU0VUX1RJTUUgPSAweDIsCisKKwkv
KgorCSAqIFBUQV9DTURfUlRDX0dFVF9PRkZTRVQgLSBHZXQgUlRDIG9mZnNldAorCSAqCisJICog
W291dF0gICAgdmFsdWVbMF0uYSAgUlRDIG9mZnNldCAoc2lnbmVkIDMyYml0IHZhbHVlKQorCSAq
LworCVBUQV9DTURfUlRDX0dFVF9PRkZTRVQgPSAweDMsCisKKwkvKgorCSAqIFBUQV9DTURfUlRD
X1NFVF9PRkZTRVQgLSBTZXQgUlRDIG9mZnNldAorCSAqCisJICogW2luXSAgICAgdmFsdWVbMF0u
YSAgUlRDIG9mZnNldCB0byBiZSBzZXQgKHNpZ25lZCAzMmJpdCB2YWx1ZSkKKwkgKi8KKwlQVEFf
Q01EX1JUQ19TRVRfT0ZGU0VUID0gMHg0LAorCisJLyoKKwkgKiBQVEFfQ01EX1JUQ19SRUFEX0FM
QVJNIC0gUmVhZCBSVEMgYWxhcm0KKwkgKgorCSAqIFtvdXRdICAgICBtZW1yZWZbMF0gIFJUQyBi
dWZmZXIgbWVtb3J5IHJlZmVyZW5jZSBjb250YWluaW5nIGEgc3RydWN0IHB0YV9ydGNfYWxhcm0K
KwkgKi8KKwlQVEFfQ01EX1JUQ19SRUFEX0FMQVJNID0gMHg1LAorCisJLyoKKwkgKiBQVEFfQ01E
X1JUQ19TRVRfQUxBUk0gLSBTZXQgUlRDIGFsYXJtCisJICoKKwkgKiBbaW5dICAgICBtZW1yZWZb
MF0gIFJUQyBidWZmZXIgbWVtb3J5IHJlZmVyZW5jZSBjb250YWluaW5nIGEgc3RydWN0IHB0YV9y
dGNfYWxhcm0gdG8gYmUKKwkgKiAgICAgICAgICAgICAgICAgICAgIHVzZWQgYXMgUlRDIGFsYXJt
CisJICovCisJUFRBX0NNRF9SVENfU0VUX0FMQVJNID0gMHg2LAorCisJLyoKKwkgKiBQVEFfQ01E
X1JUQ19FTkFCTEVfQUxBUk0gLSBFbmFibGUgQWxhcm0KKwkgKgorCSAqIFtpbl0gICAgIHZhbHVl
WzBdLmEgIFJUQyBJUlEgZmxhZyAodWludDMyX3QpLCAwIHRvIGRpc2FibGUgdGhlIGFsYXJtLCAx
IHRvIGVuYWJsZQorCSAqLworCVBUQV9DTURfUlRDX0VOQUJMRV9BTEFSTSA9IDB4NywKKworCS8q
CisJICogUFRBX0NNRF9SVENfV0FJVF9BTEFSTSAtIEdldCBhbGFybSBldmVudAorCSAqCisJICog
W291dF0gICAgIHZhbHVlWzBdLmEgIFJUQyB3YWl0IGFsYXJtIHJldHVybiBzdGF0dXMgKHVpbnQz
Ml90KToKKwkgKiAgICAgICAgICAgICAgICAgICAgICAgLSAwOiBObyBhbGFybSBldmVudAorCSAq
ICAgICAgICAgICAgICAgICAgICAgICAtIDE6IEFsYXJtIGV2ZW50IG9jY3VycmVkCisJICogICAg
ICAgICAgICAgICAgICAgICAgIC0gMjogQWxhcm0gZXZlbnQgY2FuY2VsZWQKKwkgKi8KKwlQVEFf
Q01EX1JUQ19XQUlUX0FMQVJNID0gMHg4LAorCisJLyoKKwkgKiBQVEFfQ01EX1JUQ19DQU5DRUxf
V0FJVCAtIENhbmNlbCB3YWl0IGZvciBhbGFybSBldmVudAorCSAqLworCVBUQV9DTURfUlRDX0NB
TkNFTF9XQUlUID0gMHg5LAorCisJLyoKKwkgKiBQVEFfQ01EX1JUQ19TRVRfV0FLRV9BTEFSTV9T
VEFUVVMgLSBTZXQgUlRDIHdha2UgYWxhcm0gc3RhdHVzIGZsYWcKKwkgKgorCSAqIFtpbl0gICAg
IHZhbHVlWzBdLmEgUlRDIElSUSB3YWtlIGFsYXJtIGZsYWcgKHVpbnQzMl90KSwgMCB0byBkaXNh
YmxlIHRoZSB3YWtlIHVwCisJICogICAgICAgICAgICAgICAgICAgICBjYXBhYmlsaXR5LCAxIHRv
IGVuYWJsZS4KKwkgKi8KKwlQVEFfQ01EX1JUQ19TRVRfV0FLRV9BTEFSTV9TVEFUVVMgPSAweEEs
Cit9OworCitlbnVtIHJ0Y193YWl0X2FsYXJtX3N0YXR1cyB7CisJV0FJVF9BTEFSTV9SRVNFVCA9
IDB4MCwKKwlXQUlUX0FMQVJNX0FMQVJNX09DQ1VSUkVEID0gMHgxLAorCVdBSVRfQUxBUk1fQ0FO
Q0VMRUQgPSAweDIsCit9OwogCiBzdHJ1Y3Qgb3B0ZWVfcnRjX3RpbWUgewogCXUzMiB0bV9zZWM7
CkBAIC0yOSw2ICsxMTQsMTIgQEAgc3RydWN0IG9wdGVlX3J0Y190aW1lIHsKIAl1MzIgdG1fd2Rh
eTsKIH07CiAKK3N0cnVjdCBvcHRlZV9ydGNfYWxhcm0geworCXU4IGVuYWJsZWQ7CisJdTggcGVu
ZGluZzsKKwlzdHJ1Y3Qgb3B0ZWVfcnRjX3RpbWUgdGltZTsKK307CisKIHN0cnVjdCBvcHRlZV9y
dGNfaW5mbyB7CiAJdTY0IHZlcnNpb247CiAJdTY0IGZlYXR1cmVzOwpAQCAtNDEsMTUgKzEzMiwy
MSBAQCBzdHJ1Y3Qgb3B0ZWVfcnRjX2luZm8gewogICogQGRldjoJCU9QLVRFRSBiYXNlZCBSVEMg
ZGV2aWNlLgogICogQGN0eDoJCU9QLVRFRSBjb250ZXh0IGhhbmRsZXIuCiAgKiBAc2Vzc2lvbl9p
ZDoJCVJUQyBUQSBzZXNzaW9uIGlkZW50aWZpZXIuCisgKiBAc2Vzc2lvbjJfaWQ6CVJUQyB3YWl0
IGFsYXJtIHNlc3Npb24gaWRlbnRpZmllci4KICAqIEBzaG06CQlNZW1vcnkgcG9vbCBzaGFyZWQg
d2l0aCBSVEMgZGV2aWNlLgogICogQGZlYXR1cmVzOgkJQml0ZmllbGQgb2YgUlRDIGZlYXR1cmVz
CisgKiBAYWxhcm1fdGFzazoJCVJUQyB3YWl0IGFsYW1yIHRhc2suCisgKiBAcnRjOgkJUlRDIGRl
dmljZS4KICAqLwogc3RydWN0IG9wdGVlX3J0YyB7CiAJc3RydWN0IGRldmljZSAqZGV2OwogCXN0
cnVjdCB0ZWVfY29udGV4dCAqY3R4OwogCXUzMiBzZXNzaW9uX2lkOworCXUzMiBzZXNzaW9uMl9p
ZDsKIAlzdHJ1Y3QgdGVlX3NobSAqc2htOwogCXU2NCBmZWF0dXJlczsKKwlzdHJ1Y3QgdGFza19z
dHJ1Y3QgKmFsYXJtX3Rhc2s7CisJc3RydWN0IHJ0Y19kZXZpY2UgKnJ0YzsKIH07CiAKIHN0YXRp
YyBpbnQgb3B0ZWVfcnRjX3JlYWR0aW1lKHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IHJ0Y190
aW1lICp0bSkKQEAgLTYwLDcgKzE1Nyw3IEBAIHN0YXRpYyBpbnQgb3B0ZWVfcnRjX3JlYWR0aW1l
KHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IHJ0Y190aW1lICp0bSkKIAlzdHJ1Y3QgdGVlX3Bh
cmFtIHBhcmFtWzRdID0gezB9OwogCWludCByZXQ7CiAKLQlpbnZfYXJnLmZ1bmMgPSBUQV9DTURf
UlRDX0dFVF9USU1FOworCWludl9hcmcuZnVuYyA9IFBUQV9DTURfUlRDX0dFVF9USU1FOwogCWlu
dl9hcmcuc2Vzc2lvbiA9IHByaXYtPnNlc3Npb25faWQ7CiAJaW52X2FyZy5udW1fcGFyYW1zID0g
NDsKIApAQCAtMTAwLDcgKzE5Nyw3IEBAIHN0YXRpYyBpbnQgb3B0ZWVfcnRjX3NldHRpbWUoc3Ry
dWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgcnRjX3RpbWUgKnRtKQogCXN0cnVjdCBvcHRlZV9ydGNf
dGltZSAqb3B0ZWVfdG07CiAJaW50IHJldDsKIAotCWludl9hcmcuZnVuYyA9IFRBX0NNRF9SVENf
U0VUX1RJTUU7CisJaW52X2FyZy5mdW5jID0gUFRBX0NNRF9SVENfU0VUX1RJTUU7CiAJaW52X2Fy
Zy5zZXNzaW9uID0gcHJpdi0+c2Vzc2lvbl9pZDsKIAlpbnZfYXJnLm51bV9wYXJhbXMgPSA0Owog
CkBAIC0xMzcsNyArMjM0LDcgQEAgc3RhdGljIGludCBvcHRlZV9ydGNfcmVhZG9mZnNldChzdHJ1
Y3QgZGV2aWNlICpkZXYsIGxvbmcgKm9mZnNldCkKIAlpZiAoIShwcml2LT5mZWF0dXJlcyAmIFRB
X1JUQ19GRUFUVVJFX0NPUlJFQ1RJT04pKQogCQlyZXR1cm4gLUVPUE5PVFNVUFA7CiAKLQlpbnZf
YXJnLmZ1bmMgPSBUQV9DTURfUlRDX0dFVF9PRkZTRVQ7CisJaW52X2FyZy5mdW5jID0gUFRBX0NN
RF9SVENfR0VUX09GRlNFVDsKIAlpbnZfYXJnLnNlc3Npb24gPSBwcml2LT5zZXNzaW9uX2lkOwog
CWludl9hcmcubnVtX3BhcmFtcyA9IDQ7CiAKQEAgLTE2Miw3ICsyNTksNyBAQCBzdGF0aWMgaW50
IG9wdGVlX3J0Y19zZXRvZmZzZXQoc3RydWN0IGRldmljZSAqZGV2LCBsb25nIG9mZnNldCkKIAlp
ZiAoIShwcml2LT5mZWF0dXJlcyAmIFRBX1JUQ19GRUFUVVJFX0NPUlJFQ1RJT04pKQogCQlyZXR1
cm4gLUVPUE5PVFNVUFA7CiAKLQlpbnZfYXJnLmZ1bmMgPSBUQV9DTURfUlRDX1NFVF9PRkZTRVQ7
CisJaW52X2FyZy5mdW5jID0gUFRBX0NNRF9SVENfU0VUX09GRlNFVDsKIAlpbnZfYXJnLnNlc3Np
b24gPSBwcml2LT5zZXNzaW9uX2lkOwogCWludl9hcmcubnVtX3BhcmFtcyA9IDQ7CiAKQEAgLTE3
NiwxMyArMjczLDIyOCBAQCBzdGF0aWMgaW50IG9wdGVlX3J0Y19zZXRvZmZzZXQoc3RydWN0IGRl
dmljZSAqZGV2LCBsb25nIG9mZnNldCkKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGljIGludCBvcHRl
ZV9ydGNfcmVhZF9hbGFybShzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBydGNfd2thbHJtICph
bGFybSkKK3sKKwlzdHJ1Y3Qgb3B0ZWVfcnRjICpwcml2ID0gZGV2X2dldF9kcnZkYXRhKGRldik7
CisJc3RydWN0IHRlZV9pb2N0bF9pbnZva2VfYXJnIGludl9hcmcgPSB7MH07CisJc3RydWN0IG9w
dGVlX3J0Y19hbGFybSAqb3B0ZWVfYWxhcm07CisJc3RydWN0IHRlZV9wYXJhbSBwYXJhbVsxXSA9
IHswfTsKKwlpbnQgcmV0OworCisJaWYgKCEocHJpdi0+ZmVhdHVyZXMgJiBUQV9SVENfRkVBVFVS
RV9BTEFSTSkpCisJCXJldHVybiAtRU9QTk9UU1VQUDsKKworCWludl9hcmcuZnVuYyA9IFBUQV9D
TURfUlRDX1JFQURfQUxBUk07CisJaW52X2FyZy5zZXNzaW9uID0gcHJpdi0+c2Vzc2lvbl9pZDsK
KwlpbnZfYXJnLm51bV9wYXJhbXMgPSAxOworCisJLyogRmlsbCBpbnZva2UgY21kIHBhcmFtcyAq
LworCXBhcmFtWzBdLmF0dHIgPSBURUVfSU9DVExfUEFSQU1fQVRUUl9UWVBFX01FTVJFRl9PVVRQ
VVQ7CisJcGFyYW1bMF0udS5tZW1yZWYuc2htID0gcHJpdi0+c2htOworCXBhcmFtWzBdLnUubWVt
cmVmLnNpemUgPSBzaXplb2Yoc3RydWN0IG9wdGVlX3J0Y19hbGFybSk7CisKKwlyZXQgPSB0ZWVf
Y2xpZW50X2ludm9rZV9mdW5jKHByaXYtPmN0eCwgJmludl9hcmcsIHBhcmFtKTsKKwlpZiAocmV0
IDwgMCB8fCBpbnZfYXJnLnJldCAhPSAwKQorCQlyZXR1cm4gcmV0ID8gcmV0IDogLUVQUk9UTzsK
KworCW9wdGVlX2FsYXJtID0gdGVlX3NobV9nZXRfdmEocHJpdi0+c2htLCAwKTsKKwlpZiAoSVNf
RVJSKG9wdGVlX2FsYXJtKSkKKwkJcmV0dXJuIFBUUl9FUlIoYWxhcm0pOworCisJaWYgKHBhcmFt
WzBdLnUubWVtcmVmLnNpemUgIT0gc2l6ZW9mKCpvcHRlZV9hbGFybSkpCisJCXJldHVybiAtRVBS
T1RPOworCisJYWxhcm0tPmVuYWJsZWQgPSBvcHRlZV9hbGFybS0+ZW5hYmxlZDsKKwlhbGFybS0+
cGVuZGluZyA9IG9wdGVlX2FsYXJtLT5wZW5kaW5nOworCWFsYXJtLT50aW1lLnRtX3NlYyA9IG9w
dGVlX2FsYXJtLT50aW1lLnRtX3NlYzsKKwlhbGFybS0+dGltZS50bV9taW4gPSBvcHRlZV9hbGFy
bS0+dGltZS50bV9taW47CisJYWxhcm0tPnRpbWUudG1faG91ciA9IG9wdGVlX2FsYXJtLT50aW1l
LnRtX2hvdXI7CisJYWxhcm0tPnRpbWUudG1fbWRheSA9IG9wdGVlX2FsYXJtLT50aW1lLnRtX21k
YXk7CisJYWxhcm0tPnRpbWUudG1fbW9uID0gb3B0ZWVfYWxhcm0tPnRpbWUudG1fbW9uOworCWFs
YXJtLT50aW1lLnRtX3llYXIgPSBvcHRlZV9hbGFybS0+dGltZS50bV95ZWFyIC0gMTkwMDsKKwlh
bGFybS0+dGltZS50bV93ZGF5ID0gb3B0ZWVfYWxhcm0tPnRpbWUudG1fd2RheTsKKwlhbGFybS0+
dGltZS50bV95ZGF5ID0gcnRjX3llYXJfZGF5cyhhbGFybS0+dGltZS50bV9tZGF5LAorCQkJCQkg
ICAgYWxhcm0tPnRpbWUudG1fbW9uLAorCQkJCQkgICAgYWxhcm0tPnRpbWUudG1feWVhcik7CisK
KwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBvcHRlZV9ydGNfc2V0X2FsYXJtKHN0cnVjdCBk
ZXZpY2UgKmRldiwgc3RydWN0IHJ0Y193a2Fscm0gKmFsYXJtKQoreworCXN0cnVjdCBvcHRlZV9y
dGMgKnByaXYgPSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsKKwlzdHJ1Y3QgdGVlX2lvY3RsX2ludm9r
ZV9hcmcgaW52X2FyZyA9IHswfTsKKwlzdHJ1Y3Qgb3B0ZWVfcnRjX2FsYXJtICpvcHRlZV9hbGFy
bTsKKwlzdHJ1Y3QgdGVlX3BhcmFtIHBhcmFtWzFdID0gezB9OworCWludCByZXQ7CisKKwlpZiAo
IShwcml2LT5mZWF0dXJlcyAmIFRBX1JUQ19GRUFUVVJFX0FMQVJNKSkKKwkJcmV0dXJuIC1FT1BO
T1RTVVBQOworCisJaW52X2FyZy5mdW5jID0gUFRBX0NNRF9SVENfU0VUX0FMQVJNOworCWludl9h
cmcuc2Vzc2lvbiA9IHByaXYtPnNlc3Npb25faWQ7CisJaW52X2FyZy5udW1fcGFyYW1zID0gMTsK
KworCXBhcmFtWzBdLmF0dHIgPSBURUVfSU9DVExfUEFSQU1fQVRUUl9UWVBFX01FTVJFRl9JTlBV
VDsKKwlwYXJhbVswXS51Lm1lbXJlZi5zaG0gPSBwcml2LT5zaG07CisJcGFyYW1bMF0udS5tZW1y
ZWYuc2l6ZSA9IHNpemVvZihzdHJ1Y3Qgb3B0ZWVfcnRjX2FsYXJtKTsKKworCW9wdGVlX2FsYXJt
ID0gdGVlX3NobV9nZXRfdmEocHJpdi0+c2htLCAwKTsKKwlpZiAoSVNfRVJSKG9wdGVlX2FsYXJt
KSkKKwkJcmV0dXJuIFBUUl9FUlIob3B0ZWVfYWxhcm0pOworCisJb3B0ZWVfYWxhcm0tPmVuYWJs
ZWQgPSBhbGFybS0+ZW5hYmxlZDsKKwlvcHRlZV9hbGFybS0+cGVuZGluZyA9IGFsYXJtLT5wZW5k
aW5nOworCW9wdGVlX2FsYXJtLT50aW1lLnRtX3NlYyA9IGFsYXJtLT50aW1lLnRtX3NlYzsKKwlv
cHRlZV9hbGFybS0+dGltZS50bV9taW4gPSBhbGFybS0+dGltZS50bV9taW47CisJb3B0ZWVfYWxh
cm0tPnRpbWUudG1faG91ciA9IGFsYXJtLT50aW1lLnRtX2hvdXI7CisJb3B0ZWVfYWxhcm0tPnRp
bWUudG1fbWRheSA9IGFsYXJtLT50aW1lLnRtX21kYXk7CisJb3B0ZWVfYWxhcm0tPnRpbWUudG1f
bW9uID0gYWxhcm0tPnRpbWUudG1fbW9uOworCW9wdGVlX2FsYXJtLT50aW1lLnRtX3llYXIgPSBh
bGFybS0+dGltZS50bV95ZWFyICsgMTkwMDsKKwlvcHRlZV9hbGFybS0+dGltZS50bV93ZGF5ID0g
YWxhcm0tPnRpbWUudG1fd2RheTsKKworCXJldCA9IHRlZV9jbGllbnRfaW52b2tlX2Z1bmMocHJp
di0+Y3R4LCAmaW52X2FyZywgcGFyYW0pOworCWlmIChyZXQgPCAwIHx8IGludl9hcmcucmV0ICE9
IDApCisJCXJldHVybiByZXQgPyByZXQgOiAtRVBST1RPOworCisJcmV0dXJuIDA7Cit9CisKK3N0
YXRpYyBpbnQgb3B0ZWVfcnRjX2VuYWJsZV9hbGFybShzdHJ1Y3QgZGV2aWNlICpkZXYsIHVuc2ln
bmVkIGludCBlbmFibGVkKQoreworCXN0cnVjdCBvcHRlZV9ydGMgKnByaXYgPSBkZXZfZ2V0X2Ry
dmRhdGEoZGV2KTsKKwlzdHJ1Y3QgdGVlX2lvY3RsX2ludm9rZV9hcmcgaW52X2FyZyA9IHswfTsK
KwlzdHJ1Y3QgdGVlX3BhcmFtIHBhcmFtWzFdID0gezB9OworCWludCByZXQ7CisKKwlpZiAoIShw
cml2LT5mZWF0dXJlcyAmIFRBX1JUQ19GRUFUVVJFX0FMQVJNKSkKKwkJcmV0dXJuIC1FT1BOT1RT
VVBQOworCisJaW52X2FyZy5mdW5jID0gUFRBX0NNRF9SVENfRU5BQkxFX0FMQVJNOworCWludl9h
cmcuc2Vzc2lvbiA9IHByaXYtPnNlc3Npb25faWQ7CisJaW52X2FyZy5udW1fcGFyYW1zID0gMTsK
KworCXBhcmFtWzBdLmF0dHIgPSBURUVfSU9DVExfUEFSQU1fQVRUUl9UWVBFX1ZBTFVFX0lOUFVU
OworCXBhcmFtWzBdLnUudmFsdWUuYSA9IChib29sKWVuYWJsZWQ7CisKKwlyZXQgPSB0ZWVfY2xp
ZW50X2ludm9rZV9mdW5jKHByaXYtPmN0eCwgJmludl9hcmcsIHBhcmFtKTsKKwlpZiAocmV0IDwg
MCB8fCBpbnZfYXJnLnJldCAhPSAwKQorCQlyZXR1cm4gcmV0ID8gcmV0IDogLUVQUk9UTzsKKwor
CXJldHVybiAwOworfQorCiBzdGF0aWMgY29uc3Qgc3RydWN0IHJ0Y19jbGFzc19vcHMgb3B0ZWVf
cnRjX29wcyA9IHsKLQkucmVhZF90aW1lCT0gb3B0ZWVfcnRjX3JlYWR0aW1lLAotCS5zZXRfdGlt
ZQk9IG9wdGVlX3J0Y19zZXR0aW1lLAotCS5zZXRfb2Zmc2V0CT0gb3B0ZWVfcnRjX3NldG9mZnNl
dCwKLQkucmVhZF9vZmZzZXQJPSBvcHRlZV9ydGNfcmVhZG9mZnNldCwKKwkucmVhZF90aW1lCQk9
IG9wdGVlX3J0Y19yZWFkdGltZSwKKwkuc2V0X3RpbWUJCT0gb3B0ZWVfcnRjX3NldHRpbWUsCisJ
LnNldF9vZmZzZXQJCT0gb3B0ZWVfcnRjX3NldG9mZnNldCwKKwkucmVhZF9vZmZzZXQJCT0gb3B0
ZWVfcnRjX3JlYWRvZmZzZXQsCisJLnJlYWRfYWxhcm0JCT0gb3B0ZWVfcnRjX3JlYWRfYWxhcm0s
CisJLnNldF9hbGFybQkJPSBvcHRlZV9ydGNfc2V0X2FsYXJtLAorCS5hbGFybV9pcnFfZW5hYmxl
CT0gb3B0ZWVfcnRjX2VuYWJsZV9hbGFybSwKIH07CiAKK3N0YXRpYyBpbnQgb3B0ZWVfcnRjX3dh
aXRfYWxhcm0oc3RydWN0IGRldmljZSAqZGV2LCBpbnQgKnJldHVybl9zdGF0dXMpCit7CisJc3Ry
dWN0IG9wdGVlX3J0YyAqcHJpdiA9IGRldl9nZXRfZHJ2ZGF0YShkZXYpOworCXN0cnVjdCB0ZWVf
aW9jdGxfaW52b2tlX2FyZyBpbnZfYXJnID0gezB9OworCXN0cnVjdCB0ZWVfcGFyYW0gcGFyYW1b
MV0gPSB7MH07CisJaW50IHJldDsKKworCWlmICghKHByaXYtPmZlYXR1cmVzICYgVEFfUlRDX0ZF
QVRVUkVfQUxBUk0pKQorCQlyZXR1cm4gLUVPUE5PVFNVUFA7CisKKwlpbnZfYXJnLmZ1bmMgPSBQ
VEFfQ01EX1JUQ19XQUlUX0FMQVJNOworCWludl9hcmcuc2Vzc2lvbiA9IHByaXYtPnNlc3Npb24y
X2lkOworCWludl9hcmcubnVtX3BhcmFtcyA9IDE7CisKKwlwYXJhbVswXS5hdHRyID0gVEVFX0lP
Q1RMX1BBUkFNX0FUVFJfVFlQRV9WQUxVRV9PVVRQVVQ7CisKKwlyZXQgPSB0ZWVfY2xpZW50X2lu
dm9rZV9mdW5jKHByaXYtPmN0eCwgJmludl9hcmcsIHBhcmFtKTsKKwlpZiAocmV0IDwgMCB8fCBp
bnZfYXJnLnJldCAhPSAwKQorCQlyZXR1cm4gcmV0ID8gcmV0IDogLUVQUk9UTzsKKworCSpyZXR1
cm5fc3RhdHVzID0gcGFyYW1bMF0udS52YWx1ZS5hOworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRp
YyBpbnQgb3B0ZWVfcnRjX2NhbmNlbF93YWl0X2FsYXJtKHN0cnVjdCBkZXZpY2UgKmRldikKK3sK
KwlzdHJ1Y3Qgb3B0ZWVfcnRjICpwcml2ID0gZGV2X2dldF9kcnZkYXRhKGRldik7CisJc3RydWN0
IHRlZV9pb2N0bF9pbnZva2VfYXJnIGludl9hcmcgPSB7MH07CisJc3RydWN0IHRlZV9wYXJhbSBw
YXJhbVsxXSA9IHswfTsKKwlpbnQgcmV0OworCisJaWYgKCEocHJpdi0+ZmVhdHVyZXMgJiBUQV9S
VENfRkVBVFVSRV9BTEFSTSkpCisJCXJldHVybiAtRU9QTk9UU1VQUDsKKworCWludl9hcmcuZnVu
YyA9IFBUQV9DTURfUlRDX0NBTkNFTF9XQUlUOworCWludl9hcmcuc2Vzc2lvbiA9IHByaXYtPnNl
c3Npb25faWQ7CisJaW52X2FyZy5udW1fcGFyYW1zID0gMDsKKworCXJldCA9IHRlZV9jbGllbnRf
aW52b2tlX2Z1bmMocHJpdi0+Y3R4LCAmaW52X2FyZywgcGFyYW0pOworCWlmIChyZXQgPCAwIHx8
IGludl9hcmcucmV0ICE9IDApCisJCXJldHVybiByZXQgPyByZXQgOiAtRVBST1RPOworCisJcmV0
dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgb3B0ZWVfcnRjX3NldF9hbGFybV93YWtlX3N0YXR1cyhz
dHJ1Y3QgZGV2aWNlICpkZXYsIGJvb2wgc3RhdHVzKQoreworCXN0cnVjdCBvcHRlZV9ydGMgKnBy
aXYgPSBkZXZfZ2V0X2RydmRhdGEoZGV2KTsKKwlzdHJ1Y3QgdGVlX2lvY3RsX2ludm9rZV9hcmcg
aW52X2FyZyA9IHswfTsKKwlzdHJ1Y3QgdGVlX3BhcmFtIHBhcmFtWzFdID0gezB9OworCWludCBy
ZXQ7CisKKwlpZiAoIShwcml2LT5mZWF0dXJlcyAmIFRBX1JUQ19GRUFUVVJFX0FMQVJNKSkKKwkJ
cmV0dXJuIC1FT1BOT1RTVVBQOworCisJaW52X2FyZy5mdW5jID0gUFRBX0NNRF9SVENfU0VUX1dB
S0VfQUxBUk1fU1RBVFVTOworCWludl9hcmcuc2Vzc2lvbiA9IHByaXYtPnNlc3Npb25faWQ7CisJ
aW52X2FyZy5udW1fcGFyYW1zID0gMTsKKworCXBhcmFtWzBdLmF0dHIgPSBURUVfSU9DVExfUEFS
QU1fQVRUUl9UWVBFX1ZBTFVFX0lOUFVUOworCXBhcmFtWzBdLnUudmFsdWUuYSA9IHN0YXR1czsK
KworCXJldCA9IHRlZV9jbGllbnRfaW52b2tlX2Z1bmMocHJpdi0+Y3R4LCAmaW52X2FyZywgcGFy
YW0pOworCisJaWYgKHJldCA8IDAgfHwgaW52X2FyZy5yZXQgIT0gMCkKKwkJcmV0dXJuIHJldCA/
IHJldCA6IC1FUFJPVE87CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIGludCBvcHRlZV9ydGNf
aGFuZGxlX2FsYXJtX2V2ZW50KHZvaWQgKmRhdGEpCit7CisJc3RydWN0IG9wdGVlX3J0YyAqcHJp
diA9IChzdHJ1Y3Qgb3B0ZWVfcnRjICopZGF0YTsKKwlpbnQgd2FpdF9hbGFybV9yZXR1cm5fc3Rh
dHVzID0gMDsKKwlpbnQgcmV0OworCisJd2hpbGUgKCFrdGhyZWFkX3Nob3VsZF9zdG9wKCkpIHsK
KwkJcmV0ID0gb3B0ZWVfcnRjX3dhaXRfYWxhcm0ocHJpdi0+ZGV2LCAmd2FpdF9hbGFybV9yZXR1
cm5fc3RhdHVzKTsKKwkJaWYgKHJldCkgeworCQkJZGV2X2Vycihwcml2LT5kZXYsICJGYWlsZWQg
dG8gd2FpdCBmb3IgYWxhcm06ICVkXG4iLCByZXQpOworCQkJcmV0dXJuIHJldDsKKwkJfQorCQlz
d2l0Y2ggKHdhaXRfYWxhcm1fcmV0dXJuX3N0YXR1cykgeworCQljYXNlIFdBSVRfQUxBUk1fQUxB
Uk1fT0NDVVJSRUQ6CisJCQlkZXZfZGJnKHByaXYtPmRldiwgIkFsYXJtIG9jY3VycmVkXG4iKTsK
KwkJCXJ0Y191cGRhdGVfaXJxKHByaXYtPnJ0YywgMSwgUlRDX0lSUUYgfCBSVENfQUYpOworCQkJ
YnJlYWs7CisJCWNhc2UgV0FJVF9BTEFSTV9DQU5DRUxFRDoKKwkJCWRldl9kYmcocHJpdi0+ZGV2
LCAiQWxhcm0gY2FuY2VsZWRcbiIpOworCQkJYnJlYWs7CisJCWRlZmF1bHQ6CisJCQlkZXZfd2Fy
bihwcml2LT5kZXYsICJVbmtub3duIHJldHVybiBzdGF0dXM6ICVkXG4iLAorCQkJCSB3YWl0X2Fs
YXJtX3JldHVybl9zdGF0dXMpOworCQkJYnJlYWs7CisJCX0KKwl9CisKKwlyZXR1cm4gMDsKK30K
Kwogc3RhdGljIGludCBvcHRlZV9ydGNfcmVhZF9pbmZvKHN0cnVjdCBkZXZpY2UgKmRldiwgc3Ry
dWN0IHJ0Y19kZXZpY2UgKnJ0YywKIAkJCSAgICAgICB1NjQgKmZlYXR1cmVzKQogewpAQCAtMTkz
LDcgKzUwNSw3IEBAIHN0YXRpYyBpbnQgb3B0ZWVfcnRjX3JlYWRfaW5mbyhzdHJ1Y3QgZGV2aWNl
ICpkZXYsIHN0cnVjdCBydGNfZGV2aWNlICpydGMsCiAJc3RydWN0IG9wdGVlX3J0Y190aW1lICp0
bTsKIAlpbnQgcmV0OwogCi0JaW52X2FyZy5mdW5jID0gVEFfQ01EX1JUQ19HRVRfSU5GTzsKKwlp
bnZfYXJnLmZ1bmMgPSBQVEFfQ01EX1JUQ19HRVRfSU5GOwogCWludl9hcmcuc2Vzc2lvbiA9IHBy
aXYtPnNlc3Npb25faWQ7CiAJaW52X2FyZy5udW1fcGFyYW1zID0gNDsKIApAQCAtMjM4LDYgKzU1
MCw3IEBAIHN0YXRpYyBpbnQgb3B0ZWVfY3R4X21hdGNoKHN0cnVjdCB0ZWVfaW9jdGxfdmVyc2lv
bl9kYXRhICp2ZXIsIGNvbnN0IHZvaWQgKmRhdGEpCiBzdGF0aWMgaW50IG9wdGVlX3J0Y19wcm9i
ZShzdHJ1Y3QgZGV2aWNlICpkZXYpCiB7CiAJc3RydWN0IHRlZV9jbGllbnRfZGV2aWNlICpydGNf
ZGV2aWNlID0gdG9fdGVlX2NsaWVudF9kZXZpY2UoZGV2KTsKKwlzdHJ1Y3QgdGVlX2lvY3RsX29w
ZW5fc2Vzc2lvbl9hcmcgc2VzczJfYXJnID0gezB9OwogCXN0cnVjdCB0ZWVfaW9jdGxfb3Blbl9z
ZXNzaW9uX2FyZyBzZXNzX2FyZyA9IHswfTsKIAlzdHJ1Y3Qgb3B0ZWVfcnRjICpwcml2OwogCXN0
cnVjdCBydGNfZGV2aWNlICpydGM7CkBAIC0yNTIsMTIgKzU2NSwxNCBAQCBzdGF0aWMgaW50IG9w
dGVlX3J0Y19wcm9iZShzdHJ1Y3QgZGV2aWNlICpkZXYpCiAJaWYgKElTX0VSUihydGMpKQogCQly
ZXR1cm4gUFRSX0VSUihydGMpOwogCisJcHJpdi0+cnRjID0gcnRjOworCiAJLyogT3BlbiBjb250
ZXh0IHdpdGggVEVFIGRyaXZlciAqLwogCXByaXYtPmN0eCA9IHRlZV9jbGllbnRfb3Blbl9jb250
ZXh0KE5VTEwsIG9wdGVlX2N0eF9tYXRjaCwgTlVMTCwgTlVMTCk7CiAJaWYgKElTX0VSUihwcml2
LT5jdHgpKQogCQlyZXR1cm4gLUVOT0RFVjsKIAotCS8qIE9wZW4gc2Vzc2lvbiB3aXRoIHJ0YyBU
cnVzdGVkIEFwcCAqLworCS8qIE9wZW4gZmlyc3Qgc2Vzc2lvbiB3aXRoIHJ0YyBQc2V1ZG8gVHJ1
c3RlZCBBcHAgKi8KIAlleHBvcnRfdXVpZChzZXNzX2FyZy51dWlkLCAmcnRjX2RldmljZS0+aWQu
dXVpZCk7CiAJc2Vzc19hcmcuY2xudF9sb2dpbiA9IFRFRV9JT0NUTF9MT0dJTl9SRUVfS0VSTkVM
OwogCkBAIC0yNjksNiArNTg0LDExIEBAIHN0YXRpYyBpbnQgb3B0ZWVfcnRjX3Byb2JlKHN0cnVj
dCBkZXZpY2UgKmRldikKIAl9CiAJcHJpdi0+c2Vzc2lvbl9pZCA9IHNlc3NfYXJnLnNlc3Npb247
CiAKKwkvKgorCSAqIFNoYXJlZCBtZW1vcnkgaXMgdXNlZCBmb3IgcGFzc2luZyBhbiBpbnN0YW5j
ZSBvZiBlaXRoZXIgc3RydWN0IG9wdGVlX3J0Y19pbmZvLAorCSAqIHN0cnVjdCBvcHRlZV9ydGNf
dGltZSBvciBzdHJ1Y3Qgb3B0ZWVfcnRjX2FsYXJtIHRvIE9QLVRFRSBzZXJ2aWNlLgorCSAqIFRo
ZSBmb3JtZXIgaXMgYnkgZGVmaW5pdGlvbiBsYXJnZSBlbm91Z2ggdG8gY292ZXIgYm90aCBwYXJh
bWV0ZXIgY2FzZXMuCisJICovCiAJc2htID0gdGVlX3NobV9hbGxvY19rZXJuZWxfYnVmKHByaXYt
PmN0eCwgc2l6ZW9mKHN0cnVjdCBvcHRlZV9ydGNfaW5mbykpOwogCWlmIChJU19FUlIoc2htKSkg
ewogCQlkZXZfZXJyKHByaXYtPmRldiwgInRlZV9zaG1fYWxsb2Nfa2VybmVsX2J1ZiBmYWlsZWRc
biIpOwpAQCAtMjg4LDE5ICs2MDgsNjkgQEAgc3RhdGljIGludCBvcHRlZV9ydGNfcHJvYmUoc3Ry
dWN0IGRldmljZSAqZGV2KQogCQlnb3RvIG91dF9zaG07CiAJfQogCisJLyogSGFuZGxlIGZlYXR1
cmUncyByZWxhdGVkIHNldHVwIGJlZm9yZSByZWdpc3RlcmluZyB0byBydGMgZnJhbWV3b3JrICov
CisJaWYgKHByaXYtPmZlYXR1cmVzICYgVEFfUlRDX0ZFQVRVUkVfQUxBUk0pIHsKKwkJcHJpdi0+
YWxhcm1fdGFzayA9IGt0aHJlYWRfY3JlYXRlKG9wdGVlX3J0Y19oYW5kbGVfYWxhcm1fZXZlbnQs
CisJCQkJCQkgIHByaXYsICJydGNfYWxhcm1fZXZ0Iik7CisJCWlmIChJU19FUlIocHJpdi0+YWxh
cm1fdGFzaykpIHsKKwkJCWRldl9lcnIoZGV2LCAiRmFpbGVkIHRvIGNyZWF0ZSBhbGFybSB0aHJl
YWRcbiIpOworCQkJZ290byBvdXRfc2htOworCQl9CisKKwkJLyoKKwkJICogSW4gY2FzZSBvZiBz
dXBwb3J0ZWQgYWxhcm0gZmVhdHVyZSBvbiBvcHRlZSBzaWRlLCB3ZSBjcmVhdGUgYSBrdGhyZWFk
CisJCSAqIHRoYXQgd2lsbCwgaW4gYSBuZXcgb3B0ZWUgc2Vzc2lvbiwgY2FsbCBhIFBUQSBpbnRl
cmZhY2UgInJ0Y193YWl0X2FsYXJtIi4KKwkJICogVGhpcyBjYWxsIHJldHVybiBpbiBjYXNlIG9m
IGFsYXJtIGFuZCBpbiBjYXNlIG9mIGNhbmNlbGVkIGFsYXJtLgorCQkgKiBUaGUgbmV3IG9wdGVl
IHNlc3Npb24gaXMgdGhlcmVmb3JlIG9ubHkgbmVlZGVkIGluIHRoaXMgY2FzZSBhcyB3ZSBjYW5u
b3QKKwkJICogdXNlIHRoZSBzYW1lIHNlc3Npb24gZm9yIHBhcmFsbGVsIGNhbGxzIHRvIG9wdGVl
IFBUQS4KKwkJICogSGVuY2Ugb25lIHNlc3Npb24gaXMgcmVzZXJ2ZWQgdG8gd2FpdCBmb3IgYWxh
cm1zIGFuZCB0aGUgb3RoZXIgdG8gbWFrZQorCQkgKiBzdGFuZGFyZCBjYWxscyB0byBSVEMgUFRB
LgorCQkgKi8KKworCQkvKiBPcGVuIHNlY29uZCBzZXNzaW9uIHdpdGggcnRjIFRydXN0ZWQgQXBw
ICovCisJCWV4cG9ydF91dWlkKHNlc3MyX2FyZy51dWlkLCAmcnRjX2RldmljZS0+aWQudXVpZCk7
CisJCXNlc3MyX2FyZy5jbG50X2xvZ2luID0gVEVFX0lPQ1RMX0xPR0lOX1JFRV9LRVJORUw7CisK
KwkJcmV0ID0gdGVlX2NsaWVudF9vcGVuX3Nlc3Npb24ocHJpdi0+Y3R4LCAmc2VzczJfYXJnLCBO
VUxMKTsKKwkJaWYgKHJldCA8IDAgfHwgc2VzczJfYXJnLnJldCAhPSAwKSB7CisJCQlkZXZfZXJy
KGRldiwgInRlZV9jbGllbnRfb3Blbl9zZXNzaW9uIGZhaWxlZCwgZXJyOiAleFxuIiwgc2VzczJf
YXJnLnJldCk7CisJCQllcnIgPSAtRUlOVkFMOworCQkJZ290byBvdXRfdGhyZDsKKwkJfQorCQlw
cml2LT5zZXNzaW9uMl9pZCA9IHNlc3MyX2FyZy5zZXNzaW9uOworCisJCWlmIChwcml2LT5mZWF0
dXJlcyAmIFRBX1JUQ19GRUFUVVJFX1dBS0VVUF9BTEFSTSkKKwkJCWRldmljZV9pbml0X3dha2V1
cChkZXYsIHRydWUpOworCX0KKwogCWVyciA9IGRldm1fcnRjX3JlZ2lzdGVyX2RldmljZShydGMp
OwogCWlmIChlcnIpCi0JCWdvdG8gb3V0X3NobTsKKwkJZ290byBvdXRfd2s7CiAKIAkvKgotCSAq
IFdlIG11c3QgY2xlYXIgdGhpcyBiaXQgYWZ0ZXIgcmVnaXN0ZXJpbmcgYmVjYXVzZSBydGNfcmVn
aXN0ZXJfZGV2aWNlCi0JICogd2lsbCBzZXQgaXQgaWYgaXQgc2VlcyB0aGF0IC5zZXRfb2Zmc2V0
IGlzIHByb3ZpZGVkLgorCSAqIFdlIG11c3QgY2xlYXIgdGhvc2UgYml0cyBhZnRlciByZWdpc3Rl
cmluZyBiZWNhdXNlIHJlZ2lzdGVyaW5nIGEgcnRjX2RldmljZQorCSAqIHdpbGwgc2V0IHRoZW0g
aWYgaXQgc2VlcyB0aGF0IC5zZXRfb2Zmc2V0IGFuZCAuc2V0X2FsYXJtIGFyZSBwcm92aWRlZC4K
IAkgKi8KIAlpZiAoIShwcml2LT5mZWF0dXJlcyAmIFRBX1JUQ19GRUFUVVJFX0NPUlJFQ1RJT04p
KQogCQljbGVhcl9iaXQoUlRDX0ZFQVRVUkVfQ09SUkVDVElPTiwgcnRjLT5mZWF0dXJlcyk7CisJ
aWYgKCEocHJpdi0+ZmVhdHVyZXMgJiBUQV9SVENfRkVBVFVSRV9BTEFSTSkpCisJCWNsZWFyX2Jp
dChSVENfRkVBVFVSRV9BTEFSTSwgcnRjLT5mZWF0dXJlcyk7CisKKwkvKiBTdGFydCB0aGUgdGhy
ZWFkIGFmdGVyIHRoZSBydGMgaXMgc2V0dXAgKi8KKwlpZiAocHJpdi0+YWxhcm1fdGFzaykgewor
CQl3YWtlX3VwX3Byb2Nlc3MocHJpdi0+YWxhcm1fdGFzayk7CisJCWRldl9kYmcoZGV2LCAiV2Fp
dCBhbGFybSB0aHJlYWQgc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWRcbiIpOworCX0KIAogCXJldHVybiAw
OwotCitvdXRfd2s6CisJaWYgKHByaXYtPmZlYXR1cmVzICYgVEFfUlRDX0ZFQVRVUkVfQUxBUk0p
IHsKKwkJZGV2aWNlX2luaXRfd2FrZXVwKGRldiwgZmFsc2UpOworCQl0ZWVfY2xpZW50X2Nsb3Nl
X3Nlc3Npb24ocHJpdi0+Y3R4LCBwcml2LT5zZXNzaW9uMl9pZCk7CisJfQorb3V0X3RocmQ6CisJ
aWYgKHByaXYtPmZlYXR1cmVzICYgVEFfUlRDX0ZFQVRVUkVfQUxBUk0pCisJCWt0aHJlYWRfc3Rv
cChwcml2LT5hbGFybV90YXNrKTsKIG91dF9zaG06CiAJdGVlX3NobV9mcmVlKHByaXYtPnNobSk7
CiBvdXRfc2VzczoKQEAgLTMxNSw2ICs2ODUsMTMgQEAgc3RhdGljIGludCBvcHRlZV9ydGNfcmVt
b3ZlKHN0cnVjdCBkZXZpY2UgKmRldikKIHsKIAlzdHJ1Y3Qgb3B0ZWVfcnRjICpwcml2ID0gZGV2
X2dldF9kcnZkYXRhKGRldik7CiAKKwlpZiAocHJpdi0+ZmVhdHVyZXMgJiBUQV9SVENfRkVBVFVS
RV9BTEFSTSkgeworCQlvcHRlZV9ydGNfY2FuY2VsX3dhaXRfYWxhcm0oZGV2KTsKKwkJa3RocmVh
ZF9zdG9wKHByaXYtPmFsYXJtX3Rhc2spOworCQlkZXZpY2VfaW5pdF93YWtldXAoZGV2LCBmYWxz
ZSk7CisJCXRlZV9jbGllbnRfY2xvc2Vfc2Vzc2lvbihwcml2LT5jdHgsIHByaXYtPnNlc3Npb24y
X2lkKTsKKwl9CisKIAl0ZWVfc2htX2ZyZWUocHJpdi0+c2htKTsKIAl0ZWVfY2xpZW50X2Nsb3Nl
X3Nlc3Npb24ocHJpdi0+Y3R4LCBwcml2LT5zZXNzaW9uX2lkKTsKIAl0ZWVfY2xpZW50X2Nsb3Nl
X2NvbnRleHQocHJpdi0+Y3R4KTsKQEAgLTMyMiw2ICs2OTksMjAgQEAgc3RhdGljIGludCBvcHRl
ZV9ydGNfcmVtb3ZlKHN0cnVjdCBkZXZpY2UgKmRldikKIAlyZXR1cm4gMDsKIH0KIAorc3RhdGlj
IGludCBvcHRlZV9ydGNfc3VzcGVuZChzdHJ1Y3QgZGV2aWNlICpkZXYpCit7CisJaW50IHJlcyA9
IG9wdGVlX3J0Y19zZXRfYWxhcm1fd2FrZV9zdGF0dXMoZGV2LCBkZXZpY2VfbWF5X3dha2V1cChk
ZXYpKTsKKworCWlmIChyZXMpIHsKKwkJZGV2X2VycihkZXYsICJVbmFibGUgdG8gdHJhbnNtaXQg
d2FrZXVwIGluZm9ybWF0aW9uIHRvIG9wdGVlIHJ0Y1xuIik7CisJCXJldHVybiByZXM7CisJfQor
CisJcmV0dXJuIDA7Cit9CisKK0RFRklORV9TSU1QTEVfREVWX1BNX09QUyhvcHRlZV9ydGNfcG1f
b3BzLCBvcHRlZV9ydGNfc3VzcGVuZCwgTlVMTCk7CisKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgdGVl
X2NsaWVudF9kZXZpY2VfaWQgb3B0ZWVfcnRjX2lkX3RhYmxlW10gPSB7CiAJe1VVSURfSU5JVCgw
eGYzODlmOGM4LCAweDg0NWYsIDB4NDk2YywKIAkJICAgMHg4YiwgMHhiZSwgMHhkNiwgMHg0Yiwg
MHhkMiwgMHg0YywgMHg5MiwgMHhmZCl9LApAQCAtMzM3LDYgKzcyOCw3IEBAIHN0YXRpYyBzdHJ1
Y3QgdGVlX2NsaWVudF9kcml2ZXIgb3B0ZWVfcnRjX2RyaXZlciA9IHsKIAkJLmJ1cwkJPSAmdGVl
X2J1c190eXBlLAogCQkucHJvYmUJCT0gb3B0ZWVfcnRjX3Byb2JlLAogCQkucmVtb3ZlCQk9IG9w
dGVlX3J0Y19yZW1vdmUsCisJCS5wbQkJPSBwbV9zbGVlcF9wdHIoJm9wdGVlX3J0Y19wbV9vcHMp
LAogCX0sCiB9OwogCgotLSAKMi40My4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwpMaW51eC1zdG0zMiBtYWlsaW5nIGxpc3QKTGludXgtc3RtMzJAc3Qt
bWQtbWFpbG1hbi5zdG9ybXJlcGx5LmNvbQpodHRwczovL3N0LW1kLW1haWxtYW4uc3Rvcm1yZXBs
eS5jb20vbWFpbG1hbi9saXN0aW5mby9saW51eC1zdG0zMgo=
